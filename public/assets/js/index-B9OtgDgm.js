// not used by me, so its not needed, but i saved it.
(function () {
  const e = document.createElement("link").relList;
  if (e && e.supports && e.supports("modulepreload")) return;
  for (const i of document.querySelectorAll('link[rel="modulepreload"]')) r(i);
  new MutationObserver((i) => {
    for (const o of i)
      if (o.type === "childList")
        for (const s of o.addedNodes)
          s.tagName === "LINK" && s.rel === "modulepreload" && r(s);
  }).observe(document, { childList: !0, subtree: !0 });
  function n(i) {
    const o = {};
    return (
      i.integrity && (o.integrity = i.integrity),
      i.referrerPolicy && (o.referrerPolicy = i.referrerPolicy),
      i.crossOrigin === "use-credentials"
        ? (o.credentials = "include")
        : i.crossOrigin === "anonymous"
          ? (o.credentials = "omit")
          : (o.credentials = "same-origin"),
      o
    );
  }
  function r(i) {
    if (i.ep) return;
    i.ep = !0;
    const o = n(i);
    fetch(i.href, o);
  }
})();
/**
 * @vue/shared v3.5.17
 * (c) 2018-present Yuxi (Evan) You and Vue contributors
 * @license MIT
 **/ /*! #__NO_SIDE_EFFECTS__ */ function Sd(t) {
  const e = Object.create(null);
  for (const n of t.split(",")) e[n] = 1;
  return (n) => n in e;
}
const Tt = {},
  Wo = [],
  Rr = () => {},
  hb = () => !1,
  oc = (t) =>
    t.charCodeAt(0) === 111 &&
    t.charCodeAt(1) === 110 &&
    (t.charCodeAt(2) > 122 || t.charCodeAt(2) < 97),
  Cd = (t) => t.startsWith("onUpdate:"),
  Qt = Object.assign,
  Md = (t, e) => {
    const n = t.indexOf(e);
    n > -1 && t.splice(n, 1);
  },
  mb = Object.prototype.hasOwnProperty,
  kt = (t, e) => mb.call(t, e),
  Ze = Array.isArray,
  Ko = (t) => $a(t) === "[object Map]",
  sc = (t) => $a(t) === "[object Set]",
  Sf = (t) => $a(t) === "[object Date]",
  rt = (t) => typeof t == "function",
  Nt = (t) => typeof t == "string",
  xr = (t) => typeof t == "symbol",
  Pt = (t) => t !== null && typeof t == "object",
  rg = (t) => (Pt(t) || rt(t)) && rt(t.then) && rt(t.catch),
  ig = Object.prototype.toString,
  $a = (t) => ig.call(t),
  gb = (t) => $a(t).slice(8, -1),
  og = (t) => $a(t) === "[object Object]",
  Ed = (t) =>
    Nt(t) && t !== "NaN" && t[0] !== "-" && "" + parseInt(t, 10) === t,
  $s = Sd(
    ",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted",
  ),
  ac = (t) => {
    const e = Object.create(null);
    return (n) => e[n] || (e[n] = t(n));
  },
  vb = /-(\w)/g,
  ar = ac((t) => t.replace(vb, (e, n) => (n ? n.toUpperCase() : ""))),
  bb = /\B([A-Z])/g,
  Oi = ac((t) => t.replace(bb, "-$1").toLowerCase()),
  lc = ac((t) => t.charAt(0).toUpperCase() + t.slice(1)),
  Rl = ac((t) => (t ? `on${lc(t)}` : "")),
  Ei = (t, e) => !Object.is(t, e),
  Ll = (t, ...e) => {
    for (let n = 0; n < t.length; n++) t[n](...e);
  },
  zu = (t, e, n, r = !1) => {
    Object.defineProperty(t, e, {
      configurable: !0,
      enumerable: !1,
      writable: r,
      value: n,
    });
  },
  sg = (t) => {
    const e = parseFloat(t);
    return isNaN(e) ? t : e;
  },
  yb = (t) => {
    const e = Nt(t) ? Number(t) : NaN;
    return isNaN(e) ? t : e;
  };
let Cf;
const cc = () =>
  Cf ||
  (Cf =
    typeof globalThis < "u"
      ? globalThis
      : typeof self < "u"
        ? self
        : typeof window < "u"
          ? window
          : typeof global < "u"
            ? global
            : {});
function ir(t) {
  if (Ze(t)) {
    const e = {};
    for (let n = 0; n < t.length; n++) {
      const r = t[n],
        i = Nt(r) ? kb(r) : ir(r);
      if (i) for (const o in i) e[o] = i[o];
    }
    return e;
  } else if (Nt(t) || Pt(t)) return t;
}
const xb = /;(?![^(]*\))/g,
  _b = /:([^]+)/,
  wb = /\/\*[^]*?\*\//g;
function kb(t) {
  const e = {};
  return (
    t
      .replace(wb, "")
      .split(xb)
      .forEach((n) => {
        if (n) {
          const r = n.split(_b);
          r.length > 1 && (e[r[0].trim()] = r[1].trim());
        }
      }),
    e
  );
}
function Ie(t) {
  let e = "";
  if (Nt(t)) e = t;
  else if (Ze(t))
    for (let n = 0; n < t.length; n++) {
      const r = Ie(t[n]);
      r && (e += r + " ");
    }
  else if (Pt(t)) for (const n in t) t[n] && (e += n + " ");
  return e.trim();
}
function Sb(t) {
  if (!t) return null;
  let { class: e, style: n } = t;
  return (e && !Nt(e) && (t.class = Ie(e)), n && (t.style = ir(n)), t);
}
const Cb =
    "itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",
  Mb = Sd(Cb);
function ag(t) {
  return !!t || t === "";
}
function Eb(t, e) {
  if (t.length !== e.length) return !1;
  let n = !0;
  for (let r = 0; n && r < t.length; r++) n = uc(t[r], e[r]);
  return n;
}
function uc(t, e) {
  if (t === e) return !0;
  let n = Sf(t),
    r = Sf(e);
  if (n || r) return n && r ? t.getTime() === e.getTime() : !1;
  if (((n = xr(t)), (r = xr(e)), n || r)) return t === e;
  if (((n = Ze(t)), (r = Ze(e)), n || r)) return n && r ? Eb(t, e) : !1;
  if (((n = Pt(t)), (r = Pt(e)), n || r)) {
    if (!n || !r) return !1;
    const i = Object.keys(t).length,
      o = Object.keys(e).length;
    if (i !== o) return !1;
    for (const s in t) {
      const a = t.hasOwnProperty(s),
        c = e.hasOwnProperty(s);
      if ((a && !c) || (!a && c) || !uc(t[s], e[s])) return !1;
    }
  }
  return String(t) === String(e);
}
function Tb(t, e) {
  return t.findIndex((n) => uc(n, e));
}
const lg = (t) => !!(t && t.__v_isRef === !0),
  z = (t) =>
    Nt(t)
      ? t
      : t == null
        ? ""
        : Ze(t) || (Pt(t) && (t.toString === ig || !rt(t.toString)))
          ? lg(t)
            ? z(t.value)
            : JSON.stringify(t, cg, 2)
          : String(t),
  cg = (t, e) =>
    lg(e)
      ? cg(t, e.value)
      : Ko(e)
        ? {
            [`Map(${e.size})`]: [...e.entries()].reduce(
              (n, [r, i], o) => ((n[Bc(r, o) + " =>"] = i), n),
              {},
            ),
          }
        : sc(e)
          ? { [`Set(${e.size})`]: [...e.values()].map((n) => Bc(n)) }
          : xr(e)
            ? Bc(e)
            : Pt(e) && !Ze(e) && !og(e)
              ? String(e)
              : e,
  Bc = (t, e = "") => {
    var n;
    return xr(t) ? `Symbol(${(n = t.description) != null ? n : e})` : t;
  };
/**
 * @vue/reactivity v3.5.17
 * (c) 2018-present Yuxi (Evan) You and Vue contributors
 * @license MIT
 **/ let Rn;
class Ab {
  constructor(e = !1) {
    ((this.detached = e),
      (this._active = !0),
      (this._on = 0),
      (this.effects = []),
      (this.cleanups = []),
      (this._isPaused = !1),
      (this.parent = Rn),
      !e &&
        Rn &&
        (this.index = (Rn.scopes || (Rn.scopes = [])).push(this) - 1));
  }
  get active() {
    return this._active;
  }
  pause() {
    if (this._active) {
      this._isPaused = !0;
      let e, n;
      if (this.scopes)
        for (e = 0, n = this.scopes.length; e < n; e++) this.scopes[e].pause();
      for (e = 0, n = this.effects.length; e < n; e++) this.effects[e].pause();
    }
  }
  resume() {
    if (this._active && this._isPaused) {
      this._isPaused = !1;
      let e, n;
      if (this.scopes)
        for (e = 0, n = this.scopes.length; e < n; e++) this.scopes[e].resume();
      for (e = 0, n = this.effects.length; e < n; e++) this.effects[e].resume();
    }
  }
  run(e) {
    if (this._active) {
      const n = Rn;
      try {
        return ((Rn = this), e());
      } finally {
        Rn = n;
      }
    }
  }
  on() {
    ++this._on === 1 && ((this.prevScope = Rn), (Rn = this));
  }
  off() {
    this._on > 0 &&
      --this._on === 0 &&
      ((Rn = this.prevScope), (this.prevScope = void 0));
  }
  stop(e) {
    if (this._active) {
      this._active = !1;
      let n, r;
      for (n = 0, r = this.effects.length; n < r; n++) this.effects[n].stop();
      for (this.effects.length = 0, n = 0, r = this.cleanups.length; n < r; n++)
        this.cleanups[n]();
      if (((this.cleanups.length = 0), this.scopes)) {
        for (n = 0, r = this.scopes.length; n < r; n++) this.scopes[n].stop(!0);
        this.scopes.length = 0;
      }
      if (!this.detached && this.parent && !e) {
        const i = this.parent.scopes.pop();
        i &&
          i !== this &&
          ((this.parent.scopes[this.index] = i), (i.index = this.index));
      }
      this.parent = void 0;
    }
  }
}
function Pb() {
  return Rn;
}
let Lt;
const Uc = new WeakSet();
class ug {
  constructor(e) {
    ((this.fn = e),
      (this.deps = void 0),
      (this.depsTail = void 0),
      (this.flags = 5),
      (this.next = void 0),
      (this.cleanup = void 0),
      (this.scheduler = void 0),
      Rn && Rn.active && Rn.effects.push(this));
  }
  pause() {
    this.flags |= 64;
  }
  resume() {
    this.flags & 64 &&
      ((this.flags &= -65), Uc.has(this) && (Uc.delete(this), this.trigger()));
  }
  notify() {
    (this.flags & 2 && !(this.flags & 32)) || this.flags & 8 || fg(this);
  }
  run() {
    if (!(this.flags & 1)) return this.fn();
    ((this.flags |= 2), Mf(this), pg(this));
    const e = Lt,
      n = br;
    ((Lt = this), (br = !0));
    try {
      return this.fn();
    } finally {
      (hg(this), (Lt = e), (br = n), (this.flags &= -3));
    }
  }
  stop() {
    if (this.flags & 1) {
      for (let e = this.deps; e; e = e.nextDep) Pd(e);
      ((this.deps = this.depsTail = void 0),
        Mf(this),
        this.onStop && this.onStop(),
        (this.flags &= -2));
    }
  }
  trigger() {
    this.flags & 64
      ? Uc.add(this)
      : this.scheduler
        ? this.scheduler()
        : this.runIfDirty();
  }
  runIfDirty() {
    Bu(this) && this.run();
  }
  get dirty() {
    return Bu(this);
  }
}
let dg = 0,
  zs,
  Bs;
function fg(t, e = !1) {
  if (((t.flags |= 8), e)) {
    ((t.next = Bs), (Bs = t));
    return;
  }
  ((t.next = zs), (zs = t));
}
function Td() {
  dg++;
}
function Ad() {
  if (--dg > 0) return;
  if (Bs) {
    let e = Bs;
    for (Bs = void 0; e; ) {
      const n = e.next;
      ((e.next = void 0), (e.flags &= -9), (e = n));
    }
  }
  let t;
  for (; zs; ) {
    let e = zs;
    for (zs = void 0; e; ) {
      const n = e.next;
      if (((e.next = void 0), (e.flags &= -9), e.flags & 1))
        try {
          e.trigger();
        } catch (r) {
          t || (t = r);
        }
      e = n;
    }
  }
  if (t) throw t;
}
function pg(t) {
  for (let e = t.deps; e; e = e.nextDep)
    ((e.version = -1),
      (e.prevActiveLink = e.dep.activeLink),
      (e.dep.activeLink = e));
}
function hg(t) {
  let e,
    n = t.depsTail,
    r = n;
  for (; r; ) {
    const i = r.prevDep;
    (r.version === -1 ? (r === n && (n = i), Pd(r), Rb(r)) : (e = r),
      (r.dep.activeLink = r.prevActiveLink),
      (r.prevActiveLink = void 0),
      (r = i));
  }
  ((t.deps = e), (t.depsTail = n));
}
function Bu(t) {
  for (let e = t.deps; e; e = e.nextDep)
    if (
      e.dep.version !== e.version ||
      (e.dep.computed && (mg(e.dep.computed) || e.dep.version !== e.version))
    )
      return !0;
  return !!t._dirty;
}
function mg(t) {
  if (
    (t.flags & 4 && !(t.flags & 16)) ||
    ((t.flags &= -17), t.globalVersion === qs) ||
    ((t.globalVersion = qs),
    !t.isSSR && t.flags & 128 && ((!t.deps && !t._dirty) || !Bu(t)))
  )
    return;
  t.flags |= 2;
  const e = t.dep,
    n = Lt,
    r = br;
  ((Lt = t), (br = !0));
  try {
    pg(t);
    const i = t.fn(t._value);
    (e.version === 0 || Ei(i, t._value)) &&
      ((t.flags |= 128), (t._value = i), e.version++);
  } catch (i) {
    throw (e.version++, i);
  } finally {
    ((Lt = n), (br = r), hg(t), (t.flags &= -3));
  }
}
function Pd(t, e = !1) {
  const { dep: n, prevSub: r, nextSub: i } = t;
  if (
    (r && ((r.nextSub = i), (t.prevSub = void 0)),
    i && ((i.prevSub = r), (t.nextSub = void 0)),
    n.subs === t && ((n.subs = r), !r && n.computed))
  ) {
    n.computed.flags &= -5;
    for (let o = n.computed.deps; o; o = o.nextDep) Pd(o, !0);
  }
  !e && !--n.sc && n.map && n.map.delete(n.key);
}
function Rb(t) {
  const { prevDep: e, nextDep: n } = t;
  (e && ((e.nextDep = n), (t.prevDep = void 0)),
    n && ((n.prevDep = e), (t.nextDep = void 0)));
}
let br = !0;
const gg = [];
function ri() {
  (gg.push(br), (br = !1));
}
function ii() {
  const t = gg.pop();
  br = t === void 0 ? !0 : t;
}
function Mf(t) {
  const { cleanup: e } = t;
  if (((t.cleanup = void 0), e)) {
    const n = Lt;
    Lt = void 0;
    try {
      e();
    } finally {
      Lt = n;
    }
  }
}
let qs = 0;
class Lb {
  constructor(e, n) {
    ((this.sub = e),
      (this.dep = n),
      (this.version = n.version),
      (this.nextDep =
        this.prevDep =
        this.nextSub =
        this.prevSub =
        this.prevActiveLink =
          void 0));
  }
}
class Rd {
  constructor(e) {
    ((this.computed = e),
      (this.version = 0),
      (this.activeLink = void 0),
      (this.subs = void 0),
      (this.map = void 0),
      (this.key = void 0),
      (this.sc = 0),
      (this.__v_skip = !0));
  }
  track(e) {
    if (!Lt || !br || Lt === this.computed) return;
    let n = this.activeLink;
    if (n === void 0 || n.sub !== Lt)
      ((n = this.activeLink = new Lb(Lt, this)),
        Lt.deps
          ? ((n.prevDep = Lt.depsTail),
            (Lt.depsTail.nextDep = n),
            (Lt.depsTail = n))
          : (Lt.deps = Lt.depsTail = n),
        vg(n));
    else if (n.version === -1 && ((n.version = this.version), n.nextDep)) {
      const r = n.nextDep;
      ((r.prevDep = n.prevDep),
        n.prevDep && (n.prevDep.nextDep = r),
        (n.prevDep = Lt.depsTail),
        (n.nextDep = void 0),
        (Lt.depsTail.nextDep = n),
        (Lt.depsTail = n),
        Lt.deps === n && (Lt.deps = r));
    }
    return n;
  }
  trigger(e) {
    (this.version++, qs++, this.notify(e));
  }
  notify(e) {
    Td();
    try {
      for (let n = this.subs; n; n = n.prevSub)
        n.sub.notify() && n.sub.dep.notify();
    } finally {
      Ad();
    }
  }
}
function vg(t) {
  if ((t.dep.sc++, t.sub.flags & 4)) {
    const e = t.dep.computed;
    if (e && !t.dep.subs) {
      e.flags |= 20;
      for (let r = e.deps; r; r = r.nextDep) vg(r);
    }
    const n = t.dep.subs;
    (n !== t && ((t.prevSub = n), n && (n.nextSub = t)), (t.dep.subs = t));
  }
}
const Uu = new WeakMap(),
  to = Symbol(""),
  Fu = Symbol(""),
  Zs = Symbol("");
function gn(t, e, n) {
  if (br && Lt) {
    let r = Uu.get(t);
    r || Uu.set(t, (r = new Map()));
    let i = r.get(n);
    (i || (r.set(n, (i = new Rd())), (i.map = r), (i.key = n)), i.track());
  }
}
function Yr(t, e, n, r, i, o) {
  const s = Uu.get(t);
  if (!s) {
    qs++;
    return;
  }
  const a = (c) => {
    c && c.trigger();
  };
  if ((Td(), e === "clear")) s.forEach(a);
  else {
    const c = Ze(t),
      u = c && Ed(n);
    if (c && n === "length") {
      const d = Number(r);
      s.forEach((f, p) => {
        (p === "length" || p === Zs || (!xr(p) && p >= d)) && a(f);
      });
    } else
      switch (
        ((n !== void 0 || s.has(void 0)) && a(s.get(n)), u && a(s.get(Zs)), e)
      ) {
        case "add":
          c ? u && a(s.get("length")) : (a(s.get(to)), Ko(t) && a(s.get(Fu)));
          break;
        case "delete":
          c || (a(s.get(to)), Ko(t) && a(s.get(Fu)));
          break;
        case "set":
          Ko(t) && a(s.get(to));
          break;
      }
  }
  Ad();
}
function mo(t) {
  const e = xt(t);
  return e === t ? e : (gn(e, "iterate", Zs), or(t) ? e : e.map(ln));
}
function dc(t) {
  return (gn((t = xt(t)), "iterate", Zs), t);
}
const Db = {
  __proto__: null,
  [Symbol.iterator]() {
    return Fc(this, Symbol.iterator, ln);
  },
  concat(...t) {
    return mo(this).concat(...t.map((e) => (Ze(e) ? mo(e) : e)));
  },
  entries() {
    return Fc(this, "entries", (t) => ((t[1] = ln(t[1])), t));
  },
  every(t, e) {
    return $r(this, "every", t, e, void 0, arguments);
  },
  filter(t, e) {
    return $r(this, "filter", t, e, (n) => n.map(ln), arguments);
  },
  find(t, e) {
    return $r(this, "find", t, e, ln, arguments);
  },
  findIndex(t, e) {
    return $r(this, "findIndex", t, e, void 0, arguments);
  },
  findLast(t, e) {
    return $r(this, "findLast", t, e, ln, arguments);
  },
  findLastIndex(t, e) {
    return $r(this, "findLastIndex", t, e, void 0, arguments);
  },
  forEach(t, e) {
    return $r(this, "forEach", t, e, void 0, arguments);
  },
  includes(...t) {
    return Nc(this, "includes", t);
  },
  indexOf(...t) {
    return Nc(this, "indexOf", t);
  },
  join(t) {
    return mo(this).join(t);
  },
  lastIndexOf(...t) {
    return Nc(this, "lastIndexOf", t);
  },
  map(t, e) {
    return $r(this, "map", t, e, void 0, arguments);
  },
  pop() {
    return ms(this, "pop");
  },
  push(...t) {
    return ms(this, "push", t);
  },
  reduce(t, ...e) {
    return Ef(this, "reduce", t, e);
  },
  reduceRight(t, ...e) {
    return Ef(this, "reduceRight", t, e);
  },
  shift() {
    return ms(this, "shift");
  },
  some(t, e) {
    return $r(this, "some", t, e, void 0, arguments);
  },
  splice(...t) {
    return ms(this, "splice", t);
  },
  toReversed() {
    return mo(this).toReversed();
  },
  toSorted(t) {
    return mo(this).toSorted(t);
  },
  toSpliced(...t) {
    return mo(this).toSpliced(...t);
  },
  unshift(...t) {
    return ms(this, "unshift", t);
  },
  values() {
    return Fc(this, "values", ln);
  },
};
function Fc(t, e, n) {
  const r = dc(t),
    i = r[e]();
  return (
    r !== t &&
      !or(t) &&
      ((i._next = i.next),
      (i.next = () => {
        const o = i._next();
        return (o.value && (o.value = n(o.value)), o);
      })),
    i
  );
}
const Ib = Array.prototype;
function $r(t, e, n, r, i, o) {
  const s = dc(t),
    a = s !== t && !or(t),
    c = s[e];
  if (c !== Ib[e]) {
    const f = c.apply(t, o);
    return a ? ln(f) : f;
  }
  let u = n;
  s !== t &&
    (a
      ? (u = function (f, p) {
          return n.call(this, ln(f), p, t);
        })
      : n.length > 2 &&
        (u = function (f, p) {
          return n.call(this, f, p, t);
        }));
  const d = c.call(s, u, r);
  return a && i ? i(d) : d;
}
function Ef(t, e, n, r) {
  const i = dc(t);
  let o = n;
  return (
    i !== t &&
      (or(t)
        ? n.length > 3 &&
          (o = function (s, a, c) {
            return n.call(this, s, a, c, t);
          })
        : (o = function (s, a, c) {
            return n.call(this, s, ln(a), c, t);
          })),
    i[e](o, ...r)
  );
}
function Nc(t, e, n) {
  const r = xt(t);
  gn(r, "iterate", Zs);
  const i = r[e](...n);
  return (i === -1 || i === !1) && Od(n[0])
    ? ((n[0] = xt(n[0])), r[e](...n))
    : i;
}
function ms(t, e, n = []) {
  (ri(), Td());
  const r = xt(t)[e].apply(t, n);
  return (Ad(), ii(), r);
}
const Ob = Sd("__proto__,__v_isRef,__isVue"),
  bg = new Set(
    Object.getOwnPropertyNames(Symbol)
      .filter((t) => t !== "arguments" && t !== "caller")
      .map((t) => Symbol[t])
      .filter(xr),
  );
function $b(t) {
  xr(t) || (t = String(t));
  const e = xt(this);
  return (gn(e, "has", t), e.hasOwnProperty(t));
}
class yg {
  constructor(e = !1, n = !1) {
    ((this._isReadonly = e), (this._isShallow = n));
  }
  get(e, n, r) {
    if (n === "__v_skip") return e.__v_skip;
    const i = this._isReadonly,
      o = this._isShallow;
    if (n === "__v_isReactive") return !i;
    if (n === "__v_isReadonly") return i;
    if (n === "__v_isShallow") return o;
    if (n === "__v_raw")
      return r === (i ? (o ? Wb : kg) : o ? wg : _g).get(e) ||
        Object.getPrototypeOf(e) === Object.getPrototypeOf(r)
        ? e
        : void 0;
    const s = Ze(e);
    if (!i) {
      let c;
      if (s && (c = Db[n])) return c;
      if (n === "hasOwnProperty") return $b;
    }
    const a = Reflect.get(e, n, bn(e) ? e : r);
    return (xr(n) ? bg.has(n) : Ob(n)) || (i || gn(e, "get", n), o)
      ? a
      : bn(a)
        ? s && Ed(n)
          ? a
          : a.value
        : Pt(a)
          ? i
            ? Dd(a)
            : za(a)
          : a;
  }
}
class xg extends yg {
  constructor(e = !1) {
    super(!1, e);
  }
  set(e, n, r, i) {
    let o = e[n];
    if (!this._isShallow) {
      const c = Li(o);
      if (
        (!or(r) && !Li(r) && ((o = xt(o)), (r = xt(r))),
        !Ze(e) && bn(o) && !bn(r))
      )
        return c ? !1 : ((o.value = r), !0);
    }
    const s = Ze(e) && Ed(n) ? Number(n) < e.length : kt(e, n),
      a = Reflect.set(e, n, r, bn(e) ? e : i);
    return (
      e === xt(i) && (s ? Ei(r, o) && Yr(e, "set", n, r) : Yr(e, "add", n, r)),
      a
    );
  }
  deleteProperty(e, n) {
    const r = kt(e, n);
    e[n];
    const i = Reflect.deleteProperty(e, n);
    return (i && r && Yr(e, "delete", n, void 0), i);
  }
  has(e, n) {
    const r = Reflect.has(e, n);
    return ((!xr(n) || !bg.has(n)) && gn(e, "has", n), r);
  }
  ownKeys(e) {
    return (gn(e, "iterate", Ze(e) ? "length" : to), Reflect.ownKeys(e));
  }
}
class zb extends yg {
  constructor(e = !1) {
    super(!0, e);
  }
  set(e, n) {
    return !0;
  }
  deleteProperty(e, n) {
    return !0;
  }
}
const Bb = new xg(),
  Ub = new zb(),
  Fb = new xg(!0);
const Nu = (t) => t,
  Xa = (t) => Reflect.getPrototypeOf(t);
function Nb(t, e, n) {
  return function (...r) {
    const i = this.__v_raw,
      o = xt(i),
      s = Ko(o),
      a = t === "entries" || (t === Symbol.iterator && s),
      c = t === "keys" && s,
      u = i[t](...r),
      d = n ? Nu : e ? Nl : ln;
    return (
      !e && gn(o, "iterate", c ? Fu : to),
      {
        next() {
          const { value: f, done: p } = u.next();
          return p
            ? { value: f, done: p }
            : { value: a ? [d(f[0]), d(f[1])] : d(f), done: p };
        },
        [Symbol.iterator]() {
          return this;
        },
      }
    );
  };
}
function Ya(t) {
  return function (...e) {
    return t === "delete" ? !1 : t === "clear" ? void 0 : this;
  };
}
function Vb(t, e) {
  const n = {
    get(i) {
      const o = this.__v_raw,
        s = xt(o),
        a = xt(i);
      t || (Ei(i, a) && gn(s, "get", i), gn(s, "get", a));
      const { has: c } = Xa(s),
        u = e ? Nu : t ? Nl : ln;
      if (c.call(s, i)) return u(o.get(i));
      if (c.call(s, a)) return u(o.get(a));
      o !== s && o.get(i);
    },
    get size() {
      const i = this.__v_raw;
      return (!t && gn(xt(i), "iterate", to), Reflect.get(i, "size", i));
    },
    has(i) {
      const o = this.__v_raw,
        s = xt(o),
        a = xt(i);
      return (
        t || (Ei(i, a) && gn(s, "has", i), gn(s, "has", a)),
        i === a ? o.has(i) : o.has(i) || o.has(a)
      );
    },
    forEach(i, o) {
      const s = this,
        a = s.__v_raw,
        c = xt(a),
        u = e ? Nu : t ? Nl : ln;
      return (
        !t && gn(c, "iterate", to),
        a.forEach((d, f) => i.call(o, u(d), u(f), s))
      );
    },
  };
  return (
    Qt(
      n,
      t
        ? {
            add: Ya("add"),
            set: Ya("set"),
            delete: Ya("delete"),
            clear: Ya("clear"),
          }
        : {
            add(i) {
              !e && !or(i) && !Li(i) && (i = xt(i));
              const o = xt(this);
              return (
                Xa(o).has.call(o, i) || (o.add(i), Yr(o, "add", i, i)),
                this
              );
            },
            set(i, o) {
              !e && !or(o) && !Li(o) && (o = xt(o));
              const s = xt(this),
                { has: a, get: c } = Xa(s);
              let u = a.call(s, i);
              u || ((i = xt(i)), (u = a.call(s, i)));
              const d = c.call(s, i);
              return (
                s.set(i, o),
                u ? Ei(o, d) && Yr(s, "set", i, o) : Yr(s, "add", i, o),
                this
              );
            },
            delete(i) {
              const o = xt(this),
                { has: s, get: a } = Xa(o);
              let c = s.call(o, i);
              (c || ((i = xt(i)), (c = s.call(o, i))), a && a.call(o, i));
              const u = o.delete(i);
              return (c && Yr(o, "delete", i, void 0), u);
            },
            clear() {
              const i = xt(this),
                o = i.size !== 0,
                s = i.clear();
              return (o && Yr(i, "clear", void 0, void 0), s);
            },
          },
    ),
    ["keys", "values", "entries", Symbol.iterator].forEach((i) => {
      n[i] = Nb(i, t, e);
    }),
    n
  );
}
function Ld(t, e) {
  const n = Vb(t, e);
  return (r, i, o) =>
    i === "__v_isReactive"
      ? !t
      : i === "__v_isReadonly"
        ? t
        : i === "__v_raw"
          ? r
          : Reflect.get(kt(n, i) && i in r ? n : r, i, o);
}
const Hb = { get: Ld(!1, !1) },
  jb = { get: Ld(!1, !0) },
  Gb = { get: Ld(!0, !1) };
const _g = new WeakMap(),
  wg = new WeakMap(),
  kg = new WeakMap(),
  Wb = new WeakMap();
function Kb(t) {
  switch (t) {
    case "Object":
    case "Array":
      return 1;
    case "Map":
    case "Set":
    case "WeakMap":
    case "WeakSet":
      return 2;
    default:
      return 0;
  }
}
function Xb(t) {
  return t.__v_skip || !Object.isExtensible(t) ? 0 : Kb(gb(t));
}
function za(t) {
  return Li(t) ? t : Id(t, !1, Bb, Hb, _g);
}
function Sg(t) {
  return Id(t, !1, Fb, jb, wg);
}
function Dd(t) {
  return Id(t, !0, Ub, Gb, kg);
}
function Id(t, e, n, r, i) {
  if (!Pt(t) || (t.__v_raw && !(e && t.__v_isReactive))) return t;
  const o = Xb(t);
  if (o === 0) return t;
  const s = i.get(t);
  if (s) return s;
  const a = new Proxy(t, o === 2 ? r : n);
  return (i.set(t, a), a);
}
function Xo(t) {
  return Li(t) ? Xo(t.__v_raw) : !!(t && t.__v_isReactive);
}
function Li(t) {
  return !!(t && t.__v_isReadonly);
}
function or(t) {
  return !!(t && t.__v_isShallow);
}
function Od(t) {
  return t ? !!t.__v_raw : !1;
}
function xt(t) {
  const e = t && t.__v_raw;
  return e ? xt(e) : t;
}
function Yb(t) {
  return (
    !kt(t, "__v_skip") && Object.isExtensible(t) && zu(t, "__v_skip", !0),
    t
  );
}
const ln = (t) => (Pt(t) ? za(t) : t),
  Nl = (t) => (Pt(t) ? Dd(t) : t);
function bn(t) {
  return t ? t.__v_isRef === !0 : !1;
}
function N(t) {
  return Cg(t, !1);
}
function qb(t) {
  return Cg(t, !0);
}
function Cg(t, e) {
  return bn(t) ? t : new Zb(t, e);
}
class Zb {
  constructor(e, n) {
    ((this.dep = new Rd()),
      (this.__v_isRef = !0),
      (this.__v_isShallow = !1),
      (this._rawValue = n ? e : xt(e)),
      (this._value = n ? e : ln(e)),
      (this.__v_isShallow = n));
  }
  get value() {
    return (this.dep.track(), this._value);
  }
  set value(e) {
    const n = this._rawValue,
      r = this.__v_isShallow || or(e) || Li(e);
    ((e = r ? e : xt(e)),
      Ei(e, n) &&
        ((this._rawValue = e),
        (this._value = r ? e : ln(e)),
        this.dep.trigger()));
  }
}
function H(t) {
  return bn(t) ? t.value : t;
}
const Jb = {
  get: (t, e, n) => (e === "__v_raw" ? t : H(Reflect.get(t, e, n))),
  set: (t, e, n, r) => {
    const i = t[e];
    return bn(i) && !bn(n) ? ((i.value = n), !0) : Reflect.set(t, e, n, r);
  },
};
function Mg(t) {
  return Xo(t) ? t : new Proxy(t, Jb);
}
class Qb {
  constructor(e, n, r) {
    ((this.fn = e),
      (this.setter = n),
      (this._value = void 0),
      (this.dep = new Rd(this)),
      (this.__v_isRef = !0),
      (this.deps = void 0),
      (this.depsTail = void 0),
      (this.flags = 16),
      (this.globalVersion = qs - 1),
      (this.next = void 0),
      (this.effect = this),
      (this.__v_isReadonly = !n),
      (this.isSSR = r));
  }
  notify() {
    if (((this.flags |= 16), !(this.flags & 8) && Lt !== this))
      return (fg(this, !0), !0);
  }
  get value() {
    const e = this.dep.track();
    return (mg(this), e && (e.version = this.dep.version), this._value);
  }
  set value(e) {
    this.setter && this.setter(e);
  }
}
function ey(t, e, n = !1) {
  let r, i;
  return (rt(t) ? (r = t) : ((r = t.get), (i = t.set)), new Qb(r, i, n));
}
const qa = {},
  Vl = new WeakMap();
let Ki;
function ty(t, e = !1, n = Ki) {
  if (n) {
    let r = Vl.get(n);
    (r || Vl.set(n, (r = [])), r.push(t));
  }
}
function ny(t, e, n = Tt) {
  const {
      immediate: r,
      deep: i,
      once: o,
      scheduler: s,
      augmentJob: a,
      call: c,
    } = n,
    u = (x) => (i ? x : or(x) || i === !1 || i === 0 ? qr(x, 1) : qr(x));
  let d,
    f,
    p,
    h,
    v = !1,
    b = !1;
  if (
    (bn(t)
      ? ((f = () => t.value), (v = or(t)))
      : Xo(t)
        ? ((f = () => u(t)), (v = !0))
        : Ze(t)
          ? ((b = !0),
            (v = t.some((x) => Xo(x) || or(x))),
            (f = () =>
              t.map((x) => {
                if (bn(x)) return x.value;
                if (Xo(x)) return u(x);
                if (rt(x)) return c ? c(x, 2) : x();
              })))
          : rt(t)
            ? e
              ? (f = c ? () => c(t, 2) : t)
              : (f = () => {
                  if (p) {
                    ri();
                    try {
                      p();
                    } finally {
                      ii();
                    }
                  }
                  const x = Ki;
                  Ki = d;
                  try {
                    return c ? c(t, 3, [h]) : t(h);
                  } finally {
                    Ki = x;
                  }
                })
            : (f = Rr),
    e && i)
  ) {
    const x = f,
      C = i === !0 ? 1 / 0 : i;
    f = () => qr(x(), C);
  }
  const g = Pb(),
    m = () => {
      (d.stop(), g && g.active && Md(g.effects, d));
    };
  if (o && e) {
    const x = e;
    e = (...C) => {
      (x(...C), m());
    };
  }
  let _ = b ? new Array(t.length).fill(qa) : qa;
  const y = (x) => {
    if (!(!(d.flags & 1) || (!d.dirty && !x)))
      if (e) {
        const C = d.run();
        if (i || v || (b ? C.some((w, S) => Ei(w, _[S])) : Ei(C, _))) {
          p && p();
          const w = Ki;
          Ki = d;
          try {
            const S = [C, _ === qa ? void 0 : b && _[0] === qa ? [] : _, h];
            ((_ = C), c ? c(e, 3, S) : e(...S));
          } finally {
            Ki = w;
          }
        }
      } else d.run();
  };
  return (
    a && a(y),
    (d = new ug(f)),
    (d.scheduler = s ? () => s(y, !1) : y),
    (h = (x) => ty(x, !1, d)),
    (p = d.onStop =
      () => {
        const x = Vl.get(d);
        if (x) {
          if (c) c(x, 4);
          else for (const C of x) C();
          Vl.delete(d);
        }
      }),
    e ? (r ? y(!0) : (_ = d.run())) : s ? s(y.bind(null, !0), !0) : d.run(),
    (m.pause = d.pause.bind(d)),
    (m.resume = d.resume.bind(d)),
    (m.stop = m),
    m
  );
}
function qr(t, e = 1 / 0, n) {
  if (e <= 0 || !Pt(t) || t.__v_skip || ((n = n || new Set()), n.has(t)))
    return t;
  if ((n.add(t), e--, bn(t))) qr(t.value, e, n);
  else if (Ze(t)) for (let r = 0; r < t.length; r++) qr(t[r], e, n);
  else if (sc(t) || Ko(t))
    t.forEach((r) => {
      qr(r, e, n);
    });
  else if (og(t)) {
    for (const r in t) qr(t[r], e, n);
    for (const r of Object.getOwnPropertySymbols(t))
      Object.prototype.propertyIsEnumerable.call(t, r) && qr(t[r], e, n);
  }
  return t;
}
/**
 * @vue/runtime-core v3.5.17
 * (c) 2018-present Yuxi (Evan) You and Vue contributors
 * @license MIT
 **/ function Ba(t, e, n, r) {
  try {
    return r ? t(...r) : t();
  } catch (i) {
    fc(i, e, n);
  }
}
function _r(t, e, n, r) {
  if (rt(t)) {
    const i = Ba(t, e, n, r);
    return (
      i &&
        rg(i) &&
        i.catch((o) => {
          fc(o, e, n);
        }),
      i
    );
  }
  if (Ze(t)) {
    const i = [];
    for (let o = 0; o < t.length; o++) i.push(_r(t[o], e, n, r));
    return i;
  }
}
function fc(t, e, n, r = !0) {
  const i = e ? e.vnode : null,
    { errorHandler: o, throwUnhandledErrorInProduction: s } =
      (e && e.appContext.config) || Tt;
  if (e) {
    let a = e.parent;
    const c = e.proxy,
      u = `https://vuejs.org/error-reference/#runtime-${n}`;
    for (; a; ) {
      const d = a.ec;
      if (d) {
        for (let f = 0; f < d.length; f++) if (d[f](t, c, u) === !1) return;
      }
      a = a.parent;
    }
    if (o) {
      (ri(), Ba(o, null, 10, [t, c, u]), ii());
      return;
    }
  }
  ry(t, n, i, r, s);
}
function ry(t, e, n, r = !0, i = !1) {
  if (i) throw t;
  console.error(t);
}
const Tn = [];
let Er = -1;
const Yo = [];
let yi = null,
  Uo = 0;
const Eg = Promise.resolve();
let Hl = null;
function ao(t) {
  const e = Hl || Eg;
  return t ? e.then(this ? t.bind(this) : t) : e;
}
function iy(t) {
  let e = Er + 1,
    n = Tn.length;
  for (; e < n; ) {
    const r = (e + n) >>> 1,
      i = Tn[r],
      o = Js(i);
    o < t || (o === t && i.flags & 2) ? (e = r + 1) : (n = r);
  }
  return e;
}
function $d(t) {
  if (!(t.flags & 1)) {
    const e = Js(t),
      n = Tn[Tn.length - 1];
    (!n || (!(t.flags & 2) && e >= Js(n)) ? Tn.push(t) : Tn.splice(iy(e), 0, t),
      (t.flags |= 1),
      Tg());
  }
}
function Tg() {
  Hl || (Hl = Eg.then(Pg));
}
function oy(t) {
  (Ze(t)
    ? Yo.push(...t)
    : yi && t.id === -1
      ? yi.splice(Uo + 1, 0, t)
      : t.flags & 1 || (Yo.push(t), (t.flags |= 1)),
    Tg());
}
function Tf(t, e, n = Er + 1) {
  for (; n < Tn.length; n++) {
    const r = Tn[n];
    if (r && r.flags & 2) {
      if (t && r.id !== t.uid) continue;
      (Tn.splice(n, 1),
        n--,
        r.flags & 4 && (r.flags &= -2),
        r(),
        r.flags & 4 || (r.flags &= -2));
    }
  }
}
function Ag(t) {
  if (Yo.length) {
    const e = [...new Set(Yo)].sort((n, r) => Js(n) - Js(r));
    if (((Yo.length = 0), yi)) {
      yi.push(...e);
      return;
    }
    for (yi = e, Uo = 0; Uo < yi.length; Uo++) {
      const n = yi[Uo];
      (n.flags & 4 && (n.flags &= -2), n.flags & 8 || n(), (n.flags &= -2));
    }
    ((yi = null), (Uo = 0));
  }
}
const Js = (t) => (t.id == null ? (t.flags & 2 ? -1 : 1 / 0) : t.id);
function Pg(t) {
  try {
    for (Er = 0; Er < Tn.length; Er++) {
      const e = Tn[Er];
      e &&
        !(e.flags & 8) &&
        (e.flags & 4 && (e.flags &= -2),
        Ba(e, e.i, e.i ? 15 : 14),
        e.flags & 4 || (e.flags &= -2));
    }
  } finally {
    for (; Er < Tn.length; Er++) {
      const e = Tn[Er];
      e && (e.flags &= -2);
    }
    ((Er = -1),
      (Tn.length = 0),
      Ag(),
      (Hl = null),
      (Tn.length || Yo.length) && Pg());
  }
}
let rn = null,
  Rg = null;
function jl(t) {
  const e = rn;
  return ((rn = t), (Rg = (t && t.type.__scopeId) || null), e);
}
function Ye(t, e = rn, n) {
  if (!e || t._n) return t;
  const r = (...i) => {
    r._d && Vf(-1);
    const o = jl(e);
    let s;
    try {
      s = t(...i);
    } finally {
      (jl(o), r._d && Vf(1));
    }
    return s;
  };
  return ((r._n = !0), (r._c = !0), (r._d = !0), r);
}
function st(t, e) {
  if (rn === null) return t;
  const n = vc(rn),
    r = t.dirs || (t.dirs = []);
  for (let i = 0; i < e.length; i++) {
    let [o, s, a, c = Tt] = e[i];
    o &&
      (rt(o) && (o = { mounted: o, updated: o }),
      o.deep && qr(s),
      r.push({
        dir: o,
        instance: n,
        value: s,
        oldValue: void 0,
        arg: a,
        modifiers: c,
      }));
  }
  return t;
}
function Bi(t, e, n, r) {
  const i = t.dirs,
    o = e && e.dirs;
  for (let s = 0; s < i.length; s++) {
    const a = i[s];
    o && (a.oldValue = o[s].value);
    let c = a.dir[r];
    c && (ri(), _r(c, n, 8, [t.el, a, t, e]), ii());
  }
}
const Lg = Symbol("_vte"),
  Dg = (t) => t.__isTeleport,
  Us = (t) => t && (t.disabled || t.disabled === ""),
  Af = (t) => t && (t.defer || t.defer === ""),
  Pf = (t) => typeof SVGElement < "u" && t instanceof SVGElement,
  Rf = (t) => typeof MathMLElement == "function" && t instanceof MathMLElement,
  Vu = (t, e) => {
    const n = t && t.to;
    return Nt(n) ? (e ? e(n) : null) : n;
  },
  Ig = {
    name: "Teleport",
    __isTeleport: !0,
    process(t, e, n, r, i, o, s, a, c, u) {
      const {
          mc: d,
          pc: f,
          pbc: p,
          o: { insert: h, querySelector: v, createText: b, createComment: g },
        } = u,
        m = Us(e.props);
      let { shapeFlag: _, children: y, dynamicChildren: x } = e;
      if (t == null) {
        const C = (e.el = b("")),
          w = (e.anchor = b(""));
        (h(C, n, r), h(w, n, r));
        const S = (k, P) => {
            _ & 16 &&
              (i && i.isCE && (i.ce._teleportTarget = k),
              d(y, k, P, i, o, s, a, c));
          },
          D = () => {
            const k = (e.target = Vu(e.props, v)),
              P = $g(k, e, b, h);
            k &&
              (s !== "svg" && Pf(k)
                ? (s = "svg")
                : s !== "mathml" && Rf(k) && (s = "mathml"),
              m || (S(k, P), Dl(e, !1)));
          };
        (m && (S(n, w), Dl(e, !0)),
          Af(e.props)
            ? ((e.el.__isMounted = !1),
              Mn(() => {
                (D(), delete e.el.__isMounted);
              }, o))
            : D());
      } else {
        if (Af(e.props) && t.el.__isMounted === !1) {
          Mn(() => {
            Ig.process(t, e, n, r, i, o, s, a, c, u);
          }, o);
          return;
        }
        ((e.el = t.el), (e.targetStart = t.targetStart));
        const C = (e.anchor = t.anchor),
          w = (e.target = t.target),
          S = (e.targetAnchor = t.targetAnchor),
          D = Us(t.props),
          k = D ? n : w,
          P = D ? C : S;
        if (
          (s === "svg" || Pf(w)
            ? (s = "svg")
            : (s === "mathml" || Rf(w)) && (s = "mathml"),
          x
            ? (p(t.dynamicChildren, x, k, i, o, s, a), Vd(t, e, !0))
            : c || f(t, e, k, P, i, o, s, a, !1),
          m)
        )
          D
            ? e.props &&
              t.props &&
              e.props.to !== t.props.to &&
              (e.props.to = t.props.to)
            : Za(e, n, C, u, 1);
        else if ((e.props && e.props.to) !== (t.props && t.props.to)) {
          const I = (e.target = Vu(e.props, v));
          I && Za(e, I, null, u, 0);
        } else D && Za(e, w, S, u, 1);
        Dl(e, m);
      }
    },
    remove(t, e, n, { um: r, o: { remove: i } }, o) {
      const {
        shapeFlag: s,
        children: a,
        anchor: c,
        targetStart: u,
        targetAnchor: d,
        target: f,
        props: p,
      } = t;
      if ((f && (i(u), i(d)), o && i(c), s & 16)) {
        const h = o || !Us(p);
        for (let v = 0; v < a.length; v++) {
          const b = a[v];
          r(b, e, n, h, !!b.dynamicChildren);
        }
      }
    },
    move: Za,
    hydrate: sy,
  };
function Za(t, e, n, { o: { insert: r }, m: i }, o = 2) {
  o === 0 && r(t.targetAnchor, e, n);
  const { el: s, anchor: a, shapeFlag: c, children: u, props: d } = t,
    f = o === 2;
  if ((f && r(s, e, n), (!f || Us(d)) && c & 16))
    for (let p = 0; p < u.length; p++) i(u[p], e, n, 2);
  f && r(a, e, n);
}
function sy(
  t,
  e,
  n,
  r,
  i,
  o,
  {
    o: {
      nextSibling: s,
      parentNode: a,
      querySelector: c,
      insert: u,
      createText: d,
    },
  },
  f,
) {
  const p = (e.target = Vu(e.props, c));
  if (p) {
    const h = Us(e.props),
      v = p._lpa || p.firstChild;
    if (e.shapeFlag & 16)
      if (h)
        ((e.anchor = f(s(t), e, a(t), n, r, i, o)),
          (e.targetStart = v),
          (e.targetAnchor = v && s(v)));
      else {
        e.anchor = s(t);
        let b = v;
        for (; b; ) {
          if (b && b.nodeType === 8) {
            if (b.data === "teleport start anchor") e.targetStart = b;
            else if (b.data === "teleport anchor") {
              ((e.targetAnchor = b),
                (p._lpa = e.targetAnchor && s(e.targetAnchor)));
              break;
            }
          }
          b = s(b);
        }
        (e.targetAnchor || $g(p, e, d, u), f(v && s(v), e, p, n, r, i, o));
      }
    Dl(e, h);
  }
  return e.anchor && s(e.anchor);
}
const Og = Ig;
function Dl(t, e) {
  const n = t.ctx;
  if (n && n.ut) {
    let r, i;
    for (
      e
        ? ((r = t.el), (i = t.anchor))
        : ((r = t.targetStart), (i = t.targetAnchor));
      r && r !== i;

    )
      (r.nodeType === 1 && r.setAttribute("data-v-owner", n.uid),
        (r = r.nextSibling));
    n.ut();
  }
}
function $g(t, e, n, r) {
  const i = (e.targetStart = n("")),
    o = (e.targetAnchor = n(""));
  return ((i[Lg] = o), t && (r(i, t), r(o, t)), o);
}
const xi = Symbol("_leaveCb"),
  Ja = Symbol("_enterCb");
function zg() {
  const t = {
    isMounted: !1,
    isLeaving: !1,
    isUnmounting: !1,
    leavingVNodes: new Map(),
  };
  return (
    $t(() => {
      t.isMounted = !0;
    }),
    Wg(() => {
      t.isUnmounting = !0;
    }),
    t
  );
}
const qn = [Function, Array],
  Bg = {
    mode: String,
    appear: Boolean,
    persisted: Boolean,
    onBeforeEnter: qn,
    onEnter: qn,
    onAfterEnter: qn,
    onEnterCancelled: qn,
    onBeforeLeave: qn,
    onLeave: qn,
    onAfterLeave: qn,
    onLeaveCancelled: qn,
    onBeforeAppear: qn,
    onAppear: qn,
    onAfterAppear: qn,
    onAppearCancelled: qn,
  },
  Ug = (t) => {
    const e = t.subTree;
    return e.component ? Ug(e.component) : e;
  },
  ay = {
    name: "BaseTransition",
    props: Bg,
    setup(t, { slots: e }) {
      const n = na(),
        r = zg();
      return () => {
        const i = e.default && zd(e.default(), !0);
        if (!i || !i.length) return;
        const o = Fg(i),
          s = xt(t),
          { mode: a } = s;
        if (r.isLeaving) return Vc(o);
        const c = Lf(o);
        if (!c) return Vc(o);
        let u = Qs(c, s, r, n, (f) => (u = f));
        c.type !== vn && lo(c, u);
        let d = n.subTree && Lf(n.subTree);
        if (d && d.type !== vn && !qi(c, d) && Ug(n).type !== vn) {
          let f = Qs(d, s, r, n);
          if ((lo(d, f), a === "out-in" && c.type !== vn))
            return (
              (r.isLeaving = !0),
              (f.afterLeave = () => {
                ((r.isLeaving = !1),
                  n.job.flags & 8 || n.update(),
                  delete f.afterLeave,
                  (d = void 0));
              }),
              Vc(o)
            );
          a === "in-out" && c.type !== vn
            ? (f.delayLeave = (p, h, v) => {
                const b = Ng(r, d);
                ((b[String(d.key)] = d),
                  (p[xi] = () => {
                    (h(),
                      (p[xi] = void 0),
                      delete u.delayedLeave,
                      (d = void 0));
                  }),
                  (u.delayedLeave = () => {
                    (v(), delete u.delayedLeave, (d = void 0));
                  }));
              })
            : (d = void 0);
        } else d && (d = void 0);
        return o;
      };
    },
  };
function Fg(t) {
  let e = t[0];
  if (t.length > 1) {
    for (const n of t)
      if (n.type !== vn) {
        e = n;
        break;
      }
  }
  return e;
}
const ly = ay;
function Ng(t, e) {
  const { leavingVNodes: n } = t;
  let r = n.get(e.type);
  return (r || ((r = Object.create(null)), n.set(e.type, r)), r);
}
function Qs(t, e, n, r, i) {
  const {
      appear: o,
      mode: s,
      persisted: a = !1,
      onBeforeEnter: c,
      onEnter: u,
      onAfterEnter: d,
      onEnterCancelled: f,
      onBeforeLeave: p,
      onLeave: h,
      onAfterLeave: v,
      onLeaveCancelled: b,
      onBeforeAppear: g,
      onAppear: m,
      onAfterAppear: _,
      onAppearCancelled: y,
    } = e,
    x = String(t.key),
    C = Ng(n, t),
    w = (k, P) => {
      k && _r(k, r, 9, P);
    },
    S = (k, P) => {
      const I = P[1];
      (w(k, P),
        Ze(k) ? k.every((W) => W.length <= 1) && I() : k.length <= 1 && I());
    },
    D = {
      mode: s,
      persisted: a,
      beforeEnter(k) {
        let P = c;
        if (!n.isMounted)
          if (o) P = g || c;
          else return;
        k[xi] && k[xi](!0);
        const I = C[x];
        (I && qi(t, I) && I.el[xi] && I.el[xi](), w(P, [k]));
      },
      enter(k) {
        let P = u,
          I = d,
          W = f;
        if (!n.isMounted)
          if (o) ((P = m || u), (I = _ || d), (W = y || f));
          else return;
        let X = !1;
        const Z = (k[Ja] = (G) => {
          X ||
            ((X = !0),
            G ? w(W, [k]) : w(I, [k]),
            D.delayedLeave && D.delayedLeave(),
            (k[Ja] = void 0));
        });
        P ? S(P, [k, Z]) : Z();
      },
      leave(k, P) {
        const I = String(t.key);
        if ((k[Ja] && k[Ja](!0), n.isUnmounting)) return P();
        w(p, [k]);
        let W = !1;
        const X = (k[xi] = (Z) => {
          W ||
            ((W = !0),
            P(),
            Z ? w(b, [k]) : w(v, [k]),
            (k[xi] = void 0),
            C[I] === t && delete C[I]);
        });
        ((C[I] = t), h ? S(h, [k, X]) : X());
      },
      clone(k) {
        const P = Qs(k, e, n, r, i);
        return (i && i(P), P);
      },
    };
  return D;
}
function Vc(t) {
  if (pc(t)) return ((t = Di(t)), (t.children = null), t);
}
function Lf(t) {
  if (!pc(t)) return Dg(t.type) && t.children ? Fg(t.children) : t;
  if (t.component) return t.component.subTree;
  const { shapeFlag: e, children: n } = t;
  if (n) {
    if (e & 16) return n[0];
    if (e & 32 && rt(n.default)) return n.default();
  }
}
function lo(t, e) {
  t.shapeFlag & 6 && t.component
    ? ((t.transition = e), lo(t.component.subTree, e))
    : t.shapeFlag & 128
      ? ((t.ssContent.transition = e.clone(t.ssContent)),
        (t.ssFallback.transition = e.clone(t.ssFallback)))
      : (t.transition = e);
}
function zd(t, e = !1, n) {
  let r = [],
    i = 0;
  for (let o = 0; o < t.length; o++) {
    let s = t[o];
    const a = n == null ? s.key : String(n) + String(s.key != null ? s.key : o);
    s.type === We
      ? (s.patchFlag & 128 && i++, (r = r.concat(zd(s.children, e, a))))
      : (e || s.type !== vn) && r.push(a != null ? Di(s, { key: a }) : s);
  }
  if (i > 1) for (let o = 0; o < r.length; o++) r[o].patchFlag = -2;
  return r;
}
/*! #__NO_SIDE_EFFECTS__ */ function Vg(t, e) {
  return rt(t) ? Qt({ name: t.name }, e, { setup: t }) : t;
}
function cy() {
  const t = na();
  return t
    ? (t.appContext.config.idPrefix || "v") + "-" + t.ids[0] + t.ids[1]++
    : "";
}
function Hg(t) {
  t.ids = [t.ids[0] + t.ids[2]++ + "-", 0, 0];
}
function Fs(t, e, n, r, i = !1) {
  if (Ze(t)) {
    t.forEach((v, b) => Fs(v, e && (Ze(e) ? e[b] : e), n, r, i));
    return;
  }
  if (qo(r) && !i) {
    r.shapeFlag & 512 &&
      r.type.__asyncResolved &&
      r.component.subTree.component &&
      Fs(t, e, n, r.component.subTree);
    return;
  }
  const o = r.shapeFlag & 4 ? vc(r.component) : r.el,
    s = i ? null : o,
    { i: a, r: c } = t,
    u = e && e.r,
    d = a.refs === Tt ? (a.refs = {}) : a.refs,
    f = a.setupState,
    p = xt(f),
    h = f === Tt ? () => !1 : (v) => kt(p, v);
  if (
    (u != null &&
      u !== c &&
      (Nt(u)
        ? ((d[u] = null), h(u) && (f[u] = null))
        : bn(u) && (u.value = null)),
    rt(c))
  )
    Ba(c, a, 12, [s, d]);
  else {
    const v = Nt(c),
      b = bn(c);
    if (v || b) {
      const g = () => {
        if (t.f) {
          const m = v ? (h(c) ? f[c] : d[c]) : c.value;
          i
            ? Ze(m) && Md(m, o)
            : Ze(m)
              ? m.includes(o) || m.push(o)
              : v
                ? ((d[c] = [o]), h(c) && (f[c] = d[c]))
                : ((c.value = [o]), t.k && (d[t.k] = c.value));
        } else
          v
            ? ((d[c] = s), h(c) && (f[c] = s))
            : b && ((c.value = s), t.k && (d[t.k] = s));
      };
      s ? ((g.id = -1), Mn(g, n)) : g();
    }
  }
}
cc().requestIdleCallback;
cc().cancelIdleCallback;
const qo = (t) => !!t.type.__asyncLoader,
  pc = (t) => t.type.__isKeepAlive;
function uy(t, e) {
  jg(t, "a", e);
}
function dy(t, e) {
  jg(t, "da", e);
}
function jg(t, e, n = cn) {
  const r =
    t.__wdc ||
    (t.__wdc = () => {
      let i = n;
      for (; i; ) {
        if (i.isDeactivated) return;
        i = i.parent;
      }
      return t();
    });
  if ((hc(e, r, n), n)) {
    let i = n.parent;
    for (; i && i.parent; )
      (pc(i.parent.vnode) && fy(r, e, n, i), (i = i.parent));
  }
}
function fy(t, e, n, r) {
  const i = hc(e, t, r, !0);
  uo(() => {
    Md(r[e], i);
  }, n);
}
function hc(t, e, n = cn, r = !1) {
  if (n) {
    const i = n[t] || (n[t] = []),
      o =
        e.__weh ||
        (e.__weh = (...s) => {
          ri();
          const a = Ua(n),
            c = _r(e, n, t, s);
          return (a(), ii(), c);
        });
    return (r ? i.unshift(o) : i.push(o), o);
  }
}
const ci =
    (t) =>
    (e, n = cn) => {
      (!ra || t === "sp") && hc(t, (...r) => e(...r), n);
    },
  py = ci("bm"),
  $t = ci("m"),
  hy = ci("bu"),
  Gg = ci("u"),
  Wg = ci("bum"),
  uo = ci("um"),
  my = ci("sp"),
  gy = ci("rtg"),
  vy = ci("rtc");
function by(t, e = cn) {
  hc("ec", t, e);
}
const Bd = "components",
  yy = "directives";
function Mt(t, e) {
  return Ud(Bd, t, !0, e) || t;
}
const Kg = Symbol.for("v-ndc");
function Dt(t) {
  return Nt(t) ? Ud(Bd, t, !1) || t : t || Kg;
}
function Xn(t) {
  return Ud(yy, t);
}
function Ud(t, e, n = !0, r = !1) {
  const i = rn || cn;
  if (i) {
    const o = i.type;
    if (t === Bd) {
      const a = o1(o, !1);
      if (a && (a === e || a === ar(e) || a === lc(ar(e)))) return o;
    }
    const s = Df(i[t] || o[t], e) || Df(i.appContext[t], e);
    return !s && r ? o : s;
  }
}
function Df(t, e) {
  return t && (t[e] || t[ar(e)] || t[lc(ar(e))]);
}
function mt(t, e, n, r) {
  let i;
  const o = n,
    s = Ze(t);
  if (s || Nt(t)) {
    const a = s && Xo(t);
    let c = !1,
      u = !1;
    (a && ((c = !or(t)), (u = Li(t)), (t = dc(t))), (i = new Array(t.length)));
    for (let d = 0, f = t.length; d < f; d++)
      i[d] = e(c ? (u ? Nl(ln(t[d])) : ln(t[d])) : t[d], d, void 0, o);
  } else if (typeof t == "number") {
    i = new Array(t);
    for (let a = 0; a < t; a++) i[a] = e(a + 1, a, void 0, o);
  } else if (Pt(t))
    if (t[Symbol.iterator]) i = Array.from(t, (a, c) => e(a, c, void 0, o));
    else {
      const a = Object.keys(t);
      i = new Array(a.length);
      for (let c = 0, u = a.length; c < u; c++) {
        const d = a[c];
        i[c] = e(t[d], d, c, o);
      }
    }
  else i = [];
  return i;
}
function xy(t, e) {
  for (let n = 0; n < e.length; n++) {
    const r = e[n];
    if (Ze(r)) for (let i = 0; i < r.length; i++) t[r[i].name] = r[i].fn;
    else
      r &&
        (t[r.name] = r.key
          ? (...i) => {
              const o = r.fn(...i);
              return (o && (o.key = r.key), o);
            }
          : r.fn);
  }
  return t;
}
function De(t, e, n = {}, r, i) {
  if (rn.ce || (rn.parent && qo(rn.parent) && rn.parent.ce))
    return (
      e !== "default" && (n.name = e),
      E(),
      Be(We, null, [O("slot", n, r && r())], 64)
    );
  let o = t[e];
  (o && o._c && (o._d = !1), E());
  const s = o && Xg(o(n)),
    a = n.key || (s && s.key),
    c = Be(
      We,
      { key: (a && !xr(a) ? a : `_${e}`) + (!s && r ? "_fb" : "") },
      s || (r ? r() : []),
      s && t._ === 1 ? 64 : -2,
    );
  return (
    c.scopeId && (c.slotScopeIds = [c.scopeId + "-s"]),
    o && o._c && (o._d = !0),
    c
  );
}
function Xg(t) {
  return t.some((e) =>
    ta(e) ? !(e.type === vn || (e.type === We && !Xg(e.children))) : !0,
  )
    ? t
    : null;
}
function Qa(t, e) {
  const n = {};
  for (const r in t) n[/[A-Z]/.test(r) ? `on:${r}` : Rl(r)] = t[r];
  return n;
}
const Hu = (t) => (t ? (p0(t) ? vc(t) : Hu(t.parent)) : null),
  Ns = Qt(Object.create(null), {
    $: (t) => t,
    $el: (t) => t.vnode.el,
    $data: (t) => t.data,
    $props: (t) => t.props,
    $attrs: (t) => t.attrs,
    $slots: (t) => t.slots,
    $refs: (t) => t.refs,
    $parent: (t) => Hu(t.parent),
    $root: (t) => Hu(t.root),
    $host: (t) => t.ce,
    $emit: (t) => t.emit,
    $options: (t) => qg(t),
    $forceUpdate: (t) =>
      t.f ||
      (t.f = () => {
        $d(t.update);
      }),
    $nextTick: (t) => t.n || (t.n = ao.bind(t.proxy)),
    $watch: (t) => Ny.bind(t),
  }),
  Hc = (t, e) => t !== Tt && !t.__isScriptSetup && kt(t, e),
  _y = {
    get({ _: t }, e) {
      if (e === "__v_skip") return !0;
      const {
        ctx: n,
        setupState: r,
        data: i,
        props: o,
        accessCache: s,
        type: a,
        appContext: c,
      } = t;
      let u;
      if (e[0] !== "$") {
        const h = s[e];
        if (h !== void 0)
          switch (h) {
            case 1:
              return r[e];
            case 2:
              return i[e];
            case 4:
              return n[e];
            case 3:
              return o[e];
          }
        else {
          if (Hc(r, e)) return ((s[e] = 1), r[e]);
          if (i !== Tt && kt(i, e)) return ((s[e] = 2), i[e]);
          if ((u = t.propsOptions[0]) && kt(u, e)) return ((s[e] = 3), o[e]);
          if (n !== Tt && kt(n, e)) return ((s[e] = 4), n[e]);
          ju && (s[e] = 0);
        }
      }
      const d = Ns[e];
      let f, p;
      if (d) return (e === "$attrs" && gn(t.attrs, "get", ""), d(t));
      if ((f = a.__cssModules) && (f = f[e])) return f;
      if (n !== Tt && kt(n, e)) return ((s[e] = 4), n[e]);
      if (((p = c.config.globalProperties), kt(p, e))) return p[e];
    },
    set({ _: t }, e, n) {
      const { data: r, setupState: i, ctx: o } = t;
      return Hc(i, e)
        ? ((i[e] = n), !0)
        : r !== Tt && kt(r, e)
          ? ((r[e] = n), !0)
          : kt(t.props, e) || (e[0] === "$" && e.slice(1) in t)
            ? !1
            : ((o[e] = n), !0);
    },
    has(
      {
        _: {
          data: t,
          setupState: e,
          accessCache: n,
          ctx: r,
          appContext: i,
          propsOptions: o,
        },
      },
      s,
    ) {
      let a;
      return (
        !!n[s] ||
        (t !== Tt && kt(t, s)) ||
        Hc(e, s) ||
        ((a = o[0]) && kt(a, s)) ||
        kt(r, s) ||
        kt(Ns, s) ||
        kt(i.config.globalProperties, s)
      );
    },
    defineProperty(t, e, n) {
      return (
        n.get != null
          ? (t._.accessCache[e] = 0)
          : kt(n, "value") && this.set(t, e, n.value, null),
        Reflect.defineProperty(t, e, n)
      );
    },
  };
function If(t) {
  return Ze(t) ? t.reduce((e, n) => ((e[n] = null), e), {}) : t;
}
let ju = !0;
function wy(t) {
  const e = qg(t),
    n = t.proxy,
    r = t.ctx;
  ((ju = !1), e.beforeCreate && Of(e.beforeCreate, t, "bc"));
  const {
    data: i,
    computed: o,
    methods: s,
    watch: a,
    provide: c,
    inject: u,
    created: d,
    beforeMount: f,
    mounted: p,
    beforeUpdate: h,
    updated: v,
    activated: b,
    deactivated: g,
    beforeDestroy: m,
    beforeUnmount: _,
    destroyed: y,
    unmounted: x,
    render: C,
    renderTracked: w,
    renderTriggered: S,
    errorCaptured: D,
    serverPrefetch: k,
    expose: P,
    inheritAttrs: I,
    components: W,
    directives: X,
    filters: Z,
  } = e;
  if ((u && ky(u, r, null), s))
    for (const ne in s) {
      const U = s[ne];
      rt(U) && (r[ne] = U.bind(n));
    }
  if (i) {
    const ne = i.call(n, n);
    Pt(ne) && (t.data = za(ne));
  }
  if (((ju = !0), o))
    for (const ne in o) {
      const U = o[ne],
        ie = rt(U) ? U.bind(n, n) : rt(U.get) ? U.get.bind(n, n) : Rr,
        J = !rt(U) && rt(U.set) ? U.set.bind(n) : Rr,
        V = Xe({ get: ie, set: J });
      Object.defineProperty(r, ne, {
        enumerable: !0,
        configurable: !0,
        get: () => V.value,
        set: (re) => (V.value = re),
      });
    }
  if (a) for (const ne in a) Yg(a[ne], r, n, ne);
  if (c) {
    const ne = rt(c) ? c.call(n) : c;
    Reflect.ownKeys(ne).forEach((U) => {
      Il(U, ne[U]);
    });
  }
  d && Of(d, t, "c");
  function $(ne, U) {
    Ze(U) ? U.forEach((ie) => ne(ie.bind(n))) : U && ne(U.bind(n));
  }
  if (
    ($(py, f),
    $($t, p),
    $(hy, h),
    $(Gg, v),
    $(uy, b),
    $(dy, g),
    $(by, D),
    $(vy, w),
    $(gy, S),
    $(Wg, _),
    $(uo, x),
    $(my, k),
    Ze(P))
  )
    if (P.length) {
      const ne = t.exposed || (t.exposed = {});
      P.forEach((U) => {
        Object.defineProperty(ne, U, {
          get: () => n[U],
          set: (ie) => (n[U] = ie),
        });
      });
    } else t.exposed || (t.exposed = {});
  (C && t.render === Rr && (t.render = C),
    I != null && (t.inheritAttrs = I),
    W && (t.components = W),
    X && (t.directives = X),
    k && Hg(t));
}
function ky(t, e, n = Rr) {
  Ze(t) && (t = Gu(t));
  for (const r in t) {
    const i = t[r];
    let o;
    (Pt(i)
      ? "default" in i
        ? (o = sr(i.from || r, i.default, !0))
        : (o = sr(i.from || r))
      : (o = sr(i)),
      bn(o)
        ? Object.defineProperty(e, r, {
            enumerable: !0,
            configurable: !0,
            get: () => o.value,
            set: (s) => (o.value = s),
          })
        : (e[r] = o));
  }
}
function Of(t, e, n) {
  _r(Ze(t) ? t.map((r) => r.bind(e.proxy)) : t.bind(e.proxy), e, n);
}
function Yg(t, e, n, r) {
  let i = r.includes(".") ? l0(n, r) : () => n[r];
  if (Nt(t)) {
    const o = e[t];
    rt(o) && Ft(i, o);
  } else if (rt(t)) Ft(i, t.bind(n));
  else if (Pt(t))
    if (Ze(t)) t.forEach((o) => Yg(o, e, n, r));
    else {
      const o = rt(t.handler) ? t.handler.bind(n) : e[t.handler];
      rt(o) && Ft(i, o, t);
    }
}
function qg(t) {
  const e = t.type,
    { mixins: n, extends: r } = e,
    {
      mixins: i,
      optionsCache: o,
      config: { optionMergeStrategies: s },
    } = t.appContext,
    a = o.get(e);
  let c;
  return (
    a
      ? (c = a)
      : !i.length && !n && !r
        ? (c = e)
        : ((c = {}),
          i.length && i.forEach((u) => Gl(c, u, s, !0)),
          Gl(c, e, s)),
    Pt(e) && o.set(e, c),
    c
  );
}
function Gl(t, e, n, r = !1) {
  const { mixins: i, extends: o } = e;
  (o && Gl(t, o, n, !0), i && i.forEach((s) => Gl(t, s, n, !0)));
  for (const s in e)
    if (!(r && s === "expose")) {
      const a = Sy[s] || (n && n[s]);
      t[s] = a ? a(t[s], e[s]) : e[s];
    }
  return t;
}
const Sy = {
  data: $f,
  props: zf,
  emits: zf,
  methods: Ls,
  computed: Ls,
  beforeCreate: Sn,
  created: Sn,
  beforeMount: Sn,
  mounted: Sn,
  beforeUpdate: Sn,
  updated: Sn,
  beforeDestroy: Sn,
  beforeUnmount: Sn,
  destroyed: Sn,
  unmounted: Sn,
  activated: Sn,
  deactivated: Sn,
  errorCaptured: Sn,
  serverPrefetch: Sn,
  components: Ls,
  directives: Ls,
  watch: My,
  provide: $f,
  inject: Cy,
};
function $f(t, e) {
  return e
    ? t
      ? function () {
          return Qt(
            rt(t) ? t.call(this, this) : t,
            rt(e) ? e.call(this, this) : e,
          );
        }
      : e
    : t;
}
function Cy(t, e) {
  return Ls(Gu(t), Gu(e));
}
function Gu(t) {
  if (Ze(t)) {
    const e = {};
    for (let n = 0; n < t.length; n++) e[t[n]] = t[n];
    return e;
  }
  return t;
}
function Sn(t, e) {
  return t ? [...new Set([].concat(t, e))] : e;
}
function Ls(t, e) {
  return t ? Qt(Object.create(null), t, e) : e;
}
function zf(t, e) {
  return t
    ? Ze(t) && Ze(e)
      ? [...new Set([...t, ...e])]
      : Qt(Object.create(null), If(t), If(e ?? {}))
    : e;
}
function My(t, e) {
  if (!t) return e;
  if (!e) return t;
  const n = Qt(Object.create(null), t);
  for (const r in e) n[r] = Sn(t[r], e[r]);
  return n;
}
function Zg() {
  return {
    app: null,
    config: {
      isNativeTag: hb,
      performance: !1,
      globalProperties: {},
      optionMergeStrategies: {},
      errorHandler: void 0,
      warnHandler: void 0,
      compilerOptions: {},
    },
    mixins: [],
    components: {},
    directives: {},
    provides: Object.create(null),
    optionsCache: new WeakMap(),
    propsCache: new WeakMap(),
    emitsCache: new WeakMap(),
  };
}
let Ey = 0;
function Ty(t, e) {
  return function (r, i = null) {
    (rt(r) || (r = Qt({}, r)), i != null && !Pt(i) && (i = null));
    const o = Zg(),
      s = new WeakSet(),
      a = [];
    let c = !1;
    const u = (o.app = {
      _uid: Ey++,
      _component: r,
      _props: i,
      _container: null,
      _context: o,
      _instance: null,
      version: a1,
      get config() {
        return o.config;
      },
      set config(d) {},
      use(d, ...f) {
        return (
          s.has(d) ||
            (d && rt(d.install)
              ? (s.add(d), d.install(u, ...f))
              : rt(d) && (s.add(d), d(u, ...f))),
          u
        );
      },
      mixin(d) {
        return (o.mixins.includes(d) || o.mixins.push(d), u);
      },
      component(d, f) {
        return f ? ((o.components[d] = f), u) : o.components[d];
      },
      directive(d, f) {
        return f ? ((o.directives[d] = f), u) : o.directives[d];
      },
      mount(d, f, p) {
        if (!c) {
          const h = u._ceVNode || O(r, i);
          return (
            (h.appContext = o),
            p === !0 ? (p = "svg") : p === !1 && (p = void 0),
            t(h, d, p),
            (c = !0),
            (u._container = d),
            (d.__vue_app__ = u),
            vc(h.component)
          );
        }
      },
      onUnmount(d) {
        a.push(d);
      },
      unmount() {
        c &&
          (_r(a, u._instance, 16),
          t(null, u._container),
          delete u._container.__vue_app__);
      },
      provide(d, f) {
        return ((o.provides[d] = f), u);
      },
      runWithContext(d) {
        const f = Zo;
        Zo = u;
        try {
          return d();
        } finally {
          Zo = f;
        }
      },
    });
    return u;
  };
}
let Zo = null;
function Il(t, e) {
  if (cn) {
    let n = cn.provides;
    const r = cn.parent && cn.parent.provides;
    (r === n && (n = cn.provides = Object.create(r)), (n[t] = e));
  }
}
function sr(t, e, n = !1) {
  const r = cn || rn;
  if (r || Zo) {
    let i = Zo
      ? Zo._context.provides
      : r
        ? r.parent == null || r.ce
          ? r.vnode.appContext && r.vnode.appContext.provides
          : r.parent.provides
        : void 0;
    if (i && t in i) return i[t];
    if (arguments.length > 1) return n && rt(e) ? e.call(r && r.proxy) : e;
  }
}
const Jg = {},
  Qg = () => Object.create(Jg),
  e0 = (t) => Object.getPrototypeOf(t) === Jg;
function Ay(t, e, n, r = !1) {
  const i = {},
    o = Qg();
  ((t.propsDefaults = Object.create(null)), t0(t, e, i, o));
  for (const s in t.propsOptions[0]) s in i || (i[s] = void 0);
  (n ? (t.props = r ? i : Sg(i)) : t.type.props ? (t.props = i) : (t.props = o),
    (t.attrs = o));
}
function Py(t, e, n, r) {
  const {
      props: i,
      attrs: o,
      vnode: { patchFlag: s },
    } = t,
    a = xt(i),
    [c] = t.propsOptions;
  let u = !1;
  if ((r || s > 0) && !(s & 16)) {
    if (s & 8) {
      const d = t.vnode.dynamicProps;
      for (let f = 0; f < d.length; f++) {
        let p = d[f];
        if (mc(t.emitsOptions, p)) continue;
        const h = e[p];
        if (c)
          if (kt(o, p)) h !== o[p] && ((o[p] = h), (u = !0));
          else {
            const v = ar(p);
            i[v] = Wu(c, a, v, h, t, !1);
          }
        else h !== o[p] && ((o[p] = h), (u = !0));
      }
    }
  } else {
    t0(t, e, i, o) && (u = !0);
    let d;
    for (const f in a)
      (!e || (!kt(e, f) && ((d = Oi(f)) === f || !kt(e, d)))) &&
        (c
          ? n &&
            (n[f] !== void 0 || n[d] !== void 0) &&
            (i[f] = Wu(c, a, f, void 0, t, !0))
          : delete i[f]);
    if (o !== a)
      for (const f in o) (!e || !kt(e, f)) && (delete o[f], (u = !0));
  }
  u && Yr(t.attrs, "set", "");
}
function t0(t, e, n, r) {
  const [i, o] = t.propsOptions;
  let s = !1,
    a;
  if (e)
    for (let c in e) {
      if ($s(c)) continue;
      const u = e[c];
      let d;
      i && kt(i, (d = ar(c)))
        ? !o || !o.includes(d)
          ? (n[d] = u)
          : ((a || (a = {}))[d] = u)
        : mc(t.emitsOptions, c) ||
          ((!(c in r) || u !== r[c]) && ((r[c] = u), (s = !0)));
    }
  if (o) {
    const c = xt(n),
      u = a || Tt;
    for (let d = 0; d < o.length; d++) {
      const f = o[d];
      n[f] = Wu(i, c, f, u[f], t, !kt(u, f));
    }
  }
  return s;
}
function Wu(t, e, n, r, i, o) {
  const s = t[n];
  if (s != null) {
    const a = kt(s, "default");
    if (a && r === void 0) {
      const c = s.default;
      if (s.type !== Function && !s.skipFactory && rt(c)) {
        const { propsDefaults: u } = i;
        if (n in u) r = u[n];
        else {
          const d = Ua(i);
          ((r = u[n] = c.call(null, e)), d());
        }
      } else r = c;
      i.ce && i.ce._setProp(n, r);
    }
    s[0] &&
      (o && !a ? (r = !1) : s[1] && (r === "" || r === Oi(n)) && (r = !0));
  }
  return r;
}
const Ry = new WeakMap();
function n0(t, e, n = !1) {
  const r = n ? Ry : e.propsCache,
    i = r.get(t);
  if (i) return i;
  const o = t.props,
    s = {},
    a = [];
  let c = !1;
  if (!rt(t)) {
    const d = (f) => {
      c = !0;
      const [p, h] = n0(f, e, !0);
      (Qt(s, p), h && a.push(...h));
    };
    (!n && e.mixins.length && e.mixins.forEach(d),
      t.extends && d(t.extends),
      t.mixins && t.mixins.forEach(d));
  }
  if (!o && !c) return (Pt(t) && r.set(t, Wo), Wo);
  if (Ze(o))
    for (let d = 0; d < o.length; d++) {
      const f = ar(o[d]);
      Bf(f) && (s[f] = Tt);
    }
  else if (o)
    for (const d in o) {
      const f = ar(d);
      if (Bf(f)) {
        const p = o[d],
          h = (s[f] = Ze(p) || rt(p) ? { type: p } : Qt({}, p)),
          v = h.type;
        let b = !1,
          g = !0;
        if (Ze(v))
          for (let m = 0; m < v.length; ++m) {
            const _ = v[m],
              y = rt(_) && _.name;
            if (y === "Boolean") {
              b = !0;
              break;
            } else y === "String" && (g = !1);
          }
        else b = rt(v) && v.name === "Boolean";
        ((h[0] = b), (h[1] = g), (b || kt(h, "default")) && a.push(f));
      }
    }
  const u = [s, a];
  return (Pt(t) && r.set(t, u), u);
}
function Bf(t) {
  return t[0] !== "$" && !$s(t);
}
const Fd = (t) => t[0] === "_" || t === "$stable",
  Nd = (t) => (Ze(t) ? t.map(Tr) : [Tr(t)]),
  Ly = (t, e, n) => {
    if (e._n) return e;
    const r = Ye((...i) => Nd(e(...i)), n);
    return ((r._c = !1), r);
  },
  r0 = (t, e, n) => {
    const r = t._ctx;
    for (const i in t) {
      if (Fd(i)) continue;
      const o = t[i];
      if (rt(o)) e[i] = Ly(i, o, r);
      else if (o != null) {
        const s = Nd(o);
        e[i] = () => s;
      }
    }
  },
  i0 = (t, e) => {
    const n = Nd(e);
    t.slots.default = () => n;
  },
  o0 = (t, e, n) => {
    for (const r in e) (n || !Fd(r)) && (t[r] = e[r]);
  },
  Dy = (t, e, n) => {
    const r = (t.slots = Qg());
    if (t.vnode.shapeFlag & 32) {
      const i = e.__;
      i && zu(r, "__", i, !0);
      const o = e._;
      o ? (o0(r, e, n), n && zu(r, "_", o, !0)) : r0(e, r);
    } else e && i0(t, e);
  },
  Iy = (t, e, n) => {
    const { vnode: r, slots: i } = t;
    let o = !0,
      s = Tt;
    if (r.shapeFlag & 32) {
      const a = e._;
      (a
        ? n && a === 1
          ? (o = !1)
          : o0(i, e, n)
        : ((o = !e.$stable), r0(e, i)),
        (s = e));
    } else e && (i0(t, e), (s = { default: 1 }));
    if (o) for (const a in i) !Fd(a) && s[a] == null && delete i[a];
  },
  Mn = Xy;
function Oy(t) {
  return $y(t);
}
function $y(t, e) {
  const n = cc();
  n.__VUE__ = !0;
  const {
      insert: r,
      remove: i,
      patchProp: o,
      createElement: s,
      createText: a,
      createComment: c,
      setText: u,
      setElementText: d,
      parentNode: f,
      nextSibling: p,
      setScopeId: h = Rr,
      insertStaticContent: v,
    } = t,
    b = (
      A,
      j,
      L,
      F = null,
      te = null,
      q = null,
      ye = void 0,
      xe = null,
      Se = !!j.dynamicChildren,
    ) => {
      if (A === j) return;
      (A && !qi(A, j) && ((F = oe(A)), re(A, te, q, !0), (A = null)),
        j.patchFlag === -2 && ((Se = !1), (j.dynamicChildren = null)));
      const { type: Me, ref: ae, shapeFlag: M } = j;
      switch (Me) {
        case gc:
          g(A, j, L, F);
          break;
        case vn:
          m(A, j, L, F);
          break;
        case Ol:
          A == null && _(j, L, F, ye);
          break;
        case We:
          W(A, j, L, F, te, q, ye, xe, Se);
          break;
        default:
          M & 1
            ? C(A, j, L, F, te, q, ye, xe, Se)
            : M & 6
              ? X(A, j, L, F, te, q, ye, xe, Se)
              : (M & 64 || M & 128) &&
                Me.process(A, j, L, F, te, q, ye, xe, Se, Oe);
      }
      ae != null && te
        ? Fs(ae, A && A.ref, q, j || A, !j)
        : ae == null && A && A.ref != null && Fs(A.ref, null, q, A, !0);
    },
    g = (A, j, L, F) => {
      if (A == null) r((j.el = a(j.children)), L, F);
      else {
        const te = (j.el = A.el);
        j.children !== A.children && u(te, j.children);
      }
    },
    m = (A, j, L, F) => {
      A == null ? r((j.el = c(j.children || "")), L, F) : (j.el = A.el);
    },
    _ = (A, j, L, F) => {
      [A.el, A.anchor] = v(A.children, j, L, F, A.el, A.anchor);
    },
    y = ({ el: A, anchor: j }, L, F) => {
      let te;
      for (; A && A !== j; ) ((te = p(A)), r(A, L, F), (A = te));
      r(j, L, F);
    },
    x = ({ el: A, anchor: j }) => {
      let L;
      for (; A && A !== j; ) ((L = p(A)), i(A), (A = L));
      i(j);
    },
    C = (A, j, L, F, te, q, ye, xe, Se) => {
      (j.type === "svg" ? (ye = "svg") : j.type === "math" && (ye = "mathml"),
        A == null ? w(j, L, F, te, q, ye, xe, Se) : k(A, j, te, q, ye, xe, Se));
    },
    w = (A, j, L, F, te, q, ye, xe) => {
      let Se, Me;
      const { props: ae, shapeFlag: M, transition: T, dirs: K } = A;
      if (
        ((Se = A.el = s(A.type, q, ae && ae.is, ae)),
        M & 8
          ? d(Se, A.children)
          : M & 16 && D(A.children, Se, null, F, te, jc(A, q), ye, xe),
        K && Bi(A, null, F, "created"),
        S(Se, A, A.scopeId, ye, F),
        ae)
      ) {
        for (const he in ae)
          he !== "value" && !$s(he) && o(Se, he, null, ae[he], q, F);
        ("value" in ae && o(Se, "value", null, ae.value, q),
          (Me = ae.onVnodeBeforeMount) && Sr(Me, F, A));
      }
      K && Bi(A, null, F, "beforeMount");
      const ue = zy(te, T);
      (ue && T.beforeEnter(Se),
        r(Se, j, L),
        ((Me = ae && ae.onVnodeMounted) || ue || K) &&
          Mn(() => {
            (Me && Sr(Me, F, A),
              ue && T.enter(Se),
              K && Bi(A, null, F, "mounted"));
          }, te));
    },
    S = (A, j, L, F, te) => {
      if ((L && h(A, L), F)) for (let q = 0; q < F.length; q++) h(A, F[q]);
      if (te) {
        let q = te.subTree;
        if (
          j === q ||
          (u0(q.type) && (q.ssContent === j || q.ssFallback === j))
        ) {
          const ye = te.vnode;
          S(A, ye, ye.scopeId, ye.slotScopeIds, te.parent);
        }
      }
    },
    D = (A, j, L, F, te, q, ye, xe, Se = 0) => {
      for (let Me = Se; Me < A.length; Me++) {
        const ae = (A[Me] = xe ? _i(A[Me]) : Tr(A[Me]));
        b(null, ae, j, L, F, te, q, ye, xe);
      }
    },
    k = (A, j, L, F, te, q, ye) => {
      const xe = (j.el = A.el);
      let { patchFlag: Se, dynamicChildren: Me, dirs: ae } = j;
      Se |= A.patchFlag & 16;
      const M = A.props || Tt,
        T = j.props || Tt;
      let K;
      if (
        (L && Ui(L, !1),
        (K = T.onVnodeBeforeUpdate) && Sr(K, L, j, A),
        ae && Bi(j, A, L, "beforeUpdate"),
        L && Ui(L, !0),
        ((M.innerHTML && T.innerHTML == null) ||
          (M.textContent && T.textContent == null)) &&
          d(xe, ""),
        Me
          ? P(A.dynamicChildren, Me, xe, L, F, jc(j, te), q)
          : ye || U(A, j, xe, null, L, F, jc(j, te), q, !1),
        Se > 0)
      ) {
        if (Se & 16) I(xe, M, T, L, te);
        else if (
          (Se & 2 && M.class !== T.class && o(xe, "class", null, T.class, te),
          Se & 4 && o(xe, "style", M.style, T.style, te),
          Se & 8)
        ) {
          const ue = j.dynamicProps;
          for (let he = 0; he < ue.length; he++) {
            const _e = ue[he],
              je = M[_e],
              Ae = T[_e];
            (Ae !== je || _e === "value") && o(xe, _e, je, Ae, te, L);
          }
        }
        Se & 1 && A.children !== j.children && d(xe, j.children);
      } else !ye && Me == null && I(xe, M, T, L, te);
      ((K = T.onVnodeUpdated) || ae) &&
        Mn(() => {
          (K && Sr(K, L, j, A), ae && Bi(j, A, L, "updated"));
        }, F);
    },
    P = (A, j, L, F, te, q, ye) => {
      for (let xe = 0; xe < j.length; xe++) {
        const Se = A[xe],
          Me = j[xe],
          ae =
            Se.el && (Se.type === We || !qi(Se, Me) || Se.shapeFlag & 198)
              ? f(Se.el)
              : L;
        b(Se, Me, ae, null, F, te, q, ye, !0);
      }
    },
    I = (A, j, L, F, te) => {
      if (j !== L) {
        if (j !== Tt)
          for (const q in j) !$s(q) && !(q in L) && o(A, q, j[q], null, te, F);
        for (const q in L) {
          if ($s(q)) continue;
          const ye = L[q],
            xe = j[q];
          ye !== xe && q !== "value" && o(A, q, xe, ye, te, F);
        }
        "value" in L && o(A, "value", j.value, L.value, te);
      }
    },
    W = (A, j, L, F, te, q, ye, xe, Se) => {
      const Me = (j.el = A ? A.el : a("")),
        ae = (j.anchor = A ? A.anchor : a(""));
      let { patchFlag: M, dynamicChildren: T, slotScopeIds: K } = j;
      (K && (xe = xe ? xe.concat(K) : K),
        A == null
          ? (r(Me, L, F),
            r(ae, L, F),
            D(j.children || [], L, ae, te, q, ye, xe, Se))
          : M > 0 && M & 64 && T && A.dynamicChildren
            ? (P(A.dynamicChildren, T, L, te, q, ye, xe),
              (j.key != null || (te && j === te.subTree)) && Vd(A, j, !0))
            : U(A, j, L, ae, te, q, ye, xe, Se));
    },
    X = (A, j, L, F, te, q, ye, xe, Se) => {
      ((j.slotScopeIds = xe),
        A == null
          ? j.shapeFlag & 512
            ? te.ctx.activate(j, L, F, ye, Se)
            : Z(j, L, F, te, q, ye, Se)
          : G(A, j, Se));
    },
    Z = (A, j, L, F, te, q, ye) => {
      const xe = (A.component = e1(A, F, te));
      if ((pc(A) && (xe.ctx.renderer = Oe), t1(xe, !1, ye), xe.asyncDep)) {
        if ((te && te.registerDep(xe, $, ye), !A.el)) {
          const Se = (xe.subTree = O(vn));
          m(null, Se, j, L);
        }
      } else $(xe, A, j, L, te, q, ye);
    },
    G = (A, j, L) => {
      const F = (j.component = A.component);
      if (Wy(A, j, L))
        if (F.asyncDep && !F.asyncResolved) {
          ne(F, j, L);
          return;
        } else ((F.next = j), F.update());
      else ((j.el = A.el), (F.vnode = j));
    },
    $ = (A, j, L, F, te, q, ye) => {
      const xe = () => {
        if (A.isMounted) {
          let { next: M, bu: T, u: K, parent: ue, vnode: he } = A;
          {
            const Y = s0(A);
            if (Y) {
              (M && ((M.el = he.el), ne(A, M, ye)),
                Y.asyncDep.then(() => {
                  A.isUnmounted || xe();
                }));
              return;
            }
          }
          let _e = M,
            je;
          (Ui(A, !1),
            M ? ((M.el = he.el), ne(A, M, ye)) : (M = he),
            T && Ll(T),
            (je = M.props && M.props.onVnodeBeforeUpdate) && Sr(je, ue, M, he),
            Ui(A, !0));
          const Ae = Ff(A),
            de = A.subTree;
          ((A.subTree = Ae),
            b(de, Ae, f(de.el), oe(de), A, te, q),
            (M.el = Ae.el),
            _e === null && Ky(A, Ae.el),
            K && Mn(K, te),
            (je = M.props && M.props.onVnodeUpdated) &&
              Mn(() => Sr(je, ue, M, he), te));
        } else {
          let M;
          const { el: T, props: K } = j,
            { bm: ue, m: he, parent: _e, root: je, type: Ae } = A,
            de = qo(j);
          (Ui(A, !1),
            ue && Ll(ue),
            !de && (M = K && K.onVnodeBeforeMount) && Sr(M, _e, j),
            Ui(A, !0));
          {
            je.ce &&
              je.ce._def.shadowRoot !== !1 &&
              je.ce._injectChildStyle(Ae);
            const Y = (A.subTree = Ff(A));
            (b(null, Y, L, F, A, te, q), (j.el = Y.el));
          }
          if ((he && Mn(he, te), !de && (M = K && K.onVnodeMounted))) {
            const Y = j;
            Mn(() => Sr(M, _e, Y), te);
          }
          ((j.shapeFlag & 256 ||
            (_e && qo(_e.vnode) && _e.vnode.shapeFlag & 256)) &&
            A.a &&
            Mn(A.a, te),
            (A.isMounted = !0),
            (j = L = F = null));
        }
      };
      A.scope.on();
      const Se = (A.effect = new ug(xe));
      A.scope.off();
      const Me = (A.update = Se.run.bind(Se)),
        ae = (A.job = Se.runIfDirty.bind(Se));
      ((ae.i = A),
        (ae.id = A.uid),
        (Se.scheduler = () => $d(ae)),
        Ui(A, !0),
        Me());
    },
    ne = (A, j, L) => {
      j.component = A;
      const F = A.vnode.props;
      ((A.vnode = j),
        (A.next = null),
        Py(A, j.props, F, L),
        Iy(A, j.children, L),
        ri(),
        Tf(A),
        ii());
    },
    U = (A, j, L, F, te, q, ye, xe, Se = !1) => {
      const Me = A && A.children,
        ae = A ? A.shapeFlag : 0,
        M = j.children,
        { patchFlag: T, shapeFlag: K } = j;
      if (T > 0) {
        if (T & 128) {
          J(Me, M, L, F, te, q, ye, xe, Se);
          return;
        } else if (T & 256) {
          ie(Me, M, L, F, te, q, ye, xe, Se);
          return;
        }
      }
      K & 8
        ? (ae & 16 && ce(Me, te, q), M !== Me && d(L, M))
        : ae & 16
          ? K & 16
            ? J(Me, M, L, F, te, q, ye, xe, Se)
            : ce(Me, te, q, !0)
          : (ae & 8 && d(L, ""), K & 16 && D(M, L, F, te, q, ye, xe, Se));
    },
    ie = (A, j, L, F, te, q, ye, xe, Se) => {
      ((A = A || Wo), (j = j || Wo));
      const Me = A.length,
        ae = j.length,
        M = Math.min(Me, ae);
      let T;
      for (T = 0; T < M; T++) {
        const K = (j[T] = Se ? _i(j[T]) : Tr(j[T]));
        b(A[T], K, L, null, te, q, ye, xe, Se);
      }
      Me > ae ? ce(A, te, q, !0, !1, M) : D(j, L, F, te, q, ye, xe, Se, M);
    },
    J = (A, j, L, F, te, q, ye, xe, Se) => {
      let Me = 0;
      const ae = j.length;
      let M = A.length - 1,
        T = ae - 1;
      for (; Me <= M && Me <= T; ) {
        const K = A[Me],
          ue = (j[Me] = Se ? _i(j[Me]) : Tr(j[Me]));
        if (qi(K, ue)) b(K, ue, L, null, te, q, ye, xe, Se);
        else break;
        Me++;
      }
      for (; Me <= M && Me <= T; ) {
        const K = A[M],
          ue = (j[T] = Se ? _i(j[T]) : Tr(j[T]));
        if (qi(K, ue)) b(K, ue, L, null, te, q, ye, xe, Se);
        else break;
        (M--, T--);
      }
      if (Me > M) {
        if (Me <= T) {
          const K = T + 1,
            ue = K < ae ? j[K].el : F;
          for (; Me <= T; )
            (b(
              null,
              (j[Me] = Se ? _i(j[Me]) : Tr(j[Me])),
              L,
              ue,
              te,
              q,
              ye,
              xe,
              Se,
            ),
              Me++);
        }
      } else if (Me > T) for (; Me <= M; ) (re(A[Me], te, q, !0), Me++);
      else {
        const K = Me,
          ue = Me,
          he = new Map();
        for (Me = ue; Me <= T; Me++) {
          const Re = (j[Me] = Se ? _i(j[Me]) : Tr(j[Me]));
          Re.key != null && he.set(Re.key, Me);
        }
        let _e,
          je = 0;
        const Ae = T - ue + 1;
        let de = !1,
          Y = 0;
        const Te = new Array(Ae);
        for (Me = 0; Me < Ae; Me++) Te[Me] = 0;
        for (Me = K; Me <= M; Me++) {
          const Re = A[Me];
          if (je >= Ae) {
            re(Re, te, q, !0);
            continue;
          }
          let $e;
          if (Re.key != null) $e = he.get(Re.key);
          else
            for (_e = ue; _e <= T; _e++)
              if (Te[_e - ue] === 0 && qi(Re, j[_e])) {
                $e = _e;
                break;
              }
          $e === void 0
            ? re(Re, te, q, !0)
            : ((Te[$e - ue] = Me + 1),
              $e >= Y ? (Y = $e) : (de = !0),
              b(Re, j[$e], L, null, te, q, ye, xe, Se),
              je++);
        }
        const Fe = de ? By(Te) : Wo;
        for (_e = Fe.length - 1, Me = Ae - 1; Me >= 0; Me--) {
          const Re = ue + Me,
            $e = j[Re],
            Qe = Re + 1 < ae ? j[Re + 1].el : F;
          Te[Me] === 0
            ? b(null, $e, L, Qe, te, q, ye, xe, Se)
            : de && (_e < 0 || Me !== Fe[_e] ? V($e, L, Qe, 2) : _e--);
        }
      }
    },
    V = (A, j, L, F, te = null) => {
      const {
        el: q,
        type: ye,
        transition: xe,
        children: Se,
        shapeFlag: Me,
      } = A;
      if (Me & 6) {
        V(A.component.subTree, j, L, F);
        return;
      }
      if (Me & 128) {
        A.suspense.move(j, L, F);
        return;
      }
      if (Me & 64) {
        ye.move(A, j, L, Oe);
        return;
      }
      if (ye === We) {
        r(q, j, L);
        for (let M = 0; M < Se.length; M++) V(Se[M], j, L, F);
        r(A.anchor, j, L);
        return;
      }
      if (ye === Ol) {
        y(A, j, L);
        return;
      }
      if (F !== 2 && Me & 1 && xe)
        if (F === 0) (xe.beforeEnter(q), r(q, j, L), Mn(() => xe.enter(q), te));
        else {
          const { leave: M, delayLeave: T, afterLeave: K } = xe,
            ue = () => {
              A.ctx.isUnmounted ? i(q) : r(q, j, L);
            },
            he = () => {
              M(q, () => {
                (ue(), K && K());
              });
            };
          T ? T(q, ue, he) : he();
        }
      else r(q, j, L);
    },
    re = (A, j, L, F = !1, te = !1) => {
      const {
        type: q,
        props: ye,
        ref: xe,
        children: Se,
        dynamicChildren: Me,
        shapeFlag: ae,
        patchFlag: M,
        dirs: T,
        cacheIndex: K,
      } = A;
      if (
        (M === -2 && (te = !1),
        xe != null && (ri(), Fs(xe, null, L, A, !0), ii()),
        K != null && (j.renderCache[K] = void 0),
        ae & 256)
      ) {
        j.ctx.deactivate(A);
        return;
      }
      const ue = ae & 1 && T,
        he = !qo(A);
      let _e;
      if ((he && (_e = ye && ye.onVnodeBeforeUnmount) && Sr(_e, j, A), ae & 6))
        be(A.component, L, F);
      else {
        if (ae & 128) {
          A.suspense.unmount(L, F);
          return;
        }
        (ue && Bi(A, null, j, "beforeUnmount"),
          ae & 64
            ? A.type.remove(A, j, L, Oe, F)
            : Me && !Me.hasOnce && (q !== We || (M > 0 && M & 64))
              ? ce(Me, j, L, !1, !0)
              : ((q === We && M & 384) || (!te && ae & 16)) && ce(Se, j, L),
          F && Ee(A));
      }
      ((he && (_e = ye && ye.onVnodeUnmounted)) || ue) &&
        Mn(() => {
          (_e && Sr(_e, j, A), ue && Bi(A, null, j, "unmounted"));
        }, L);
    },
    Ee = (A) => {
      const { type: j, el: L, anchor: F, transition: te } = A;
      if (j === We) {
        Pe(L, F);
        return;
      }
      if (j === Ol) {
        x(A);
        return;
      }
      const q = () => {
        (i(L), te && !te.persisted && te.afterLeave && te.afterLeave());
      };
      if (A.shapeFlag & 1 && te && !te.persisted) {
        const { leave: ye, delayLeave: xe } = te,
          Se = () => ye(L, q);
        xe ? xe(A.el, q, Se) : Se();
      } else q();
    },
    Pe = (A, j) => {
      let L;
      for (; A !== j; ) ((L = p(A)), i(A), (A = L));
      i(j);
    },
    be = (A, j, L) => {
      const {
        bum: F,
        scope: te,
        job: q,
        subTree: ye,
        um: xe,
        m: Se,
        a: Me,
        parent: ae,
        slots: { __: M },
      } = A;
      (Uf(Se),
        Uf(Me),
        F && Ll(F),
        ae &&
          Ze(M) &&
          M.forEach((T) => {
            ae.renderCache[T] = void 0;
          }),
        te.stop(),
        q && ((q.flags |= 8), re(ye, A, j, L)),
        xe && Mn(xe, j),
        Mn(() => {
          A.isUnmounted = !0;
        }, j),
        j &&
          j.pendingBranch &&
          !j.isUnmounted &&
          A.asyncDep &&
          !A.asyncResolved &&
          A.suspenseId === j.pendingId &&
          (j.deps--, j.deps === 0 && j.resolve()));
    },
    ce = (A, j, L, F = !1, te = !1, q = 0) => {
      for (let ye = q; ye < A.length; ye++) re(A[ye], j, L, F, te);
    },
    oe = (A) => {
      if (A.shapeFlag & 6) return oe(A.component.subTree);
      if (A.shapeFlag & 128) return A.suspense.next();
      const j = p(A.anchor || A.el),
        L = j && j[Lg];
      return L ? p(L) : j;
    };
  let me = !1;
  const ge = (A, j, L) => {
      (A == null
        ? j._vnode && re(j._vnode, null, null, !0)
        : b(j._vnode || null, A, j, null, null, null, L),
        (j._vnode = A),
        me || ((me = !0), Tf(), Ag(), (me = !1)));
    },
    Oe = {
      p: b,
      um: re,
      m: V,
      r: Ee,
      mt: Z,
      mc: D,
      pc: U,
      pbc: P,
      n: oe,
      o: t,
    };
  return { render: ge, hydrate: void 0, createApp: Ty(ge) };
}
function jc({ type: t, props: e }, n) {
  return (n === "svg" && t === "foreignObject") ||
    (n === "mathml" &&
      t === "annotation-xml" &&
      e &&
      e.encoding &&
      e.encoding.includes("html"))
    ? void 0
    : n;
}
function Ui({ effect: t, job: e }, n) {
  n ? ((t.flags |= 32), (e.flags |= 4)) : ((t.flags &= -33), (e.flags &= -5));
}
function zy(t, e) {
  return (!t || (t && !t.pendingBranch)) && e && !e.persisted;
}
function Vd(t, e, n = !1) {
  const r = t.children,
    i = e.children;
  if (Ze(r) && Ze(i))
    for (let o = 0; o < r.length; o++) {
      const s = r[o];
      let a = i[o];
      (a.shapeFlag & 1 &&
        !a.dynamicChildren &&
        ((a.patchFlag <= 0 || a.patchFlag === 32) &&
          ((a = i[o] = _i(i[o])), (a.el = s.el)),
        !n && a.patchFlag !== -2 && Vd(s, a)),
        a.type === gc && (a.el = s.el),
        a.type === vn && !a.el && (a.el = s.el));
    }
}
function By(t) {
  const e = t.slice(),
    n = [0];
  let r, i, o, s, a;
  const c = t.length;
  for (r = 0; r < c; r++) {
    const u = t[r];
    if (u !== 0) {
      if (((i = n[n.length - 1]), t[i] < u)) {
        ((e[r] = i), n.push(r));
        continue;
      }
      for (o = 0, s = n.length - 1; o < s; )
        ((a = (o + s) >> 1), t[n[a]] < u ? (o = a + 1) : (s = a));
      u < t[n[o]] && (o > 0 && (e[r] = n[o - 1]), (n[o] = r));
    }
  }
  for (o = n.length, s = n[o - 1]; o-- > 0; ) ((n[o] = s), (s = e[s]));
  return n;
}
function s0(t) {
  const e = t.subTree.component;
  if (e) return e.asyncDep && !e.asyncResolved ? e : s0(e);
}
function Uf(t) {
  if (t) for (let e = 0; e < t.length; e++) t[e].flags |= 8;
}
const Uy = Symbol.for("v-scx"),
  Fy = () => sr(Uy);
function Ft(t, e, n) {
  return a0(t, e, n);
}
function a0(t, e, n = Tt) {
  const { immediate: r, deep: i, flush: o, once: s } = n,
    a = Qt({}, n),
    c = (e && r) || (!e && o !== "post");
  let u;
  if (ra) {
    if (o === "sync") {
      const h = Fy();
      u = h.__watcherHandles || (h.__watcherHandles = []);
    } else if (!c) {
      const h = () => {};
      return ((h.stop = Rr), (h.resume = Rr), (h.pause = Rr), h);
    }
  }
  const d = cn;
  a.call = (h, v, b) => _r(h, d, v, b);
  let f = !1;
  (o === "post"
    ? (a.scheduler = (h) => {
        Mn(h, d && d.suspense);
      })
    : o !== "sync" &&
      ((f = !0),
      (a.scheduler = (h, v) => {
        v ? h() : $d(h);
      })),
    (a.augmentJob = (h) => {
      (e && (h.flags |= 4),
        f && ((h.flags |= 2), d && ((h.id = d.uid), (h.i = d))));
    }));
  const p = ny(t, e, a);
  return (ra && (u ? u.push(p) : c && p()), p);
}
function Ny(t, e, n) {
  const r = this.proxy,
    i = Nt(t) ? (t.includes(".") ? l0(r, t) : () => r[t]) : t.bind(r, r);
  let o;
  rt(e) ? (o = e) : ((o = e.handler), (n = e));
  const s = Ua(this),
    a = a0(i, o.bind(r), n);
  return (s(), a);
}
function l0(t, e) {
  const n = e.split(".");
  return () => {
    let r = t;
    for (let i = 0; i < n.length && r; i++) r = r[n[i]];
    return r;
  };
}
const Vy = (t, e) =>
  e === "modelValue" || e === "model-value"
    ? t.modelModifiers
    : t[`${e}Modifiers`] || t[`${ar(e)}Modifiers`] || t[`${Oi(e)}Modifiers`];
function Hy(t, e, ...n) {
  if (t.isUnmounted) return;
  const r = t.vnode.props || Tt;
  let i = n;
  const o = e.startsWith("update:"),
    s = o && Vy(r, e.slice(7));
  s &&
    (s.trim && (i = n.map((d) => (Nt(d) ? d.trim() : d))),
    s.number && (i = n.map(sg)));
  let a,
    c = r[(a = Rl(e))] || r[(a = Rl(ar(e)))];
  (!c && o && (c = r[(a = Rl(Oi(e)))]), c && _r(c, t, 6, i));
  const u = r[a + "Once"];
  if (u) {
    if (!t.emitted) t.emitted = {};
    else if (t.emitted[a]) return;
    ((t.emitted[a] = !0), _r(u, t, 6, i));
  }
}
function c0(t, e, n = !1) {
  const r = e.emitsCache,
    i = r.get(t);
  if (i !== void 0) return i;
  const o = t.emits;
  let s = {},
    a = !1;
  if (!rt(t)) {
    const c = (u) => {
      const d = c0(u, e, !0);
      d && ((a = !0), Qt(s, d));
    };
    (!n && e.mixins.length && e.mixins.forEach(c),
      t.extends && c(t.extends),
      t.mixins && t.mixins.forEach(c));
  }
  return !o && !a
    ? (Pt(t) && r.set(t, null), null)
    : (Ze(o) ? o.forEach((c) => (s[c] = null)) : Qt(s, o),
      Pt(t) && r.set(t, s),
      s);
}
function mc(t, e) {
  return !t || !oc(e)
    ? !1
    : ((e = e.slice(2).replace(/Once$/, "")),
      kt(t, e[0].toLowerCase() + e.slice(1)) || kt(t, Oi(e)) || kt(t, e));
}
function Ff(t) {
  const {
      type: e,
      vnode: n,
      proxy: r,
      withProxy: i,
      propsOptions: [o],
      slots: s,
      attrs: a,
      emit: c,
      render: u,
      renderCache: d,
      props: f,
      data: p,
      setupState: h,
      ctx: v,
      inheritAttrs: b,
    } = t,
    g = jl(t);
  let m, _;
  try {
    if (n.shapeFlag & 4) {
      const x = i || r,
        C = x;
      ((m = Tr(u.call(C, x, d, f, h, p, v))), (_ = a));
    } else {
      const x = e;
      ((m = Tr(
        x.length > 1 ? x(f, { attrs: a, slots: s, emit: c }) : x(f, null),
      )),
        (_ = e.props ? a : jy(a)));
    }
  } catch (x) {
    ((Vs.length = 0), fc(x, t, 1), (m = O(vn)));
  }
  let y = m;
  if (_ && b !== !1) {
    const x = Object.keys(_),
      { shapeFlag: C } = y;
    x.length &&
      C & 7 &&
      (o && x.some(Cd) && (_ = Gy(_, o)), (y = Di(y, _, !1, !0)));
  }
  return (
    n.dirs &&
      ((y = Di(y, null, !1, !0)),
      (y.dirs = y.dirs ? y.dirs.concat(n.dirs) : n.dirs)),
    n.transition && lo(y, n.transition),
    (m = y),
    jl(g),
    m
  );
}
const jy = (t) => {
    let e;
    for (const n in t)
      (n === "class" || n === "style" || oc(n)) && ((e || (e = {}))[n] = t[n]);
    return e;
  },
  Gy = (t, e) => {
    const n = {};
    for (const r in t) (!Cd(r) || !(r.slice(9) in e)) && (n[r] = t[r]);
    return n;
  };
function Wy(t, e, n) {
  const { props: r, children: i, component: o } = t,
    { props: s, children: a, patchFlag: c } = e,
    u = o.emitsOptions;
  if (e.dirs || e.transition) return !0;
  if (n && c >= 0) {
    if (c & 1024) return !0;
    if (c & 16) return r ? Nf(r, s, u) : !!s;
    if (c & 8) {
      const d = e.dynamicProps;
      for (let f = 0; f < d.length; f++) {
        const p = d[f];
        if (s[p] !== r[p] && !mc(u, p)) return !0;
      }
    }
  } else
    return (i || a) && (!a || !a.$stable)
      ? !0
      : r === s
        ? !1
        : r
          ? s
            ? Nf(r, s, u)
            : !0
          : !!s;
  return !1;
}
function Nf(t, e, n) {
  const r = Object.keys(e);
  if (r.length !== Object.keys(t).length) return !0;
  for (let i = 0; i < r.length; i++) {
    const o = r[i];
    if (e[o] !== t[o] && !mc(n, o)) return !0;
  }
  return !1;
}
function Ky({ vnode: t, parent: e }, n) {
  for (; e; ) {
    const r = e.subTree;
    if ((r.suspense && r.suspense.activeBranch === t && (r.el = t.el), r === t))
      (((t = e.vnode).el = n), (e = e.parent));
    else break;
  }
}
const u0 = (t) => t.__isSuspense;
function Xy(t, e) {
  e && e.pendingBranch
    ? Ze(t)
      ? e.effects.push(...t)
      : e.effects.push(t)
    : oy(t);
}
const We = Symbol.for("v-fgt"),
  gc = Symbol.for("v-txt"),
  vn = Symbol.for("v-cmt"),
  Ol = Symbol.for("v-stc"),
  Vs = [];
let Gn = null;
function E(t = !1) {
  Vs.push((Gn = t ? null : []));
}
function Yy() {
  (Vs.pop(), (Gn = Vs[Vs.length - 1] || null));
}
let ea = 1;
function Vf(t, e = !1) {
  ((ea += t), t < 0 && Gn && e && (Gn.hasOnce = !0));
}
function d0(t) {
  return (
    (t.dynamicChildren = ea > 0 ? Gn || Wo : null),
    Yy(),
    ea > 0 && Gn && Gn.push(t),
    t
  );
}
function R(t, e, n, r, i, o) {
  return d0(l(t, e, n, r, i, o, !0));
}
function Be(t, e, n, r, i) {
  return d0(O(t, e, n, r, i, !0));
}
function ta(t) {
  return t ? t.__v_isVNode === !0 : !1;
}
function qi(t, e) {
  return t.type === e.type && t.key === e.key;
}
const f0 = ({ key: t }) => t ?? null,
  $l = ({ ref: t, ref_key: e, ref_for: n }) => (
    typeof t == "number" && (t = "" + t),
    t != null
      ? Nt(t) || bn(t) || rt(t)
        ? { i: rn, r: t, k: e, f: !!n }
        : t
      : null
  );
function l(
  t,
  e = null,
  n = null,
  r = 0,
  i = null,
  o = t === We ? 0 : 1,
  s = !1,
  a = !1,
) {
  const c = {
    __v_isVNode: !0,
    __v_skip: !0,
    type: t,
    props: e,
    key: e && f0(e),
    ref: e && $l(e),
    scopeId: Rg,
    slotScopeIds: null,
    children: n,
    component: null,
    suspense: null,
    ssContent: null,
    ssFallback: null,
    dirs: null,
    transition: null,
    el: null,
    anchor: null,
    target: null,
    targetStart: null,
    targetAnchor: null,
    staticCount: 0,
    shapeFlag: o,
    patchFlag: r,
    dynamicProps: i,
    dynamicChildren: null,
    appContext: null,
    ctx: rn,
  };
  return (
    a
      ? (Hd(c, n), o & 128 && t.normalize(c))
      : n && (c.shapeFlag |= Nt(n) ? 8 : 16),
    ea > 0 &&
      !s &&
      Gn &&
      (c.patchFlag > 0 || o & 6) &&
      c.patchFlag !== 32 &&
      Gn.push(c),
    c
  );
}
const O = qy;
function qy(t, e = null, n = null, r = 0, i = null, o = !1) {
  if (((!t || t === Kg) && (t = vn), ta(t))) {
    const a = Di(t, e, !0);
    return (
      n && Hd(a, n),
      ea > 0 &&
        !o &&
        Gn &&
        (a.shapeFlag & 6 ? (Gn[Gn.indexOf(t)] = a) : Gn.push(a)),
      (a.patchFlag = -2),
      a
    );
  }
  if ((s1(t) && (t = t.__vccOpts), e)) {
    e = Zy(e);
    let { class: a, style: c } = e;
    (a && !Nt(a) && (e.class = Ie(a)),
      Pt(c) && (Od(c) && !Ze(c) && (c = Qt({}, c)), (e.style = ir(c))));
  }
  const s = Nt(t) ? 1 : u0(t) ? 128 : Dg(t) ? 64 : Pt(t) ? 4 : rt(t) ? 2 : 0;
  return l(t, e, n, r, i, s, o, !0);
}
function Zy(t) {
  return t ? (Od(t) || e0(t) ? Qt({}, t) : t) : null;
}
function Di(t, e, n = !1, r = !1) {
  const { props: i, ref: o, patchFlag: s, children: a, transition: c } = t,
    u = e ? Q(i || {}, e) : i,
    d = {
      __v_isVNode: !0,
      __v_skip: !0,
      type: t.type,
      props: u,
      key: u && f0(u),
      ref:
        e && e.ref
          ? n && o
            ? Ze(o)
              ? o.concat($l(e))
              : [o, $l(e)]
            : $l(e)
          : o,
      scopeId: t.scopeId,
      slotScopeIds: t.slotScopeIds,
      children: a,
      target: t.target,
      targetStart: t.targetStart,
      targetAnchor: t.targetAnchor,
      staticCount: t.staticCount,
      shapeFlag: t.shapeFlag,
      patchFlag: e && t.type !== We ? (s === -1 ? 16 : s | 16) : s,
      dynamicProps: t.dynamicProps,
      dynamicChildren: t.dynamicChildren,
      appContext: t.appContext,
      dirs: t.dirs,
      transition: c,
      component: t.component,
      suspense: t.suspense,
      ssContent: t.ssContent && Di(t.ssContent),
      ssFallback: t.ssFallback && Di(t.ssFallback),
      el: t.el,
      anchor: t.anchor,
      ctx: t.ctx,
      ce: t.ce,
    };
  return (c && r && lo(d, c.clone(d)), d);
}
function Ke(t = " ", e = 0) {
  return O(gc, null, t, e);
}
function Jo(t, e) {
  const n = O(Ol, null, t);
  return ((n.staticCount = e), n);
}
function le(t = "", e = !1) {
  return e ? (E(), Be(vn, null, t)) : O(vn, null, t);
}
function Tr(t) {
  return t == null || typeof t == "boolean"
    ? O(vn)
    : Ze(t)
      ? O(We, null, t.slice())
      : ta(t)
        ? _i(t)
        : O(gc, null, String(t));
}
function _i(t) {
  return (t.el === null && t.patchFlag !== -1) || t.memo ? t : Di(t);
}
function Hd(t, e) {
  let n = 0;
  const { shapeFlag: r } = t;
  if (e == null) e = null;
  else if (Ze(e)) n = 16;
  else if (typeof e == "object")
    if (r & 65) {
      const i = e.default;
      i && (i._c && (i._d = !1), Hd(t, i()), i._c && (i._d = !0));
      return;
    } else {
      n = 32;
      const i = e._;
      !i && !e0(e)
        ? (e._ctx = rn)
        : i === 3 &&
          rn &&
          (rn.slots._ === 1 ? (e._ = 1) : ((e._ = 2), (t.patchFlag |= 1024)));
    }
  else
    rt(e)
      ? ((e = { default: e, _ctx: rn }), (n = 32))
      : ((e = String(e)), r & 64 ? ((n = 16), (e = [Ke(e)])) : (n = 8));
  ((t.children = e), (t.shapeFlag |= n));
}
function Q(...t) {
  const e = {};
  for (let n = 0; n < t.length; n++) {
    const r = t[n];
    for (const i in r)
      if (i === "class")
        e.class !== r.class && (e.class = Ie([e.class, r.class]));
      else if (i === "style") e.style = ir([e.style, r.style]);
      else if (oc(i)) {
        const o = e[i],
          s = r[i];
        s &&
          o !== s &&
          !(Ze(o) && o.includes(s)) &&
          (e[i] = o ? [].concat(o, s) : s);
      } else i !== "" && (e[i] = r[i]);
  }
  return e;
}
function Sr(t, e, n, r = null) {
  _r(t, e, 7, [n, r]);
}
const Jy = Zg();
let Qy = 0;
function e1(t, e, n) {
  const r = t.type,
    i = (e ? e.appContext : t.appContext) || Jy,
    o = {
      uid: Qy++,
      vnode: t,
      type: r,
      parent: e,
      appContext: i,
      root: null,
      next: null,
      subTree: null,
      effect: null,
      update: null,
      job: null,
      scope: new Ab(!0),
      render: null,
      proxy: null,
      exposed: null,
      exposeProxy: null,
      withProxy: null,
      provides: e ? e.provides : Object.create(i.provides),
      ids: e ? e.ids : ["", 0, 0],
      accessCache: null,
      renderCache: [],
      components: null,
      directives: null,
      propsOptions: n0(r, i),
      emitsOptions: c0(r, i),
      emit: null,
      emitted: null,
      propsDefaults: Tt,
      inheritAttrs: r.inheritAttrs,
      ctx: Tt,
      data: Tt,
      props: Tt,
      attrs: Tt,
      slots: Tt,
      refs: Tt,
      setupState: Tt,
      setupContext: null,
      suspense: n,
      suspenseId: n ? n.pendingId : 0,
      asyncDep: null,
      asyncResolved: !1,
      isMounted: !1,
      isUnmounted: !1,
      isDeactivated: !1,
      bc: null,
      c: null,
      bm: null,
      m: null,
      bu: null,
      u: null,
      um: null,
      bum: null,
      da: null,
      a: null,
      rtg: null,
      rtc: null,
      ec: null,
      sp: null,
    };
  return (
    (o.ctx = { _: o }),
    (o.root = e ? e.root : o),
    (o.emit = Hy.bind(null, o)),
    t.ce && t.ce(o),
    o
  );
}
let cn = null;
const na = () => cn || rn;
let Wl, Ku;
{
  const t = cc(),
    e = (n, r) => {
      let i;
      return (
        (i = t[n]) || (i = t[n] = []),
        i.push(r),
        (o) => {
          i.length > 1 ? i.forEach((s) => s(o)) : i[0](o);
        }
      );
    };
  ((Wl = e("__VUE_INSTANCE_SETTERS__", (n) => (cn = n))),
    (Ku = e("__VUE_SSR_SETTERS__", (n) => (ra = n))));
}
const Ua = (t) => {
    const e = cn;
    return (
      Wl(t),
      t.scope.on(),
      () => {
        (t.scope.off(), Wl(e));
      }
    );
  },
  Hf = () => {
    (cn && cn.scope.off(), Wl(null));
  };
function p0(t) {
  return t.vnode.shapeFlag & 4;
}
let ra = !1;
function t1(t, e = !1, n = !1) {
  e && Ku(e);
  const { props: r, children: i } = t.vnode,
    o = p0(t);
  (Ay(t, r, o, e), Dy(t, i, n || e));
  const s = o ? n1(t, e) : void 0;
  return (e && Ku(!1), s);
}
function n1(t, e) {
  const n = t.type;
  ((t.accessCache = Object.create(null)), (t.proxy = new Proxy(t.ctx, _y)));
  const { setup: r } = n;
  if (r) {
    ri();
    const i = (t.setupContext = r.length > 1 ? i1(t) : null),
      o = Ua(t),
      s = Ba(r, t, 0, [t.props, i]),
      a = rg(s);
    if ((ii(), o(), (a || t.sp) && !qo(t) && Hg(t), a)) {
      if ((s.then(Hf, Hf), e))
        return s
          .then((c) => {
            jf(t, c);
          })
          .catch((c) => {
            fc(c, t, 0);
          });
      t.asyncDep = s;
    } else jf(t, s);
  } else h0(t);
}
function jf(t, e, n) {
  (rt(e)
    ? t.type.__ssrInlineRender
      ? (t.ssrRender = e)
      : (t.render = e)
    : Pt(e) && (t.setupState = Mg(e)),
    h0(t));
}
function h0(t, e, n) {
  const r = t.type;
  t.render || (t.render = r.render || Rr);
  {
    const i = Ua(t);
    ri();
    try {
      wy(t);
    } finally {
      (ii(), i());
    }
  }
}
const r1 = {
  get(t, e) {
    return (gn(t, "get", ""), t[e]);
  },
};
function i1(t) {
  const e = (n) => {
    t.exposed = n || {};
  };
  return {
    attrs: new Proxy(t.attrs, r1),
    slots: t.slots,
    emit: t.emit,
    expose: e,
  };
}
function vc(t) {
  return t.exposed
    ? t.exposeProxy ||
        (t.exposeProxy = new Proxy(Mg(Yb(t.exposed)), {
          get(e, n) {
            if (n in e) return e[n];
            if (n in Ns) return Ns[n](t);
          },
          has(e, n) {
            return n in e || n in Ns;
          },
        }))
    : t.proxy;
}
function o1(t, e = !0) {
  return rt(t) ? t.displayName || t.name : t.name || (e && t.__name);
}
function s1(t) {
  return rt(t) && "__vccOpts" in t;
}
const Xe = (t, e) => ey(t, e, ra);
function jd(t, e, n) {
  const r = arguments.length;
  return r === 2
    ? Pt(e) && !Ze(e)
      ? ta(e)
        ? O(t, null, [e])
        : O(t, e)
      : O(t, null, e)
    : (r > 3
        ? (n = Array.prototype.slice.call(arguments, 2))
        : r === 3 && ta(n) && (n = [n]),
      O(t, e, n));
}
const a1 = "3.5.17";
/**
 * @vue/runtime-dom v3.5.17
 * (c) 2018-present Yuxi (Evan) You and Vue contributors
 * @license MIT
 **/ let Xu;
const Gf = typeof window < "u" && window.trustedTypes;
if (Gf)
  try {
    Xu = Gf.createPolicy("vue", { createHTML: (t) => t });
  } catch {}
const m0 = Xu ? (t) => Xu.createHTML(t) : (t) => t,
  l1 = "http://www.w3.org/2000/svg",
  c1 = "http://www.w3.org/1998/Math/MathML",
  Wr = typeof document < "u" ? document : null,
  Wf = Wr && Wr.createElement("template"),
  u1 = {
    insert: (t, e, n) => {
      e.insertBefore(t, n || null);
    },
    remove: (t) => {
      const e = t.parentNode;
      e && e.removeChild(t);
    },
    createElement: (t, e, n, r) => {
      const i =
        e === "svg"
          ? Wr.createElementNS(l1, t)
          : e === "mathml"
            ? Wr.createElementNS(c1, t)
            : n
              ? Wr.createElement(t, { is: n })
              : Wr.createElement(t);
      return (
        t === "select" &&
          r &&
          r.multiple != null &&
          i.setAttribute("multiple", r.multiple),
        i
      );
    },
    createText: (t) => Wr.createTextNode(t),
    createComment: (t) => Wr.createComment(t),
    setText: (t, e) => {
      t.nodeValue = e;
    },
    setElementText: (t, e) => {
      t.textContent = e;
    },
    parentNode: (t) => t.parentNode,
    nextSibling: (t) => t.nextSibling,
    querySelector: (t) => Wr.querySelector(t),
    setScopeId(t, e) {
      t.setAttribute(e, "");
    },
    insertStaticContent(t, e, n, r, i, o) {
      const s = n ? n.previousSibling : e.lastChild;
      if (i && (i === o || i.nextSibling))
        for (
          ;
          e.insertBefore(i.cloneNode(!0), n),
            !(i === o || !(i = i.nextSibling));

        );
      else {
        Wf.innerHTML = m0(
          r === "svg"
            ? `<svg>${t}</svg>`
            : r === "mathml"
              ? `<math>${t}</math>`
              : t,
        );
        const a = Wf.content;
        if (r === "svg" || r === "mathml") {
          const c = a.firstChild;
          for (; c.firstChild; ) a.appendChild(c.firstChild);
          a.removeChild(c);
        }
        e.insertBefore(a, n);
      }
      return [
        s ? s.nextSibling : e.firstChild,
        n ? n.previousSibling : e.lastChild,
      ];
    },
  },
  di = "transition",
  gs = "animation",
  rs = Symbol("_vtc"),
  g0 = {
    name: String,
    type: String,
    css: { type: Boolean, default: !0 },
    duration: [String, Number, Object],
    enterFromClass: String,
    enterActiveClass: String,
    enterToClass: String,
    appearFromClass: String,
    appearActiveClass: String,
    appearToClass: String,
    leaveFromClass: String,
    leaveActiveClass: String,
    leaveToClass: String,
  },
  v0 = Qt({}, Bg, g0),
  d1 = (t) => ((t.displayName = "Transition"), (t.props = v0), t),
  Fa = d1((t, { slots: e }) => jd(ly, b0(t), e)),
  Fi = (t, e = []) => {
    Ze(t) ? t.forEach((n) => n(...e)) : t && t(...e);
  },
  Kf = (t) => (t ? (Ze(t) ? t.some((e) => e.length > 1) : t.length > 1) : !1);
function b0(t) {
  const e = {};
  for (const W in t) W in g0 || (e[W] = t[W]);
  if (t.css === !1) return e;
  const {
      name: n = "v",
      type: r,
      duration: i,
      enterFromClass: o = `${n}-enter-from`,
      enterActiveClass: s = `${n}-enter-active`,
      enterToClass: a = `${n}-enter-to`,
      appearFromClass: c = o,
      appearActiveClass: u = s,
      appearToClass: d = a,
      leaveFromClass: f = `${n}-leave-from`,
      leaveActiveClass: p = `${n}-leave-active`,
      leaveToClass: h = `${n}-leave-to`,
    } = t,
    v = f1(i),
    b = v && v[0],
    g = v && v[1],
    {
      onBeforeEnter: m,
      onEnter: _,
      onEnterCancelled: y,
      onLeave: x,
      onLeaveCancelled: C,
      onBeforeAppear: w = m,
      onAppear: S = _,
      onAppearCancelled: D = y,
    } = e,
    k = (W, X, Z, G) => {
      ((W._enterCancelled = G), vi(W, X ? d : a), vi(W, X ? u : s), Z && Z());
    },
    P = (W, X) => {
      ((W._isLeaving = !1), vi(W, f), vi(W, h), vi(W, p), X && X());
    },
    I = (W) => (X, Z) => {
      const G = W ? S : _,
        $ = () => k(X, W, Z);
      (Fi(G, [X, $]),
        Xf(() => {
          (vi(X, W ? c : o), Mr(X, W ? d : a), Kf(G) || Yf(X, r, b, $));
        }));
    };
  return Qt(e, {
    onBeforeEnter(W) {
      (Fi(m, [W]), Mr(W, o), Mr(W, s));
    },
    onBeforeAppear(W) {
      (Fi(w, [W]), Mr(W, c), Mr(W, u));
    },
    onEnter: I(!1),
    onAppear: I(!0),
    onLeave(W, X) {
      W._isLeaving = !0;
      const Z = () => P(W, X);
      (Mr(W, f),
        W._enterCancelled ? (Mr(W, p), Yu()) : (Yu(), Mr(W, p)),
        Xf(() => {
          W._isLeaving && (vi(W, f), Mr(W, h), Kf(x) || Yf(W, r, g, Z));
        }),
        Fi(x, [W, Z]));
    },
    onEnterCancelled(W) {
      (k(W, !1, void 0, !0), Fi(y, [W]));
    },
    onAppearCancelled(W) {
      (k(W, !0, void 0, !0), Fi(D, [W]));
    },
    onLeaveCancelled(W) {
      (P(W), Fi(C, [W]));
    },
  });
}
function f1(t) {
  if (t == null) return null;
  if (Pt(t)) return [Gc(t.enter), Gc(t.leave)];
  {
    const e = Gc(t);
    return [e, e];
  }
}
function Gc(t) {
  return yb(t);
}
function Mr(t, e) {
  (e.split(/\s+/).forEach((n) => n && t.classList.add(n)),
    (t[rs] || (t[rs] = new Set())).add(e));
}
function vi(t, e) {
  e.split(/\s+/).forEach((r) => r && t.classList.remove(r));
  const n = t[rs];
  n && (n.delete(e), n.size || (t[rs] = void 0));
}
function Xf(t) {
  requestAnimationFrame(() => {
    requestAnimationFrame(t);
  });
}
let p1 = 0;
function Yf(t, e, n, r) {
  const i = (t._endId = ++p1),
    o = () => {
      i === t._endId && r();
    };
  if (n != null) return setTimeout(o, n);
  const { type: s, timeout: a, propCount: c } = y0(t, e);
  if (!s) return r();
  const u = s + "end";
  let d = 0;
  const f = () => {
      (t.removeEventListener(u, p), o());
    },
    p = (h) => {
      h.target === t && ++d >= c && f();
    };
  (setTimeout(() => {
    d < c && f();
  }, a + 1),
    t.addEventListener(u, p));
}
function y0(t, e) {
  const n = window.getComputedStyle(t),
    r = (v) => (n[v] || "").split(", "),
    i = r(`${di}Delay`),
    o = r(`${di}Duration`),
    s = qf(i, o),
    a = r(`${gs}Delay`),
    c = r(`${gs}Duration`),
    u = qf(a, c);
  let d = null,
    f = 0,
    p = 0;
  e === di
    ? s > 0 && ((d = di), (f = s), (p = o.length))
    : e === gs
      ? u > 0 && ((d = gs), (f = u), (p = c.length))
      : ((f = Math.max(s, u)),
        (d = f > 0 ? (s > u ? di : gs) : null),
        (p = d ? (d === di ? o.length : c.length) : 0));
  const h =
    d === di && /\b(transform|all)(,|$)/.test(r(`${di}Property`).toString());
  return { type: d, timeout: f, propCount: p, hasTransform: h };
}
function qf(t, e) {
  for (; t.length < e.length; ) t = t.concat(t);
  return Math.max(...e.map((n, r) => Zf(n) + Zf(t[r])));
}
function Zf(t) {
  return t === "auto" ? 0 : Number(t.slice(0, -1).replace(",", ".")) * 1e3;
}
function Yu() {
  return document.body.offsetHeight;
}
function h1(t, e, n) {
  const r = t[rs];
  (r && (e = (e ? [e, ...r] : [...r]).join(" ")),
    e == null
      ? t.removeAttribute("class")
      : n
        ? t.setAttribute("class", e)
        : (t.className = e));
}
const Kl = Symbol("_vod"),
  x0 = Symbol("_vsh"),
  qu = {
    beforeMount(t, { value: e }, { transition: n }) {
      ((t[Kl] = t.style.display === "none" ? "" : t.style.display),
        n && e ? n.beforeEnter(t) : vs(t, e));
    },
    mounted(t, { value: e }, { transition: n }) {
      n && e && n.enter(t);
    },
    updated(t, { value: e, oldValue: n }, { transition: r }) {
      !e != !n &&
        (r
          ? e
            ? (r.beforeEnter(t), vs(t, !0), r.enter(t))
            : r.leave(t, () => {
                vs(t, !1);
              })
          : vs(t, e));
    },
    beforeUnmount(t, { value: e }) {
      vs(t, e);
    },
  };
function vs(t, e) {
  ((t.style.display = e ? t[Kl] : "none"), (t[x0] = !e));
}
const m1 = Symbol(""),
  g1 = /(^|;)\s*display\s*:/;
function v1(t, e, n) {
  const r = t.style,
    i = Nt(n);
  let o = !1;
  if (n && !i) {
    if (e)
      if (Nt(e))
        for (const s of e.split(";")) {
          const a = s.slice(0, s.indexOf(":")).trim();
          n[a] == null && zl(r, a, "");
        }
      else for (const s in e) n[s] == null && zl(r, s, "");
    for (const s in n) (s === "display" && (o = !0), zl(r, s, n[s]));
  } else if (i) {
    if (e !== n) {
      const s = r[m1];
      (s && (n += ";" + s), (r.cssText = n), (o = g1.test(n)));
    }
  } else e && t.removeAttribute("style");
  Kl in t && ((t[Kl] = o ? r.display : ""), t[x0] && (r.display = "none"));
}
const Jf = /\s*!important$/;
function zl(t, e, n) {
  if (Ze(n)) n.forEach((r) => zl(t, e, r));
  else if ((n == null && (n = ""), e.startsWith("--"))) t.setProperty(e, n);
  else {
    const r = b1(t, e);
    Jf.test(n)
      ? t.setProperty(Oi(r), n.replace(Jf, ""), "important")
      : (t[r] = n);
  }
}
const Qf = ["Webkit", "Moz", "ms"],
  Wc = {};
function b1(t, e) {
  const n = Wc[e];
  if (n) return n;
  let r = ar(e);
  if (r !== "filter" && r in t) return (Wc[e] = r);
  r = lc(r);
  for (let i = 0; i < Qf.length; i++) {
    const o = Qf[i] + r;
    if (o in t) return (Wc[e] = o);
  }
  return e;
}
const ep = "http://www.w3.org/1999/xlink";
function tp(t, e, n, r, i, o = Mb(e)) {
  r && e.startsWith("xlink:")
    ? n == null
      ? t.removeAttributeNS(ep, e.slice(6, e.length))
      : t.setAttributeNS(ep, e, n)
    : n == null || (o && !ag(n))
      ? t.removeAttribute(e)
      : t.setAttribute(e, o ? "" : xr(n) ? String(n) : n);
}
function np(t, e, n, r, i) {
  if (e === "innerHTML" || e === "textContent") {
    n != null && (t[e] = e === "innerHTML" ? m0(n) : n);
    return;
  }
  const o = t.tagName;
  if (e === "value" && o !== "PROGRESS" && !o.includes("-")) {
    const a = o === "OPTION" ? t.getAttribute("value") || "" : t.value,
      c = n == null ? (t.type === "checkbox" ? "on" : "") : String(n);
    ((a !== c || !("_value" in t)) && (t.value = c),
      n == null && t.removeAttribute(e),
      (t._value = n));
    return;
  }
  let s = !1;
  if (n === "" || n == null) {
    const a = typeof t[e];
    a === "boolean"
      ? (n = ag(n))
      : n == null && a === "string"
        ? ((n = ""), (s = !0))
        : a === "number" && ((n = 0), (s = !0));
  }
  try {
    t[e] = n;
  } catch {}
  s && t.removeAttribute(i || e);
}
function _0(t, e, n, r) {
  t.addEventListener(e, n, r);
}
function y1(t, e, n, r) {
  t.removeEventListener(e, n, r);
}
const rp = Symbol("_vei");
function x1(t, e, n, r, i = null) {
  const o = t[rp] || (t[rp] = {}),
    s = o[e];
  if (r && s) s.value = r;
  else {
    const [a, c] = _1(e);
    if (r) {
      const u = (o[e] = S1(r, i));
      _0(t, a, u, c);
    } else s && (y1(t, a, s, c), (o[e] = void 0));
  }
}
const ip = /(?:Once|Passive|Capture)$/;
function _1(t) {
  let e;
  if (ip.test(t)) {
    e = {};
    let r;
    for (; (r = t.match(ip)); )
      ((t = t.slice(0, t.length - r[0].length)), (e[r[0].toLowerCase()] = !0));
  }
  return [t[2] === ":" ? t.slice(3) : Oi(t.slice(2)), e];
}
let Kc = 0;
const w1 = Promise.resolve(),
  k1 = () => Kc || (w1.then(() => (Kc = 0)), (Kc = Date.now()));
function S1(t, e) {
  const n = (r) => {
    if (!r._vts) r._vts = Date.now();
    else if (r._vts <= n.attached) return;
    _r(C1(r, n.value), e, 5, [r]);
  };
  return ((n.value = t), (n.attached = k1()), n);
}
function C1(t, e) {
  if (Ze(e)) {
    const n = t.stopImmediatePropagation;
    return (
      (t.stopImmediatePropagation = () => {
        (n.call(t), (t._stopped = !0));
      }),
      e.map((r) => (i) => !i._stopped && r && r(i))
    );
  } else return e;
}
const op = (t) =>
    t.charCodeAt(0) === 111 &&
    t.charCodeAt(1) === 110 &&
    t.charCodeAt(2) > 96 &&
    t.charCodeAt(2) < 123,
  M1 = (t, e, n, r, i, o) => {
    const s = i === "svg";
    e === "class"
      ? h1(t, r, s)
      : e === "style"
        ? v1(t, n, r)
        : oc(e)
          ? Cd(e) || x1(t, e, n, r, o)
          : (
                e[0] === "."
                  ? ((e = e.slice(1)), !0)
                  : e[0] === "^"
                    ? ((e = e.slice(1)), !1)
                    : E1(t, e, r, s)
              )
            ? (np(t, e, r),
              !t.tagName.includes("-") &&
                (e === "value" || e === "checked" || e === "selected") &&
                tp(t, e, r, s, o, e !== "value"))
            : t._isVueCE && (/[A-Z]/.test(e) || !Nt(r))
              ? np(t, ar(e), r, o, e)
              : (e === "true-value"
                  ? (t._trueValue = r)
                  : e === "false-value" && (t._falseValue = r),
                tp(t, e, r, s));
  };
function E1(t, e, n, r) {
  if (r)
    return !!(
      e === "innerHTML" ||
      e === "textContent" ||
      (e in t && op(e) && rt(n))
    );
  if (
    e === "spellcheck" ||
    e === "draggable" ||
    e === "translate" ||
    e === "autocorrect" ||
    e === "form" ||
    (e === "list" && t.tagName === "INPUT") ||
    (e === "type" && t.tagName === "TEXTAREA")
  )
    return !1;
  if (e === "width" || e === "height") {
    const i = t.tagName;
    if (i === "IMG" || i === "VIDEO" || i === "CANVAS" || i === "SOURCE")
      return !1;
  }
  return op(e) && Nt(n) ? !1 : e in t;
}
const w0 = new WeakMap(),
  k0 = new WeakMap(),
  Xl = Symbol("_moveCb"),
  sp = Symbol("_enterCb"),
  T1 = (t) => (delete t.props.mode, t),
  A1 = T1({
    name: "TransitionGroup",
    props: Qt({}, v0, { tag: String, moveClass: String }),
    setup(t, { slots: e }) {
      const n = na(),
        r = zg();
      let i, o;
      return (
        Gg(() => {
          if (!i.length) return;
          const s = t.moveClass || `${t.name || "v"}-move`;
          if (!I1(i[0].el, n.vnode.el, s)) {
            i = [];
            return;
          }
          (i.forEach(R1), i.forEach(L1));
          const a = i.filter(D1);
          (Yu(),
            a.forEach((c) => {
              const u = c.el,
                d = u.style;
              (Mr(u, s),
                (d.transform = d.webkitTransform = d.transitionDuration = ""));
              const f = (u[Xl] = (p) => {
                (p && p.target !== u) ||
                  ((!p || /transform$/.test(p.propertyName)) &&
                    (u.removeEventListener("transitionend", f),
                    (u[Xl] = null),
                    vi(u, s)));
              });
              u.addEventListener("transitionend", f);
            }),
            (i = []));
        }),
        () => {
          const s = xt(t),
            a = b0(s);
          let c = s.tag || We;
          if (((i = []), o))
            for (let u = 0; u < o.length; u++) {
              const d = o[u];
              d.el &&
                d.el instanceof Element &&
                (i.push(d),
                lo(d, Qs(d, a, r, n)),
                w0.set(d, d.el.getBoundingClientRect()));
            }
          o = e.default ? zd(e.default()) : [];
          for (let u = 0; u < o.length; u++) {
            const d = o[u];
            d.key != null && lo(d, Qs(d, a, r, n));
          }
          return O(c, null, o);
        }
      );
    },
  }),
  P1 = A1;
function R1(t) {
  const e = t.el;
  (e[Xl] && e[Xl](), e[sp] && e[sp]());
}
function L1(t) {
  k0.set(t, t.el.getBoundingClientRect());
}
function D1(t) {
  const e = w0.get(t),
    n = k0.get(t),
    r = e.left - n.left,
    i = e.top - n.top;
  if (r || i) {
    const o = t.el.style;
    return (
      (o.transform = o.webkitTransform = `translate(${r}px,${i}px)`),
      (o.transitionDuration = "0s"),
      t
    );
  }
}
function I1(t, e, n) {
  const r = t.cloneNode(),
    i = t[rs];
  (i &&
    i.forEach((a) => {
      a.split(/\s+/).forEach((c) => c && r.classList.remove(c));
    }),
    n.split(/\s+/).forEach((a) => a && r.classList.add(a)),
    (r.style.display = "none"));
  const o = e.nodeType === 1 ? e : e.parentNode;
  o.appendChild(r);
  const { hasTransform: s } = y0(r);
  return (o.removeChild(r), s);
}
const ap = (t) => {
    const e = t.props["onUpdate:modelValue"] || !1;
    return Ze(e) ? (n) => Ll(e, n) : e;
  },
  Xc = Symbol("_assign"),
  ei = {
    deep: !0,
    created(t, { value: e, modifiers: { number: n } }, r) {
      const i = sc(e);
      (_0(t, "change", () => {
        const o = Array.prototype.filter
          .call(t.options, (s) => s.selected)
          .map((s) => (n ? sg(Yl(s)) : Yl(s)));
        (t[Xc](t.multiple ? (i ? new Set(o) : o) : o[0]),
          (t._assigning = !0),
          ao(() => {
            t._assigning = !1;
          }));
      }),
        (t[Xc] = ap(r)));
    },
    mounted(t, { value: e }) {
      lp(t, e);
    },
    beforeUpdate(t, e, n) {
      t[Xc] = ap(n);
    },
    updated(t, { value: e }) {
      t._assigning || lp(t, e);
    },
  };
function lp(t, e) {
  const n = t.multiple,
    r = Ze(e);
  if (!(n && !r && !sc(e))) {
    for (let i = 0, o = t.options.length; i < o; i++) {
      const s = t.options[i],
        a = Yl(s);
      if (n)
        if (r) {
          const c = typeof a;
          c === "string" || c === "number"
            ? (s.selected = e.some((u) => String(u) === String(a)))
            : (s.selected = Tb(e, a) > -1);
        } else s.selected = e.has(a);
      else if (uc(Yl(s), e)) {
        t.selectedIndex !== i && (t.selectedIndex = i);
        return;
      }
    }
    !n && t.selectedIndex !== -1 && (t.selectedIndex = -1);
  }
}
function Yl(t) {
  return "_value" in t ? t._value : t.value;
}
const O1 = ["ctrl", "shift", "alt", "meta"],
  $1 = {
    stop: (t) => t.stopPropagation(),
    prevent: (t) => t.preventDefault(),
    self: (t) => t.target !== t.currentTarget,
    ctrl: (t) => !t.ctrlKey,
    shift: (t) => !t.shiftKey,
    alt: (t) => !t.altKey,
    meta: (t) => !t.metaKey,
    left: (t) => "button" in t && t.button !== 0,
    middle: (t) => "button" in t && t.button !== 1,
    right: (t) => "button" in t && t.button !== 2,
    exact: (t, e) => O1.some((n) => t[`${n}Key`] && !e.includes(n)),
  },
  oi = (t, e) => {
    const n = t._withMods || (t._withMods = {}),
      r = e.join(".");
    return (
      n[r] ||
      (n[r] = (i, ...o) => {
        for (let s = 0; s < e.length; s++) {
          const a = $1[e[s]];
          if (a && a(i, e)) return;
        }
        return t(i, ...o);
      })
    );
  },
  z1 = {
    esc: "escape",
    space: " ",
    up: "arrow-up",
    left: "arrow-left",
    right: "arrow-right",
    down: "arrow-down",
    delete: "backspace",
  },
  zt = (t, e) => {
    const n = t._withKeys || (t._withKeys = {}),
      r = e.join(".");
    return (
      n[r] ||
      (n[r] = (i) => {
        if (!("key" in i)) return;
        const o = Oi(i.key);
        if (e.some((s) => s === o || z1[s] === o)) return t(i);
      })
    );
  },
  B1 = Qt({ patchProp: M1 }, u1);
let cp;
function U1() {
  return cp || (cp = Oy(B1));
}
const F1 = (...t) => {
  const e = U1().createApp(...t),
    { mount: n } = e;
  return (
    (e.mount = (r) => {
      const i = V1(r);
      if (!i) return;
      const o = e._component;
      (!rt(o) && !o.render && !o.template && (o.template = i.innerHTML),
        i.nodeType === 1 && (i.textContent = ""));
      const s = n(i, !1, N1(i));
      return (
        i instanceof Element &&
          (i.removeAttribute("v-cloak"), i.setAttribute("data-v-app", "")),
        s
      );
    }),
    e
  );
};
function N1(t) {
  if (t instanceof SVGElement) return "svg";
  if (typeof MathMLElement == "function" && t instanceof MathMLElement)
    return "mathml";
}
function V1(t) {
  return Nt(t) ? document.querySelector(t) : t;
}
const H1 = "/images/log.webp",
  Gd = "/images/steve.png";
/*!
 * vue-router v4.5.1
 * (c) 2025 Eduardo San Martin Morote
 * @license MIT
 */ const Fo = typeof document < "u";
function S0(t) {
  return (
    typeof t == "object" ||
    "displayName" in t ||
    "props" in t ||
    "__vccOpts" in t
  );
}
function j1(t) {
  return (
    t.__esModule ||
    t[Symbol.toStringTag] === "Module" ||
    (t.default && S0(t.default))
  );
}
const wt = Object.assign;
function Yc(t, e) {
  const n = {};
  for (const r in e) {
    const i = e[r];
    n[r] = wr(i) ? i.map(t) : t(i);
  }
  return n;
}
const Hs = () => {},
  wr = Array.isArray,
  C0 = /#/g,
  G1 = /&/g,
  W1 = /\//g,
  K1 = /=/g,
  X1 = /\?/g,
  M0 = /\+/g,
  Y1 = /%5B/g,
  q1 = /%5D/g,
  E0 = /%5E/g,
  Z1 = /%60/g,
  T0 = /%7B/g,
  J1 = /%7C/g,
  A0 = /%7D/g,
  Q1 = /%20/g;
function Wd(t) {
  return encodeURI("" + t)
    .replace(J1, "|")
    .replace(Y1, "[")
    .replace(q1, "]");
}
function ex(t) {
  return Wd(t).replace(T0, "{").replace(A0, "}").replace(E0, "^");
}
function Zu(t) {
  return Wd(t)
    .replace(M0, "%2B")
    .replace(Q1, "+")
    .replace(C0, "%23")
    .replace(G1, "%26")
    .replace(Z1, "`")
    .replace(T0, "{")
    .replace(A0, "}")
    .replace(E0, "^");
}
function tx(t) {
  return Zu(t).replace(K1, "%3D");
}
function nx(t) {
  return Wd(t).replace(C0, "%23").replace(X1, "%3F");
}
function rx(t) {
  return t == null ? "" : nx(t).replace(W1, "%2F");
}
function ia(t) {
  try {
    return decodeURIComponent("" + t);
  } catch {}
  return "" + t;
}
const ix = /\/$/,
  ox = (t) => t.replace(ix, "");
function qc(t, e, n = "/") {
  let r,
    i = {},
    o = "",
    s = "";
  const a = e.indexOf("#");
  let c = e.indexOf("?");
  return (
    a < c && a >= 0 && (c = -1),
    c > -1 &&
      ((r = e.slice(0, c)),
      (o = e.slice(c + 1, a > -1 ? a : e.length)),
      (i = t(o))),
    a > -1 && ((r = r || e.slice(0, a)), (s = e.slice(a, e.length))),
    (r = cx(r ?? e, n)),
    { fullPath: r + (o && "?") + o + s, path: r, query: i, hash: ia(s) }
  );
}
function sx(t, e) {
  const n = e.query ? t(e.query) : "";
  return e.path + (n && "?") + n + (e.hash || "");
}
function up(t, e) {
  return !e || !t.toLowerCase().startsWith(e.toLowerCase())
    ? t
    : t.slice(e.length) || "/";
}
function ax(t, e, n) {
  const r = e.matched.length - 1,
    i = n.matched.length - 1;
  return (
    r > -1 &&
    r === i &&
    is(e.matched[r], n.matched[i]) &&
    P0(e.params, n.params) &&
    t(e.query) === t(n.query) &&
    e.hash === n.hash
  );
}
function is(t, e) {
  return (t.aliasOf || t) === (e.aliasOf || e);
}
function P0(t, e) {
  if (Object.keys(t).length !== Object.keys(e).length) return !1;
  for (const n in t) if (!lx(t[n], e[n])) return !1;
  return !0;
}
function lx(t, e) {
  return wr(t) ? dp(t, e) : wr(e) ? dp(e, t) : t === e;
}
function dp(t, e) {
  return wr(e)
    ? t.length === e.length && t.every((n, r) => n === e[r])
    : t.length === 1 && t[0] === e;
}
function cx(t, e) {
  if (t.startsWith("/")) return t;
  if (!t) return e;
  const n = e.split("/"),
    r = t.split("/"),
    i = r[r.length - 1];
  (i === ".." || i === ".") && r.push("");
  let o = n.length - 1,
    s,
    a;
  for (s = 0; s < r.length; s++)
    if (((a = r[s]), a !== "."))
      if (a === "..") o > 1 && o--;
      else break;
  return n.slice(0, o).join("/") + "/" + r.slice(s).join("/");
}
const fi = {
  path: "/",
  name: void 0,
  params: {},
  query: {},
  hash: "",
  fullPath: "/",
  matched: [],
  meta: {},
  redirectedFrom: void 0,
};
var oa;
(function (t) {
  ((t.pop = "pop"), (t.push = "push"));
})(oa || (oa = {}));
var js;
(function (t) {
  ((t.back = "back"), (t.forward = "forward"), (t.unknown = ""));
})(js || (js = {}));
function ux(t) {
  if (!t)
    if (Fo) {
      const e = document.querySelector("base");
      ((t = (e && e.getAttribute("href")) || "/"),
        (t = t.replace(/^\w+:\/\/[^\/]+/, "")));
    } else t = "/";
  return (t[0] !== "/" && t[0] !== "#" && (t = "/" + t), ox(t));
}
const dx = /^[^#]+#/;
function fx(t, e) {
  return t.replace(dx, "#") + e;
}
function px(t, e) {
  const n = document.documentElement.getBoundingClientRect(),
    r = t.getBoundingClientRect();
  return {
    behavior: e.behavior,
    left: r.left - n.left - (e.left || 0),
    top: r.top - n.top - (e.top || 0),
  };
}
const bc = () => ({ left: window.scrollX, top: window.scrollY });
function hx(t) {
  let e;
  if ("el" in t) {
    const n = t.el,
      r = typeof n == "string" && n.startsWith("#"),
      i =
        typeof n == "string"
          ? r
            ? document.getElementById(n.slice(1))
            : document.querySelector(n)
          : n;
    if (!i) return;
    e = px(i, t);
  } else e = t;
  "scrollBehavior" in document.documentElement.style
    ? window.scrollTo(e)
    : window.scrollTo(
        e.left != null ? e.left : window.scrollX,
        e.top != null ? e.top : window.scrollY,
      );
}
function fp(t, e) {
  return (history.state ? history.state.position - e : -1) + t;
}
const Ju = new Map();
function mx(t, e) {
  Ju.set(t, e);
}
function gx(t) {
  const e = Ju.get(t);
  return (Ju.delete(t), e);
}
let vx = () => location.protocol + "//" + location.host;
function R0(t, e) {
  const { pathname: n, search: r, hash: i } = e,
    o = t.indexOf("#");
  if (o > -1) {
    let a = i.includes(t.slice(o)) ? t.slice(o).length : 1,
      c = i.slice(a);
    return (c[0] !== "/" && (c = "/" + c), up(c, ""));
  }
  return up(n, t) + r + i;
}
function bx(t, e, n, r) {
  let i = [],
    o = [],
    s = null;
  const a = ({ state: p }) => {
    const h = R0(t, location),
      v = n.value,
      b = e.value;
    let g = 0;
    if (p) {
      if (((n.value = h), (e.value = p), s && s === v)) {
        s = null;
        return;
      }
      g = b ? p.position - b.position : 0;
    } else r(h);
    i.forEach((m) => {
      m(n.value, v, {
        delta: g,
        type: oa.pop,
        direction: g ? (g > 0 ? js.forward : js.back) : js.unknown,
      });
    });
  };
  function c() {
    s = n.value;
  }
  function u(p) {
    i.push(p);
    const h = () => {
      const v = i.indexOf(p);
      v > -1 && i.splice(v, 1);
    };
    return (o.push(h), h);
  }
  function d() {
    const { history: p } = window;
    p.state && p.replaceState(wt({}, p.state, { scroll: bc() }), "");
  }
  function f() {
    for (const p of o) p();
    ((o = []),
      window.removeEventListener("popstate", a),
      window.removeEventListener("beforeunload", d));
  }
  return (
    window.addEventListener("popstate", a),
    window.addEventListener("beforeunload", d, { passive: !0 }),
    { pauseListeners: c, listen: u, destroy: f }
  );
}
function pp(t, e, n, r = !1, i = !1) {
  return {
    back: t,
    current: e,
    forward: n,
    replaced: r,
    position: window.history.length,
    scroll: i ? bc() : null,
  };
}
function yx(t) {
  const { history: e, location: n } = window,
    r = { value: R0(t, n) },
    i = { value: e.state };
  i.value ||
    o(
      r.value,
      {
        back: null,
        current: r.value,
        forward: null,
        position: e.length - 1,
        replaced: !0,
        scroll: null,
      },
      !0,
    );
  function o(c, u, d) {
    const f = t.indexOf("#"),
      p =
        f > -1
          ? (n.host && document.querySelector("base") ? t : t.slice(f)) + c
          : vx() + t + c;
    try {
      (e[d ? "replaceState" : "pushState"](u, "", p), (i.value = u));
    } catch (h) {
      (console.error(h), n[d ? "replace" : "assign"](p));
    }
  }
  function s(c, u) {
    const d = wt({}, e.state, pp(i.value.back, c, i.value.forward, !0), u, {
      position: i.value.position,
    });
    (o(c, d, !0), (r.value = c));
  }
  function a(c, u) {
    const d = wt({}, i.value, e.state, { forward: c, scroll: bc() });
    o(d.current, d, !0);
    const f = wt({}, pp(r.value, c, null), { position: d.position + 1 }, u);
    (o(c, f, !1), (r.value = c));
  }
  return { location: r, state: i, push: a, replace: s };
}
function xx(t) {
  t = ux(t);
  const e = yx(t),
    n = bx(t, e.state, e.location, e.replace);
  function r(o, s = !0) {
    (s || n.pauseListeners(), history.go(o));
  }
  const i = wt(
    { location: "", base: t, go: r, createHref: fx.bind(null, t) },
    e,
    n,
  );
  return (
    Object.defineProperty(i, "location", {
      enumerable: !0,
      get: () => e.location.value,
    }),
    Object.defineProperty(i, "state", {
      enumerable: !0,
      get: () => e.state.value,
    }),
    i
  );
}
function _x(t) {
  return typeof t == "string" || (t && typeof t == "object");
}
function L0(t) {
  return typeof t == "string" || typeof t == "symbol";
}
const D0 = Symbol("");
var hp;
(function (t) {
  ((t[(t.aborted = 4)] = "aborted"),
    (t[(t.cancelled = 8)] = "cancelled"),
    (t[(t.duplicated = 16)] = "duplicated"));
})(hp || (hp = {}));
function os(t, e) {
  return wt(new Error(), { type: t, [D0]: !0 }, e);
}
function zr(t, e) {
  return t instanceof Error && D0 in t && (e == null || !!(t.type & e));
}
const mp = "[^/]+?",
  wx = { sensitive: !1, strict: !1, start: !0, end: !0 },
  kx = /[.+*?^${}()[\]/\\]/g;
function Sx(t, e) {
  const n = wt({}, wx, e),
    r = [];
  let i = n.start ? "^" : "";
  const o = [];
  for (const u of t) {
    const d = u.length ? [] : [90];
    n.strict && !u.length && (i += "/");
    for (let f = 0; f < u.length; f++) {
      const p = u[f];
      let h = 40 + (n.sensitive ? 0.25 : 0);
      if (p.type === 0)
        (f || (i += "/"), (i += p.value.replace(kx, "\\$&")), (h += 40));
      else if (p.type === 1) {
        const { value: v, repeatable: b, optional: g, regexp: m } = p;
        o.push({ name: v, repeatable: b, optional: g });
        const _ = m || mp;
        if (_ !== mp) {
          h += 10;
          try {
            new RegExp(`(${_})`);
          } catch (x) {
            throw new Error(
              `Invalid custom RegExp for param "${v}" (${_}): ` + x.message,
            );
          }
        }
        let y = b ? `((?:${_})(?:/(?:${_}))*)` : `(${_})`;
        (f || (y = g && u.length < 2 ? `(?:/${y})` : "/" + y),
          g && (y += "?"),
          (i += y),
          (h += 20),
          g && (h += -8),
          b && (h += -20),
          _ === ".*" && (h += -50));
      }
      d.push(h);
    }
    r.push(d);
  }
  if (n.strict && n.end) {
    const u = r.length - 1;
    r[u][r[u].length - 1] += 0.7000000000000001;
  }
  (n.strict || (i += "/?"),
    n.end ? (i += "$") : n.strict && !i.endsWith("/") && (i += "(?:/|$)"));
  const s = new RegExp(i, n.sensitive ? "" : "i");
  function a(u) {
    const d = u.match(s),
      f = {};
    if (!d) return null;
    for (let p = 1; p < d.length; p++) {
      const h = d[p] || "",
        v = o[p - 1];
      f[v.name] = h && v.repeatable ? h.split("/") : h;
    }
    return f;
  }
  function c(u) {
    let d = "",
      f = !1;
    for (const p of t) {
      ((!f || !d.endsWith("/")) && (d += "/"), (f = !1));
      for (const h of p)
        if (h.type === 0) d += h.value;
        else if (h.type === 1) {
          const { value: v, repeatable: b, optional: g } = h,
            m = v in u ? u[v] : "";
          if (wr(m) && !b)
            throw new Error(
              `Provided param "${v}" is an array but it is not repeatable (* or + modifiers)`,
            );
          const _ = wr(m) ? m.join("/") : m;
          if (!_)
            if (g)
              p.length < 2 &&
                (d.endsWith("/") ? (d = d.slice(0, -1)) : (f = !0));
            else throw new Error(`Missing required param "${v}"`);
          d += _;
        }
    }
    return d || "/";
  }
  return { re: s, score: r, keys: o, parse: a, stringify: c };
}
function Cx(t, e) {
  let n = 0;
  for (; n < t.length && n < e.length; ) {
    const r = e[n] - t[n];
    if (r) return r;
    n++;
  }
  return t.length < e.length
    ? t.length === 1 && t[0] === 80
      ? -1
      : 1
    : t.length > e.length
      ? e.length === 1 && e[0] === 80
        ? 1
        : -1
      : 0;
}
function I0(t, e) {
  let n = 0;
  const r = t.score,
    i = e.score;
  for (; n < r.length && n < i.length; ) {
    const o = Cx(r[n], i[n]);
    if (o) return o;
    n++;
  }
  if (Math.abs(i.length - r.length) === 1) {
    if (gp(r)) return 1;
    if (gp(i)) return -1;
  }
  return i.length - r.length;
}
function gp(t) {
  const e = t[t.length - 1];
  return t.length > 0 && e[e.length - 1] < 0;
}
const Mx = { type: 0, value: "" },
  Ex = /[a-zA-Z0-9_]/;
function Tx(t) {
  if (!t) return [[]];
  if (t === "/") return [[Mx]];
  if (!t.startsWith("/")) throw new Error(`Invalid path "${t}"`);
  function e(h) {
    throw new Error(`ERR (${n})/"${u}": ${h}`);
  }
  let n = 0,
    r = n;
  const i = [];
  let o;
  function s() {
    (o && i.push(o), (o = []));
  }
  let a = 0,
    c,
    u = "",
    d = "";
  function f() {
    u &&
      (n === 0
        ? o.push({ type: 0, value: u })
        : n === 1 || n === 2 || n === 3
          ? (o.length > 1 &&
              (c === "*" || c === "+") &&
              e(
                `A repeatable param (${u}) must be alone in its segment. eg: '/:ids+.`,
              ),
            o.push({
              type: 1,
              value: u,
              regexp: d,
              repeatable: c === "*" || c === "+",
              optional: c === "*" || c === "?",
            }))
          : e("Invalid state to consume buffer"),
      (u = ""));
  }
  function p() {
    u += c;
  }
  for (; a < t.length; ) {
    if (((c = t[a++]), c === "\\" && n !== 2)) {
      ((r = n), (n = 4));
      continue;
    }
    switch (n) {
      case 0:
        c === "/" ? (u && f(), s()) : c === ":" ? (f(), (n = 1)) : p();
        break;
      case 4:
        (p(), (n = r));
        break;
      case 1:
        c === "("
          ? (n = 2)
          : Ex.test(c)
            ? p()
            : (f(), (n = 0), c !== "*" && c !== "?" && c !== "+" && a--);
        break;
      case 2:
        c === ")"
          ? d[d.length - 1] == "\\"
            ? (d = d.slice(0, -1) + c)
            : (n = 3)
          : (d += c);
        break;
      case 3:
        (f(), (n = 0), c !== "*" && c !== "?" && c !== "+" && a--, (d = ""));
        break;
      default:
        e("Unknown state");
        break;
    }
  }
  return (
    n === 2 && e(`Unfinished custom RegExp for param "${u}"`),
    f(),
    s(),
    i
  );
}
function Ax(t, e, n) {
  const r = Sx(Tx(t.path), n),
    i = wt(r, { record: t, parent: e, children: [], alias: [] });
  return (e && !i.record.aliasOf == !e.record.aliasOf && e.children.push(i), i);
}
function Px(t, e) {
  const n = [],
    r = new Map();
  e = xp({ strict: !1, end: !0, sensitive: !1 }, e);
  function i(f) {
    return r.get(f);
  }
  function o(f, p, h) {
    const v = !h,
      b = bp(f);
    b.aliasOf = h && h.record;
    const g = xp(e, f),
      m = [b];
    if ("alias" in f) {
      const x = typeof f.alias == "string" ? [f.alias] : f.alias;
      for (const C of x)
        m.push(
          bp(
            wt({}, b, {
              components: h ? h.record.components : b.components,
              path: C,
              aliasOf: h ? h.record : b,
            }),
          ),
        );
    }
    let _, y;
    for (const x of m) {
      const { path: C } = x;
      if (p && C[0] !== "/") {
        const w = p.record.path,
          S = w[w.length - 1] === "/" ? "" : "/";
        x.path = p.record.path + (C && S + C);
      }
      if (
        ((_ = Ax(x, p, g)),
        h
          ? h.alias.push(_)
          : ((y = y || _),
            y !== _ && y.alias.push(_),
            v && f.name && !yp(_) && s(f.name)),
        O0(_) && c(_),
        b.children)
      ) {
        const w = b.children;
        for (let S = 0; S < w.length; S++) o(w[S], _, h && h.children[S]);
      }
      h = h || _;
    }
    return y
      ? () => {
          s(y);
        }
      : Hs;
  }
  function s(f) {
    if (L0(f)) {
      const p = r.get(f);
      p &&
        (r.delete(f),
        n.splice(n.indexOf(p), 1),
        p.children.forEach(s),
        p.alias.forEach(s));
    } else {
      const p = n.indexOf(f);
      p > -1 &&
        (n.splice(p, 1),
        f.record.name && r.delete(f.record.name),
        f.children.forEach(s),
        f.alias.forEach(s));
    }
  }
  function a() {
    return n;
  }
  function c(f) {
    const p = Dx(f, n);
    (n.splice(p, 0, f), f.record.name && !yp(f) && r.set(f.record.name, f));
  }
  function u(f, p) {
    let h,
      v = {},
      b,
      g;
    if ("name" in f && f.name) {
      if (((h = r.get(f.name)), !h)) throw os(1, { location: f });
      ((g = h.record.name),
        (v = wt(
          vp(
            p.params,
            h.keys
              .filter((y) => !y.optional)
              .concat(h.parent ? h.parent.keys.filter((y) => y.optional) : [])
              .map((y) => y.name),
          ),
          f.params &&
            vp(
              f.params,
              h.keys.map((y) => y.name),
            ),
        )),
        (b = h.stringify(v)));
    } else if (f.path != null)
      ((b = f.path),
        (h = n.find((y) => y.re.test(b))),
        h && ((v = h.parse(b)), (g = h.record.name)));
    else {
      if (((h = p.name ? r.get(p.name) : n.find((y) => y.re.test(p.path))), !h))
        throw os(1, { location: f, currentLocation: p });
      ((g = h.record.name),
        (v = wt({}, p.params, f.params)),
        (b = h.stringify(v)));
    }
    const m = [];
    let _ = h;
    for (; _; ) (m.unshift(_.record), (_ = _.parent));
    return { name: g, path: b, params: v, matched: m, meta: Lx(m) };
  }
  t.forEach((f) => o(f));
  function d() {
    ((n.length = 0), r.clear());
  }
  return {
    addRoute: o,
    resolve: u,
    removeRoute: s,
    clearRoutes: d,
    getRoutes: a,
    getRecordMatcher: i,
  };
}
function vp(t, e) {
  const n = {};
  for (const r of e) r in t && (n[r] = t[r]);
  return n;
}
function bp(t) {
  const e = {
    path: t.path,
    redirect: t.redirect,
    name: t.name,
    meta: t.meta || {},
    aliasOf: t.aliasOf,
    beforeEnter: t.beforeEnter,
    props: Rx(t),
    children: t.children || [],
    instances: {},
    leaveGuards: new Set(),
    updateGuards: new Set(),
    enterCallbacks: {},
    components:
      "components" in t
        ? t.components || null
        : t.component && { default: t.component },
  };
  return (Object.defineProperty(e, "mods", { value: {} }), e);
}
function Rx(t) {
  const e = {},
    n = t.props || !1;
  if ("component" in t) e.default = n;
  else for (const r in t.components) e[r] = typeof n == "object" ? n[r] : n;
  return e;
}
function yp(t) {
  for (; t; ) {
    if (t.record.aliasOf) return !0;
    t = t.parent;
  }
  return !1;
}
function Lx(t) {
  return t.reduce((e, n) => wt(e, n.meta), {});
}
function xp(t, e) {
  const n = {};
  for (const r in t) n[r] = r in e ? e[r] : t[r];
  return n;
}
function Dx(t, e) {
  let n = 0,
    r = e.length;
  for (; n !== r; ) {
    const o = (n + r) >> 1;
    I0(t, e[o]) < 0 ? (r = o) : (n = o + 1);
  }
  const i = Ix(t);
  return (i && (r = e.lastIndexOf(i, r - 1)), r);
}
function Ix(t) {
  let e = t;
  for (; (e = e.parent); ) if (O0(e) && I0(t, e) === 0) return e;
}
function O0({ record: t }) {
  return !!(
    t.name ||
    (t.components && Object.keys(t.components).length) ||
    t.redirect
  );
}
function Ox(t) {
  const e = {};
  if (t === "" || t === "?") return e;
  const r = (t[0] === "?" ? t.slice(1) : t).split("&");
  for (let i = 0; i < r.length; ++i) {
    const o = r[i].replace(M0, " "),
      s = o.indexOf("="),
      a = ia(s < 0 ? o : o.slice(0, s)),
      c = s < 0 ? null : ia(o.slice(s + 1));
    if (a in e) {
      let u = e[a];
      (wr(u) || (u = e[a] = [u]), u.push(c));
    } else e[a] = c;
  }
  return e;
}
function _p(t) {
  let e = "";
  for (let n in t) {
    const r = t[n];
    if (((n = tx(n)), r == null)) {
      r !== void 0 && (e += (e.length ? "&" : "") + n);
      continue;
    }
    (wr(r) ? r.map((o) => o && Zu(o)) : [r && Zu(r)]).forEach((o) => {
      o !== void 0 &&
        ((e += (e.length ? "&" : "") + n), o != null && (e += "=" + o));
    });
  }
  return e;
}
function $x(t) {
  const e = {};
  for (const n in t) {
    const r = t[n];
    r !== void 0 &&
      (e[n] = wr(r)
        ? r.map((i) => (i == null ? null : "" + i))
        : r == null
          ? r
          : "" + r);
  }
  return e;
}
const zx = Symbol(""),
  wp = Symbol(""),
  yc = Symbol(""),
  Kd = Symbol(""),
  Qu = Symbol("");
function bs() {
  let t = [];
  function e(r) {
    return (
      t.push(r),
      () => {
        const i = t.indexOf(r);
        i > -1 && t.splice(i, 1);
      }
    );
  }
  function n() {
    t = [];
  }
  return { add: e, list: () => t.slice(), reset: n };
}
function wi(t, e, n, r, i, o = (s) => s()) {
  const s = r && (r.enterCallbacks[i] = r.enterCallbacks[i] || []);
  return () =>
    new Promise((a, c) => {
      const u = (p) => {
          p === !1
            ? c(os(4, { from: n, to: e }))
            : p instanceof Error
              ? c(p)
              : _x(p)
                ? c(os(2, { from: e, to: p }))
                : (s &&
                    r.enterCallbacks[i] === s &&
                    typeof p == "function" &&
                    s.push(p),
                  a());
        },
        d = o(() => t.call(r && r.instances[i], e, n, u));
      let f = Promise.resolve(d);
      (t.length < 3 && (f = f.then(u)), f.catch((p) => c(p)));
    });
}
function Zc(t, e, n, r, i = (o) => o()) {
  const o = [];
  for (const s of t)
    for (const a in s.components) {
      let c = s.components[a];
      if (!(e !== "beforeRouteEnter" && !s.instances[a]))
        if (S0(c)) {
          const d = (c.__vccOpts || c)[e];
          d && o.push(wi(d, n, r, s, a, i));
        } else {
          let u = c();
          o.push(() =>
            u.then((d) => {
              if (!d)
                throw new Error(
                  `Couldn't resolve component "${a}" at "${s.path}"`,
                );
              const f = j1(d) ? d.default : d;
              ((s.mods[a] = d), (s.components[a] = f));
              const h = (f.__vccOpts || f)[e];
              return h && wi(h, n, r, s, a, i)();
            }),
          );
        }
    }
  return o;
}
function kp(t) {
  const e = sr(yc),
    n = sr(Kd),
    r = Xe(() => {
      const c = H(t.to);
      return e.resolve(c);
    }),
    i = Xe(() => {
      const { matched: c } = r.value,
        { length: u } = c,
        d = c[u - 1],
        f = n.matched;
      if (!d || !f.length) return -1;
      const p = f.findIndex(is.bind(null, d));
      if (p > -1) return p;
      const h = Sp(c[u - 2]);
      return u > 1 && Sp(d) === h && f[f.length - 1].path !== h
        ? f.findIndex(is.bind(null, c[u - 2]))
        : p;
    }),
    o = Xe(() => i.value > -1 && Vx(n.params, r.value.params)),
    s = Xe(
      () =>
        i.value > -1 &&
        i.value === n.matched.length - 1 &&
        P0(n.params, r.value.params),
    );
  function a(c = {}) {
    if (Nx(c)) {
      const u = e[H(t.replace) ? "replace" : "push"](H(t.to)).catch(Hs);
      return (
        t.viewTransition &&
          typeof document < "u" &&
          "startViewTransition" in document &&
          document.startViewTransition(() => u),
        u
      );
    }
    return Promise.resolve();
  }
  return {
    route: r,
    href: Xe(() => r.value.href),
    isActive: o,
    isExactActive: s,
    navigate: a,
  };
}
function Bx(t) {
  return t.length === 1 ? t[0] : t;
}
const Ux = Vg({
    name: "RouterLink",
    compatConfig: { MODE: 3 },
    props: {
      to: { type: [String, Object], required: !0 },
      replace: Boolean,
      activeClass: String,
      exactActiveClass: String,
      custom: Boolean,
      ariaCurrentValue: { type: String, default: "page" },
      viewTransition: Boolean,
    },
    useLink: kp,
    setup(t, { slots: e }) {
      const n = za(kp(t)),
        { options: r } = sr(yc),
        i = Xe(() => ({
          [Cp(t.activeClass, r.linkActiveClass, "router-link-active")]:
            n.isActive,
          [Cp(
            t.exactActiveClass,
            r.linkExactActiveClass,
            "router-link-exact-active",
          )]: n.isExactActive,
        }));
      return () => {
        const o = e.default && Bx(e.default(n));
        return t.custom
          ? o
          : jd(
              "a",
              {
                "aria-current": n.isExactActive ? t.ariaCurrentValue : null,
                href: n.href,
                onClick: n.navigate,
                class: i.value,
              },
              o,
            );
      };
    },
  }),
  Fx = Ux;
function Nx(t) {
  if (
    !(t.metaKey || t.altKey || t.ctrlKey || t.shiftKey) &&
    !t.defaultPrevented &&
    !(t.button !== void 0 && t.button !== 0)
  ) {
    if (t.currentTarget && t.currentTarget.getAttribute) {
      const e = t.currentTarget.getAttribute("target");
      if (/\b_blank\b/i.test(e)) return;
    }
    return (t.preventDefault && t.preventDefault(), !0);
  }
}
function Vx(t, e) {
  for (const n in e) {
    const r = e[n],
      i = t[n];
    if (typeof r == "string") {
      if (r !== i) return !1;
    } else if (!wr(i) || i.length !== r.length || r.some((o, s) => o !== i[s]))
      return !1;
  }
  return !0;
}
function Sp(t) {
  return t ? (t.aliasOf ? t.aliasOf.path : t.path) : "";
}
const Cp = (t, e, n) => t ?? e ?? n,
  Hx = Vg({
    name: "RouterView",
    inheritAttrs: !1,
    props: { name: { type: String, default: "default" }, route: Object },
    compatConfig: { MODE: 3 },
    setup(t, { attrs: e, slots: n }) {
      const r = sr(Qu),
        i = Xe(() => t.route || r.value),
        o = sr(wp, 0),
        s = Xe(() => {
          let u = H(o);
          const { matched: d } = i.value;
          let f;
          for (; (f = d[u]) && !f.components; ) u++;
          return u;
        }),
        a = Xe(() => i.value.matched[s.value]);
      (Il(
        wp,
        Xe(() => s.value + 1),
      ),
        Il(zx, a),
        Il(Qu, i));
      const c = N();
      return (
        Ft(
          () => [c.value, a.value, t.name],
          ([u, d, f], [p, h, v]) => {
            (d &&
              ((d.instances[f] = u),
              h &&
                h !== d &&
                u &&
                u === p &&
                (d.leaveGuards.size || (d.leaveGuards = h.leaveGuards),
                d.updateGuards.size || (d.updateGuards = h.updateGuards))),
              u &&
                d &&
                (!h || !is(d, h) || !p) &&
                (d.enterCallbacks[f] || []).forEach((b) => b(u)));
          },
          { flush: "post" },
        ),
        () => {
          const u = i.value,
            d = t.name,
            f = a.value,
            p = f && f.components[d];
          if (!p) return Mp(n.default, { Component: p, route: u });
          const h = f.props[d],
            v = h
              ? h === !0
                ? u.params
                : typeof h == "function"
                  ? h(u)
                  : h
              : null,
            g = jd(
              p,
              wt({}, v, e, {
                onVnodeUnmounted: (m) => {
                  m.component.isUnmounted && (f.instances[d] = null);
                },
                ref: c,
              }),
            );
          return Mp(n.default, { Component: g, route: u }) || g;
        }
      );
    },
  });
function Mp(t, e) {
  if (!t) return null;
  const n = t(e);
  return n.length === 1 ? n[0] : n;
}
const jx = Hx;
function Gx(t) {
  const e = Px(t.routes, t),
    n = t.parseQuery || Ox,
    r = t.stringifyQuery || _p,
    i = t.history,
    o = bs(),
    s = bs(),
    a = bs(),
    c = qb(fi);
  let u = fi;
  Fo &&
    t.scrollBehavior &&
    "scrollRestoration" in history &&
    (history.scrollRestoration = "manual");
  const d = Yc.bind(null, (oe) => "" + oe),
    f = Yc.bind(null, rx),
    p = Yc.bind(null, ia);
  function h(oe, me) {
    let ge, Oe;
    return (
      L0(oe) ? ((ge = e.getRecordMatcher(oe)), (Oe = me)) : (Oe = oe),
      e.addRoute(Oe, ge)
    );
  }
  function v(oe) {
    const me = e.getRecordMatcher(oe);
    me && e.removeRoute(me);
  }
  function b() {
    return e.getRoutes().map((oe) => oe.record);
  }
  function g(oe) {
    return !!e.getRecordMatcher(oe);
  }
  function m(oe, me) {
    if (((me = wt({}, me || c.value)), typeof oe == "string")) {
      const L = qc(n, oe, me.path),
        F = e.resolve({ path: L.path }, me),
        te = i.createHref(L.fullPath);
      return wt(L, F, {
        params: p(F.params),
        hash: ia(L.hash),
        redirectedFrom: void 0,
        href: te,
      });
    }
    let ge;
    if (oe.path != null)
      ge = wt({}, oe, { path: qc(n, oe.path, me.path).path });
    else {
      const L = wt({}, oe.params);
      for (const F in L) L[F] == null && delete L[F];
      ((ge = wt({}, oe, { params: f(L) })), (me.params = f(me.params)));
    }
    const Oe = e.resolve(ge, me),
      He = oe.hash || "";
    Oe.params = d(p(Oe.params));
    const A = sx(r, wt({}, oe, { hash: ex(He), path: Oe.path })),
      j = i.createHref(A);
    return wt(
      {
        fullPath: A,
        hash: He,
        query: r === _p ? $x(oe.query) : oe.query || {},
      },
      Oe,
      { redirectedFrom: void 0, href: j },
    );
  }
  function _(oe) {
    return typeof oe == "string" ? qc(n, oe, c.value.path) : wt({}, oe);
  }
  function y(oe, me) {
    if (u !== oe) return os(8, { from: me, to: oe });
  }
  function x(oe) {
    return S(oe);
  }
  function C(oe) {
    return x(wt(_(oe), { replace: !0 }));
  }
  function w(oe) {
    const me = oe.matched[oe.matched.length - 1];
    if (me && me.redirect) {
      const { redirect: ge } = me;
      let Oe = typeof ge == "function" ? ge(oe) : ge;
      return (
        typeof Oe == "string" &&
          ((Oe =
            Oe.includes("?") || Oe.includes("#") ? (Oe = _(Oe)) : { path: Oe }),
          (Oe.params = {})),
        wt(
          {
            query: oe.query,
            hash: oe.hash,
            params: Oe.path != null ? {} : oe.params,
          },
          Oe,
        )
      );
    }
  }
  function S(oe, me) {
    const ge = (u = m(oe)),
      Oe = c.value,
      He = oe.state,
      A = oe.force,
      j = oe.replace === !0,
      L = w(ge);
    if (L)
      return S(
        wt(_(L), {
          state: typeof L == "object" ? wt({}, He, L.state) : He,
          force: A,
          replace: j,
        }),
        me || ge,
      );
    const F = ge;
    F.redirectedFrom = me;
    let te;
    return (
      !A &&
        ax(r, Oe, ge) &&
        ((te = os(16, { to: F, from: Oe })), V(Oe, Oe, !0, !1)),
      (te ? Promise.resolve(te) : P(F, Oe))
        .catch((q) => (zr(q) ? (zr(q, 2) ? q : J(q)) : U(q, F, Oe)))
        .then((q) => {
          if (q) {
            if (zr(q, 2))
              return S(
                wt({ replace: j }, _(q.to), {
                  state: typeof q.to == "object" ? wt({}, He, q.to.state) : He,
                  force: A,
                }),
                me || F,
              );
          } else q = W(F, Oe, !0, j, He);
          return (I(F, Oe, q), q);
        })
    );
  }
  function D(oe, me) {
    const ge = y(oe, me);
    return ge ? Promise.reject(ge) : Promise.resolve();
  }
  function k(oe) {
    const me = Pe.values().next().value;
    return me && typeof me.runWithContext == "function"
      ? me.runWithContext(oe)
      : oe();
  }
  function P(oe, me) {
    let ge;
    const [Oe, He, A] = Wx(oe, me);
    ge = Zc(Oe.reverse(), "beforeRouteLeave", oe, me);
    for (const L of Oe)
      L.leaveGuards.forEach((F) => {
        ge.push(wi(F, oe, me));
      });
    const j = D.bind(null, oe, me);
    return (
      ge.push(j),
      ce(ge)
        .then(() => {
          ge = [];
          for (const L of o.list()) ge.push(wi(L, oe, me));
          return (ge.push(j), ce(ge));
        })
        .then(() => {
          ge = Zc(He, "beforeRouteUpdate", oe, me);
          for (const L of He)
            L.updateGuards.forEach((F) => {
              ge.push(wi(F, oe, me));
            });
          return (ge.push(j), ce(ge));
        })
        .then(() => {
          ge = [];
          for (const L of A)
            if (L.beforeEnter)
              if (wr(L.beforeEnter))
                for (const F of L.beforeEnter) ge.push(wi(F, oe, me));
              else ge.push(wi(L.beforeEnter, oe, me));
          return (ge.push(j), ce(ge));
        })
        .then(
          () => (
            oe.matched.forEach((L) => (L.enterCallbacks = {})),
            (ge = Zc(A, "beforeRouteEnter", oe, me, k)),
            ge.push(j),
            ce(ge)
          ),
        )
        .then(() => {
          ge = [];
          for (const L of s.list()) ge.push(wi(L, oe, me));
          return (ge.push(j), ce(ge));
        })
        .catch((L) => (zr(L, 8) ? L : Promise.reject(L)))
    );
  }
  function I(oe, me, ge) {
    a.list().forEach((Oe) => k(() => Oe(oe, me, ge)));
  }
  function W(oe, me, ge, Oe, He) {
    const A = y(oe, me);
    if (A) return A;
    const j = me === fi,
      L = Fo ? history.state : {};
    (ge &&
      (Oe || j
        ? i.replace(oe.fullPath, wt({ scroll: j && L && L.scroll }, He))
        : i.push(oe.fullPath, He)),
      (c.value = oe),
      V(oe, me, ge, j),
      J());
  }
  let X;
  function Z() {
    X ||
      (X = i.listen((oe, me, ge) => {
        if (!be.listening) return;
        const Oe = m(oe),
          He = w(Oe);
        if (He) {
          S(wt(He, { replace: !0, force: !0 }), Oe).catch(Hs);
          return;
        }
        u = Oe;
        const A = c.value;
        (Fo && mx(fp(A.fullPath, ge.delta), bc()),
          P(Oe, A)
            .catch((j) =>
              zr(j, 12)
                ? j
                : zr(j, 2)
                  ? (S(wt(_(j.to), { force: !0 }), Oe)
                      .then((L) => {
                        zr(L, 20) &&
                          !ge.delta &&
                          ge.type === oa.pop &&
                          i.go(-1, !1);
                      })
                      .catch(Hs),
                    Promise.reject())
                  : (ge.delta && i.go(-ge.delta, !1), U(j, Oe, A)),
            )
            .then((j) => {
              ((j = j || W(Oe, A, !1)),
                j &&
                  (ge.delta && !zr(j, 8)
                    ? i.go(-ge.delta, !1)
                    : ge.type === oa.pop && zr(j, 20) && i.go(-1, !1)),
                I(Oe, A, j));
            })
            .catch(Hs));
      }));
  }
  let G = bs(),
    $ = bs(),
    ne;
  function U(oe, me, ge) {
    J(oe);
    const Oe = $.list();
    return (
      Oe.length ? Oe.forEach((He) => He(oe, me, ge)) : console.error(oe),
      Promise.reject(oe)
    );
  }
  function ie() {
    return ne && c.value !== fi
      ? Promise.resolve()
      : new Promise((oe, me) => {
          G.add([oe, me]);
        });
  }
  function J(oe) {
    return (
      ne ||
        ((ne = !oe),
        Z(),
        G.list().forEach(([me, ge]) => (oe ? ge(oe) : me())),
        G.reset()),
      oe
    );
  }
  function V(oe, me, ge, Oe) {
    const { scrollBehavior: He } = t;
    if (!Fo || !He) return Promise.resolve();
    const A =
      (!ge && gx(fp(oe.fullPath, 0))) ||
      ((Oe || !ge) && history.state && history.state.scroll) ||
      null;
    return ao()
      .then(() => He(oe, me, A))
      .then((j) => j && hx(j))
      .catch((j) => U(j, oe, me));
  }
  const re = (oe) => i.go(oe);
  let Ee;
  const Pe = new Set(),
    be = {
      currentRoute: c,
      listening: !0,
      addRoute: h,
      removeRoute: v,
      clearRoutes: e.clearRoutes,
      hasRoute: g,
      getRoutes: b,
      resolve: m,
      options: t,
      push: x,
      replace: C,
      go: re,
      back: () => re(-1),
      forward: () => re(1),
      beforeEach: o.add,
      beforeResolve: s.add,
      afterEach: a.add,
      onError: $.add,
      isReady: ie,
      install(oe) {
        const me = this;
        (oe.component("RouterLink", Fx),
          oe.component("RouterView", jx),
          (oe.config.globalProperties.$router = me),
          Object.defineProperty(oe.config.globalProperties, "$route", {
            enumerable: !0,
            get: () => H(c),
          }),
          Fo &&
            !Ee &&
            c.value === fi &&
            ((Ee = !0), x(i.location).catch((He) => {})));
        const ge = {};
        for (const He in fi)
          Object.defineProperty(ge, He, {
            get: () => c.value[He],
            enumerable: !0,
          });
        (oe.provide(yc, me), oe.provide(Kd, Sg(ge)), oe.provide(Qu, c));
        const Oe = oe.unmount;
        (Pe.add(oe),
          (oe.unmount = function () {
            (Pe.delete(oe),
              Pe.size < 1 &&
                ((u = fi),
                X && X(),
                (X = null),
                (c.value = fi),
                (Ee = !1),
                (ne = !1)),
              Oe());
          }));
      },
    };
  function ce(oe) {
    return oe.reduce((me, ge) => me.then(() => k(ge)), Promise.resolve());
  }
  return be;
}
function Wx(t, e) {
  const n = [],
    r = [],
    i = [],
    o = Math.max(e.matched.length, t.matched.length);
  for (let s = 0; s < o; s++) {
    const a = e.matched[s];
    a && (t.matched.find((u) => is(u, a)) ? r.push(a) : n.push(a));
    const c = t.matched[s];
    c && (e.matched.find((u) => is(u, c)) || i.push(c));
  }
  return [n, r, i];
}
function Na() {
  return sr(yc);
}
function Xd(t) {
  return sr(Kd);
}
const Kx = "https://api.mestermc.hu:8443/api";
class Xx {
  constructor() {
    ((this.baseURL = Kx),
      (this.isRefreshing = !1),
      (this.failedQueue = []),
      (this.healthCheckCache = null),
      (this.lastHealthCheck = 0));
  }
  async healthCheck(e = !0) {
    const n = Date.now();
    if (e && this.healthCheckCache !== null && n - this.lastHealthCheck < 1e4)
      return this.healthCheckCache;
    try {
      const i = new AbortController(),
        o = setTimeout(() => i.abort(), 5e3);
      try {
        const s = await fetch(`${this.baseURL}/health`, {
          method: "GET",
          signal: i.signal,
          headers: {
            "Content-Type": "application/json",
            Accept: "application/json",
          },
          cache: "no-cache",
        });
        clearTimeout(o);
        const a = s.ok;
        return ((this.healthCheckCache = a), (this.lastHealthCheck = n), a);
      } catch {
        clearTimeout(o);
        const a = new AbortController(),
          c = setTimeout(() => a.abort(), 3e3);
        try {
          const u = await fetch(`${this.baseURL}/auth/verify`, {
            method: "GET",
            signal: a.signal,
            headers: {
              "Content-Type": "application/json",
              Accept: "application/json",
            },
            cache: "no-cache",
          });
          clearTimeout(c);
          const d = u.status < 500;
          return ((this.healthCheckCache = d), (this.lastHealthCheck = n), d);
        } catch (u) {
          throw (clearTimeout(c), u);
        }
      }
    } catch {
      return ((this.healthCheckCache = !1), (this.lastHealthCheck = n), !1);
    }
  }
  async isBackendReachable() {
    try {
      const e = new AbortController(),
        n = setTimeout(() => e.abort(), 2e3),
        r = await fetch(this.baseURL, {
          method: "HEAD",
          signal: e.signal,
          mode: "cors",
        });
      return (clearTimeout(n), r.status < 500);
    } catch {
      return !1;
    }
  }
  async request(e, n = {}) {
    const r = `${this.baseURL}${e}`,
      i = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
          ...n.headers,
        },
        ...n,
      },
      o = localStorage.getItem("auth_token");
    o && (i.headers.Authorization = `Bearer ${o}`);
    try {
      const s = await fetch(r, i),
        a = s.headers.get("content-type");
      if (!(a != null && a.includes("application/json"))) {
        if (!s.ok) throw new Error(`HTTP error! status: ${s.status}`);
        try {
          return await s.json();
        } catch {
          return s;
        }
      }
      const c = await s.json();
      if (!s.ok) {
        if (s.status === 401 && !n._retry)
          return this.handleUnauthorized(e, n, c);
        const u = c.error || c.message || `HTTP error! status: ${s.status}`;
        throw new Error(u);
      }
      return c.success !== void 0 && c.data !== void 0 ? c.data : c;
    } catch (s) {
      throw (
        (s.name === "TypeError" || s.message.includes("fetch")) &&
          ((this.healthCheckCache = !1), (this.lastHealthCheck = Date.now())),
        s
      );
    }
  }
  async handleUnauthorized(e, n, r) {
    if (this.isRefreshing)
      return new Promise((i, o) => {
        this.failedQueue.push({
          resolve: i,
          reject: o,
          endpoint: e,
          options: { ...n, _retry: !0 },
        });
      });
    this.isRefreshing = !0;
    try {
      return (
        await this.refreshToken(),
        this.processQueue(null),
        this.request(e, { ...n, _retry: !0 })
      );
    } catch (i) {
      throw (
        this.processQueue(i),
        this.handleAuthError(),
        new Error(r.error || "Authentication failed")
      );
    } finally {
      this.isRefreshing = !1;
    }
  }
  processQueue(e) {
    (this.failedQueue.forEach(
      ({ resolve: n, reject: r, endpoint: i, options: o }) => {
        e ? r(e) : n(this.request(i, o));
      },
    ),
      (this.failedQueue = []));
  }
  handleAuthError() {
    (localStorage.removeItem("auth_token"),
      localStorage.removeItem("refresh_token"),
      localStorage.removeItem("auth_user"),
      window.location.pathname !== "/login" &&
        (window.location.href = "/login"));
  }
  async get(e) {
    return this.request(e, { method: "GET" });
  }
  async post(e, n) {
    return this.request(e, { method: "POST", body: JSON.stringify(n) });
  }
  async put(e, n) {
    return this.request(e, { method: "PUT", body: JSON.stringify(n) });
  }
  async delete(e) {
    return this.request(e, { method: "DELETE" });
  }
  async upload(e, n) {
    return this.request(e, { method: "POST", body: n, headers: {} });
  }
  async login(e, n) {
    return this.post("/auth/login", { identifier: e, password: n });
  }
  async register(e) {
    return this.post("/auth/register", e);
  }
  async logout() {
    const e = localStorage.getItem("refresh_token");
    return this.post("/auth/logout", { refresh_token: e });
  }
  async refreshToken() {
    const e = localStorage.getItem("refresh_token");
    if (!e) throw new Error("No refresh token available");
    const n = await fetch(`${this.baseURL}/auth/refresh`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
      body: JSON.stringify({ refresh_token: e }),
    });
    if (!n.ok) {
      const o = await n.json().catch(() => ({}));
      throw new Error(o.error || "Token refresh failed");
    }
    const r = await n.json(),
      i = r.success ? r.data : r;
    return (
      i.access_token && localStorage.setItem("auth_token", i.access_token),
      i
    );
  }
  async verifyToken() {
    return this.get("/auth/verify");
  }
  async forgotPassword(e) {
    return this.post("/auth/forgot-password", { email: e });
  }
  async resetPassword(e, n) {
    return this.post("/auth/reset-password", { token: e, password: n });
  }
  async checkUsername(e) {
    return this.post("/auth/check-username", { username: e });
  }
  async checkEmail(e) {
    return this.post("/auth/check-email", { email: e });
  }
  async getUserProfile() {
    return this.get("/user/profile");
  }
  async updateUserProfile(e) {
    return this.put("/user/profile", e);
  }
  async getUserStats() {
    return this.get("/user/stats");
  }
  async getUserBalance() {
    return this.get("/user/balance");
  }
  async changePassword(e, n) {
    return this.post("/user/change-password", {
      current_password: e,
      new_password: n,
    });
  }
  async getUserSessions() {
    return this.get("/user/sessions");
  }
  async logoutSession(e) {
    return this.delete(`/user/sessions/${e}`);
  }
  async logoutAllSessions() {
    return this.delete("/user/sessions");
  }
  async getNotificationSettings() {
    return this.get("/user/notification-settings");
  }
  async updateNotificationSettings(e) {
    return this.put("/user/notification-settings", e);
  }
  async getRanks() {
    return this.get("/ranks");
  }
  async getUserRank() {
    return this.get("/ranks/user/rank");
  }
  async getUserRankHistory() {
    return this.get("/ranks/user/history");
  }
  async purchaseRank(e) {
    return this.post("/ranks/purchase", { rank_id: e });
  }
  async getRankDetails(e) {
    return this.get(`/ranks/${e}`);
  }
  async checkRankExpiry() {
    return this.get("/ranks/expiry-check");
  }
  async getUserActiveRank(e) {
    return this.get(`/ranks/user/${e}/active`);
  }
  async getNews(e = 1, n = 10, r = "", i = !1) {
    const o = new URLSearchParams({
      page: e.toString(),
      per_page: n.toString(),
    });
    return (
      r && o.append("category", r),
      i && o.append("important_only", "true"),
      this.get(`/news?${o.toString()}`)
    );
  }
  async getLatestNews(e = 5) {
    return this.get(`/news/latest?limit=${e}`);
  }
  async getImportantNews() {
    return this.get("/news/important");
  }
  async getNewsCategories() {
    return this.get("/news/categories");
  }
  async getNewsByCategory(e, n = 10) {
    return this.get(`/news/category/${e}?limit=${n}`);
  }
  async getNewsById(e) {
    return this.get(`/news/${e}`);
  }
  async markNewsAsRead(e) {
    return this.post(`/news/${e}/read`);
  }
  async searchNews(e, n = 1, r = 10) {
    return this.get(
      `/news/search?q=${encodeURIComponent(e)}&page=${n}&per_page=${r}`,
    );
  }
  async getCoinPacks() {
    return this.get("/coins/packs");
  }
  async purchaseCoins(e, n) {
    return this.post("/coins/purchase", { pack_id: e, payment_method: n });
  }
  async createPaymentIntent(e) {
    return this.post("/coins/payment-intent", { pack_id: e });
  }
  async confirmPayment(e) {
    return this.post("/coins/confirm-payment", e);
  }
  async getCoinTransactions(e = 1, n = 15) {
    return this.get(`/coins/transactions?page=${e}&per_page=${n}`);
  }
  async getTransactionById(e) {
    return this.get(`/coins/transactions/${e}`);
  }
  async getTransactionSummary() {
    return this.get("/coins/transactions/summary");
  }
  async getExtras() {
    return this.get("/extras");
  }
  async getUserExtras() {
    return this.get("/extras/user/extras");
  }
  async purchaseExtra(e) {
    return this.post("/extras/purchase", { extra_id: e });
  }
  async configureExtra(e, n) {
    return this.put(`/extras/${e}/configure`, { configuration: n });
  }
  async getExtraConfiguration(e) {
    return this.get(`/extras/${e}/configuration`);
  }
  async getExtraDetails(e) {
    return this.get(`/extras/${e}`);
  }
  async checkExtraExpiry() {
    return this.get("/extras/expiry-check");
  }
  async uploadSkin(e) {
    return this.upload("/skins/upload", e);
  }
  async getUserSkins() {
    return this.get("/skins/user/skins");
  }
  async getActiveSkin() {
    return this.get("/skins/user/active");
  }
  async getUserSkinStats() {
    return this.get("/skins/user/stats");
  }
  async setActiveSkin(e) {
    return this.post(`/skins/${e}/activate`);
  }
  async deactivateSkins() {
    return this.post("/skins/deactivate");
  }
  async deleteSkin(e) {
    return this.delete(`/skins/${e}`);
  }
  async getSkinDetails(e) {
    return this.get(`/skins/${e}`);
  }
  async downloadSkin(e) {
    return this.get(`/skins/${e}/download`);
  }
  async validateSkinFile(e) {
    return this.upload("/skins/validate", e);
  }
  async getLuckyWheelStatus() {
    try {
      return await this.get("/lucky-wheel/status");
    } catch {
      return {
        can_spin: !1,
        last_spin_time: null,
        next_spin_time: null,
        cooldown_hours: 24,
        user_stats: { total_spins: 0, total_winnings: 0, biggest_win: 0 },
      };
    }
  }
  async getLuckyWheelStats() {
    try {
      return await this.get("/lucky-wheel/stats");
    } catch {
      return {
        total_spins: 0,
        total_winnings: 0,
        biggest_win: 0,
        last_spin_at: null,
        win_rate: 0,
        average_win: 0,
      };
    }
  }
  async getLuckyWheelWinners(e = 0, n = 10) {
    try {
      return await this.get(`/lucky-wheel/winners?page=${e}&limit=${n}`);
    } catch {
      return [];
    }
  }
  async spinLuckyWheel() {
    try {
      const e = await this.post("/lucky-wheel/spin", {});
      if (!e.reward) throw new Error("Invalid response: missing reward");
      if (typeof e.spin_angle > "u")
        throw new Error(
          "Invalid response: missing spin_angle - CRITICAL FOR FRONTEND!",
        );
      if (typeof e.reward.name != "string")
        throw new Error("Invalid response: malformed reward.name");
      if (typeof e.reward.reward > "u")
        throw new Error("Invalid response: missing reward.reward value");
      if (e.spin_angle < 0 || e.spin_angle >= 360)
        throw new Error(
          `Invalid spin_angle: ${e.spin_angle} (must be 0-359.99)`,
        );
      return e;
    } catch (e) {
      throw new Error(`Backend spin failed: ${e.message}`);
    }
  }
  async getLuckyWheelHistory(e = 20) {
    try {
      return await this.get(`/lucky-wheel/history?limit=${e}`);
    } catch {
      return [];
    }
  }
  async getLuckyWheelRewards() {
    try {
      return await this.get("/lucky-wheel/rewards");
    } catch {
      return [
        { name: "30 Bé", reward: 30, start: 0, end: 14 },
        { name: "Röff", reward: !1, start: 15, end: 30 },
        { name: "Eltalált a hógólem", reward: !1, start: 31, end: 45 },
        { name: "Zombi nyert", reward: !1, start: 46, end: 60 },
        { name: "5 Bé", reward: 5, start: 61, end: 75 },
        { name: "Átvert egy falusi", reward: !1, start: 76, end: 105 },
        { name: "Eltalált a skeleton", reward: !1, start: 106, end: 120 },
        { name: "Chicken jockey!", reward: !1, start: 121, end: 150 },
        { name: "50 Bé", reward: 50, start: 151, end: 165 },
        { name: "Elégtél a lávában!", reward: !1, start: 166, end: 195 },
        { name: "Meghallott a warden", reward: !1, start: 196, end: 210 },
        { name: "Felrobbantál", reward: !1, start: 211, end: 225 },
        { name: "Nem nyert", reward: !1, start: 226, end: 240 },
        { name: "10 Bé", reward: 10, start: 241, end: 255 },
        { name: "Leköpött egy láma", reward: !1, start: 256, end: 285 },
        { name: "100 Bé", reward: 100, start: 286, end: 300 },
        { name: "Megölt az Ender dragon!", reward: !1, start: 301, end: 330 },
        { name: "Raid", reward: !1, start: 331, end: 345 },
      ];
    }
  }
  async getLuckyWheelPrizes() {
    return this.getLuckyWheelRewards();
  }
  async testLuckyWheelSpin(e = null) {
    return null;
  }
  async validateLuckyWheelConnection() {
    const e = { health: !1, status: !1, rewards: !1 };
    try {
      try {
        (await this.healthCheck(!1), (e.health = !0));
      } catch {}
      try {
        (await this.getLuckyWheelStatus(), (e.status = !0));
      } catch {}
      try {
        (await this.getLuckyWheelRewards(), (e.rewards = !0));
      } catch {}
      const n = Object.values(e).filter(Boolean).length,
        r = Object.keys(e).length;
      return { success: n === r, tests: e, summary: `${n}/${r} tests passed` };
    } catch (n) {
      return { success: !1, tests: e, error: n.message };
    }
  }
  async getNotifications(e = 1, n = 15, r = !1) {
    const i = new URLSearchParams({
      page: e.toString(),
      per_page: n.toString(),
    });
    return (
      r && i.append("unread_only", "true"),
      this.get(`/notifications?${i.toString()}`)
    );
  }
  async getUnreadNotificationCount() {
    return this.get("/notifications/unread-count");
  }
  async markNotificationAsRead(e) {
    return this.post(`/notifications/${e}/read`);
  }
  async markAllNotificationsAsRead() {
    return this.post("/notifications/read-all");
  }
  async deleteNotification(e) {
    return this.delete(`/notifications/${e}`);
  }
  async testNotification() {
    return this.post("/notifications/test");
  }
  async getPublicUserProfile(e) {
    return this.get(`/public/users/${e}`);
  }
  async searchUsers(e, n = 10) {
    return this.get(
      `/public/users/search?q=${encodeURIComponent(e)}&limit=${n}`,
    );
  }
  async getPaymentMethods() {
    return this.get("/public/payment/methods");
  }
  async getAdminDashboardStats() {
    return this.get("/admin/dashboard-stats");
  }
  async getAdminStats() {
    return this.get("/admin/stats");
  }
  async getAdminUsers(e = {}) {
    const n = new URLSearchParams();
    Object.keys(e).forEach((i) => {
      e[i] !== null && e[i] !== void 0 && e[i] !== "" && n.append(i, e[i]);
    });
    const r = `/admin/users${n.toString() ? `?${n.toString()}` : ""}`;
    return this.get(r);
  }
  async getAdminUserDetails(e) {
    return this.get(`/admin/users/${e}`);
  }
  async createAdminUser(e) {
    return this.post("/admin/users", e);
  }
  async updateAdminUser(e, n) {
    return this.put(`/admin/users/${e}`, n);
  }
  async deleteAdminUser(e) {
    return this.delete(`/admin/users/${e}`);
  }
  async addCoinsToUser(e, n) {
    return this.post(`/admin/users/${e}/add-coins`, n);
  }
  async changeUserRank(e, n) {
    return this.post(`/admin/users/${e}/change-rank`, n);
  }
  async getAdminNews(e = 1, n = 15) {
    const r = new URLSearchParams({
      page: e.toString(),
      per_page: n.toString(),
    });
    return this.get(`/admin/news?${r.toString()}`);
  }
  async createAdminNews(e) {
    return this.post("/admin/news", e);
  }
  async updateAdminNews(e, n) {
    return this.put(`/admin/news/${e}`, n);
  }
  async deleteAdminNews(e) {
    return this.delete(`/admin/news/${e}`);
  }
  async sendBulkNotification(e) {
    return this.post("/admin/notifications/bulk", e);
  }
  async cleanupExpiredData() {
    return this.post("/admin/system/cleanup");
  }
  async getAdminLuckyWheelStats() {
    return this.get("/admin/lucky-wheel/statistics");
  }
  async updateLuckyWheelReward(e, n) {
    return this.put(`/admin/lucky-wheel/rewards/${e}`, n);
  }
  async createLuckyWheelReward(e) {
    return this.post("/admin/lucky-wheel/rewards", e);
  }
}
const Ve = new Xx(),
  ys = N(!1),
  qt = N(null),
  sn = N(!1),
  Ni = N(!1);
function Va() {
  const t = async (V, re) => {
      sn.value = !0;
      try {
        const Ee = await Ve.login(V, re);
        return (
          (ys.value = !0),
          (qt.value = Ee.user),
          localStorage.setItem("auth_token", Ee.access_token),
          localStorage.setItem("refresh_token", Ee.refresh_token),
          localStorage.setItem("auth_user", JSON.stringify(Ee.user)),
          Ee.user
        );
      } catch (Ee) {
        throw new Error(Ee.message || "Bejelentkezési hiba történt!");
      } finally {
        sn.value = !1;
      }
    },
    e = async (V) => {
      sn.value = !0;
      try {
        const re = await Ve.register(V);
        return re.user || re;
      } catch (re) {
        throw new Error(re.message || "Regisztrációs hiba történt!");
      } finally {
        sn.value = !1;
      }
    },
    n = async () => {
      sn.value = !0;
      try {
        await Ve.logout();
      } catch {
      } finally {
        ((ys.value = !1),
          (qt.value = null),
          (Ni.value = !1),
          localStorage.removeItem("auth_user"),
          localStorage.removeItem("auth_token"),
          localStorage.removeItem("refresh_token"),
          (sn.value = !1));
      }
    },
    r = async () => {
      if (Ni.value) return ys.value;
      const V = localStorage.getItem("auth_user"),
        re = localStorage.getItem("auth_token");
      if (!V || !re) return ((Ni.value = !0), !1);
      sn.value = !0;
      try {
        const Ee = await Ve.verifyToken();
        return (
          (ys.value = !0),
          (qt.value = Ee.user || JSON.parse(V)),
          Ee.user && localStorage.setItem("auth_user", JSON.stringify(Ee.user)),
          (Ni.value = !0),
          !0
        );
      } catch {
        return (
          localStorage.removeItem("auth_user"),
          localStorage.removeItem("auth_token"),
          localStorage.removeItem("refresh_token"),
          (Ni.value = !0),
          !1
        );
      } finally {
        sn.value = !1;
      }
    },
    i = async () => ((Ni.value = !1), await r()),
    o = async (V) => {
      sn.value = !0;
      try {
        const re = await Ve.updateUserProfile(V),
          Ee = re.user || re;
        return (
          (qt.value = { ...qt.value, ...Ee }),
          localStorage.setItem("auth_user", JSON.stringify(qt.value)),
          qt.value
        );
      } catch (re) {
        throw new Error(re.message || "Profil frissítési hiba!");
      } finally {
        sn.value = !1;
      }
    },
    s = async (V, re) => {
      sn.value = !0;
      try {
        return (await Ve.changePassword(V, re), !0);
      } catch (Ee) {
        throw new Error(Ee.message || "Jelszó módosítási hiba!");
      } finally {
        sn.value = !1;
      }
    },
    a = async (V) => {
      sn.value = !0;
      try {
        return (await Ve.forgotPassword(V), !0);
      } catch (re) {
        throw new Error(re.message || "Jelszó visszaállítási hiba!");
      } finally {
        sn.value = !1;
      }
    },
    c = async (V, re) => {
      sn.value = !0;
      try {
        return (await Ve.resetPassword(V, re), !0);
      } catch (Ee) {
        throw new Error(Ee.message || "Jelszó visszaállítási hiba!");
      } finally {
        sn.value = !1;
      }
    },
    u = async (V) => {
      try {
        return (await Ve.checkUsername(V)).available;
      } catch (re) {
        throw new Error(re.message || "Username ellenőrzési hiba!");
      }
    },
    d = async (V) => {
      try {
        return (await Ve.checkEmail(V)).available;
      } catch (re) {
        throw new Error(re.message || "Email ellenőrzési hiba!");
      }
    },
    f = (V) =>
      !qt.value || !qt.value.permissions
        ? !1
        : qt.value.permissions.includes(V),
    p = (V) => (qt.value ? qt.value.role === V : !1),
    h = async () => {
      try {
        const V = await Ve.getUserBalance();
        return (
          qt.value &&
            ((qt.value.coins_balance = V.coins_balance),
            (qt.value.total_coins_spent = V.total_coins_spent),
            localStorage.setItem("auth_user", JSON.stringify(qt.value))),
          V
        );
      } catch {}
    },
    v = async () => {
      try {
        const V = await Ve.getUserStats();
        return (
          qt.value &&
            ((qt.value.stats = V),
            localStorage.setItem("auth_user", JSON.stringify(qt.value))),
          V
        );
      } catch {}
    },
    b = async () => {
      try {
        return await Ve.getUserSessions();
      } catch (V) {
        throw new Error(V.message || "Session lekérdezési hiba!");
      }
    },
    g = async (V) => {
      try {
        return (await Ve.logoutSession(V), !0);
      } catch (re) {
        throw new Error(re.message || "Session lezárási hiba!");
      }
    },
    m = async () => {
      try {
        return (await Ve.logoutAllSessions(), await n(), !0);
      } catch (V) {
        throw new Error(V.message || "Összes session lezárási hiba!");
      }
    },
    _ = Xe(() => qt.value),
    y = Xe(() => ys.value),
    x = Xe(() => sn.value),
    C = Xe(() => Ni.value),
    w = Xe(() => p("admin")),
    S = Xe(() => p("moderator") || p("admin")),
    D = Xe(() => p("user")),
    k = Xe(() => {
      var V, re;
      return (
        ((V = _.value) == null ? void 0 : V.display_name) ||
        ((re = _.value) == null ? void 0 : re.username) ||
        ""
      );
    }),
    P = Xe(() => {
      var V;
      return ((V = _.value) == null ? void 0 : V.coins_balance) || 0;
    }),
    I = Xe(() => {
      var V;
      return ((V = _.value) == null ? void 0 : V.role) || "user";
    }),
    W = Xe(() => {
      var V;
      return ((V = _.value) == null ? void 0 : V.account_id) || "";
    }),
    X = Xe(() => {
      var V;
      return ((V = _.value) == null ? void 0 : V.email) || "";
    }),
    Z = Xe(() => {
      var V;
      return ((V = _.value) == null ? void 0 : V.registration_date) || null;
    }),
    G = Xe(() => {
      var V;
      return ((V = _.value) == null ? void 0 : V.last_login) || null;
    }),
    $ = Xe(() => f("read") || y.value),
    ne = Xe(() => f("write") || S.value),
    U = Xe(() => f("delete") || w.value),
    ie = Xe(() => f("moderate") || S.value),
    J = Xe(() => f("admin") || w.value);
  return {
    isLoggedIn: y,
    user: _,
    isLoading: x,
    isSessionRestored: C,
    userDisplayName: k,
    userCoins: P,
    userRole: I,
    userAccountId: W,
    userEmail: X,
    userRegistrationDate: Z,
    userLastLogin: G,
    isAdmin: w,
    isModerator: S,
    isUser: D,
    canRead: $,
    canWrite: ne,
    canDelete: U,
    canModerate: ie,
    canAdmin: J,
    hasPermission: f,
    hasRole: p,
    login: t,
    register: e,
    logout: n,
    restoreSession: r,
    forceSessionRestore: i,
    updateUserProfile: o,
    changePassword: s,
    forgotPassword: a,
    resetPassword: c,
    checkUsernameAvailability: u,
    checkEmailAvailability: d,
    updateUserBalance: h,
    updateUserStats: v,
    getUserSessions: b,
    logoutSession: g,
    logoutAllSessions: m,
  };
}
function At(...t) {
  if (t) {
    let e = [];
    for (let n = 0; n < t.length; n++) {
      const r = t[n];
      if (!r) continue;
      const i = typeof r;
      if (i === "string" || i === "number") e.push(r);
      else if (i === "object") {
        const o = Array.isArray(r)
          ? [At(...r)]
          : Object.entries(r).map(([s, a]) => (a ? s : void 0));
        e = o.length ? e.concat(o.filter((s) => !!s)) : e;
      }
    }
    return e.join(" ").trim();
  }
}
function Yd(t, e) {
  return t
    ? t.classList
      ? t.classList.contains(e)
      : new RegExp("(^| )" + e + "( |$)", "gi").test(t.className)
    : !1;
}
function Vn(t, e) {
  if (t && e) {
    const n = (r) => {
      Yd(t, r) || (t.classList ? t.classList.add(r) : (t.className += " " + r));
    };
    [e]
      .flat()
      .filter(Boolean)
      .forEach((r) => r.split(" ").forEach(n));
  }
}
function Yx() {
  return window.innerWidth - document.documentElement.offsetWidth;
}
function qx(t) {
  typeof t == "string"
    ? Vn(document.body, t || "p-overflow-hidden")
    : (t != null &&
        t.variableName &&
        document.body.style.setProperty(t.variableName, Yx() + "px"),
      Vn(
        document.body,
        (t == null ? void 0 : t.className) || "p-overflow-hidden",
      ));
}
function Ln(t, e) {
  if (t && e) {
    const n = (r) => {
      t.classList
        ? t.classList.remove(r)
        : (t.className = t.className.replace(
            new RegExp("(^|\\b)" + r.split(" ").join("|") + "(\\b|$)", "gi"),
            " ",
          ));
    };
    [e]
      .flat()
      .filter(Boolean)
      .forEach((r) => r.split(" ").forEach(n));
  }
}
function Zx(t) {
  typeof t == "string"
    ? Ln(document.body, t || "p-overflow-hidden")
    : (t != null &&
        t.variableName &&
        document.body.style.removeProperty(t.variableName),
      Ln(
        document.body,
        (t == null ? void 0 : t.className) || "p-overflow-hidden",
      ));
}
function ql(t) {
  for (const e of document == null ? void 0 : document.styleSheets)
    try {
      for (const n of e == null ? void 0 : e.cssRules)
        for (const r of n == null ? void 0 : n.style)
          if (t.test(r))
            return { name: r, value: n.style.getPropertyValue(r).trim() };
    } catch {}
  return null;
}
function $0(t) {
  const e = { width: 0, height: 0 };
  return (
    t &&
      ((t.style.visibility = "hidden"),
      (t.style.display = "block"),
      (e.width = t.offsetWidth),
      (e.height = t.offsetHeight),
      (t.style.display = "none"),
      (t.style.visibility = "visible")),
    e
  );
}
function Qo() {
  const t = window,
    e = document,
    n = e.documentElement,
    r = e.getElementsByTagName("body")[0],
    i = t.innerWidth || n.clientWidth || r.clientWidth,
    o = t.innerHeight || n.clientHeight || r.clientHeight;
  return { width: i, height: o };
}
function ed(t) {
  return t ? Math.abs(t.scrollLeft) : 0;
}
function z0() {
  const t = document.documentElement;
  return (window.pageXOffset || ed(t)) - (t.clientLeft || 0);
}
function B0() {
  const t = document.documentElement;
  return (window.pageYOffset || t.scrollTop) - (t.clientTop || 0);
}
function Jx(t) {
  return t ? getComputedStyle(t).direction === "rtl" : !1;
}
function qd(t, e, n = !0) {
  var r, i, o, s;
  if (t) {
    const a = t.offsetParent
        ? { width: t.offsetWidth, height: t.offsetHeight }
        : $0(t),
      c = a.height,
      u = a.width,
      d = e.offsetHeight,
      f = e.offsetWidth,
      p = e.getBoundingClientRect(),
      h = B0(),
      v = z0(),
      b = Qo();
    let g,
      m,
      _ = "top";
    (p.top + d + c > b.height
      ? ((g = p.top + h - c), (_ = "bottom"), g < 0 && (g = h))
      : (g = d + p.top + h),
      p.left + u > b.width
        ? (m = Math.max(0, p.left + v + f - u))
        : (m = p.left + v),
      Jx(t)
        ? (t.style.insetInlineEnd = m + "px")
        : (t.style.insetInlineStart = m + "px"),
      (t.style.top = g + "px"),
      (t.style.transformOrigin = _),
      n &&
        (t.style.marginTop =
          _ === "bottom"
            ? `calc(${(i = (r = ql(/-anchor-gutter$/)) == null ? void 0 : r.value) != null ? i : "2px"} * -1)`
            : (s = (o = ql(/-anchor-gutter$/)) == null ? void 0 : o.value) !=
                null
              ? s
              : ""));
  }
}
function xc(t, e) {
  t &&
    (typeof e == "string"
      ? (t.style.cssText = e)
      : Object.entries(e || {}).forEach(([n, r]) => (t.style[n] = r)));
}
function In(t, e) {
  return t instanceof HTMLElement ? t.offsetWidth : 0;
}
function Zd(t, e, n = !0) {
  var r, i, o, s;
  if (t) {
    const a = t.offsetParent
        ? { width: t.offsetWidth, height: t.offsetHeight }
        : $0(t),
      c = e.offsetHeight,
      u = e.getBoundingClientRect(),
      d = Qo();
    let f,
      p,
      h = "top";
    (u.top + c + a.height > d.height
      ? ((f = -1 * a.height), (h = "bottom"), u.top + f < 0 && (f = -1 * u.top))
      : (f = c),
      a.width > d.width
        ? (p = u.left * -1)
        : u.left + a.width > d.width
          ? (p = (u.left + a.width - d.width) * -1)
          : (p = 0),
      (t.style.top = f + "px"),
      (t.style.insetInlineStart = p + "px"),
      (t.style.transformOrigin = h),
      n &&
        (t.style.marginTop =
          h === "bottom"
            ? `calc(${(i = (r = ql(/-anchor-gutter$/)) == null ? void 0 : r.value) != null ? i : "2px"} * -1)`
            : (s = (o = ql(/-anchor-gutter$/)) == null ? void 0 : o.value) !=
                null
              ? s
              : ""));
  }
}
function Jd(t) {
  if (t) {
    let e = t.parentNode;
    return (e && e instanceof ShadowRoot && e.host && (e = e.host), e);
  }
  return null;
}
function U0(t) {
  return !!(t !== null && typeof t < "u" && t.nodeName && Jd(t));
}
function fo(t) {
  return typeof Element < "u"
    ? t instanceof Element
    : t !== null &&
        typeof t == "object" &&
        t.nodeType === 1 &&
        typeof t.nodeName == "string";
}
function Qx() {
  if (window.getSelection) {
    const t = window.getSelection() || {};
    t.empty
      ? t.empty()
      : t.removeAllRanges &&
        t.rangeCount > 0 &&
        t.getRangeAt(0).getClientRects().length > 0 &&
        t.removeAllRanges();
  }
}
function Zl(t, e = {}) {
  if (fo(t)) {
    const n = (r, i) => {
      var o, s;
      const a =
        (o = t == null ? void 0 : t.$attrs) != null && o[r]
          ? [(s = t == null ? void 0 : t.$attrs) == null ? void 0 : s[r]]
          : [];
      return [i].flat().reduce((c, u) => {
        if (u != null) {
          const d = typeof u;
          if (d === "string" || d === "number") c.push(u);
          else if (d === "object") {
            const f = Array.isArray(u)
              ? n(r, u)
              : Object.entries(u).map(([p, h]) =>
                  r === "style" && (h || h === 0)
                    ? `${p.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase()}:${h}`
                    : h
                      ? p
                      : void 0,
                );
            c = f.length ? c.concat(f.filter((p) => !!p)) : c;
          }
        }
        return c;
      }, a);
    };
    Object.entries(e).forEach(([r, i]) => {
      if (i != null) {
        const o = r.match(/^on(.+)/);
        o
          ? t.addEventListener(o[1].toLowerCase(), i)
          : r === "p-bind" || r === "pBind"
            ? Zl(t, i)
            : ((i =
                r === "class"
                  ? [...new Set(n("class", i))].join(" ").trim()
                  : r === "style"
                    ? n("style", i).join(";").trim()
                    : i),
              (t.$attrs = t.$attrs || {}) && (t.$attrs[r] = i),
              t.setAttribute(r, i));
      }
    });
  }
}
function Gs(t, e = {}, ...n) {
  if (t) {
    const r = document.createElement(t);
    return (Zl(r, e), r.append(...n), r);
  }
}
function e_(t, e) {
  if (t) {
    t.style.opacity = "0";
    let n = +new Date(),
      r = "0";
    const i = function () {
      ((r = `${+t.style.opacity + (new Date().getTime() - n) / e}`),
        (t.style.opacity = r),
        (n = +new Date()),
        +r < 1 &&
          ("requestAnimationFrame" in window
            ? requestAnimationFrame(i)
            : setTimeout(i, 16)));
    };
    i();
  }
}
function bi(t, e) {
  return fo(t) ? Array.from(t.querySelectorAll(e)) : [];
}
function En(t, e) {
  return fo(t) ? (t.matches(e) ? t : t.querySelector(e)) : null;
}
function Dn(t, e) {
  t && document.activeElement !== t && t.focus(e);
}
function Hn(t, e) {
  if (fo(t)) {
    const n = t.getAttribute(e);
    return isNaN(n) ? (n === "true" || n === "false" ? n === "true" : n) : +n;
  }
}
function sa(t, e = "") {
  const n = bi(
      t,
      `button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e}`,
    ),
    r = [];
  for (const i of n)
    getComputedStyle(i).display != "none" &&
      getComputedStyle(i).visibility != "hidden" &&
      r.push(i);
  return r;
}
function No(t, e) {
  const n = sa(t, e);
  return n.length > 0 ? n[0] : null;
}
function Zi(t) {
  if (t) {
    let e = t.offsetHeight;
    const n = getComputedStyle(t);
    return (
      (e -=
        parseFloat(n.paddingTop) +
        parseFloat(n.paddingBottom) +
        parseFloat(n.borderTopWidth) +
        parseFloat(n.borderBottomWidth)),
      e
    );
  }
  return 0;
}
function xs(t) {
  var e;
  if (t) {
    const n = (e = Jd(t)) == null ? void 0 : e.childNodes;
    let r = 0;
    if (n)
      for (let i = 0; i < n.length; i++) {
        if (n[i] === t) return r;
        n[i].nodeType === 1 && r++;
      }
  }
  return -1;
}
function F0(t, e) {
  const n = sa(t, e);
  return n.length > 0 ? n[n.length - 1] : null;
}
function t_(t) {
  if (t) {
    const e = t.getBoundingClientRect();
    return {
      top:
        e.top +
        (window.pageYOffset ||
          document.documentElement.scrollTop ||
          document.body.scrollTop ||
          0),
      left:
        e.left +
        (window.pageXOffset ||
          ed(document.documentElement) ||
          ed(document.body) ||
          0),
    };
  }
  return { top: "auto", left: "auto" };
}
function Kr(t, e) {
  return t ? t.offsetHeight : 0;
}
function N0(t, e = []) {
  const n = Jd(t);
  return n === null ? e : N0(n, e.concat([n]));
}
function n_(t) {
  const e = [];
  if (t) {
    const n = N0(t),
      r = /(auto|scroll)/,
      i = (o) => {
        try {
          const s = window.getComputedStyle(o, null);
          return (
            r.test(s.getPropertyValue("overflow")) ||
            r.test(s.getPropertyValue("overflowX")) ||
            r.test(s.getPropertyValue("overflowY"))
          );
        } catch {
          return !1;
        }
      };
    for (const o of n) {
      const s = o.nodeType === 1 && o.dataset.scrollselectors;
      if (s) {
        const a = s.split(",");
        for (const c of a) {
          const u = En(o, c);
          u && i(u) && e.push(u);
        }
      }
      o.nodeType !== 9 && i(o) && e.push(o);
    }
  }
  return e;
}
function Ep() {
  if (window.getSelection) return window.getSelection().toString();
  if (document.getSelection) return document.getSelection().toString();
}
function Ji(t) {
  if (t) {
    let e = t.offsetWidth;
    const n = getComputedStyle(t);
    return (
      (e -=
        parseFloat(n.paddingLeft) +
        parseFloat(n.paddingRight) +
        parseFloat(n.borderLeftWidth) +
        parseFloat(n.borderRightWidth)),
      e
    );
  }
  return 0;
}
function r_() {
  return /(android)/i.test(navigator.userAgent);
}
function V0() {
  return !!(
    typeof window < "u" &&
    window.document &&
    window.document.createElement
  );
}
function Tp(t, e = "") {
  return fo(t)
    ? t.matches(`button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e}`)
    : !1;
}
function Jl(t) {
  return !!(t && t.offsetParent != null);
}
function _c() {
  return (
    "ontouchstart" in window ||
    navigator.maxTouchPoints > 0 ||
    navigator.msMaxTouchPoints > 0
  );
}
function Qd(t, e = "", n) {
  fo(t) && n !== null && n !== void 0 && t.setAttribute(e, n);
}
function ef() {
  const t = new Map();
  return {
    on(e, n) {
      let r = t.get(e);
      return (r ? r.push(n) : (r = [n]), t.set(e, r), this);
    },
    off(e, n) {
      const r = t.get(e);
      return (r && r.splice(r.indexOf(n) >>> 0, 1), this);
    },
    emit(e, n) {
      const r = t.get(e);
      r &&
        r.forEach((i) => {
          i(n);
        });
    },
    clear() {
      t.clear();
    },
  };
}
var i_ = Object.defineProperty,
  Ap = Object.getOwnPropertySymbols,
  o_ = Object.prototype.hasOwnProperty,
  s_ = Object.prototype.propertyIsEnumerable,
  Pp = (t, e, n) =>
    e in t
      ? i_(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n })
      : (t[e] = n),
  a_ = (t, e) => {
    for (var n in e || (e = {})) o_.call(e, n) && Pp(t, n, e[n]);
    if (Ap) for (var n of Ap(e)) s_.call(e, n) && Pp(t, n, e[n]);
    return t;
  };
function Ii(t) {
  return (
    t == null ||
    t === "" ||
    (Array.isArray(t) && t.length === 0) ||
    (!(t instanceof Date) &&
      typeof t == "object" &&
      Object.keys(t).length === 0)
  );
}
function td(t, e, n = new WeakSet()) {
  if (t === e) return !0;
  if (
    !t ||
    !e ||
    typeof t != "object" ||
    typeof e != "object" ||
    n.has(t) ||
    n.has(e)
  )
    return !1;
  n.add(t).add(e);
  const r = Array.isArray(t),
    i = Array.isArray(e);
  let o, s, a;
  if (r && i) {
    if (((s = t.length), s != e.length)) return !1;
    for (o = s; o-- !== 0; ) if (!td(t[o], e[o], n)) return !1;
    return !0;
  }
  if (r != i) return !1;
  const c = t instanceof Date,
    u = e instanceof Date;
  if (c != u) return !1;
  if (c && u) return t.getTime() == e.getTime();
  const d = t instanceof RegExp,
    f = e instanceof RegExp;
  if (d != f) return !1;
  if (d && f) return t.toString() == e.toString();
  const p = Object.keys(t);
  if (((s = p.length), s !== Object.keys(e).length)) return !1;
  for (o = s; o-- !== 0; )
    if (!Object.prototype.hasOwnProperty.call(e, p[o])) return !1;
  for (o = s; o-- !== 0; ) if (((a = p[o]), !td(t[a], e[a], n))) return !1;
  return !0;
}
function l_(t, e) {
  return td(t, e);
}
function wc(t) {
  return typeof t == "function" && "call" in t && "apply" in t;
}
function ct(t) {
  return !Ii(t);
}
function Xr(t, e) {
  if (!t || !e) return null;
  try {
    const n = t[e];
    if (ct(n)) return n;
  } catch {}
  if (Object.keys(t).length) {
    if (wc(e)) return e(t);
    if (e.indexOf(".") === -1) return t[e];
    {
      const n = e.split(".");
      let r = t;
      for (let i = 0, o = n.length; i < o; ++i) {
        if (r == null) return null;
        r = r[n[i]];
      }
      return r;
    }
  }
  return null;
}
function kc(t, e, n) {
  return n ? Xr(t, n) === Xr(e, n) : l_(t, e);
}
function c_(t, e) {
  if (t != null && e && e.length) {
    for (const n of e) if (kc(t, n)) return !0;
  }
  return !1;
}
function si(t, e = !0) {
  return (
    t instanceof Object &&
    t.constructor === Object &&
    (e || Object.keys(t).length !== 0)
  );
}
function H0(t = {}, e = {}) {
  const n = a_({}, t);
  return (
    Object.keys(e).forEach((r) => {
      const i = r;
      si(e[i]) && i in t && si(t[i]) ? (n[i] = H0(t[i], e[i])) : (n[i] = e[i]);
    }),
    n
  );
}
function u_(...t) {
  return t.reduce((e, n, r) => (r === 0 ? n : H0(e, n)), {});
}
function Rp(t, e) {
  let n = -1;
  if (ct(t))
    try {
      n = t.findLastIndex(e);
    } catch {
      n = t.lastIndexOf([...t].reverse().find(e));
    }
  return n;
}
function Wn(t, ...e) {
  return wc(t) ? t(...e) : t;
}
function Kn(t, e = !0) {
  return typeof t == "string" && (e || t !== "");
}
function Pr(t) {
  return Kn(t) ? t.replace(/(-|_)/g, "").toLowerCase() : t;
}
function tf(t, e = "", n = {}) {
  const r = Pr(e).split("."),
    i = r.shift();
  if (i) {
    if (si(t)) {
      const o = Object.keys(t).find((s) => Pr(s) === i) || "";
      return tf(Wn(t[o], n), r.join("."), n);
    }
    return;
  }
  return Wn(t, n);
}
function j0(t, e = !0) {
  return Array.isArray(t) && (e || t.length !== 0);
}
function d_(t) {
  return ct(t) && !isNaN(t);
}
function f_(t = "") {
  return ct(t) && t.length === 1 && !!t.match(/\S| /);
}
function p_() {
  return new Intl.Collator(void 0, { numeric: !0 }).compare;
}
function es(t, e) {
  if (e) {
    const n = e.test(t);
    return ((e.lastIndex = 0), n);
  }
  return !1;
}
function h_(...t) {
  return u_(...t);
}
function Ws(t) {
  return (
    t &&
    t
      .replace(/\/\*(?:(?!\*\/)[\s\S])*\*\/|[\r\n\t]+/g, "")
      .replace(/ {2,}/g, " ")
      .replace(/ ([{:}]) /g, "$1")
      .replace(/([;,]) /g, "$1")
      .replace(/ !/g, "!")
      .replace(/: /g, ":")
      .trim()
  );
}
function Zn(t) {
  if (t && /[\xC0-\xFF\u0100-\u017E]/.test(t)) {
    const n = {
      A: /[\xC0-\xC5\u0100\u0102\u0104]/g,
      AE: /[\xC6]/g,
      C: /[\xC7\u0106\u0108\u010A\u010C]/g,
      D: /[\xD0\u010E\u0110]/g,
      E: /[\xC8-\xCB\u0112\u0114\u0116\u0118\u011A]/g,
      G: /[\u011C\u011E\u0120\u0122]/g,
      H: /[\u0124\u0126]/g,
      I: /[\xCC-\xCF\u0128\u012A\u012C\u012E\u0130]/g,
      IJ: /[\u0132]/g,
      J: /[\u0134]/g,
      K: /[\u0136]/g,
      L: /[\u0139\u013B\u013D\u013F\u0141]/g,
      N: /[\xD1\u0143\u0145\u0147\u014A]/g,
      O: /[\xD2-\xD6\xD8\u014C\u014E\u0150]/g,
      OE: /[\u0152]/g,
      R: /[\u0154\u0156\u0158]/g,
      S: /[\u015A\u015C\u015E\u0160]/g,
      T: /[\u0162\u0164\u0166]/g,
      U: /[\xD9-\xDC\u0168\u016A\u016C\u016E\u0170\u0172]/g,
      W: /[\u0174]/g,
      Y: /[\xDD\u0176\u0178]/g,
      Z: /[\u0179\u017B\u017D]/g,
      a: /[\xE0-\xE5\u0101\u0103\u0105]/g,
      ae: /[\xE6]/g,
      c: /[\xE7\u0107\u0109\u010B\u010D]/g,
      d: /[\u010F\u0111]/g,
      e: /[\xE8-\xEB\u0113\u0115\u0117\u0119\u011B]/g,
      g: /[\u011D\u011F\u0121\u0123]/g,
      i: /[\xEC-\xEF\u0129\u012B\u012D\u012F\u0131]/g,
      ij: /[\u0133]/g,
      j: /[\u0135]/g,
      k: /[\u0137,\u0138]/g,
      l: /[\u013A\u013C\u013E\u0140\u0142]/g,
      n: /[\xF1\u0144\u0146\u0148\u014B]/g,
      p: /[\xFE]/g,
      o: /[\xF2-\xF6\xF8\u014D\u014F\u0151]/g,
      oe: /[\u0153]/g,
      r: /[\u0155\u0157\u0159]/g,
      s: /[\u015B\u015D\u015F\u0161]/g,
      t: /[\u0163\u0165\u0167]/g,
      u: /[\xF9-\xFC\u0169\u016B\u016D\u016F\u0171\u0173]/g,
      w: /[\u0175]/g,
      y: /[\xFD\xFF\u0177]/g,
      z: /[\u017A\u017C\u017E]/g,
    };
    for (const r in n) t = t.replace(n[r], r);
  }
  return t;
}
function m_(t) {
  return Kn(t, !1) ? t[0].toUpperCase() + t.slice(1) : t;
}
function G0(t) {
  return Kn(t)
    ? t
        .replace(/(_)/g, "-")
        .replace(/[A-Z]/g, (e, n) => (n === 0 ? e : "-" + e.toLowerCase()))
        .toLowerCase()
    : t;
}
var el = {};
function Ds(t = "pui_id_") {
  return (Object.hasOwn(el, t) || (el[t] = 0), el[t]++, `${t}${el[t]}`);
}
function g_() {
  let t = [];
  const e = (s, a, c = 999) => {
      const u = i(s, a, c),
        d = u.value + (u.key === s ? 0 : c) + 1;
      return (t.push({ key: s, value: d }), d);
    },
    n = (s) => {
      t = t.filter((a) => a.value !== s);
    },
    r = (s, a) => i(s).value,
    i = (s, a, c = 0) =>
      [...t].reverse().find((u) => !0) || { key: s, value: c },
    o = (s) => (s && parseInt(s.style.zIndex, 10)) || 0;
  return {
    get: o,
    set: (s, a, c) => {
      a && (a.style.zIndex = String(e(s, !0, c)));
    },
    clear: (s) => {
      s && (n(o(s)), (s.style.zIndex = ""));
    },
    getCurrent: (s) => r(s),
  };
}
var On = g_(),
  v_ = Object.defineProperty,
  b_ = Object.defineProperties,
  y_ = Object.getOwnPropertyDescriptors,
  Ql = Object.getOwnPropertySymbols,
  W0 = Object.prototype.hasOwnProperty,
  K0 = Object.prototype.propertyIsEnumerable,
  Lp = (t, e, n) =>
    e in t
      ? v_(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n })
      : (t[e] = n),
  hr = (t, e) => {
    for (var n in e || (e = {})) W0.call(e, n) && Lp(t, n, e[n]);
    if (Ql) for (var n of Ql(e)) K0.call(e, n) && Lp(t, n, e[n]);
    return t;
  },
  Jc = (t, e) => b_(t, y_(e)),
  Br = (t, e) => {
    var n = {};
    for (var r in t) W0.call(t, r) && e.indexOf(r) < 0 && (n[r] = t[r]);
    if (t != null && Ql)
      for (var r of Ql(t)) e.indexOf(r) < 0 && K0.call(t, r) && (n[r] = t[r]);
    return n;
  },
  x_ = ef(),
  an = x_,
  nd = /{([^}]*)}/g,
  __ = /(\d+\s+[\+\-\*\/]\s+\d+)/g,
  w_ = /var\([^)]+\)/g;
function k_(t) {
  return si(t) && t.hasOwnProperty("$value") && t.hasOwnProperty("$type")
    ? t.$value
    : t;
}
function S_(t) {
  return t.replaceAll(/ /g, "").replace(/[^\w]/g, "-");
}
function rd(t = "", e = "") {
  return S_(`${Kn(t, !1) && Kn(e, !1) ? `${t}-` : t}${e}`);
}
function X0(t = "", e = "") {
  return `--${rd(t, e)}`;
}
function C_(t = "") {
  const e = (t.match(/{/g) || []).length,
    n = (t.match(/}/g) || []).length;
  return (e + n) % 2 !== 0;
}
function Y0(t, e = "", n = "", r = [], i) {
  if (Kn(t)) {
    const o = t.trim();
    if (C_(o)) return;
    if (es(o, nd)) {
      const s = o.replaceAll(nd, (a) => {
        const u = a
          .replace(/{|}/g, "")
          .split(".")
          .filter((d) => !r.some((f) => es(d, f)));
        return `var(${X0(n, G0(u.join("-")))}${ct(i) ? `, ${i}` : ""})`;
      });
      return es(s.replace(w_, "0"), __) ? `calc(${s})` : s;
    }
    return o;
  } else if (d_(t)) return t;
}
function M_(t, e, n) {
  Kn(e, !1) && t.push(`${e}:${n};`);
}
function Vo(t, e) {
  return t ? `${t}{${e}}` : "";
}
function q0(t, e) {
  if (t.indexOf("dt(") === -1) return t;
  function n(s, a) {
    const c = [];
    let u = 0,
      d = "",
      f = null,
      p = 0;
    for (; u <= s.length; ) {
      const h = s[u];
      if (
        ((h === '"' || h === "'" || h === "`") &&
          s[u - 1] !== "\\" &&
          (f = f === h ? null : h),
        !f &&
          (h === "(" && p++,
          h === ")" && p--,
          (h === "," || u === s.length) && p === 0))
      ) {
        const v = d.trim();
        (v.startsWith("dt(") ? c.push(q0(v, a)) : c.push(r(v)), (d = ""), u++);
        continue;
      }
      (h !== void 0 && (d += h), u++);
    }
    return c;
  }
  function r(s) {
    const a = s[0];
    if ((a === '"' || a === "'" || a === "`") && s[s.length - 1] === a)
      return s.slice(1, -1);
    const c = Number(s);
    return isNaN(c) ? s : c;
  }
  const i = [],
    o = [];
  for (let s = 0; s < t.length; s++)
    if (t[s] === "d" && t.slice(s, s + 3) === "dt(") (o.push(s), (s += 2));
    else if (t[s] === ")" && o.length > 0) {
      const a = o.pop();
      o.length === 0 && i.push([a, s]);
    }
  if (!i.length) return t;
  for (let s = i.length - 1; s >= 0; s--) {
    const [a, c] = i[s],
      u = t.slice(a + 3, c),
      d = n(u, e),
      f = e(...d);
    t = t.slice(0, a) + f + t.slice(c + 1);
  }
  return t;
}
var Z0 = (t) => {
    var e;
    const n = Ct.getTheme(),
      r = id(n, t, void 0, "variable"),
      i =
        (e = r == null ? void 0 : r.match(/--[\w-]+/g)) == null ? void 0 : e[0],
      o = id(n, t, void 0, "value");
    return { name: i, variable: r, value: o };
  },
  no = (...t) => id(Ct.getTheme(), ...t),
  id = (t = {}, e, n, r) => {
    if (e) {
      const { variable: i, options: o } = Ct.defaults || {},
        { prefix: s, transform: a } =
          (t == null ? void 0 : t.options) || o || {},
        c = es(e, nd) ? e : `{${e}}`;
      return r === "value" || (Ii(r) && a === "strict")
        ? Ct.getTokenValue(e)
        : Y0(c, void 0, s, [i.excludedKeyRegex], n);
    }
    return "";
  };
function tl(t, ...e) {
  if (t instanceof Array) {
    const n = t.reduce((r, i, o) => {
      var s;
      return r + i + ((s = Wn(e[o], { dt: no })) != null ? s : "");
    }, "");
    return q0(n, no);
  }
  return Wn(t, { dt: no });
}
function E_(t, e = {}) {
  const n = Ct.defaults.variable,
    {
      prefix: r = n.prefix,
      selector: i = n.selector,
      excludedKeyRegex: o = n.excludedKeyRegex,
    } = e,
    s = [],
    a = [],
    c = [{ node: t, path: r }];
  for (; c.length; ) {
    const { node: d, path: f } = c.pop();
    for (const p in d) {
      const h = d[p],
        v = k_(h),
        g = es(p, o) ? rd(f) : rd(f, G0(p));
      if (si(v)) c.push({ node: v, path: g });
      else {
        const m = X0(g),
          _ = Y0(v, g, r, [o]);
        M_(a, m, _);
        let y = g;
        (r && y.startsWith(r + "-") && (y = y.slice(r.length + 1)),
          s.push(y.replace(/-/g, ".")));
      }
    }
  }
  const u = a.join("");
  return { value: a, tokens: s, declarations: u, css: Vo(i, u) };
}
var ur = {
    regex: {
      rules: {
        class: {
          pattern: /^\.([a-zA-Z][\w-]*)$/,
          resolve(t) {
            return {
              type: "class",
              selector: t,
              matched: this.pattern.test(t.trim()),
            };
          },
        },
        attr: {
          pattern: /^\[(.*)\]$/,
          resolve(t) {
            return {
              type: "attr",
              selector: `:root${t}`,
              matched: this.pattern.test(t.trim()),
            };
          },
        },
        media: {
          pattern: /^@media (.*)$/,
          resolve(t) {
            return {
              type: "media",
              selector: `${t}{:root{[CSS]}}`,
              matched: this.pattern.test(t.trim()),
            };
          },
        },
        system: {
          pattern: /^system$/,
          resolve(t) {
            return {
              type: "system",
              selector: "@media (prefers-color-scheme: dark){:root{[CSS]}}",
              matched: this.pattern.test(t.trim()),
            };
          },
        },
        custom: {
          resolve(t) {
            return { type: "custom", selector: t, matched: !0 };
          },
        },
      },
      resolve(t) {
        const e = Object.keys(this.rules)
          .filter((n) => n !== "custom")
          .map((n) => this.rules[n]);
        return [t].flat().map((n) => {
          var r;
          return (r = e.map((i) => i.resolve(n)).find((i) => i.matched)) != null
            ? r
            : this.rules.custom.resolve(n);
        });
      },
    },
    _toVariables(t, e) {
      return E_(t, { prefix: e == null ? void 0 : e.prefix });
    },
    getCommon({ name: t = "", theme: e = {}, params: n, set: r, defaults: i }) {
      var o, s, a, c, u, d, f;
      const { preset: p, options: h } = e;
      let v, b, g, m, _, y, x;
      if (ct(p) && h.transform !== "strict") {
        const { primitive: C, semantic: w, extend: S } = p,
          D = w || {},
          { colorScheme: k } = D,
          P = Br(D, ["colorScheme"]),
          I = S || {},
          { colorScheme: W } = I,
          X = Br(I, ["colorScheme"]),
          Z = k || {},
          { dark: G } = Z,
          $ = Br(Z, ["dark"]),
          ne = W || {},
          { dark: U } = ne,
          ie = Br(ne, ["dark"]),
          J = ct(C) ? this._toVariables({ primitive: C }, h) : {},
          V = ct(P) ? this._toVariables({ semantic: P }, h) : {},
          re = ct($) ? this._toVariables({ light: $ }, h) : {},
          Ee = ct(G) ? this._toVariables({ dark: G }, h) : {},
          Pe = ct(X) ? this._toVariables({ semantic: X }, h) : {},
          be = ct(ie) ? this._toVariables({ light: ie }, h) : {},
          ce = ct(U) ? this._toVariables({ dark: U }, h) : {},
          [oe, me] = [(o = J.declarations) != null ? o : "", J.tokens],
          [ge, Oe] = [(s = V.declarations) != null ? s : "", V.tokens || []],
          [He, A] = [(a = re.declarations) != null ? a : "", re.tokens || []],
          [j, L] = [(c = Ee.declarations) != null ? c : "", Ee.tokens || []],
          [F, te] = [(u = Pe.declarations) != null ? u : "", Pe.tokens || []],
          [q, ye] = [(d = be.declarations) != null ? d : "", be.tokens || []],
          [xe, Se] = [(f = ce.declarations) != null ? f : "", ce.tokens || []];
        ((v = this.transformCSS(t, oe, "light", "variable", h, r, i)),
          (b = me));
        const Me = this.transformCSS(
            t,
            `${ge}${He}`,
            "light",
            "variable",
            h,
            r,
            i,
          ),
          ae = this.transformCSS(t, `${j}`, "dark", "variable", h, r, i);
        ((g = `${Me}${ae}`), (m = [...new Set([...Oe, ...A, ...L])]));
        const M = this.transformCSS(
            t,
            `${F}${q}color-scheme:light`,
            "light",
            "variable",
            h,
            r,
            i,
          ),
          T = this.transformCSS(
            t,
            `${xe}color-scheme:dark`,
            "dark",
            "variable",
            h,
            r,
            i,
          );
        ((_ = `${M}${T}`),
          (y = [...new Set([...te, ...ye, ...Se])]),
          (x = Wn(p.css, { dt: no })));
      }
      return {
        primitive: { css: v, tokens: b },
        semantic: { css: g, tokens: m },
        global: { css: _, tokens: y },
        style: x,
      };
    },
    getPreset({
      name: t = "",
      preset: e = {},
      options: n,
      params: r,
      set: i,
      defaults: o,
      selector: s,
    }) {
      var a, c, u;
      let d, f, p;
      if (ct(e) && n.transform !== "strict") {
        const h = t.replace("-directive", ""),
          v = e,
          { colorScheme: b, extend: g, css: m } = v,
          _ = Br(v, ["colorScheme", "extend", "css"]),
          y = g || {},
          { colorScheme: x } = y,
          C = Br(y, ["colorScheme"]),
          w = b || {},
          { dark: S } = w,
          D = Br(w, ["dark"]),
          k = x || {},
          { dark: P } = k,
          I = Br(k, ["dark"]),
          W = ct(_) ? this._toVariables({ [h]: hr(hr({}, _), C) }, n) : {},
          X = ct(D) ? this._toVariables({ [h]: hr(hr({}, D), I) }, n) : {},
          Z = ct(S) ? this._toVariables({ [h]: hr(hr({}, S), P) }, n) : {},
          [G, $] = [(a = W.declarations) != null ? a : "", W.tokens || []],
          [ne, U] = [(c = X.declarations) != null ? c : "", X.tokens || []],
          [ie, J] = [(u = Z.declarations) != null ? u : "", Z.tokens || []],
          V = this.transformCSS(
            h,
            `${G}${ne}`,
            "light",
            "variable",
            n,
            i,
            o,
            s,
          ),
          re = this.transformCSS(h, ie, "dark", "variable", n, i, o, s);
        ((d = `${V}${re}`),
          (f = [...new Set([...$, ...U, ...J])]),
          (p = Wn(m, { dt: no })));
      }
      return { css: d, tokens: f, style: p };
    },
    getPresetC({
      name: t = "",
      theme: e = {},
      params: n,
      set: r,
      defaults: i,
    }) {
      var o;
      const { preset: s, options: a } = e,
        c = (o = s == null ? void 0 : s.components) == null ? void 0 : o[t];
      return this.getPreset({
        name: t,
        preset: c,
        options: a,
        params: n,
        set: r,
        defaults: i,
      });
    },
    getPresetD({
      name: t = "",
      theme: e = {},
      params: n,
      set: r,
      defaults: i,
    }) {
      var o, s;
      const a = t.replace("-directive", ""),
        { preset: c, options: u } = e,
        d =
          ((o = c == null ? void 0 : c.components) == null ? void 0 : o[a]) ||
          ((s = c == null ? void 0 : c.directives) == null ? void 0 : s[a]);
      return this.getPreset({
        name: a,
        preset: d,
        options: u,
        params: n,
        set: r,
        defaults: i,
      });
    },
    applyDarkColorScheme(t) {
      return !(t.darkModeSelector === "none" || t.darkModeSelector === !1);
    },
    getColorSchemeOption(t, e) {
      var n;
      return this.applyDarkColorScheme(t)
        ? this.regex.resolve(
            t.darkModeSelector === !0
              ? e.options.darkModeSelector
              : (n = t.darkModeSelector) != null
                ? n
                : e.options.darkModeSelector,
          )
        : [];
    },
    getLayerOrder(t, e = {}, n, r) {
      const { cssLayer: i } = e;
      return i ? `@layer ${Wn(i.order || "primeui", n)}` : "";
    },
    getCommonStyleSheet({
      name: t = "",
      theme: e = {},
      params: n,
      props: r = {},
      set: i,
      defaults: o,
    }) {
      const s = this.getCommon({
          name: t,
          theme: e,
          params: n,
          set: i,
          defaults: o,
        }),
        a = Object.entries(r)
          .reduce((c, [u, d]) => c.push(`${u}="${d}"`) && c, [])
          .join(" ");
      return Object.entries(s || {})
        .reduce((c, [u, d]) => {
          if (si(d) && Object.hasOwn(d, "css")) {
            const f = Ws(d.css),
              p = `${u}-variables`;
            c.push(
              `<style type="text/css" data-primevue-style-id="${p}" ${a}>${f}</style>`,
            );
          }
          return c;
        }, [])
        .join("");
    },
    getStyleSheet({
      name: t = "",
      theme: e = {},
      params: n,
      props: r = {},
      set: i,
      defaults: o,
    }) {
      var s;
      const a = { name: t, theme: e, params: n, set: i, defaults: o },
        c =
          (s = t.includes("-directive")
            ? this.getPresetD(a)
            : this.getPresetC(a)) == null
            ? void 0
            : s.css,
        u = Object.entries(r)
          .reduce((d, [f, p]) => d.push(`${f}="${p}"`) && d, [])
          .join(" ");
      return c
        ? `<style type="text/css" data-primevue-style-id="${t}-variables" ${u}>${Ws(c)}</style>`
        : "";
    },
    createTokens(t = {}, e, n = "", r = "", i = {}) {
      return {};
    },
    getTokenValue(t, e, n) {
      var r;
      const o = ((c) =>
          c
            .split(".")
            .filter((d) => !es(d.toLowerCase(), n.variable.excludedKeyRegex))
            .join("."))(e),
        s = e.includes("colorScheme.light")
          ? "light"
          : e.includes("colorScheme.dark")
            ? "dark"
            : void 0,
        a = [(r = t[o]) == null ? void 0 : r.computed(s)]
          .flat()
          .filter((c) => c);
      return a.length === 1
        ? a[0].value
        : a.reduce(
            (c = {}, u) => {
              const d = u,
                { colorScheme: f } = d,
                p = Br(d, ["colorScheme"]);
              return ((c[f] = p), c);
            },
            void 0,
          );
    },
    getSelectorRule(t, e, n, r) {
      return n === "class" || n === "attr"
        ? Vo(ct(e) ? `${t}${e},${t} ${e}` : t, r)
        : Vo(t, ct(e) ? Vo(e, r) : r);
    },
    transformCSS(t, e, n, r, i = {}, o, s, a) {
      if (ct(e)) {
        const { cssLayer: c } = i;
        if (r !== "style") {
          const u = this.getColorSchemeOption(i, s);
          e =
            n === "dark"
              ? u.reduce(
                  (d, { type: f, selector: p }) => (
                    ct(p) &&
                      (d += p.includes("[CSS]")
                        ? p.replace("[CSS]", e)
                        : this.getSelectorRule(p, a, f, e)),
                    d
                  ),
                  "",
                )
              : Vo(a ?? ":root", e);
        }
        if (c) {
          const u = { name: "primeui" };
          (si(c) && (u.name = Wn(c.name, { name: t, type: r })),
            ct(u.name) &&
              ((e = Vo(`@layer ${u.name}`, e)),
              o == null || o.layerNames(u.name)));
        }
        return e;
      }
      return "";
    },
  },
  Ct = {
    defaults: {
      variable: {
        prefix: "p",
        selector: ":root",
        excludedKeyRegex:
          /^(primitive|semantic|components|directives|variables|colorscheme|light|dark|common|root|states|extend|css)$/gi,
      },
      options: { prefix: "p", darkModeSelector: "system", cssLayer: !1 },
    },
    _theme: void 0,
    _layerNames: new Set(),
    _loadedStyleNames: new Set(),
    _loadingStyles: new Set(),
    _tokens: {},
    update(t = {}) {
      const { theme: e } = t;
      e &&
        ((this._theme = Jc(hr({}, e), {
          options: hr(hr({}, this.defaults.options), e.options),
        })),
        (this._tokens = ur.createTokens(this.preset, this.defaults)),
        this.clearLoadedStyleNames());
    },
    get theme() {
      return this._theme;
    },
    get preset() {
      var t;
      return ((t = this.theme) == null ? void 0 : t.preset) || {};
    },
    get options() {
      var t;
      return ((t = this.theme) == null ? void 0 : t.options) || {};
    },
    get tokens() {
      return this._tokens;
    },
    getTheme() {
      return this.theme;
    },
    setTheme(t) {
      (this.update({ theme: t }), an.emit("theme:change", t));
    },
    getPreset() {
      return this.preset;
    },
    setPreset(t) {
      ((this._theme = Jc(hr({}, this.theme), { preset: t })),
        (this._tokens = ur.createTokens(t, this.defaults)),
        this.clearLoadedStyleNames(),
        an.emit("preset:change", t),
        an.emit("theme:change", this.theme));
    },
    getOptions() {
      return this.options;
    },
    setOptions(t) {
      ((this._theme = Jc(hr({}, this.theme), { options: t })),
        this.clearLoadedStyleNames(),
        an.emit("options:change", t),
        an.emit("theme:change", this.theme));
    },
    getLayerNames() {
      return [...this._layerNames];
    },
    setLayerNames(t) {
      this._layerNames.add(t);
    },
    getLoadedStyleNames() {
      return this._loadedStyleNames;
    },
    isStyleNameLoaded(t) {
      return this._loadedStyleNames.has(t);
    },
    setLoadedStyleName(t) {
      this._loadedStyleNames.add(t);
    },
    deleteLoadedStyleName(t) {
      this._loadedStyleNames.delete(t);
    },
    clearLoadedStyleNames() {
      this._loadedStyleNames.clear();
    },
    getTokenValue(t) {
      return ur.getTokenValue(this.tokens, t, this.defaults);
    },
    getCommon(t = "", e) {
      return ur.getCommon({
        name: t,
        theme: this.theme,
        params: e,
        defaults: this.defaults,
        set: { layerNames: this.setLayerNames.bind(this) },
      });
    },
    getComponent(t = "", e) {
      const n = {
        name: t,
        theme: this.theme,
        params: e,
        defaults: this.defaults,
        set: { layerNames: this.setLayerNames.bind(this) },
      };
      return ur.getPresetC(n);
    },
    getDirective(t = "", e) {
      const n = {
        name: t,
        theme: this.theme,
        params: e,
        defaults: this.defaults,
        set: { layerNames: this.setLayerNames.bind(this) },
      };
      return ur.getPresetD(n);
    },
    getCustomPreset(t = "", e, n, r) {
      const i = {
        name: t,
        preset: e,
        options: this.options,
        selector: n,
        params: r,
        defaults: this.defaults,
        set: { layerNames: this.setLayerNames.bind(this) },
      };
      return ur.getPreset(i);
    },
    getLayerOrderCSS(t = "") {
      return ur.getLayerOrder(
        t,
        this.options,
        { names: this.getLayerNames() },
        this.defaults,
      );
    },
    transformCSS(t = "", e, n = "style", r) {
      return ur.transformCSS(
        t,
        e,
        r,
        n,
        this.options,
        { layerNames: this.setLayerNames.bind(this) },
        this.defaults,
      );
    },
    getCommonStyleSheet(t = "", e, n = {}) {
      return ur.getCommonStyleSheet({
        name: t,
        theme: this.theme,
        params: e,
        props: n,
        defaults: this.defaults,
        set: { layerNames: this.setLayerNames.bind(this) },
      });
    },
    getStyleSheet(t, e, n = {}) {
      return ur.getStyleSheet({
        name: t,
        theme: this.theme,
        params: e,
        props: n,
        defaults: this.defaults,
        set: { layerNames: this.setLayerNames.bind(this) },
      });
    },
    onStyleMounted(t) {
      this._loadingStyles.add(t);
    },
    onStyleUpdated(t) {
      this._loadingStyles.add(t);
    },
    onStyleLoaded(t, { name: e }) {
      this._loadingStyles.size &&
        (this._loadingStyles.delete(e),
        an.emit(`theme:${e}:load`, t),
        !this._loadingStyles.size && an.emit("theme:load"));
    },
  },
  Si = {
    _loadedStyleNames: new Set(),
    getLoadedStyleNames: function () {
      return this._loadedStyleNames;
    },
    isStyleNameLoaded: function (e) {
      return this._loadedStyleNames.has(e);
    },
    setLoadedStyleName: function (e) {
      this._loadedStyleNames.add(e);
    },
    deleteLoadedStyleName: function (e) {
      this._loadedStyleNames.delete(e);
    },
    clearLoadedStyleNames: function () {
      this._loadedStyleNames.clear();
    },
  },
  T_ = `
    *,
    ::before,
    ::after {
        box-sizing: border-box;
    }

    /* Non vue overlay animations */
    .p-connected-overlay {
        opacity: 0;
        transform: scaleY(0.8);
        transition:
            transform 0.12s cubic-bezier(0, 0, 0.2, 1),
            opacity 0.12s cubic-bezier(0, 0, 0.2, 1);
    }

    .p-connected-overlay-visible {
        opacity: 1;
        transform: scaleY(1);
    }

    .p-connected-overlay-hidden {
        opacity: 0;
        transform: scaleY(1);
        transition: opacity 0.1s linear;
    }

    /* Vue based overlay animations */
    .p-connected-overlay-enter-from {
        opacity: 0;
        transform: scaleY(0.8);
    }

    .p-connected-overlay-leave-to {
        opacity: 0;
    }

    .p-connected-overlay-enter-active {
        transition:
            transform 0.12s cubic-bezier(0, 0, 0.2, 1),
            opacity 0.12s cubic-bezier(0, 0, 0.2, 1);
    }

    .p-connected-overlay-leave-active {
        transition: opacity 0.1s linear;
    }

    /* Toggleable Content */
    .p-toggleable-content-enter-from,
    .p-toggleable-content-leave-to {
        max-height: 0;
    }

    .p-toggleable-content-enter-to,
    .p-toggleable-content-leave-from {
        max-height: 1000px;
    }

    .p-toggleable-content-leave-active {
        overflow: hidden;
        transition: max-height 0.45s cubic-bezier(0, 1, 0, 1);
    }

    .p-toggleable-content-enter-active {
        overflow: hidden;
        transition: max-height 1s ease-in-out;
    }

    .p-disabled,
    .p-disabled * {
        cursor: default;
        pointer-events: none;
        user-select: none;
    }

    .p-disabled,
    .p-component:disabled {
        opacity: dt('disabled.opacity');
    }

    .pi {
        font-size: dt('icon.size');
    }

    .p-icon {
        width: dt('icon.size');
        height: dt('icon.size');
    }

    .p-overlay-mask {
        background: dt('mask.background');
        color: dt('mask.color');
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    .p-overlay-mask-enter {
        animation: p-overlay-mask-enter-animation dt('mask.transition.duration') forwards;
    }

    .p-overlay-mask-leave {
        animation: p-overlay-mask-leave-animation dt('mask.transition.duration') forwards;
    }

    @keyframes p-overlay-mask-enter-animation {
        from {
            background: transparent;
        }
        to {
            background: dt('mask.background');
        }
    }
    @keyframes p-overlay-mask-leave-animation {
        from {
            background: dt('mask.background');
        }
        to {
            background: transparent;
        }
    }
`;
function aa(t) {
  "@babel/helpers - typeof";
  return (
    (aa =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    aa(t)
  );
}
function Dp(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    (e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r));
  }
  return n;
}
function Ip(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? Dp(Object(n), !0).forEach(function (r) {
          A_(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
        : Dp(Object(n)).forEach(function (r) {
            Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
          });
  }
  return t;
}
function A_(t, e, n) {
  return (
    (e = P_(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function P_(t) {
  var e = R_(t, "string");
  return aa(e) == "symbol" ? e : e + "";
}
function R_(t, e) {
  if (aa(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (aa(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
function L_(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
  na() && na().components ? $t(t) : e ? t() : ao(t);
}
var D_ = 0;
function I_(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
    n = N(!1),
    r = N(t),
    i = N(null),
    o = V0() ? window.document : void 0,
    s = e.document,
    a = s === void 0 ? o : s,
    c = e.immediate,
    u = c === void 0 ? !0 : c,
    d = e.manual,
    f = d === void 0 ? !1 : d,
    p = e.name,
    h = p === void 0 ? "style_".concat(++D_) : p,
    v = e.id,
    b = v === void 0 ? void 0 : v,
    g = e.media,
    m = g === void 0 ? void 0 : g,
    _ = e.nonce,
    y = _ === void 0 ? void 0 : _,
    x = e.first,
    C = x === void 0 ? !1 : x,
    w = e.onMounted,
    S = w === void 0 ? void 0 : w,
    D = e.onUpdated,
    k = D === void 0 ? void 0 : D,
    P = e.onLoad,
    I = P === void 0 ? void 0 : P,
    W = e.props,
    X = W === void 0 ? {} : W,
    Z = function () {},
    G = function (U) {
      var ie =
        arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      if (a) {
        var J = Ip(Ip({}, X), ie),
          V = J.name || h,
          re = J.id || b,
          Ee = J.nonce || y;
        ((i.value =
          a.querySelector('style[data-primevue-style-id="'.concat(V, '"]')) ||
          a.getElementById(re) ||
          a.createElement("style")),
          i.value.isConnected ||
            ((r.value = U || t),
            Zl(i.value, { type: "text/css", id: re, media: m, nonce: Ee }),
            C ? a.head.prepend(i.value) : a.head.appendChild(i.value),
            Qd(i.value, "data-primevue-style-id", V),
            Zl(i.value, J),
            (i.value.onload = function (Pe) {
              return I == null ? void 0 : I(Pe, { name: V });
            }),
            S == null || S(V)),
          !n.value &&
            ((Z = Ft(
              r,
              function (Pe) {
                ((i.value.textContent = Pe), k == null || k(V));
              },
              { immediate: !0 },
            )),
            (n.value = !0)));
      }
    },
    $ = function () {
      !a ||
        !n.value ||
        (Z(),
        U0(i.value) && a.head.removeChild(i.value),
        (n.value = !1),
        (i.value = null));
    };
  return (
    u && !f && L_(G),
    { id: b, name: h, el: i, css: r, unload: $, load: G, isLoaded: Dd(n) }
  );
}
function la(t) {
  "@babel/helpers - typeof";
  return (
    (la =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    la(t)
  );
}
var Op, $p, zp, Bp;
function Up(t, e) {
  return B_(t) || z_(t, e) || $_(t, e) || O_();
}
function O_() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function $_(t, e) {
  if (t) {
    if (typeof t == "string") return Fp(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return (
      n === "Object" && t.constructor && (n = t.constructor.name),
      n === "Map" || n === "Set"
        ? Array.from(t)
        : n === "Arguments" ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          ? Fp(t, e)
          : void 0
    );
  }
}
function Fp(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, r = Array(e); n < e; n++) r[n] = t[n];
  return r;
}
function z_(t, e) {
  var n =
    t == null
      ? null
      : (typeof Symbol < "u" && t[Symbol.iterator]) || t["@@iterator"];
  if (n != null) {
    var r,
      i,
      o,
      s,
      a = [],
      c = !0,
      u = !1;
    try {
      if (((o = (n = n.call(t)).next), e !== 0))
        for (
          ;
          !(c = (r = o.call(n)).done) && (a.push(r.value), a.length !== e);
          c = !0
        );
    } catch (d) {
      ((u = !0), (i = d));
    } finally {
      try {
        if (!c && n.return != null && ((s = n.return()), Object(s) !== s))
          return;
      } finally {
        if (u) throw i;
      }
    }
    return a;
  }
}
function B_(t) {
  if (Array.isArray(t)) return t;
}
function Np(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    (e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r));
  }
  return n;
}
function Qc(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? Np(Object(n), !0).forEach(function (r) {
          U_(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
        : Np(Object(n)).forEach(function (r) {
            Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
          });
  }
  return t;
}
function U_(t, e, n) {
  return (
    (e = F_(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function F_(t) {
  var e = N_(t, "string");
  return la(e) == "symbol" ? e : e + "";
}
function N_(t, e) {
  if (la(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (la(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
function nl(t, e) {
  return (
    e || (e = t.slice(0)),
    Object.freeze(
      Object.defineProperties(t, { raw: { value: Object.freeze(e) } }),
    )
  );
}
var V_ = function (e) {
    var n = e.dt;
    return `
.p-hidden-accessible {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    opacity: 0;
    overflow: hidden;
    padding: 0;
    pointer-events: none;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}

.p-overflow-hidden {
    overflow: hidden;
    padding-right: `.concat(
      n("scrollbar.width"),
      `;
}
`,
    );
  },
  H_ = {},
  j_ = {},
  ot = {
    name: "base",
    css: V_,
    style: T_,
    classes: H_,
    inlineStyles: j_,
    load: function (e) {
      var n =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
        r =
          arguments.length > 2 && arguments[2] !== void 0
            ? arguments[2]
            : function (o) {
                return o;
              },
        i = r(tl(Op || (Op = nl(["", ""])), e));
      return ct(i) ? I_(Ws(i), Qc({ name: this.name }, n)) : {};
    },
    loadCSS: function () {
      var e =
        arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return this.load(this.css, e);
    },
    loadStyle: function () {
      var e = this,
        n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
        r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
      return this.load(this.style, n, function () {
        var i =
          arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
        return Ct.transformCSS(
          n.name || e.name,
          "".concat(i).concat(tl($p || ($p = nl(["", ""])), r)),
        );
      });
    },
    getCommonTheme: function (e) {
      return Ct.getCommon(this.name, e);
    },
    getComponentTheme: function (e) {
      return Ct.getComponent(this.name, e);
    },
    getDirectiveTheme: function (e) {
      return Ct.getDirective(this.name, e);
    },
    getPresetTheme: function (e, n, r) {
      return Ct.getCustomPreset(this.name, e, n, r);
    },
    getLayerOrderThemeCSS: function () {
      return Ct.getLayerOrderCSS(this.name);
    },
    getStyleSheet: function () {
      var e =
          arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "",
        n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      if (this.css) {
        var r = Wn(this.css, { dt: no }) || "",
          i = Ws(tl(zp || (zp = nl(["", "", ""])), r, e)),
          o = Object.entries(n)
            .reduce(function (s, a) {
              var c = Up(a, 2),
                u = c[0],
                d = c[1];
              return s.push("".concat(u, '="').concat(d, '"')) && s;
            }, [])
            .join(" ");
        return ct(i)
          ? '<style type="text/css" data-primevue-style-id="'
              .concat(this.name, '" ')
              .concat(o, ">")
              .concat(i, "</style>")
          : "";
      }
      return "";
    },
    getCommonThemeStyleSheet: function (e) {
      var n =
        arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      return Ct.getCommonStyleSheet(this.name, e, n);
    },
    getThemeStyleSheet: function (e) {
      var n =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
        r = [Ct.getStyleSheet(this.name, e, n)];
      if (this.style) {
        var i =
            this.name === "base"
              ? "global-style"
              : "".concat(this.name, "-style"),
          o = tl(Bp || (Bp = nl(["", ""])), Wn(this.style, { dt: no })),
          s = Ws(Ct.transformCSS(i, o)),
          a = Object.entries(n)
            .reduce(function (c, u) {
              var d = Up(u, 2),
                f = d[0],
                p = d[1];
              return c.push("".concat(f, '="').concat(p, '"')) && c;
            }, [])
            .join(" ");
        ct(s) &&
          r.push(
            '<style type="text/css" data-primevue-style-id="'
              .concat(i, '" ')
              .concat(a, ">")
              .concat(s, "</style>"),
          );
      }
      return r.join("");
    },
    extend: function (e) {
      return Qc(Qc({}, this), {}, { css: void 0, style: void 0 }, e);
    },
  };
function G_() {
  var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "pc",
    e = cy();
  return "".concat(t).concat(e.replace("v-", "").replaceAll("-", "_"));
}
var Vp = ot.extend({ name: "common" });
function ca(t) {
  "@babel/helpers - typeof";
  return (
    (ca =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    ca(t)
  );
}
function W_(t) {
  return ev(t) || K_(t) || Q0(t) || J0();
}
function K_(t) {
  if (
    (typeof Symbol < "u" && t[Symbol.iterator] != null) ||
    t["@@iterator"] != null
  )
    return Array.from(t);
}
function _s(t, e) {
  return ev(t) || X_(t, e) || Q0(t, e) || J0();
}
function J0() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Q0(t, e) {
  if (t) {
    if (typeof t == "string") return Hp(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return (
      n === "Object" && t.constructor && (n = t.constructor.name),
      n === "Map" || n === "Set"
        ? Array.from(t)
        : n === "Arguments" ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          ? Hp(t, e)
          : void 0
    );
  }
}
function Hp(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, r = Array(e); n < e; n++) r[n] = t[n];
  return r;
}
function X_(t, e) {
  var n =
    t == null
      ? null
      : (typeof Symbol < "u" && t[Symbol.iterator]) || t["@@iterator"];
  if (n != null) {
    var r,
      i,
      o,
      s,
      a = [],
      c = !0,
      u = !1;
    try {
      if (((o = (n = n.call(t)).next), e === 0)) {
        if (Object(n) !== n) return;
        c = !1;
      } else
        for (
          ;
          !(c = (r = o.call(n)).done) && (a.push(r.value), a.length !== e);
          c = !0
        );
    } catch (d) {
      ((u = !0), (i = d));
    } finally {
      try {
        if (!c && n.return != null && ((s = n.return()), Object(s) !== s))
          return;
      } finally {
        if (u) throw i;
      }
    }
    return a;
  }
}
function ev(t) {
  if (Array.isArray(t)) return t;
}
function jp(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    (e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r));
  }
  return n;
}
function ht(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? jp(Object(n), !0).forEach(function (r) {
          Is(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
        : jp(Object(n)).forEach(function (r) {
            Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
          });
  }
  return t;
}
function Is(t, e, n) {
  return (
    (e = Y_(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function Y_(t) {
  var e = q_(t, "string");
  return ca(e) == "symbol" ? e : e + "";
}
function q_(t, e) {
  if (ca(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (ca(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var lr = {
    name: "BaseComponent",
    props: {
      pt: { type: Object, default: void 0 },
      ptOptions: { type: Object, default: void 0 },
      unstyled: { type: Boolean, default: void 0 },
      dt: { type: Object, default: void 0 },
    },
    inject: { $parentInstance: { default: void 0 } },
    watch: {
      isUnstyled: {
        immediate: !0,
        handler: function (e) {
          (an.off("theme:change", this._loadCoreStyles),
            e ||
              (this._loadCoreStyles(),
              this._themeChangeListener(this._loadCoreStyles)));
        },
      },
      dt: {
        immediate: !0,
        handler: function (e, n) {
          var r = this;
          (an.off("theme:change", this._themeScopedListener),
            e
              ? (this._loadScopedThemeStyles(e),
                (this._themeScopedListener = function () {
                  return r._loadScopedThemeStyles(e);
                }),
                this._themeChangeListener(this._themeScopedListener))
              : this._unloadScopedThemeStyles());
        },
      },
    },
    scopedStyleEl: void 0,
    rootEl: void 0,
    uid: void 0,
    $attrSelector: void 0,
    beforeCreate: function () {
      var e,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        d,
        f,
        p = (e = this.pt) === null || e === void 0 ? void 0 : e._usept,
        h = p
          ? (n = this.pt) === null ||
            n === void 0 ||
            (n = n.originalValue) === null ||
            n === void 0
            ? void 0
            : n[this.$.type.name]
          : void 0,
        v = p
          ? (r = this.pt) === null ||
            r === void 0 ||
            (r = r.value) === null ||
            r === void 0
            ? void 0
            : r[this.$.type.name]
          : this.pt;
      (i = v || h) === null ||
        i === void 0 ||
        (i = i.hooks) === null ||
        i === void 0 ||
        (o = i.onBeforeCreate) === null ||
        o === void 0 ||
        o.call(i);
      var b =
          (s = this.$primevueConfig) === null ||
          s === void 0 ||
          (s = s.pt) === null ||
          s === void 0
            ? void 0
            : s._usept,
        g = b
          ? (a = this.$primevue) === null ||
            a === void 0 ||
            (a = a.config) === null ||
            a === void 0 ||
            (a = a.pt) === null ||
            a === void 0
            ? void 0
            : a.originalValue
          : void 0,
        m = b
          ? (c = this.$primevue) === null ||
            c === void 0 ||
            (c = c.config) === null ||
            c === void 0 ||
            (c = c.pt) === null ||
            c === void 0
            ? void 0
            : c.value
          : (u = this.$primevue) === null ||
              u === void 0 ||
              (u = u.config) === null ||
              u === void 0
            ? void 0
            : u.pt;
      ((d = m || g) === null ||
        d === void 0 ||
        (d = d[this.$.type.name]) === null ||
        d === void 0 ||
        (d = d.hooks) === null ||
        d === void 0 ||
        (f = d.onBeforeCreate) === null ||
        f === void 0 ||
        f.call(d),
        (this.$attrSelector = G_()),
        (this.uid =
          this.$attrs.id || this.$attrSelector.replace("pc", "pv_id_")));
    },
    created: function () {
      this._hook("onCreated");
    },
    beforeMount: function () {
      var e;
      ((this.rootEl = En(
        fo(this.$el)
          ? this.$el
          : (e = this.$el) === null || e === void 0
            ? void 0
            : e.parentElement,
        "[".concat(this.$attrSelector, "]"),
      )),
        this.rootEl &&
          (this.rootEl.$pc = ht(
            { name: this.$.type.name, attrSelector: this.$attrSelector },
            this.$params,
          )),
        this._loadStyles(),
        this._hook("onBeforeMount"));
    },
    mounted: function () {
      this._hook("onMounted");
    },
    beforeUpdate: function () {
      this._hook("onBeforeUpdate");
    },
    updated: function () {
      this._hook("onUpdated");
    },
    beforeUnmount: function () {
      this._hook("onBeforeUnmount");
    },
    unmounted: function () {
      (this._removeThemeListeners(),
        this._unloadScopedThemeStyles(),
        this._hook("onUnmounted"));
    },
    methods: {
      _hook: function (e) {
        if (!this.$options.hostName) {
          var n = this._usePT(
              this._getPT(this.pt, this.$.type.name),
              this._getOptionValue,
              "hooks.".concat(e),
            ),
            r = this._useDefaultPT(this._getOptionValue, "hooks.".concat(e));
          (n == null || n(), r == null || r());
        }
      },
      _mergeProps: function (e) {
        for (
          var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1;
          i < n;
          i++
        )
          r[i - 1] = arguments[i];
        return wc(e) ? e.apply(void 0, r) : Q.apply(void 0, r);
      },
      _load: function () {
        (Si.isStyleNameLoaded("base") ||
          (ot.loadCSS(this.$styleOptions),
          this._loadGlobalStyles(),
          Si.setLoadedStyleName("base")),
          this._loadThemeStyles());
      },
      _loadStyles: function () {
        (this._load(), this._themeChangeListener(this._load));
      },
      _loadCoreStyles: function () {
        var e, n;
        !Si.isStyleNameLoaded(
          (e = this.$style) === null || e === void 0 ? void 0 : e.name,
        ) &&
          (n = this.$style) !== null &&
          n !== void 0 &&
          n.name &&
          (Vp.loadCSS(this.$styleOptions),
          this.$options.style && this.$style.loadCSS(this.$styleOptions),
          Si.setLoadedStyleName(this.$style.name));
      },
      _loadGlobalStyles: function () {
        var e = this._useGlobalPT(
          this._getOptionValue,
          "global.css",
          this.$params,
        );
        ct(e) && ot.load(e, ht({ name: "global" }, this.$styleOptions));
      },
      _loadThemeStyles: function () {
        var e, n;
        if (!(this.isUnstyled || this.$theme === "none")) {
          if (!Ct.isStyleNameLoaded("common")) {
            var r,
              i,
              o =
                ((r = this.$style) === null ||
                r === void 0 ||
                (i = r.getCommonTheme) === null ||
                i === void 0
                  ? void 0
                  : i.call(r)) || {},
              s = o.primitive,
              a = o.semantic,
              c = o.global,
              u = o.style;
            (ot.load(
              s == null ? void 0 : s.css,
              ht({ name: "primitive-variables" }, this.$styleOptions),
            ),
              ot.load(
                a == null ? void 0 : a.css,
                ht({ name: "semantic-variables" }, this.$styleOptions),
              ),
              ot.load(
                c == null ? void 0 : c.css,
                ht({ name: "global-variables" }, this.$styleOptions),
              ),
              ot.loadStyle(ht({ name: "global-style" }, this.$styleOptions), u),
              Ct.setLoadedStyleName("common"));
          }
          if (
            !Ct.isStyleNameLoaded(
              (e = this.$style) === null || e === void 0 ? void 0 : e.name,
            ) &&
            (n = this.$style) !== null &&
            n !== void 0 &&
            n.name
          ) {
            var d,
              f,
              p,
              h,
              v =
                ((d = this.$style) === null ||
                d === void 0 ||
                (f = d.getComponentTheme) === null ||
                f === void 0
                  ? void 0
                  : f.call(d)) || {},
              b = v.css,
              g = v.style;
            ((p = this.$style) === null ||
              p === void 0 ||
              p.load(
                b,
                ht(
                  { name: "".concat(this.$style.name, "-variables") },
                  this.$styleOptions,
                ),
              ),
              (h = this.$style) === null ||
                h === void 0 ||
                h.loadStyle(
                  ht(
                    { name: "".concat(this.$style.name, "-style") },
                    this.$styleOptions,
                  ),
                  g,
                ),
              Ct.setLoadedStyleName(this.$style.name));
          }
          if (!Ct.isStyleNameLoaded("layer-order")) {
            var m,
              _,
              y =
                (m = this.$style) === null ||
                m === void 0 ||
                (_ = m.getLayerOrderThemeCSS) === null ||
                _ === void 0
                  ? void 0
                  : _.call(m);
            (ot.load(
              y,
              ht({ name: "layer-order", first: !0 }, this.$styleOptions),
            ),
              Ct.setLoadedStyleName("layer-order"));
          }
        }
      },
      _loadScopedThemeStyles: function (e) {
        var n,
          r,
          i,
          o =
            ((n = this.$style) === null ||
            n === void 0 ||
            (r = n.getPresetTheme) === null ||
            r === void 0
              ? void 0
              : r.call(n, e, "[".concat(this.$attrSelector, "]"))) || {},
          s = o.css,
          a =
            (i = this.$style) === null || i === void 0
              ? void 0
              : i.load(
                  s,
                  ht(
                    {
                      name: ""
                        .concat(this.$attrSelector, "-")
                        .concat(this.$style.name),
                    },
                    this.$styleOptions,
                  ),
                );
        this.scopedStyleEl = a.el;
      },
      _unloadScopedThemeStyles: function () {
        var e;
        (e = this.scopedStyleEl) === null ||
          e === void 0 ||
          (e = e.value) === null ||
          e === void 0 ||
          e.remove();
      },
      _themeChangeListener: function () {
        var e =
          arguments.length > 0 && arguments[0] !== void 0
            ? arguments[0]
            : function () {};
        (Si.clearLoadedStyleNames(), an.on("theme:change", e));
      },
      _removeThemeListeners: function () {
        (an.off("theme:change", this._loadCoreStyles),
          an.off("theme:change", this._load),
          an.off("theme:change", this._themeScopedListener));
      },
      _getHostInstance: function (e) {
        return e
          ? this.$options.hostName
            ? e.$.type.name === this.$options.hostName
              ? e
              : this._getHostInstance(e.$parentInstance)
            : e.$parentInstance
          : void 0;
      },
      _getPropValue: function (e) {
        var n;
        return (
          this[e] ||
          ((n = this._getHostInstance(this)) === null || n === void 0
            ? void 0
            : n[e])
        );
      },
      _getOptionValue: function (e) {
        var n =
            arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "",
          r =
            arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
        return tf(e, n, r);
      },
      _getPTValue: function () {
        var e,
          n =
            arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
          r =
            arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "",
          i =
            arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
          o =
            arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !0,
          s = /./g.test(r) && !!i[r.split(".")[0]],
          a =
            this._getPropValue("ptOptions") ||
            ((e = this.$primevueConfig) === null || e === void 0
              ? void 0
              : e.ptOptions) ||
            {},
          c = a.mergeSections,
          u = c === void 0 ? !0 : c,
          d = a.mergeProps,
          f = d === void 0 ? !1 : d,
          p = o
            ? s
              ? this._useGlobalPT(this._getPTClassValue, r, i)
              : this._useDefaultPT(this._getPTClassValue, r, i)
            : void 0,
          h = s
            ? void 0
            : this._getPTSelf(
                n,
                this._getPTClassValue,
                r,
                ht(ht({}, i), {}, { global: p || {} }),
              ),
          v = this._getPTDatasets(r);
        return u || (!u && h)
          ? f
            ? this._mergeProps(f, p, h, v)
            : ht(ht(ht({}, p), h), v)
          : ht(ht({}, h), v);
      },
      _getPTSelf: function () {
        for (
          var e =
              arguments.length > 0 && arguments[0] !== void 0
                ? arguments[0]
                : {},
            n = arguments.length,
            r = new Array(n > 1 ? n - 1 : 0),
            i = 1;
          i < n;
          i++
        )
          r[i - 1] = arguments[i];
        return Q(
          this._usePT.apply(this, [this._getPT(e, this.$name)].concat(r)),
          this._usePT.apply(this, [this.$_attrsPT].concat(r)),
        );
      },
      _getPTDatasets: function () {
        var e,
          n,
          r =
            arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "",
          i = "data-pc-",
          o =
            r === "root" &&
            ct(
              (e = this.pt) === null || e === void 0
                ? void 0
                : e["data-pc-section"],
            );
        return (
          r !== "transition" &&
          ht(
            ht(
              {},
              r === "root" &&
                ht(
                  ht(
                    Is(
                      {},
                      "".concat(i, "name"),
                      Pr(
                        o
                          ? (n = this.pt) === null || n === void 0
                            ? void 0
                            : n["data-pc-section"]
                          : this.$.type.name,
                      ),
                    ),
                    o && Is({}, "".concat(i, "extend"), Pr(this.$.type.name)),
                  ),
                  {},
                  Is({}, "".concat(this.$attrSelector), ""),
                ),
            ),
            {},
            Is({}, "".concat(i, "section"), Pr(r)),
          )
        );
      },
      _getPTClassValue: function () {
        var e = this._getOptionValue.apply(this, arguments);
        return Kn(e) || j0(e) ? { class: e } : e;
      },
      _getPT: function (e) {
        var n = this,
          r =
            arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "",
          i = arguments.length > 2 ? arguments[2] : void 0,
          o = function (a) {
            var c,
              u =
                arguments.length > 1 && arguments[1] !== void 0
                  ? arguments[1]
                  : !1,
              d = i ? i(a) : a,
              f = Pr(r),
              p = Pr(n.$name);
            return (c = u
              ? f !== p
                ? d == null
                  ? void 0
                  : d[f]
                : void 0
              : d == null
                ? void 0
                : d[f]) !== null && c !== void 0
              ? c
              : d;
          };
        return e != null && e.hasOwnProperty("_usept")
          ? {
              _usept: e._usept,
              originalValue: o(e.originalValue),
              value: o(e.value),
            }
          : o(e, !0);
      },
      _usePT: function (e, n, r, i) {
        var o = function (b) {
          return n(b, r, i);
        };
        if (e != null && e.hasOwnProperty("_usept")) {
          var s,
            a =
              e._usept ||
              ((s = this.$primevueConfig) === null || s === void 0
                ? void 0
                : s.ptOptions) ||
              {},
            c = a.mergeSections,
            u = c === void 0 ? !0 : c,
            d = a.mergeProps,
            f = d === void 0 ? !1 : d,
            p = o(e.originalValue),
            h = o(e.value);
          return p === void 0 && h === void 0
            ? void 0
            : Kn(h)
              ? h
              : Kn(p)
                ? p
                : u || (!u && h)
                  ? f
                    ? this._mergeProps(f, p, h)
                    : ht(ht({}, p), h)
                  : h;
        }
        return o(e);
      },
      _useGlobalPT: function (e, n, r) {
        return this._usePT(this.globalPT, e, n, r);
      },
      _useDefaultPT: function (e, n, r) {
        return this._usePT(this.defaultPT, e, n, r);
      },
      ptm: function () {
        var e =
            arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "",
          n =
            arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        return this._getPTValue(this.pt, e, ht(ht({}, this.$params), n));
      },
      ptmi: function () {
        var e,
          n =
            arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "",
          r =
            arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
          i = Q(this.$_attrsWithoutPT, this.ptm(n, r));
        return (
          i != null &&
            i.hasOwnProperty("id") &&
            (((e = i.id) !== null && e !== void 0) || (i.id = this.$id)),
          i
        );
      },
      ptmo: function () {
        var e =
            arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
          n =
            arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "",
          r =
            arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
        return this._getPTValue(e, n, ht({ instance: this }, r), !1);
      },
      cx: function () {
        var e =
            arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "",
          n =
            arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        return this.isUnstyled
          ? void 0
          : this._getOptionValue(
              this.$style.classes,
              e,
              ht(ht({}, this.$params), n),
            );
      },
      sx: function () {
        var e =
            arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "",
          n =
            arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0,
          r =
            arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
        if (n) {
          var i = this._getOptionValue(
              this.$style.inlineStyles,
              e,
              ht(ht({}, this.$params), r),
            ),
            o = this._getOptionValue(
              Vp.inlineStyles,
              e,
              ht(ht({}, this.$params), r),
            );
          return [o, i];
        }
      },
    },
    computed: {
      globalPT: function () {
        var e,
          n = this;
        return this._getPT(
          (e = this.$primevueConfig) === null || e === void 0 ? void 0 : e.pt,
          void 0,
          function (r) {
            return Wn(r, { instance: n });
          },
        );
      },
      defaultPT: function () {
        var e,
          n = this;
        return this._getPT(
          (e = this.$primevueConfig) === null || e === void 0 ? void 0 : e.pt,
          void 0,
          function (r) {
            return (
              n._getOptionValue(r, n.$name, ht({}, n.$params)) ||
              Wn(r, ht({}, n.$params))
            );
          },
        );
      },
      isUnstyled: function () {
        var e;
        return this.unstyled !== void 0
          ? this.unstyled
          : (e = this.$primevueConfig) === null || e === void 0
            ? void 0
            : e.unstyled;
      },
      $id: function () {
        return this.$attrs.id || this.uid;
      },
      $inProps: function () {
        var e,
          n = Object.keys(
            ((e = this.$.vnode) === null || e === void 0 ? void 0 : e.props) ||
              {},
          );
        return Object.fromEntries(
          Object.entries(this.$props).filter(function (r) {
            var i = _s(r, 1),
              o = i[0];
            return n == null ? void 0 : n.includes(o);
          }),
        );
      },
      $theme: function () {
        var e;
        return (e = this.$primevueConfig) === null || e === void 0
          ? void 0
          : e.theme;
      },
      $style: function () {
        return ht(
          ht(
            {
              classes: void 0,
              inlineStyles: void 0,
              load: function () {},
              loadCSS: function () {},
              loadStyle: function () {},
            },
            (this._getHostInstance(this) || {}).$style,
          ),
          this.$options.style,
        );
      },
      $styleOptions: function () {
        var e;
        return {
          nonce:
            (e = this.$primevueConfig) === null ||
            e === void 0 ||
            (e = e.csp) === null ||
            e === void 0
              ? void 0
              : e.nonce,
        };
      },
      $primevueConfig: function () {
        var e;
        return (e = this.$primevue) === null || e === void 0
          ? void 0
          : e.config;
      },
      $name: function () {
        return this.$options.hostName || this.$.type.name;
      },
      $params: function () {
        var e = this._getHostInstance(this) || this.$parent;
        return {
          instance: this,
          props: this.$props,
          state: this.$data,
          attrs: this.$attrs,
          parent: {
            instance: e,
            props: e == null ? void 0 : e.$props,
            state: e == null ? void 0 : e.$data,
            attrs: e == null ? void 0 : e.$attrs,
          },
        };
      },
      $_attrsPT: function () {
        return Object.entries(this.$attrs || {})
          .filter(function (e) {
            var n = _s(e, 1),
              r = n[0];
            return r == null ? void 0 : r.startsWith("pt:");
          })
          .reduce(function (e, n) {
            var r = _s(n, 2),
              i = r[0],
              o = r[1],
              s = i.split(":"),
              a = W_(s),
              c = a.slice(1);
            return (
              c == null ||
                c.reduce(function (u, d, f, p) {
                  return (!u[d] && (u[d] = f === p.length - 1 ? o : {}), u[d]);
                }, e),
              e
            );
          }, {});
      },
      $_attrsWithoutPT: function () {
        return Object.entries(this.$attrs || {})
          .filter(function (e) {
            var n = _s(e, 1),
              r = n[0];
            return !(r != null && r.startsWith("pt:"));
          })
          .reduce(function (e, n) {
            var r = _s(n, 2),
              i = r[0],
              o = r[1];
            return ((e[i] = o), e);
          }, {});
      },
    },
  },
  Z_ = `
    .p-badge {
        display: inline-flex;
        border-radius: dt('badge.border.radius');
        align-items: center;
        justify-content: center;
        padding: dt('badge.padding');
        background: dt('badge.primary.background');
        color: dt('badge.primary.color');
        font-size: dt('badge.font.size');
        font-weight: dt('badge.font.weight');
        min-width: dt('badge.min.width');
        height: dt('badge.height');
    }

    .p-badge-dot {
        width: dt('badge.dot.size');
        min-width: dt('badge.dot.size');
        height: dt('badge.dot.size');
        border-radius: 50%;
        padding: 0;
    }

    .p-badge-circle {
        padding: 0;
        border-radius: 50%;
    }

    .p-badge-secondary {
        background: dt('badge.secondary.background');
        color: dt('badge.secondary.color');
    }

    .p-badge-success {
        background: dt('badge.success.background');
        color: dt('badge.success.color');
    }

    .p-badge-info {
        background: dt('badge.info.background');
        color: dt('badge.info.color');
    }

    .p-badge-warn {
        background: dt('badge.warn.background');
        color: dt('badge.warn.color');
    }

    .p-badge-danger {
        background: dt('badge.danger.background');
        color: dt('badge.danger.color');
    }

    .p-badge-contrast {
        background: dt('badge.contrast.background');
        color: dt('badge.contrast.color');
    }

    .p-badge-sm {
        font-size: dt('badge.sm.font.size');
        min-width: dt('badge.sm.min.width');
        height: dt('badge.sm.height');
    }

    .p-badge-lg {
        font-size: dt('badge.lg.font.size');
        min-width: dt('badge.lg.min.width');
        height: dt('badge.lg.height');
    }

    .p-badge-xl {
        font-size: dt('badge.xl.font.size');
        min-width: dt('badge.xl.min.width');
        height: dt('badge.xl.height');
    }
`,
  J_ = {
    root: function (e) {
      var n = e.props,
        r = e.instance;
      return [
        "p-badge p-component",
        {
          "p-badge-circle": ct(n.value) && String(n.value).length === 1,
          "p-badge-dot": Ii(n.value) && !r.$slots.default,
          "p-badge-sm": n.size === "small",
          "p-badge-lg": n.size === "large",
          "p-badge-xl": n.size === "xlarge",
          "p-badge-info": n.severity === "info",
          "p-badge-success": n.severity === "success",
          "p-badge-warn": n.severity === "warn",
          "p-badge-danger": n.severity === "danger",
          "p-badge-secondary": n.severity === "secondary",
          "p-badge-contrast": n.severity === "contrast",
        },
      ];
    },
  },
  Q_ = ot.extend({ name: "badge", style: Z_, classes: J_ }),
  ew = {
    name: "BaseBadge",
    extends: lr,
    props: {
      value: { type: [String, Number], default: null },
      severity: { type: String, default: null },
      size: { type: String, default: null },
    },
    style: Q_,
    provide: function () {
      return { $pcBadge: this, $parentInstance: this };
    },
  };
function ua(t) {
  "@babel/helpers - typeof";
  return (
    (ua =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    ua(t)
  );
}
function Gp(t, e, n) {
  return (
    (e = tw(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function tw(t) {
  var e = nw(t, "string");
  return ua(e) == "symbol" ? e : e + "";
}
function nw(t, e) {
  if (ua(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (ua(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var vt = {
    name: "Badge",
    extends: ew,
    inheritAttrs: !1,
    computed: {
      dataP: function () {
        return At(
          Gp(
            Gp(
              {
                circle: this.value != null && String(this.value).length === 1,
                empty: this.value == null && !this.$slots.default,
              },
              this.severity,
              this.severity,
            ),
            this.size,
            this.size,
          ),
        );
      },
    },
  },
  rw = ["data-p"];
function iw(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "span",
      Q({ class: t.cx("root"), "data-p": o.dataP }, t.ptmi("root")),
      [
        De(t.$slots, "default", {}, function () {
          return [Ke(z(t.value), 1)];
        }),
      ],
      16,
      rw,
    )
  );
}
vt.render = iw;
var ow = `
.p-icon {
    display: inline-block;
    vertical-align: baseline;
}

.p-icon-spin {
    -webkit-animation: p-icon-spin 2s infinite linear;
    animation: p-icon-spin 2s infinite linear;
}

@-webkit-keyframes p-icon-spin {
    0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    100% {
        -webkit-transform: rotate(359deg);
        transform: rotate(359deg);
    }
}

@keyframes p-icon-spin {
    0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    100% {
        -webkit-transform: rotate(359deg);
        transform: rotate(359deg);
    }
}
`,
  sw = ot.extend({ name: "baseicon", css: ow });
function da(t) {
  "@babel/helpers - typeof";
  return (
    (da =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    da(t)
  );
}
function Wp(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    (e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r));
  }
  return n;
}
function Kp(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? Wp(Object(n), !0).forEach(function (r) {
          aw(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
        : Wp(Object(n)).forEach(function (r) {
            Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
          });
  }
  return t;
}
function aw(t, e, n) {
  return (
    (e = lw(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function lw(t) {
  var e = cw(t, "string");
  return da(e) == "symbol" ? e : e + "";
}
function cw(t, e) {
  if (da(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (da(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var dn = {
    name: "BaseIcon",
    extends: lr,
    props: {
      label: { type: String, default: void 0 },
      spin: { type: Boolean, default: !1 },
    },
    style: sw,
    provide: function () {
      return { $pcIcon: this, $parentInstance: this };
    },
    methods: {
      pti: function () {
        var e = Ii(this.label);
        return Kp(
          Kp(
            {},
            !this.isUnstyled && {
              class: ["p-icon", { "p-icon-spin": this.spin }],
            },
          ),
          {},
          {
            role: e ? void 0 : "img",
            "aria-label": e ? void 0 : this.label,
            "aria-hidden": e,
          },
        );
      },
    },
  },
  Sc = { name: "TimesIcon", extends: dn };
function uw(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "svg",
      Q(
        {
          width: "14",
          height: "14",
          viewBox: "0 0 14 14",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        t.pti(),
      ),
      e[0] ||
        (e[0] = [
          l(
            "path",
            {
              d: "M8.01186 7.00933L12.27 2.75116C12.341 2.68501 12.398 2.60524 12.4375 2.51661C12.4769 2.42798 12.4982 2.3323 12.4999 2.23529C12.5016 2.13827 12.4838 2.0419 12.4474 1.95194C12.4111 1.86197 12.357 1.78024 12.2884 1.71163C12.2198 1.64302 12.138 1.58893 12.0481 1.55259C11.9581 1.51625 11.8617 1.4984 11.7647 1.50011C11.6677 1.50182 11.572 1.52306 11.4834 1.56255C11.3948 1.60204 11.315 1.65898 11.2488 1.72997L6.99067 5.98814L2.7325 1.72997C2.59553 1.60234 2.41437 1.53286 2.22718 1.53616C2.03999 1.53946 1.8614 1.61529 1.72901 1.74767C1.59663 1.88006 1.5208 2.05865 1.5175 2.24584C1.5142 2.43303 1.58368 2.61419 1.71131 2.75116L5.96948 7.00933L1.71131 11.2675C1.576 11.403 1.5 11.5866 1.5 11.7781C1.5 11.9696 1.576 12.1532 1.71131 12.2887C1.84679 12.424 2.03043 12.5 2.2219 12.5C2.41338 12.5 2.59702 12.424 2.7325 12.2887L6.99067 8.03052L11.2488 12.2887C11.3843 12.424 11.568 12.5 11.7594 12.5C11.9509 12.5 12.1346 12.424 12.27 12.2887C12.4053 12.1532 12.4813 11.9696 12.4813 11.7781C12.4813 11.5866 12.4053 11.403 12.27 11.2675L8.01186 7.00933Z",
              fill: "currentColor",
            },
            null,
            -1,
          ),
        ]),
      16,
    )
  );
}
Sc.render = uw;
var tv = { name: "WindowMaximizeIcon", extends: dn };
function dw(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "svg",
      Q(
        {
          width: "14",
          height: "14",
          viewBox: "0 0 14 14",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        t.pti(),
      ),
      e[0] ||
        (e[0] = [
          l(
            "path",
            {
              "fill-rule": "evenodd",
              "clip-rule": "evenodd",
              d: "M7 14H11.8C12.3835 14 12.9431 13.7682 13.3556 13.3556C13.7682 12.9431 14 12.3835 14 11.8V2.2C14 1.61652 13.7682 1.05694 13.3556 0.644365C12.9431 0.231785 12.3835 0 11.8 0H2.2C1.61652 0 1.05694 0.231785 0.644365 0.644365C0.231785 1.05694 0 1.61652 0 2.2V7C0 7.15913 0.063214 7.31174 0.175736 7.42426C0.288258 7.53679 0.44087 7.6 0.6 7.6C0.75913 7.6 0.911742 7.53679 1.02426 7.42426C1.13679 7.31174 1.2 7.15913 1.2 7V2.2C1.2 1.93478 1.30536 1.68043 1.49289 1.49289C1.68043 1.30536 1.93478 1.2 2.2 1.2H11.8C12.0652 1.2 12.3196 1.30536 12.5071 1.49289C12.6946 1.68043 12.8 1.93478 12.8 2.2V11.8C12.8 12.0652 12.6946 12.3196 12.5071 12.5071C12.3196 12.6946 12.0652 12.8 11.8 12.8H7C6.84087 12.8 6.68826 12.8632 6.57574 12.9757C6.46321 13.0883 6.4 13.2409 6.4 13.4C6.4 13.5591 6.46321 13.7117 6.57574 13.8243C6.68826 13.9368 6.84087 14 7 14ZM9.77805 7.42192C9.89013 7.534 10.0415 7.59788 10.2 7.59995C10.3585 7.59788 10.5099 7.534 10.622 7.42192C10.7341 7.30985 10.798 7.15844 10.8 6.99995V3.94242C10.8066 3.90505 10.8096 3.86689 10.8089 3.82843C10.8079 3.77159 10.7988 3.7157 10.7824 3.6623C10.756 3.55552 10.701 3.45698 10.622 3.37798C10.5099 3.2659 10.3585 3.20202 10.2 3.19995H7.00002C6.84089 3.19995 6.68828 3.26317 6.57576 3.37569C6.46324 3.48821 6.40002 3.64082 6.40002 3.79995C6.40002 3.95908 6.46324 4.11169 6.57576 4.22422C6.68828 4.33674 6.84089 4.39995 7.00002 4.39995H8.80006L6.19997 7.00005C6.10158 7.11005 6.04718 7.25246 6.04718 7.40005C6.04718 7.54763 6.10158 7.69004 6.19997 7.80005C6.30202 7.91645 6.44561 7.98824 6.59997 8.00005C6.75432 7.98824 6.89791 7.91645 6.99997 7.80005L9.60002 5.26841V6.99995C9.6021 7.15844 9.66598 7.30985 9.77805 7.42192ZM1.4 14H3.8C4.17066 13.9979 4.52553 13.8498 4.78763 13.5877C5.04973 13.3256 5.1979 12.9707 5.2 12.6V10.2C5.1979 9.82939 5.04973 9.47452 4.78763 9.21242C4.52553 8.95032 4.17066 8.80215 3.8 8.80005H1.4C1.02934 8.80215 0.674468 8.95032 0.412371 9.21242C0.150274 9.47452 0.00210008 9.82939 0 10.2V12.6C0.00210008 12.9707 0.150274 13.3256 0.412371 13.5877C0.674468 13.8498 1.02934 13.9979 1.4 14ZM1.25858 10.0586C1.29609 10.0211 1.34696 10 1.4 10H3.8C3.85304 10 3.90391 10.0211 3.94142 10.0586C3.97893 10.0961 4 10.147 4 10.2V12.6C4 12.6531 3.97893 12.704 3.94142 12.7415C3.90391 12.779 3.85304 12.8 3.8 12.8H1.4C1.34696 12.8 1.29609 12.779 1.25858 12.7415C1.22107 12.704 1.2 12.6531 1.2 12.6V10.2C1.2 10.147 1.22107 10.0961 1.25858 10.0586Z",
              fill: "currentColor",
            },
            null,
            -1,
          ),
        ]),
      16,
    )
  );
}
tv.render = dw;
var nv = { name: "WindowMinimizeIcon", extends: dn };
function fw(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "svg",
      Q(
        {
          width: "14",
          height: "14",
          viewBox: "0 0 14 14",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        t.pti(),
      ),
      e[0] ||
        (e[0] = [
          l(
            "path",
            {
              "fill-rule": "evenodd",
              "clip-rule": "evenodd",
              d: "M11.8 0H2.2C1.61652 0 1.05694 0.231785 0.644365 0.644365C0.231785 1.05694 0 1.61652 0 2.2V7C0 7.15913 0.063214 7.31174 0.175736 7.42426C0.288258 7.53679 0.44087 7.6 0.6 7.6C0.75913 7.6 0.911742 7.53679 1.02426 7.42426C1.13679 7.31174 1.2 7.15913 1.2 7V2.2C1.2 1.93478 1.30536 1.68043 1.49289 1.49289C1.68043 1.30536 1.93478 1.2 2.2 1.2H11.8C12.0652 1.2 12.3196 1.30536 12.5071 1.49289C12.6946 1.68043 12.8 1.93478 12.8 2.2V11.8C12.8 12.0652 12.6946 12.3196 12.5071 12.5071C12.3196 12.6946 12.0652 12.8 11.8 12.8H7C6.84087 12.8 6.68826 12.8632 6.57574 12.9757C6.46321 13.0883 6.4 13.2409 6.4 13.4C6.4 13.5591 6.46321 13.7117 6.57574 13.8243C6.68826 13.9368 6.84087 14 7 14H11.8C12.3835 14 12.9431 13.7682 13.3556 13.3556C13.7682 12.9431 14 12.3835 14 11.8V2.2C14 1.61652 13.7682 1.05694 13.3556 0.644365C12.9431 0.231785 12.3835 0 11.8 0ZM6.368 7.952C6.44137 7.98326 6.52025 7.99958 6.6 8H9.8C9.95913 8 10.1117 7.93678 10.2243 7.82426C10.3368 7.71174 10.4 7.55913 10.4 7.4C10.4 7.24087 10.3368 7.08826 10.2243 6.97574C10.1117 6.86321 9.95913 6.8 9.8 6.8H8.048L10.624 4.224C10.73 4.11026 10.7877 3.95982 10.7849 3.80438C10.7822 3.64894 10.7192 3.50063 10.6093 3.3907C10.4994 3.28077 10.3511 3.2178 10.1956 3.21506C10.0402 3.21232 9.88974 3.27002 9.776 3.376L7.2 5.952V4.2C7.2 4.04087 7.13679 3.88826 7.02426 3.77574C6.91174 3.66321 6.75913 3.6 6.6 3.6C6.44087 3.6 6.28826 3.66321 6.17574 3.77574C6.06321 3.88826 6 4.04087 6 4.2V7.4C6.00042 7.47975 6.01674 7.55862 6.048 7.632C6.07656 7.70442 6.11971 7.7702 6.17475 7.82524C6.2298 7.88029 6.29558 7.92344 6.368 7.952ZM1.4 8.80005H3.8C4.17066 8.80215 4.52553 8.95032 4.78763 9.21242C5.04973 9.47452 5.1979 9.82939 5.2 10.2V12.6C5.1979 12.9707 5.04973 13.3256 4.78763 13.5877C4.52553 13.8498 4.17066 13.9979 3.8 14H1.4C1.02934 13.9979 0.674468 13.8498 0.412371 13.5877C0.150274 13.3256 0.00210008 12.9707 0 12.6V10.2C0.00210008 9.82939 0.150274 9.47452 0.412371 9.21242C0.674468 8.95032 1.02934 8.80215 1.4 8.80005ZM3.94142 12.7415C3.97893 12.704 4 12.6531 4 12.6V10.2C4 10.147 3.97893 10.0961 3.94142 10.0586C3.90391 10.0211 3.85304 10 3.8 10H1.4C1.34696 10 1.29609 10.0211 1.25858 10.0586C1.22107 10.0961 1.2 10.147 1.2 10.2V12.6C1.2 12.6531 1.22107 12.704 1.25858 12.7415C1.29609 12.779 1.34696 12.8 1.4 12.8H3.8C3.85304 12.8 3.90391 12.779 3.94142 12.7415Z",
              fill: "currentColor",
            },
            null,
            -1,
          ),
        ]),
      16,
    )
  );
}
nv.render = fw;
var Cc = { name: "SpinnerIcon", extends: dn };
function pw(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "svg",
      Q(
        {
          width: "14",
          height: "14",
          viewBox: "0 0 14 14",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        t.pti(),
      ),
      e[0] ||
        (e[0] = [
          l(
            "path",
            {
              d: "M6.99701 14C5.85441 13.999 4.72939 13.7186 3.72012 13.1832C2.71084 12.6478 1.84795 11.8737 1.20673 10.9284C0.565504 9.98305 0.165424 8.89526 0.041387 7.75989C-0.0826496 6.62453 0.073125 5.47607 0.495122 4.4147C0.917119 3.35333 1.59252 2.4113 2.46241 1.67077C3.33229 0.930247 4.37024 0.413729 5.4857 0.166275C6.60117 -0.0811796 7.76026 -0.0520535 8.86188 0.251112C9.9635 0.554278 10.9742 1.12227 11.8057 1.90555C11.915 2.01493 11.9764 2.16319 11.9764 2.31778C11.9764 2.47236 11.915 2.62062 11.8057 2.73C11.7521 2.78503 11.688 2.82877 11.6171 2.85864C11.5463 2.8885 11.4702 2.90389 11.3933 2.90389C11.3165 2.90389 11.2404 2.8885 11.1695 2.85864C11.0987 2.82877 11.0346 2.78503 10.9809 2.73C9.9998 1.81273 8.73246 1.26138 7.39226 1.16876C6.05206 1.07615 4.72086 1.44794 3.62279 2.22152C2.52471 2.99511 1.72683 4.12325 1.36345 5.41602C1.00008 6.70879 1.09342 8.08723 1.62775 9.31926C2.16209 10.5513 3.10478 11.5617 4.29713 12.1803C5.48947 12.7989 6.85865 12.988 8.17414 12.7157C9.48963 12.4435 10.6711 11.7264 11.5196 10.6854C12.3681 9.64432 12.8319 8.34282 12.8328 7C12.8328 6.84529 12.8943 6.69692 13.0038 6.58752C13.1132 6.47812 13.2616 6.41667 13.4164 6.41667C13.5712 6.41667 13.7196 6.47812 13.8291 6.58752C13.9385 6.69692 14 6.84529 14 7C14 8.85651 13.2622 10.637 11.9489 11.9497C10.6356 13.2625 8.85432 14 6.99701 14Z",
              fill: "currentColor",
            },
            null,
            -1,
          ),
        ]),
      16,
    )
  );
}
Cc.render = pw;
var Ci = ef();
function fa(t) {
  "@babel/helpers - typeof";
  return (
    (fa =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    fa(t)
  );
}
function Xp(t, e) {
  return vw(t) || gw(t, e) || mw(t, e) || hw();
}
function hw() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function mw(t, e) {
  if (t) {
    if (typeof t == "string") return Yp(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return (
      n === "Object" && t.constructor && (n = t.constructor.name),
      n === "Map" || n === "Set"
        ? Array.from(t)
        : n === "Arguments" ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          ? Yp(t, e)
          : void 0
    );
  }
}
function Yp(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, r = Array(e); n < e; n++) r[n] = t[n];
  return r;
}
function gw(t, e) {
  var n =
    t == null
      ? null
      : (typeof Symbol < "u" && t[Symbol.iterator]) || t["@@iterator"];
  if (n != null) {
    var r,
      i,
      o,
      s,
      a = [],
      c = !0,
      u = !1;
    try {
      if (((o = (n = n.call(t)).next), e !== 0))
        for (
          ;
          !(c = (r = o.call(n)).done) && (a.push(r.value), a.length !== e);
          c = !0
        );
    } catch (d) {
      ((u = !0), (i = d));
    } finally {
      try {
        if (!c && n.return != null && ((s = n.return()), Object(s) !== s))
          return;
      } finally {
        if (u) throw i;
      }
    }
    return a;
  }
}
function vw(t) {
  if (Array.isArray(t)) return t;
}
function qp(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    (e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r));
  }
  return n;
}
function bt(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? qp(Object(n), !0).forEach(function (r) {
          od(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
        : qp(Object(n)).forEach(function (r) {
            Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
          });
  }
  return t;
}
function od(t, e, n) {
  return (
    (e = bw(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function bw(t) {
  var e = yw(t, "string");
  return fa(e) == "symbol" ? e : e + "";
}
function yw(t, e) {
  if (fa(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (fa(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var it = {
    _getMeta: function () {
      return [
        si(arguments.length <= 0 ? void 0 : arguments[0]) ||
        arguments.length <= 0
          ? void 0
          : arguments[0],
        Wn(
          si(arguments.length <= 0 ? void 0 : arguments[0])
            ? arguments.length <= 0
              ? void 0
              : arguments[0]
            : arguments.length <= 1
              ? void 0
              : arguments[1],
        ),
      ];
    },
    _getConfig: function (e, n) {
      var r, i, o;
      return (r =
        (e == null || (i = e.instance) === null || i === void 0
          ? void 0
          : i.$primevue) ||
        (n == null ||
        (o = n.ctx) === null ||
        o === void 0 ||
        (o = o.appContext) === null ||
        o === void 0 ||
        (o = o.config) === null ||
        o === void 0 ||
        (o = o.globalProperties) === null ||
        o === void 0
          ? void 0
          : o.$primevue)) === null || r === void 0
        ? void 0
        : r.config;
    },
    _getOptionValue: tf,
    _getPTValue: function () {
      var e,
        n,
        r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
        i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
        o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "",
        s = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {},
        a = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : !0,
        c = function () {
          var _ = it._getOptionValue.apply(it, arguments);
          return Kn(_) || j0(_) ? { class: _ } : _;
        },
        u =
          ((e = r.binding) === null ||
          e === void 0 ||
          (e = e.value) === null ||
          e === void 0
            ? void 0
            : e.ptOptions) ||
          ((n = r.$primevueConfig) === null || n === void 0
            ? void 0
            : n.ptOptions) ||
          {},
        d = u.mergeSections,
        f = d === void 0 ? !0 : d,
        p = u.mergeProps,
        h = p === void 0 ? !1 : p,
        v = a ? it._useDefaultPT(r, r.defaultPT(), c, o, s) : void 0,
        b = it._usePT(
          r,
          it._getPT(i, r.$name),
          c,
          o,
          bt(bt({}, s), {}, { global: v || {} }),
        ),
        g = it._getPTDatasets(r, o);
      return f || (!f && b)
        ? h
          ? it._mergeProps(r, h, v, b, g)
          : bt(bt(bt({}, v), b), g)
        : bt(bt({}, b), g);
    },
    _getPTDatasets: function () {
      var e =
          arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
        n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "",
        r = "data-pc-";
      return bt(
        bt({}, n === "root" && od({}, "".concat(r, "name"), Pr(e.$name))),
        {},
        od({}, "".concat(r, "section"), Pr(n)),
      );
    },
    _getPT: function (e) {
      var n =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "",
        r = arguments.length > 2 ? arguments[2] : void 0,
        i = function (s) {
          var a,
            c = r ? r(s) : s,
            u = Pr(n);
          return (a = c == null ? void 0 : c[u]) !== null && a !== void 0
            ? a
            : c;
        };
      return e && Object.hasOwn(e, "_usept")
        ? {
            _usept: e._usept,
            originalValue: i(e.originalValue),
            value: i(e.value),
          }
        : i(e);
    },
    _usePT: function () {
      var e =
          arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
        n = arguments.length > 1 ? arguments[1] : void 0,
        r = arguments.length > 2 ? arguments[2] : void 0,
        i = arguments.length > 3 ? arguments[3] : void 0,
        o = arguments.length > 4 ? arguments[4] : void 0,
        s = function (g) {
          return r(g, i, o);
        };
      if (n && Object.hasOwn(n, "_usept")) {
        var a,
          c =
            n._usept ||
            ((a = e.$primevueConfig) === null || a === void 0
              ? void 0
              : a.ptOptions) ||
            {},
          u = c.mergeSections,
          d = u === void 0 ? !0 : u,
          f = c.mergeProps,
          p = f === void 0 ? !1 : f,
          h = s(n.originalValue),
          v = s(n.value);
        return h === void 0 && v === void 0
          ? void 0
          : Kn(v)
            ? v
            : Kn(h)
              ? h
              : d || (!d && v)
                ? p
                  ? it._mergeProps(e, p, h, v)
                  : bt(bt({}, h), v)
                : v;
      }
      return s(n);
    },
    _useDefaultPT: function () {
      var e =
          arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
        n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
        r = arguments.length > 2 ? arguments[2] : void 0,
        i = arguments.length > 3 ? arguments[3] : void 0,
        o = arguments.length > 4 ? arguments[4] : void 0;
      return it._usePT(e, n, r, i, o);
    },
    _loadStyles: function () {
      var e,
        n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
        r = arguments.length > 1 ? arguments[1] : void 0,
        i = arguments.length > 2 ? arguments[2] : void 0,
        o = it._getConfig(r, i),
        s = {
          nonce:
            o == null || (e = o.csp) === null || e === void 0
              ? void 0
              : e.nonce,
        };
      (it._loadCoreStyles(n, s),
        it._loadThemeStyles(n, s),
        it._loadScopedThemeStyles(n, s),
        it._removeThemeListeners(n),
        (n.$loadStyles = function () {
          return it._loadThemeStyles(n, s);
        }),
        it._themeChangeListener(n.$loadStyles));
    },
    _loadCoreStyles: function () {
      var e,
        n,
        r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
        i = arguments.length > 1 ? arguments[1] : void 0;
      if (
        !Si.isStyleNameLoaded(
          (e = r.$style) === null || e === void 0 ? void 0 : e.name,
        ) &&
        (n = r.$style) !== null &&
        n !== void 0 &&
        n.name
      ) {
        var o;
        (ot.loadCSS(i),
          (o = r.$style) === null || o === void 0 || o.loadCSS(i),
          Si.setLoadedStyleName(r.$style.name));
      }
    },
    _loadThemeStyles: function () {
      var e,
        n,
        r,
        i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
        o = arguments.length > 1 ? arguments[1] : void 0;
      if (
        !(
          (i != null && i.isUnstyled()) ||
          (i == null || (e = i.theme) === null || e === void 0
            ? void 0
            : e.call(i)) === "none"
        )
      ) {
        if (!Ct.isStyleNameLoaded("common")) {
          var s,
            a,
            c =
              ((s = i.$style) === null ||
              s === void 0 ||
              (a = s.getCommonTheme) === null ||
              a === void 0
                ? void 0
                : a.call(s)) || {},
            u = c.primitive,
            d = c.semantic,
            f = c.global,
            p = c.style;
          (ot.load(
            u == null ? void 0 : u.css,
            bt({ name: "primitive-variables" }, o),
          ),
            ot.load(
              d == null ? void 0 : d.css,
              bt({ name: "semantic-variables" }, o),
            ),
            ot.load(
              f == null ? void 0 : f.css,
              bt({ name: "global-variables" }, o),
            ),
            ot.loadStyle(bt({ name: "global-style" }, o), p),
            Ct.setLoadedStyleName("common"));
        }
        if (
          !Ct.isStyleNameLoaded(
            (n = i.$style) === null || n === void 0 ? void 0 : n.name,
          ) &&
          (r = i.$style) !== null &&
          r !== void 0 &&
          r.name
        ) {
          var h,
            v,
            b,
            g,
            m =
              ((h = i.$style) === null ||
              h === void 0 ||
              (v = h.getDirectiveTheme) === null ||
              v === void 0
                ? void 0
                : v.call(h)) || {},
            _ = m.css,
            y = m.style;
          ((b = i.$style) === null ||
            b === void 0 ||
            b.load(_, bt({ name: "".concat(i.$style.name, "-variables") }, o)),
            (g = i.$style) === null ||
              g === void 0 ||
              g.loadStyle(
                bt({ name: "".concat(i.$style.name, "-style") }, o),
                y,
              ),
            Ct.setLoadedStyleName(i.$style.name));
        }
        if (!Ct.isStyleNameLoaded("layer-order")) {
          var x,
            C,
            w =
              (x = i.$style) === null ||
              x === void 0 ||
              (C = x.getLayerOrderThemeCSS) === null ||
              C === void 0
                ? void 0
                : C.call(x);
          (ot.load(w, bt({ name: "layer-order", first: !0 }, o)),
            Ct.setLoadedStyleName("layer-order"));
        }
      }
    },
    _loadScopedThemeStyles: function () {
      var e =
          arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
        n = arguments.length > 1 ? arguments[1] : void 0,
        r = e.preset();
      if (r && e.$attrSelector) {
        var i,
          o,
          s,
          a =
            ((i = e.$style) === null ||
            i === void 0 ||
            (o = i.getPresetTheme) === null ||
            o === void 0
              ? void 0
              : o.call(i, r, "[".concat(e.$attrSelector, "]"))) || {},
          c = a.css,
          u =
            (s = e.$style) === null || s === void 0
              ? void 0
              : s.load(
                  c,
                  bt(
                    {
                      name: ""
                        .concat(e.$attrSelector, "-")
                        .concat(e.$style.name),
                    },
                    n,
                  ),
                );
        e.scopedStyleEl = u.el;
      }
    },
    _themeChangeListener: function () {
      var e =
        arguments.length > 0 && arguments[0] !== void 0
          ? arguments[0]
          : function () {};
      (Si.clearLoadedStyleNames(), an.on("theme:change", e));
    },
    _removeThemeListeners: function () {
      var e =
        arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      (an.off("theme:change", e.$loadStyles), (e.$loadStyles = void 0));
    },
    _hook: function (e, n, r, i, o, s) {
      var a,
        c,
        u = "on".concat(m_(n)),
        d = it._getConfig(i, o),
        f = r == null ? void 0 : r.$instance,
        p = it._usePT(
          f,
          it._getPT(
            i == null || (a = i.value) === null || a === void 0 ? void 0 : a.pt,
            e,
          ),
          it._getOptionValue,
          "hooks.".concat(u),
        ),
        h = it._useDefaultPT(
          f,
          d == null ||
            (c = d.pt) === null ||
            c === void 0 ||
            (c = c.directives) === null ||
            c === void 0
            ? void 0
            : c[e],
          it._getOptionValue,
          "hooks.".concat(u),
        ),
        v = { el: r, binding: i, vnode: o, prevVnode: s };
      (p == null || p(f, v), h == null || h(f, v));
    },
    _mergeProps: function () {
      for (
        var e = arguments.length > 1 ? arguments[1] : void 0,
          n = arguments.length,
          r = new Array(n > 2 ? n - 2 : 0),
          i = 2;
        i < n;
        i++
      )
        r[i - 2] = arguments[i];
      return wc(e) ? e.apply(void 0, r) : Q.apply(void 0, r);
    },
    _extend: function (e) {
      var n =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
        r = function (a, c, u, d, f) {
          var p, h, v, b;
          c._$instances = c._$instances || {};
          var g = it._getConfig(u, d),
            m = c._$instances[e] || {},
            _ = Ii(m) ? bt(bt({}, n), n == null ? void 0 : n.methods) : {};
          ((c._$instances[e] = bt(
            bt({}, m),
            {},
            {
              $name: e,
              $host: c,
              $binding: u,
              $modifiers: u == null ? void 0 : u.modifiers,
              $value: u == null ? void 0 : u.value,
              $el: m.$el || c || void 0,
              $style: bt(
                {
                  classes: void 0,
                  inlineStyles: void 0,
                  load: function () {},
                  loadCSS: function () {},
                  loadStyle: function () {},
                },
                n == null ? void 0 : n.style,
              ),
              $primevueConfig: g,
              $attrSelector:
                (p = c.$pd) === null ||
                p === void 0 ||
                (p = p[e]) === null ||
                p === void 0
                  ? void 0
                  : p.attrSelector,
              defaultPT: function () {
                return it._getPT(
                  g == null ? void 0 : g.pt,
                  void 0,
                  function (x) {
                    var C;
                    return x == null ||
                      (C = x.directives) === null ||
                      C === void 0
                      ? void 0
                      : C[e];
                  },
                );
              },
              isUnstyled: function () {
                var x, C;
                return ((x = c._$instances[e]) === null ||
                x === void 0 ||
                (x = x.$binding) === null ||
                x === void 0 ||
                (x = x.value) === null ||
                x === void 0
                  ? void 0
                  : x.unstyled) !== void 0
                  ? (C = c._$instances[e]) === null ||
                    C === void 0 ||
                    (C = C.$binding) === null ||
                    C === void 0 ||
                    (C = C.value) === null ||
                    C === void 0
                    ? void 0
                    : C.unstyled
                  : g == null
                    ? void 0
                    : g.unstyled;
              },
              theme: function () {
                var x;
                return (x = c._$instances[e]) === null ||
                  x === void 0 ||
                  (x = x.$primevueConfig) === null ||
                  x === void 0
                  ? void 0
                  : x.theme;
              },
              preset: function () {
                var x;
                return (x = c._$instances[e]) === null ||
                  x === void 0 ||
                  (x = x.$binding) === null ||
                  x === void 0 ||
                  (x = x.value) === null ||
                  x === void 0
                  ? void 0
                  : x.dt;
              },
              ptm: function () {
                var x,
                  C =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : "",
                  w =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : {};
                return it._getPTValue(
                  c._$instances[e],
                  (x = c._$instances[e]) === null ||
                    x === void 0 ||
                    (x = x.$binding) === null ||
                    x === void 0 ||
                    (x = x.value) === null ||
                    x === void 0
                    ? void 0
                    : x.pt,
                  C,
                  bt({}, w),
                );
              },
              ptmo: function () {
                var x =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : {},
                  C =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : "",
                  w =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : {};
                return it._getPTValue(c._$instances[e], x, C, w, !1);
              },
              cx: function () {
                var x,
                  C,
                  w =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : "",
                  S =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : {};
                return (x = c._$instances[e]) !== null &&
                  x !== void 0 &&
                  x.isUnstyled()
                  ? void 0
                  : it._getOptionValue(
                      (C = c._$instances[e]) === null ||
                        C === void 0 ||
                        (C = C.$style) === null ||
                        C === void 0
                        ? void 0
                        : C.classes,
                      w,
                      bt({}, S),
                    );
              },
              sx: function () {
                var x,
                  C =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : "",
                  w =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : !0,
                  S =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : {};
                return w
                  ? it._getOptionValue(
                      (x = c._$instances[e]) === null ||
                        x === void 0 ||
                        (x = x.$style) === null ||
                        x === void 0
                        ? void 0
                        : x.inlineStyles,
                      C,
                      bt({}, S),
                    )
                  : void 0;
              },
            },
            _,
          )),
            (c.$instance = c._$instances[e]),
            (h = (v = c.$instance)[a]) === null ||
              h === void 0 ||
              h.call(v, c, u, d, f),
            (c["$".concat(e)] = c.$instance),
            it._hook(e, a, c, u, d, f),
            c.$pd || (c.$pd = {}),
            (c.$pd[e] = bt(
              bt({}, (b = c.$pd) === null || b === void 0 ? void 0 : b[e]),
              {},
              { name: e, instance: c._$instances[e] },
            )));
        },
        i = function (a) {
          var c,
            u,
            d,
            f = a._$instances[e],
            p = f == null ? void 0 : f.watch,
            h = function (g) {
              var m,
                _ = g.newValue,
                y = g.oldValue;
              return p == null || (m = p.config) === null || m === void 0
                ? void 0
                : m.call(f, _, y);
            },
            v = function (g) {
              var m,
                _ = g.newValue,
                y = g.oldValue;
              return p == null ||
                (m = p["config.ripple"]) === null ||
                m === void 0
                ? void 0
                : m.call(f, _, y);
            };
          ((f.$watchersCallback = { config: h, "config.ripple": v }),
            p == null ||
              (c = p.config) === null ||
              c === void 0 ||
              c.call(f, f == null ? void 0 : f.$primevueConfig),
            Ci.on("config:change", h),
            p == null ||
              (u = p["config.ripple"]) === null ||
              u === void 0 ||
              u.call(
                f,
                f == null || (d = f.$primevueConfig) === null || d === void 0
                  ? void 0
                  : d.ripple,
              ),
            Ci.on("config:ripple:change", v));
        },
        o = function (a) {
          var c = a._$instances[e].$watchersCallback;
          c &&
            (Ci.off("config:change", c.config),
            Ci.off("config:ripple:change", c["config.ripple"]),
            (a._$instances[e].$watchersCallback = void 0));
        };
      return {
        created: function (a, c, u, d) {
          (a.$pd || (a.$pd = {}),
            (a.$pd[e] = { name: e, attrSelector: Ds("pd") }),
            r("created", a, c, u, d));
        },
        beforeMount: function (a, c, u, d) {
          var f;
          (it._loadStyles(
            (f = a.$pd[e]) === null || f === void 0 ? void 0 : f.instance,
            c,
            u,
          ),
            r("beforeMount", a, c, u, d),
            i(a));
        },
        mounted: function (a, c, u, d) {
          var f;
          (it._loadStyles(
            (f = a.$pd[e]) === null || f === void 0 ? void 0 : f.instance,
            c,
            u,
          ),
            r("mounted", a, c, u, d));
        },
        beforeUpdate: function (a, c, u, d) {
          r("beforeUpdate", a, c, u, d);
        },
        updated: function (a, c, u, d) {
          var f;
          (it._loadStyles(
            (f = a.$pd[e]) === null || f === void 0 ? void 0 : f.instance,
            c,
            u,
          ),
            r("updated", a, c, u, d));
        },
        beforeUnmount: function (a, c, u, d) {
          var f;
          (o(a),
            it._removeThemeListeners(
              (f = a.$pd[e]) === null || f === void 0 ? void 0 : f.instance,
            ),
            r("beforeUnmount", a, c, u, d));
        },
        unmounted: function (a, c, u, d) {
          var f;
          ((f = a.$pd[e]) === null ||
            f === void 0 ||
            (f = f.instance) === null ||
            f === void 0 ||
            (f = f.scopedStyleEl) === null ||
            f === void 0 ||
            (f = f.value) === null ||
            f === void 0 ||
            f.remove(),
            r("unmounted", a, c, u, d));
        },
      };
    },
    extend: function () {
      var e = it._getMeta.apply(it, arguments),
        n = Xp(e, 2),
        r = n[0],
        i = n[1];
      return bt(
        {
          extend: function () {
            var s = it._getMeta.apply(it, arguments),
              a = Xp(s, 2),
              c = a[0],
              u = a[1];
            return it.extend(
              c,
              bt(bt(bt({}, i), i == null ? void 0 : i.methods), u),
            );
          },
        },
        it._extend(r, i),
      );
    },
  },
  xw = `
    .p-ink {
        display: block;
        position: absolute;
        background: dt('ripple.background');
        border-radius: 100%;
        transform: scale(0);
        pointer-events: none;
    }

    .p-ink-active {
        animation: ripple 0.4s linear;
    }

    @keyframes ripple {
        100% {
            opacity: 0;
            transform: scale(2.5);
        }
    }
`,
  _w = { root: "p-ink" },
  ww = ot.extend({ name: "ripple-directive", style: xw, classes: _w }),
  kw = it.extend({ style: ww });
function pa(t) {
  "@babel/helpers - typeof";
  return (
    (pa =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    pa(t)
  );
}
function Sw(t) {
  return Tw(t) || Ew(t) || Mw(t) || Cw();
}
function Cw() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Mw(t, e) {
  if (t) {
    if (typeof t == "string") return sd(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return (
      n === "Object" && t.constructor && (n = t.constructor.name),
      n === "Map" || n === "Set"
        ? Array.from(t)
        : n === "Arguments" ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          ? sd(t, e)
          : void 0
    );
  }
}
function Ew(t) {
  if (
    (typeof Symbol < "u" && t[Symbol.iterator] != null) ||
    t["@@iterator"] != null
  )
    return Array.from(t);
}
function Tw(t) {
  if (Array.isArray(t)) return sd(t);
}
function sd(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, r = Array(e); n < e; n++) r[n] = t[n];
  return r;
}
function Zp(t, e, n) {
  return (
    (e = Aw(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function Aw(t) {
  var e = Pw(t, "string");
  return pa(e) == "symbol" ? e : e + "";
}
function Pw(t, e) {
  if (pa(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (pa(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var Ha = kw.extend("ripple", {
    watch: {
      "config.ripple": function (e) {
        e
          ? (this.createRipple(this.$host),
            this.bindEvents(this.$host),
            this.$host.setAttribute("data-pd-ripple", !0),
            (this.$host.style.overflow = "hidden"),
            (this.$host.style.position = "relative"))
          : (this.remove(this.$host),
            this.$host.removeAttribute("data-pd-ripple"));
      },
    },
    unmounted: function (e) {
      this.remove(e);
    },
    timeout: void 0,
    methods: {
      bindEvents: function (e) {
        e.addEventListener("mousedown", this.onMouseDown.bind(this));
      },
      unbindEvents: function (e) {
        e.removeEventListener("mousedown", this.onMouseDown.bind(this));
      },
      createRipple: function (e) {
        var n = this.getInk(e);
        n ||
          ((n = Gs(
            "span",
            Zp(
              Zp(
                {
                  role: "presentation",
                  "aria-hidden": !0,
                  "data-p-ink": !0,
                  "data-p-ink-active": !1,
                  class: !this.isUnstyled() && this.cx("root"),
                  onAnimationEnd: this.onAnimationEnd.bind(this),
                },
                this.$attrSelector,
                "",
              ),
              "p-bind",
              this.ptm("root"),
            ),
          )),
          e.appendChild(n),
          (this.$el = n));
      },
      remove: function (e) {
        var n = this.getInk(e);
        n &&
          ((this.$host.style.overflow = ""),
          (this.$host.style.position = ""),
          this.unbindEvents(e),
          n.removeEventListener("animationend", this.onAnimationEnd),
          n.remove());
      },
      onMouseDown: function (e) {
        var n = this,
          r = e.currentTarget,
          i = this.getInk(r);
        if (!(!i || getComputedStyle(i, null).display === "none")) {
          if (
            (!this.isUnstyled() && Ln(i, "p-ink-active"),
            i.setAttribute("data-p-ink-active", "false"),
            !Zi(i) && !Ji(i))
          ) {
            var o = Math.max(In(r), Kr(r));
            ((i.style.height = o + "px"), (i.style.width = o + "px"));
          }
          var s = t_(r),
            a = e.pageX - s.left + document.body.scrollTop - Ji(i) / 2,
            c = e.pageY - s.top + document.body.scrollLeft - Zi(i) / 2;
          ((i.style.top = c + "px"),
            (i.style.left = a + "px"),
            !this.isUnstyled() && Vn(i, "p-ink-active"),
            i.setAttribute("data-p-ink-active", "true"),
            (this.timeout = setTimeout(function () {
              i &&
                (!n.isUnstyled() && Ln(i, "p-ink-active"),
                i.setAttribute("data-p-ink-active", "false"));
            }, 401)));
        }
      },
      onAnimationEnd: function (e) {
        (this.timeout && clearTimeout(this.timeout),
          !this.isUnstyled() && Ln(e.currentTarget, "p-ink-active"),
          e.currentTarget.setAttribute("data-p-ink-active", "false"));
      },
      getInk: function (e) {
        return e && e.children
          ? Sw(e.children).find(function (n) {
              return Hn(n, "data-pc-name") === "ripple";
            })
          : void 0;
      },
    },
  }),
  Rw = `
    .p-button {
        display: inline-flex;
        cursor: pointer;
        user-select: none;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        position: relative;
        color: dt('button.primary.color');
        background: dt('button.primary.background');
        border: 1px solid dt('button.primary.border.color');
        padding: dt('button.padding.y') dt('button.padding.x');
        font-size: 1rem;
        font-family: inherit;
        font-feature-settings: inherit;
        transition:
            background dt('button.transition.duration'),
            color dt('button.transition.duration'),
            border-color dt('button.transition.duration'),
            outline-color dt('button.transition.duration'),
            box-shadow dt('button.transition.duration');
        border-radius: dt('button.border.radius');
        outline-color: transparent;
        gap: dt('button.gap');
    }

    .p-button:disabled {
        cursor: default;
    }

    .p-button-icon-right {
        order: 1;
    }

    .p-button-icon-right:dir(rtl) {
        order: -1;
    }

    .p-button:not(.p-button-vertical) .p-button-icon:not(.p-button-icon-right):dir(rtl) {
        order: 1;
    }

    .p-button-icon-bottom {
        order: 2;
    }

    .p-button-icon-only {
        width: dt('button.icon.only.width');
        padding-inline-start: 0;
        padding-inline-end: 0;
        gap: 0;
    }

    .p-button-icon-only.p-button-rounded {
        border-radius: 50%;
        height: dt('button.icon.only.width');
    }

    .p-button-icon-only .p-button-label {
        visibility: hidden;
        width: 0;
    }

    .p-button-sm {
        font-size: dt('button.sm.font.size');
        padding: dt('button.sm.padding.y') dt('button.sm.padding.x');
    }

    .p-button-sm .p-button-icon {
        font-size: dt('button.sm.font.size');
    }

    .p-button-sm.p-button-icon-only {
        width: dt('button.sm.icon.only.width');
    }

    .p-button-sm.p-button-icon-only.p-button-rounded {
        height: dt('button.sm.icon.only.width');
    }

    .p-button-lg {
        font-size: dt('button.lg.font.size');
        padding: dt('button.lg.padding.y') dt('button.lg.padding.x');
    }

    .p-button-lg .p-button-icon {
        font-size: dt('button.lg.font.size');
    }

    .p-button-lg.p-button-icon-only {
        width: dt('button.lg.icon.only.width');
    }

    .p-button-lg.p-button-icon-only.p-button-rounded {
        height: dt('button.lg.icon.only.width');
    }

    .p-button-vertical {
        flex-direction: column;
    }

    .p-button-label {
        font-weight: dt('button.label.font.weight');
    }

    .p-button-fluid {
        width: 100%;
    }

    .p-button-fluid.p-button-icon-only {
        width: dt('button.icon.only.width');
    }

    .p-button:not(:disabled):hover {
        background: dt('button.primary.hover.background');
        border: 1px solid dt('button.primary.hover.border.color');
        color: dt('button.primary.hover.color');
    }

    .p-button:not(:disabled):active {
        background: dt('button.primary.active.background');
        border: 1px solid dt('button.primary.active.border.color');
        color: dt('button.primary.active.color');
    }

    .p-button:focus-visible {
        box-shadow: dt('button.primary.focus.ring.shadow');
        outline: dt('button.focus.ring.width') dt('button.focus.ring.style') dt('button.primary.focus.ring.color');
        outline-offset: dt('button.focus.ring.offset');
    }

    .p-button .p-badge {
        min-width: dt('button.badge.size');
        height: dt('button.badge.size');
        line-height: dt('button.badge.size');
    }

    .p-button-raised {
        box-shadow: dt('button.raised.shadow');
    }

    .p-button-rounded {
        border-radius: dt('button.rounded.border.radius');
    }

    .p-button-secondary {
        background: dt('button.secondary.background');
        border: 1px solid dt('button.secondary.border.color');
        color: dt('button.secondary.color');
    }

    .p-button-secondary:not(:disabled):hover {
        background: dt('button.secondary.hover.background');
        border: 1px solid dt('button.secondary.hover.border.color');
        color: dt('button.secondary.hover.color');
    }

    .p-button-secondary:not(:disabled):active {
        background: dt('button.secondary.active.background');
        border: 1px solid dt('button.secondary.active.border.color');
        color: dt('button.secondary.active.color');
    }

    .p-button-secondary:focus-visible {
        outline-color: dt('button.secondary.focus.ring.color');
        box-shadow: dt('button.secondary.focus.ring.shadow');
    }

    .p-button-success {
        background: dt('button.success.background');
        border: 1px solid dt('button.success.border.color');
        color: dt('button.success.color');
    }

    .p-button-success:not(:disabled):hover {
        background: dt('button.success.hover.background');
        border: 1px solid dt('button.success.hover.border.color');
        color: dt('button.success.hover.color');
    }

    .p-button-success:not(:disabled):active {
        background: dt('button.success.active.background');
        border: 1px solid dt('button.success.active.border.color');
        color: dt('button.success.active.color');
    }

    .p-button-success:focus-visible {
        outline-color: dt('button.success.focus.ring.color');
        box-shadow: dt('button.success.focus.ring.shadow');
    }

    .p-button-info {
        background: dt('button.info.background');
        border: 1px solid dt('button.info.border.color');
        color: dt('button.info.color');
    }

    .p-button-info:not(:disabled):hover {
        background: dt('button.info.hover.background');
        border: 1px solid dt('button.info.hover.border.color');
        color: dt('button.info.hover.color');
    }

    .p-button-info:not(:disabled):active {
        background: dt('button.info.active.background');
        border: 1px solid dt('button.info.active.border.color');
        color: dt('button.info.active.color');
    }

    .p-button-info:focus-visible {
        outline-color: dt('button.info.focus.ring.color');
        box-shadow: dt('button.info.focus.ring.shadow');
    }

    .p-button-warn {
        background: dt('button.warn.background');
        border: 1px solid dt('button.warn.border.color');
        color: dt('button.warn.color');
    }

    .p-button-warn:not(:disabled):hover {
        background: dt('button.warn.hover.background');
        border: 1px solid dt('button.warn.hover.border.color');
        color: dt('button.warn.hover.color');
    }

    .p-button-warn:not(:disabled):active {
        background: dt('button.warn.active.background');
        border: 1px solid dt('button.warn.active.border.color');
        color: dt('button.warn.active.color');
    }

    .p-button-warn:focus-visible {
        outline-color: dt('button.warn.focus.ring.color');
        box-shadow: dt('button.warn.focus.ring.shadow');
    }

    .p-button-help {
        background: dt('button.help.background');
        border: 1px solid dt('button.help.border.color');
        color: dt('button.help.color');
    }

    .p-button-help:not(:disabled):hover {
        background: dt('button.help.hover.background');
        border: 1px solid dt('button.help.hover.border.color');
        color: dt('button.help.hover.color');
    }

    .p-button-help:not(:disabled):active {
        background: dt('button.help.active.background');
        border: 1px solid dt('button.help.active.border.color');
        color: dt('button.help.active.color');
    }

    .p-button-help:focus-visible {
        outline-color: dt('button.help.focus.ring.color');
        box-shadow: dt('button.help.focus.ring.shadow');
    }

    .p-button-danger {
        background: dt('button.danger.background');
        border: 1px solid dt('button.danger.border.color');
        color: dt('button.danger.color');
    }

    .p-button-danger:not(:disabled):hover {
        background: dt('button.danger.hover.background');
        border: 1px solid dt('button.danger.hover.border.color');
        color: dt('button.danger.hover.color');
    }

    .p-button-danger:not(:disabled):active {
        background: dt('button.danger.active.background');
        border: 1px solid dt('button.danger.active.border.color');
        color: dt('button.danger.active.color');
    }

    .p-button-danger:focus-visible {
        outline-color: dt('button.danger.focus.ring.color');
        box-shadow: dt('button.danger.focus.ring.shadow');
    }

    .p-button-contrast {
        background: dt('button.contrast.background');
        border: 1px solid dt('button.contrast.border.color');
        color: dt('button.contrast.color');
    }

    .p-button-contrast:not(:disabled):hover {
        background: dt('button.contrast.hover.background');
        border: 1px solid dt('button.contrast.hover.border.color');
        color: dt('button.contrast.hover.color');
    }

    .p-button-contrast:not(:disabled):active {
        background: dt('button.contrast.active.background');
        border: 1px solid dt('button.contrast.active.border.color');
        color: dt('button.contrast.active.color');
    }

    .p-button-contrast:focus-visible {
        outline-color: dt('button.contrast.focus.ring.color');
        box-shadow: dt('button.contrast.focus.ring.shadow');
    }

    .p-button-outlined {
        background: transparent;
        border-color: dt('button.outlined.primary.border.color');
        color: dt('button.outlined.primary.color');
    }

    .p-button-outlined:not(:disabled):hover {
        background: dt('button.outlined.primary.hover.background');
        border-color: dt('button.outlined.primary.border.color');
        color: dt('button.outlined.primary.color');
    }

    .p-button-outlined:not(:disabled):active {
        background: dt('button.outlined.primary.active.background');
        border-color: dt('button.outlined.primary.border.color');
        color: dt('button.outlined.primary.color');
    }

    .p-button-outlined.p-button-secondary {
        border-color: dt('button.outlined.secondary.border.color');
        color: dt('button.outlined.secondary.color');
    }

    .p-button-outlined.p-button-secondary:not(:disabled):hover {
        background: dt('button.outlined.secondary.hover.background');
        border-color: dt('button.outlined.secondary.border.color');
        color: dt('button.outlined.secondary.color');
    }

    .p-button-outlined.p-button-secondary:not(:disabled):active {
        background: dt('button.outlined.secondary.active.background');
        border-color: dt('button.outlined.secondary.border.color');
        color: dt('button.outlined.secondary.color');
    }

    .p-button-outlined.p-button-success {
        border-color: dt('button.outlined.success.border.color');
        color: dt('button.outlined.success.color');
    }

    .p-button-outlined.p-button-success:not(:disabled):hover {
        background: dt('button.outlined.success.hover.background');
        border-color: dt('button.outlined.success.border.color');
        color: dt('button.outlined.success.color');
    }

    .p-button-outlined.p-button-success:not(:disabled):active {
        background: dt('button.outlined.success.active.background');
        border-color: dt('button.outlined.success.border.color');
        color: dt('button.outlined.success.color');
    }

    .p-button-outlined.p-button-info {
        border-color: dt('button.outlined.info.border.color');
        color: dt('button.outlined.info.color');
    }

    .p-button-outlined.p-button-info:not(:disabled):hover {
        background: dt('button.outlined.info.hover.background');
        border-color: dt('button.outlined.info.border.color');
        color: dt('button.outlined.info.color');
    }

    .p-button-outlined.p-button-info:not(:disabled):active {
        background: dt('button.outlined.info.active.background');
        border-color: dt('button.outlined.info.border.color');
        color: dt('button.outlined.info.color');
    }

    .p-button-outlined.p-button-warn {
        border-color: dt('button.outlined.warn.border.color');
        color: dt('button.outlined.warn.color');
    }

    .p-button-outlined.p-button-warn:not(:disabled):hover {
        background: dt('button.outlined.warn.hover.background');
        border-color: dt('button.outlined.warn.border.color');
        color: dt('button.outlined.warn.color');
    }

    .p-button-outlined.p-button-warn:not(:disabled):active {
        background: dt('button.outlined.warn.active.background');
        border-color: dt('button.outlined.warn.border.color');
        color: dt('button.outlined.warn.color');
    }

    .p-button-outlined.p-button-help {
        border-color: dt('button.outlined.help.border.color');
        color: dt('button.outlined.help.color');
    }

    .p-button-outlined.p-button-help:not(:disabled):hover {
        background: dt('button.outlined.help.hover.background');
        border-color: dt('button.outlined.help.border.color');
        color: dt('button.outlined.help.color');
    }

    .p-button-outlined.p-button-help:not(:disabled):active {
        background: dt('button.outlined.help.active.background');
        border-color: dt('button.outlined.help.border.color');
        color: dt('button.outlined.help.color');
    }

    .p-button-outlined.p-button-danger {
        border-color: dt('button.outlined.danger.border.color');
        color: dt('button.outlined.danger.color');
    }

    .p-button-outlined.p-button-danger:not(:disabled):hover {
        background: dt('button.outlined.danger.hover.background');
        border-color: dt('button.outlined.danger.border.color');
        color: dt('button.outlined.danger.color');
    }

    .p-button-outlined.p-button-danger:not(:disabled):active {
        background: dt('button.outlined.danger.active.background');
        border-color: dt('button.outlined.danger.border.color');
        color: dt('button.outlined.danger.color');
    }

    .p-button-outlined.p-button-contrast {
        border-color: dt('button.outlined.contrast.border.color');
        color: dt('button.outlined.contrast.color');
    }

    .p-button-outlined.p-button-contrast:not(:disabled):hover {
        background: dt('button.outlined.contrast.hover.background');
        border-color: dt('button.outlined.contrast.border.color');
        color: dt('button.outlined.contrast.color');
    }

    .p-button-outlined.p-button-contrast:not(:disabled):active {
        background: dt('button.outlined.contrast.active.background');
        border-color: dt('button.outlined.contrast.border.color');
        color: dt('button.outlined.contrast.color');
    }

    .p-button-outlined.p-button-plain {
        border-color: dt('button.outlined.plain.border.color');
        color: dt('button.outlined.plain.color');
    }

    .p-button-outlined.p-button-plain:not(:disabled):hover {
        background: dt('button.outlined.plain.hover.background');
        border-color: dt('button.outlined.plain.border.color');
        color: dt('button.outlined.plain.color');
    }

    .p-button-outlined.p-button-plain:not(:disabled):active {
        background: dt('button.outlined.plain.active.background');
        border-color: dt('button.outlined.plain.border.color');
        color: dt('button.outlined.plain.color');
    }

    .p-button-text {
        background: transparent;
        border-color: transparent;
        color: dt('button.text.primary.color');
    }

    .p-button-text:not(:disabled):hover {
        background: dt('button.text.primary.hover.background');
        border-color: transparent;
        color: dt('button.text.primary.color');
    }

    .p-button-text:not(:disabled):active {
        background: dt('button.text.primary.active.background');
        border-color: transparent;
        color: dt('button.text.primary.color');
    }

    .p-button-text.p-button-secondary {
        background: transparent;
        border-color: transparent;
        color: dt('button.text.secondary.color');
    }

    .p-button-text.p-button-secondary:not(:disabled):hover {
        background: dt('button.text.secondary.hover.background');
        border-color: transparent;
        color: dt('button.text.secondary.color');
    }

    .p-button-text.p-button-secondary:not(:disabled):active {
        background: dt('button.text.secondary.active.background');
        border-color: transparent;
        color: dt('button.text.secondary.color');
    }

    .p-button-text.p-button-success {
        background: transparent;
        border-color: transparent;
        color: dt('button.text.success.color');
    }

    .p-button-text.p-button-success:not(:disabled):hover {
        background: dt('button.text.success.hover.background');
        border-color: transparent;
        color: dt('button.text.success.color');
    }

    .p-button-text.p-button-success:not(:disabled):active {
        background: dt('button.text.success.active.background');
        border-color: transparent;
        color: dt('button.text.success.color');
    }

    .p-button-text.p-button-info {
        background: transparent;
        border-color: transparent;
        color: dt('button.text.info.color');
    }

    .p-button-text.p-button-info:not(:disabled):hover {
        background: dt('button.text.info.hover.background');
        border-color: transparent;
        color: dt('button.text.info.color');
    }

    .p-button-text.p-button-info:not(:disabled):active {
        background: dt('button.text.info.active.background');
        border-color: transparent;
        color: dt('button.text.info.color');
    }

    .p-button-text.p-button-warn {
        background: transparent;
        border-color: transparent;
        color: dt('button.text.warn.color');
    }

    .p-button-text.p-button-warn:not(:disabled):hover {
        background: dt('button.text.warn.hover.background');
        border-color: transparent;
        color: dt('button.text.warn.color');
    }

    .p-button-text.p-button-warn:not(:disabled):active {
        background: dt('button.text.warn.active.background');
        border-color: transparent;
        color: dt('button.text.warn.color');
    }

    .p-button-text.p-button-help {
        background: transparent;
        border-color: transparent;
        color: dt('button.text.help.color');
    }

    .p-button-text.p-button-help:not(:disabled):hover {
        background: dt('button.text.help.hover.background');
        border-color: transparent;
        color: dt('button.text.help.color');
    }

    .p-button-text.p-button-help:not(:disabled):active {
        background: dt('button.text.help.active.background');
        border-color: transparent;
        color: dt('button.text.help.color');
    }

    .p-button-text.p-button-danger {
        background: transparent;
        border-color: transparent;
        color: dt('button.text.danger.color');
    }

    .p-button-text.p-button-danger:not(:disabled):hover {
        background: dt('button.text.danger.hover.background');
        border-color: transparent;
        color: dt('button.text.danger.color');
    }

    .p-button-text.p-button-danger:not(:disabled):active {
        background: dt('button.text.danger.active.background');
        border-color: transparent;
        color: dt('button.text.danger.color');
    }

    .p-button-text.p-button-contrast {
        background: transparent;
        border-color: transparent;
        color: dt('button.text.contrast.color');
    }

    .p-button-text.p-button-contrast:not(:disabled):hover {
        background: dt('button.text.contrast.hover.background');
        border-color: transparent;
        color: dt('button.text.contrast.color');
    }

    .p-button-text.p-button-contrast:not(:disabled):active {
        background: dt('button.text.contrast.active.background');
        border-color: transparent;
        color: dt('button.text.contrast.color');
    }

    .p-button-text.p-button-plain {
        background: transparent;
        border-color: transparent;
        color: dt('button.text.plain.color');
    }

    .p-button-text.p-button-plain:not(:disabled):hover {
        background: dt('button.text.plain.hover.background');
        border-color: transparent;
        color: dt('button.text.plain.color');
    }

    .p-button-text.p-button-plain:not(:disabled):active {
        background: dt('button.text.plain.active.background');
        border-color: transparent;
        color: dt('button.text.plain.color');
    }

    .p-button-link {
        background: transparent;
        border-color: transparent;
        color: dt('button.link.color');
    }

    .p-button-link:not(:disabled):hover {
        background: transparent;
        border-color: transparent;
        color: dt('button.link.hover.color');
    }

    .p-button-link:not(:disabled):hover .p-button-label {
        text-decoration: underline;
    }

    .p-button-link:not(:disabled):active {
        background: transparent;
        border-color: transparent;
        color: dt('button.link.active.color');
    }
`;
function ha(t) {
  "@babel/helpers - typeof";
  return (
    (ha =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    ha(t)
  );
}
function Cr(t, e, n) {
  return (
    (e = Lw(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function Lw(t) {
  var e = Dw(t, "string");
  return ha(e) == "symbol" ? e : e + "";
}
function Dw(t, e) {
  if (ha(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (ha(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var Iw = {
    root: function (e) {
      var n = e.instance,
        r = e.props;
      return [
        "p-button p-component",
        Cr(
          Cr(
            Cr(
              Cr(
                Cr(
                  Cr(
                    Cr(
                      Cr(
                        Cr(
                          {
                            "p-button-icon-only":
                              n.hasIcon && !r.label && !r.badge,
                            "p-button-vertical":
                              (r.iconPos === "top" || r.iconPos === "bottom") &&
                              r.label,
                            "p-button-loading": r.loading,
                            "p-button-link": r.link || r.variant === "link",
                          },
                          "p-button-".concat(r.severity),
                          r.severity,
                        ),
                        "p-button-raised",
                        r.raised,
                      ),
                      "p-button-rounded",
                      r.rounded,
                    ),
                    "p-button-text",
                    r.text || r.variant === "text",
                  ),
                  "p-button-outlined",
                  r.outlined || r.variant === "outlined",
                ),
                "p-button-sm",
                r.size === "small",
              ),
              "p-button-lg",
              r.size === "large",
            ),
            "p-button-plain",
            r.plain,
          ),
          "p-button-fluid",
          n.hasFluid,
        ),
      ];
    },
    loadingIcon: "p-button-loading-icon",
    icon: function (e) {
      var n = e.props;
      return [
        "p-button-icon",
        Cr({}, "p-button-icon-".concat(n.iconPos), n.label),
      ];
    },
    label: "p-button-label",
  },
  Ow = ot.extend({ name: "button", style: Rw, classes: Iw }),
  $w = {
    name: "BaseButton",
    extends: lr,
    props: {
      label: { type: String, default: null },
      icon: { type: String, default: null },
      iconPos: { type: String, default: "left" },
      iconClass: { type: [String, Object], default: null },
      badge: { type: String, default: null },
      badgeClass: { type: [String, Object], default: null },
      badgeSeverity: { type: String, default: "secondary" },
      loading: { type: Boolean, default: !1 },
      loadingIcon: { type: String, default: void 0 },
      as: { type: [String, Object], default: "BUTTON" },
      asChild: { type: Boolean, default: !1 },
      link: { type: Boolean, default: !1 },
      severity: { type: String, default: null },
      raised: { type: Boolean, default: !1 },
      rounded: { type: Boolean, default: !1 },
      text: { type: Boolean, default: !1 },
      outlined: { type: Boolean, default: !1 },
      size: { type: String, default: null },
      variant: { type: String, default: null },
      plain: { type: Boolean, default: !1 },
      fluid: { type: Boolean, default: null },
    },
    style: Ow,
    provide: function () {
      return { $pcButton: this, $parentInstance: this };
    },
  };
function ma(t) {
  "@babel/helpers - typeof";
  return (
    (ma =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    ma(t)
  );
}
function Pn(t, e, n) {
  return (
    (e = zw(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function zw(t) {
  var e = Bw(t, "string");
  return ma(e) == "symbol" ? e : e + "";
}
function Bw(t, e) {
  if (ma(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (ma(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var Ce = {
    name: "Button",
    extends: $w,
    inheritAttrs: !1,
    inject: { $pcFluid: { default: null } },
    methods: {
      getPTOptions: function (e) {
        var n = e === "root" ? this.ptmi : this.ptm;
        return n(e, { context: { disabled: this.disabled } });
      },
    },
    computed: {
      disabled: function () {
        return (
          this.$attrs.disabled || this.$attrs.disabled === "" || this.loading
        );
      },
      defaultAriaLabel: function () {
        return this.label
          ? this.label + (this.badge ? " " + this.badge : "")
          : this.$attrs.ariaLabel;
      },
      hasIcon: function () {
        return this.icon || this.$slots.icon;
      },
      attrs: function () {
        return Q(this.asAttrs, this.a11yAttrs, this.getPTOptions("root"));
      },
      asAttrs: function () {
        return this.as === "BUTTON"
          ? { type: "button", disabled: this.disabled }
          : void 0;
      },
      a11yAttrs: function () {
        return {
          "aria-label": this.defaultAriaLabel,
          "data-pc-name": "button",
          "data-p-disabled": this.disabled,
          "data-p-severity": this.severity,
        };
      },
      hasFluid: function () {
        return Ii(this.fluid) ? !!this.$pcFluid : this.fluid;
      },
      dataP: function () {
        return At(
          Pn(
            Pn(
              Pn(
                Pn(
                  Pn(
                    Pn(
                      Pn(
                        Pn(
                          Pn(
                            Pn({}, this.size, this.size),
                            "icon-only",
                            this.hasIcon && !this.label && !this.badge,
                          ),
                          "loading",
                          this.loading,
                        ),
                        "fluid",
                        this.hasFluid,
                      ),
                      "rounded",
                      this.rounded,
                    ),
                    "raised",
                    this.raised,
                  ),
                  "outlined",
                  this.outlined || this.variant === "outlined",
                ),
                "text",
                this.text || this.variant === "text",
              ),
              "link",
              this.link || this.variant === "link",
            ),
            "vertical",
            (this.iconPos === "top" || this.iconPos === "bottom") && this.label,
          ),
        );
      },
      dataIconP: function () {
        return At(Pn(Pn({}, this.iconPos, this.iconPos), this.size, this.size));
      },
      dataLabelP: function () {
        return At(
          Pn(
            Pn({}, this.size, this.size),
            "icon-only",
            this.hasIcon && !this.label && !this.badge,
          ),
        );
      },
    },
    components: { SpinnerIcon: Cc, Badge: vt },
    directives: { ripple: Ha },
  },
  Uw = ["data-p"],
  Fw = ["data-p"];
function Nw(t, e, n, r, i, o) {
  var s = Mt("SpinnerIcon"),
    a = Mt("Badge"),
    c = Xn("ripple");
  return t.asChild
    ? De(t.$slots, "default", {
        key: 1,
        class: Ie(t.cx("root")),
        a11yAttrs: o.a11yAttrs,
      })
    : st(
        (E(),
        Be(
          Dt(t.as),
          Q({ key: 0, class: t.cx("root"), "data-p": o.dataP }, o.attrs),
          {
            default: Ye(function () {
              return [
                De(t.$slots, "default", {}, function () {
                  return [
                    t.loading
                      ? De(
                          t.$slots,
                          "loadingicon",
                          Q(
                            {
                              key: 0,
                              class: [t.cx("loadingIcon"), t.cx("icon")],
                            },
                            t.ptm("loadingIcon"),
                          ),
                          function () {
                            return [
                              t.loadingIcon
                                ? (E(),
                                  R(
                                    "span",
                                    Q(
                                      {
                                        key: 0,
                                        class: [
                                          t.cx("loadingIcon"),
                                          t.cx("icon"),
                                          t.loadingIcon,
                                        ],
                                      },
                                      t.ptm("loadingIcon"),
                                    ),
                                    null,
                                    16,
                                  ))
                                : (E(),
                                  Be(
                                    s,
                                    Q(
                                      {
                                        key: 1,
                                        class: [
                                          t.cx("loadingIcon"),
                                          t.cx("icon"),
                                        ],
                                        spin: "",
                                      },
                                      t.ptm("loadingIcon"),
                                    ),
                                    null,
                                    16,
                                    ["class"],
                                  )),
                            ];
                          },
                        )
                      : De(
                          t.$slots,
                          "icon",
                          Q({ key: 1, class: [t.cx("icon")] }, t.ptm("icon")),
                          function () {
                            return [
                              t.icon
                                ? (E(),
                                  R(
                                    "span",
                                    Q(
                                      {
                                        key: 0,
                                        class: [
                                          t.cx("icon"),
                                          t.icon,
                                          t.iconClass,
                                        ],
                                        "data-p": o.dataIconP,
                                      },
                                      t.ptm("icon"),
                                    ),
                                    null,
                                    16,
                                    Uw,
                                  ))
                                : le("", !0),
                            ];
                          },
                        ),
                    l(
                      "span",
                      Q({ class: t.cx("label") }, t.ptm("label"), {
                        "data-p": o.dataLabelP,
                      }),
                      z(t.label || " "),
                      17,
                      Fw,
                    ),
                    t.badge
                      ? (E(),
                        Be(
                          a,
                          {
                            key: 2,
                            value: t.badge,
                            class: Ie(t.badgeClass),
                            severity: t.badgeSeverity,
                            unstyled: t.unstyled,
                            pt: t.ptm("pcBadge"),
                          },
                          null,
                          8,
                          ["value", "class", "severity", "unstyled", "pt"],
                        ))
                      : le("", !0),
                  ];
                }),
              ];
            }),
            _: 3,
          },
          16,
          ["class", "data-p"],
        )),
        [[c]],
      );
}
Ce.render = Nw;
var Vw = ot.extend({ name: "focustrap-directive" }),
  Hw = it.extend({ style: Vw });
function ga(t) {
  "@babel/helpers - typeof";
  return (
    (ga =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    ga(t)
  );
}
function Jp(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    (e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r));
  }
  return n;
}
function Qp(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? Jp(Object(n), !0).forEach(function (r) {
          jw(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
        : Jp(Object(n)).forEach(function (r) {
            Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
          });
  }
  return t;
}
function jw(t, e, n) {
  return (
    (e = Gw(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function Gw(t) {
  var e = Ww(t, "string");
  return ga(e) == "symbol" ? e : e + "";
}
function Ww(t, e) {
  if (ga(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (ga(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var Kw = Hw.extend("focustrap", {
    mounted: function (e, n) {
      var r = n.value || {},
        i = r.disabled;
      (i ||
        (this.createHiddenFocusableElements(e, n),
        this.bind(e, n),
        this.autoElementFocus(e, n)),
        e.setAttribute("data-pd-focustrap", !0),
        (this.$el = e));
    },
    updated: function (e, n) {
      var r = n.value || {},
        i = r.disabled;
      i && this.unbind(e);
    },
    unmounted: function (e) {
      this.unbind(e);
    },
    methods: {
      getComputedSelector: function (e) {
        return ':not(.p-hidden-focusable):not([data-p-hidden-focusable="true"])'.concat(
          e ?? "",
        );
      },
      bind: function (e, n) {
        var r = this,
          i = n.value || {},
          o = i.onFocusIn,
          s = i.onFocusOut;
        ((e.$_pfocustrap_mutationobserver = new MutationObserver(function (a) {
          a.forEach(function (c) {
            if (c.type === "childList" && !e.contains(document.activeElement)) {
              var u = function (f) {
                var p = Tp(f)
                  ? Tp(
                      f,
                      r.getComputedSelector(e.$_pfocustrap_focusableselector),
                    )
                    ? f
                    : No(
                        e,
                        r.getComputedSelector(e.$_pfocustrap_focusableselector),
                      )
                  : No(f);
                return ct(p) ? p : f.nextSibling && u(f.nextSibling);
              };
              Dn(u(c.nextSibling));
            }
          });
        })),
          e.$_pfocustrap_mutationobserver.disconnect(),
          e.$_pfocustrap_mutationobserver.observe(e, { childList: !0 }),
          (e.$_pfocustrap_focusinlistener = function (a) {
            return o && o(a);
          }),
          (e.$_pfocustrap_focusoutlistener = function (a) {
            return s && s(a);
          }),
          e.addEventListener("focusin", e.$_pfocustrap_focusinlistener),
          e.addEventListener("focusout", e.$_pfocustrap_focusoutlistener));
      },
      unbind: function (e) {
        (e.$_pfocustrap_mutationobserver &&
          e.$_pfocustrap_mutationobserver.disconnect(),
          e.$_pfocustrap_focusinlistener &&
            e.removeEventListener("focusin", e.$_pfocustrap_focusinlistener) &&
            (e.$_pfocustrap_focusinlistener = null),
          e.$_pfocustrap_focusoutlistener &&
            e.removeEventListener(
              "focusout",
              e.$_pfocustrap_focusoutlistener,
            ) &&
            (e.$_pfocustrap_focusoutlistener = null));
      },
      autoFocus: function (e) {
        this.autoElementFocus(this.$el, {
          value: Qp(Qp({}, e), {}, { autoFocus: !0 }),
        });
      },
      autoElementFocus: function (e, n) {
        var r = n.value || {},
          i = r.autoFocusSelector,
          o = i === void 0 ? "" : i,
          s = r.firstFocusableSelector,
          a = s === void 0 ? "" : s,
          c = r.autoFocus,
          u = c === void 0 ? !1 : c,
          d = No(e, "[autofocus]".concat(this.getComputedSelector(o)));
        (u && !d && (d = No(e, this.getComputedSelector(a))), Dn(d));
      },
      onFirstHiddenElementFocus: function (e) {
        var n,
          r = e.currentTarget,
          i = e.relatedTarget,
          o =
            i === r.$_pfocustrap_lasthiddenfocusableelement ||
            !((n = this.$el) !== null && n !== void 0 && n.contains(i))
              ? No(
                  r.parentElement,
                  this.getComputedSelector(r.$_pfocustrap_focusableselector),
                )
              : r.$_pfocustrap_lasthiddenfocusableelement;
        Dn(o);
      },
      onLastHiddenElementFocus: function (e) {
        var n,
          r = e.currentTarget,
          i = e.relatedTarget,
          o =
            i === r.$_pfocustrap_firsthiddenfocusableelement ||
            !((n = this.$el) !== null && n !== void 0 && n.contains(i))
              ? F0(
                  r.parentElement,
                  this.getComputedSelector(r.$_pfocustrap_focusableselector),
                )
              : r.$_pfocustrap_firsthiddenfocusableelement;
        Dn(o);
      },
      createHiddenFocusableElements: function (e, n) {
        var r = this,
          i = n.value || {},
          o = i.tabIndex,
          s = o === void 0 ? 0 : o,
          a = i.firstFocusableSelector,
          c = a === void 0 ? "" : a,
          u = i.lastFocusableSelector,
          d = u === void 0 ? "" : u,
          f = function (b) {
            return Gs("span", {
              class: "p-hidden-accessible p-hidden-focusable",
              tabIndex: s,
              role: "presentation",
              "aria-hidden": !0,
              "data-p-hidden-accessible": !0,
              "data-p-hidden-focusable": !0,
              onFocus: b == null ? void 0 : b.bind(r),
            });
          },
          p = f(this.onFirstHiddenElementFocus),
          h = f(this.onLastHiddenElementFocus);
        ((p.$_pfocustrap_lasthiddenfocusableelement = h),
          (p.$_pfocustrap_focusableselector = c),
          p.setAttribute("data-pc-section", "firstfocusableelement"),
          (h.$_pfocustrap_firsthiddenfocusableelement = p),
          (h.$_pfocustrap_focusableselector = d),
          h.setAttribute("data-pc-section", "lastfocusableelement"),
          e.prepend(p),
          e.append(h));
      },
    },
  }),
  ja = {
    name: "Portal",
    props: {
      appendTo: { type: [String, Object], default: "body" },
      disabled: { type: Boolean, default: !1 },
    },
    data: function () {
      return { mounted: !1 };
    },
    mounted: function () {
      this.mounted = V0();
    },
    computed: {
      inline: function () {
        return this.disabled || this.appendTo === "self";
      },
    },
  };
function Xw(t, e, n, r, i, o) {
  return o.inline
    ? De(t.$slots, "default", { key: 0 })
    : i.mounted
      ? (E(),
        Be(Og, { key: 1, to: n.appendTo }, [De(t.$slots, "default")], 8, [
          "to",
        ]))
      : le("", !0);
}
ja.render = Xw;
function eh() {
  qx({ variableName: Z0("scrollbar.width").name });
}
function th() {
  Zx({ variableName: Z0("scrollbar.width").name });
}
var Yw = `
    .p-dialog {
        max-height: 90%;
        transform: scale(1);
        border-radius: dt('dialog.border.radius');
        box-shadow: dt('dialog.shadow');
        background: dt('dialog.background');
        border: 1px solid dt('dialog.border.color');
        color: dt('dialog.color');
    }

    .p-dialog-content {
        overflow-y: auto;
        padding: dt('dialog.content.padding');
    }

    .p-dialog-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        flex-shrink: 0;
        padding: dt('dialog.header.padding');
    }

    .p-dialog-title {
        font-weight: dt('dialog.title.font.weight');
        font-size: dt('dialog.title.font.size');
    }

    .p-dialog-footer {
        flex-shrink: 0;
        padding: dt('dialog.footer.padding');
        display: flex;
        justify-content: flex-end;
        gap: dt('dialog.footer.gap');
    }

    .p-dialog-header-actions {
        display: flex;
        align-items: center;
        gap: dt('dialog.header.gap');
    }

    .p-dialog-enter-active {
        transition: all 150ms cubic-bezier(0, 0, 0.2, 1);
    }

    .p-dialog-leave-active {
        transition: all 150ms cubic-bezier(0.4, 0, 0.2, 1);
    }

    .p-dialog-enter-from,
    .p-dialog-leave-to {
        opacity: 0;
        transform: scale(0.7);
    }

    .p-dialog-top .p-dialog,
    .p-dialog-bottom .p-dialog,
    .p-dialog-left .p-dialog,
    .p-dialog-right .p-dialog,
    .p-dialog-topleft .p-dialog,
    .p-dialog-topright .p-dialog,
    .p-dialog-bottomleft .p-dialog,
    .p-dialog-bottomright .p-dialog {
        margin: 0.75rem;
        transform: translate3d(0px, 0px, 0px);
    }

    .p-dialog-top .p-dialog-enter-active,
    .p-dialog-top .p-dialog-leave-active,
    .p-dialog-bottom .p-dialog-enter-active,
    .p-dialog-bottom .p-dialog-leave-active,
    .p-dialog-left .p-dialog-enter-active,
    .p-dialog-left .p-dialog-leave-active,
    .p-dialog-right .p-dialog-enter-active,
    .p-dialog-right .p-dialog-leave-active,
    .p-dialog-topleft .p-dialog-enter-active,
    .p-dialog-topleft .p-dialog-leave-active,
    .p-dialog-topright .p-dialog-enter-active,
    .p-dialog-topright .p-dialog-leave-active,
    .p-dialog-bottomleft .p-dialog-enter-active,
    .p-dialog-bottomleft .p-dialog-leave-active,
    .p-dialog-bottomright .p-dialog-enter-active,
    .p-dialog-bottomright .p-dialog-leave-active {
        transition: all 0.3s ease-out;
    }

    .p-dialog-top .p-dialog-enter-from,
    .p-dialog-top .p-dialog-leave-to {
        transform: translate3d(0px, -100%, 0px);
    }

    .p-dialog-bottom .p-dialog-enter-from,
    .p-dialog-bottom .p-dialog-leave-to {
        transform: translate3d(0px, 100%, 0px);
    }

    .p-dialog-left .p-dialog-enter-from,
    .p-dialog-left .p-dialog-leave-to,
    .p-dialog-topleft .p-dialog-enter-from,
    .p-dialog-topleft .p-dialog-leave-to,
    .p-dialog-bottomleft .p-dialog-enter-from,
    .p-dialog-bottomleft .p-dialog-leave-to {
        transform: translate3d(-100%, 0px, 0px);
    }

    .p-dialog-right .p-dialog-enter-from,
    .p-dialog-right .p-dialog-leave-to,
    .p-dialog-topright .p-dialog-enter-from,
    .p-dialog-topright .p-dialog-leave-to,
    .p-dialog-bottomright .p-dialog-enter-from,
    .p-dialog-bottomright .p-dialog-leave-to {
        transform: translate3d(100%, 0px, 0px);
    }

    .p-dialog-left:dir(rtl) .p-dialog-enter-from,
    .p-dialog-left:dir(rtl) .p-dialog-leave-to,
    .p-dialog-topleft:dir(rtl) .p-dialog-enter-from,
    .p-dialog-topleft:dir(rtl) .p-dialog-leave-to,
    .p-dialog-bottomleft:dir(rtl) .p-dialog-enter-from,
    .p-dialog-bottomleft:dir(rtl) .p-dialog-leave-to {
        transform: translate3d(100%, 0px, 0px);
    }

    .p-dialog-right:dir(rtl) .p-dialog-enter-from,
    .p-dialog-right:dir(rtl) .p-dialog-leave-to,
    .p-dialog-topright:dir(rtl) .p-dialog-enter-from,
    .p-dialog-topright:dir(rtl) .p-dialog-leave-to,
    .p-dialog-bottomright:dir(rtl) .p-dialog-enter-from,
    .p-dialog-bottomright:dir(rtl) .p-dialog-leave-to {
        transform: translate3d(-100%, 0px, 0px);
    }

    .p-dialog-maximized {
        width: 100vw !important;
        height: 100vh !important;
        top: 0px !important;
        left: 0px !important;
        max-height: 100%;
        height: 100%;
        border-radius: 0;
    }

    .p-dialog-maximized .p-dialog-content {
        flex-grow: 1;
    }

    .p-dialog .p-resizable-handle {
        position: absolute;
        font-size: 0.1px;
        display: block;
        cursor: se-resize;
        width: 12px;
        height: 12px;
        right: 1px;
        bottom: 1px;
    }
`,
  qw = {
    mask: function (e) {
      var n = e.position,
        r = e.modal;
      return {
        position: "fixed",
        height: "100%",
        width: "100%",
        left: 0,
        top: 0,
        display: "flex",
        justifyContent:
          n === "left" || n === "topleft" || n === "bottomleft"
            ? "flex-start"
            : n === "right" || n === "topright" || n === "bottomright"
              ? "flex-end"
              : "center",
        alignItems:
          n === "top" || n === "topleft" || n === "topright"
            ? "flex-start"
            : n === "bottom" || n === "bottomleft" || n === "bottomright"
              ? "flex-end"
              : "center",
        pointerEvents: r ? "auto" : "none",
      };
    },
    root: { display: "flex", flexDirection: "column", pointerEvents: "auto" },
  },
  Zw = {
    mask: function (e) {
      var n = e.props,
        r = [
          "left",
          "right",
          "top",
          "topleft",
          "topright",
          "bottom",
          "bottomleft",
          "bottomright",
        ],
        i = r.find(function (o) {
          return o === n.position;
        });
      return [
        "p-dialog-mask",
        { "p-overlay-mask p-overlay-mask-enter": n.modal },
        i ? "p-dialog-".concat(i) : "",
      ];
    },
    root: function (e) {
      var n = e.props,
        r = e.instance;
      return [
        "p-dialog p-component",
        { "p-dialog-maximized": n.maximizable && r.maximized },
      ];
    },
    header: "p-dialog-header",
    title: "p-dialog-title",
    headerActions: "p-dialog-header-actions",
    pcMaximizeButton: "p-dialog-maximize-button",
    pcCloseButton: "p-dialog-close-button",
    content: "p-dialog-content",
    footer: "p-dialog-footer",
  },
  Jw = ot.extend({ name: "dialog", style: Yw, classes: Zw, inlineStyles: qw }),
  Qw = {
    name: "BaseDialog",
    extends: lr,
    props: {
      header: { type: null, default: null },
      footer: { type: null, default: null },
      visible: { type: Boolean, default: !1 },
      modal: { type: Boolean, default: null },
      contentStyle: { type: null, default: null },
      contentClass: { type: String, default: null },
      contentProps: { type: null, default: null },
      maximizable: { type: Boolean, default: !1 },
      dismissableMask: { type: Boolean, default: !1 },
      closable: { type: Boolean, default: !0 },
      closeOnEscape: { type: Boolean, default: !0 },
      showHeader: { type: Boolean, default: !0 },
      blockScroll: { type: Boolean, default: !1 },
      baseZIndex: { type: Number, default: 0 },
      autoZIndex: { type: Boolean, default: !0 },
      position: { type: String, default: "center" },
      breakpoints: { type: Object, default: null },
      draggable: { type: Boolean, default: !0 },
      keepInViewport: { type: Boolean, default: !0 },
      minX: { type: Number, default: 0 },
      minY: { type: Number, default: 0 },
      appendTo: { type: [String, Object], default: "body" },
      closeIcon: { type: String, default: void 0 },
      maximizeIcon: { type: String, default: void 0 },
      minimizeIcon: { type: String, default: void 0 },
      closeButtonProps: {
        type: Object,
        default: function () {
          return { severity: "secondary", text: !0, rounded: !0 };
        },
      },
      maximizeButtonProps: {
        type: Object,
        default: function () {
          return { severity: "secondary", text: !0, rounded: !0 };
        },
      },
      _instance: null,
    },
    style: Jw,
    provide: function () {
      return { $pcDialog: this, $parentInstance: this };
    },
  },
  on = {
    name: "Dialog",
    extends: Qw,
    inheritAttrs: !1,
    emits: [
      "update:visible",
      "show",
      "hide",
      "after-hide",
      "maximize",
      "unmaximize",
      "dragstart",
      "dragend",
    ],
    provide: function () {
      var e = this;
      return {
        dialogRef: Xe(function () {
          return e._instance;
        }),
      };
    },
    data: function () {
      return {
        containerVisible: this.visible,
        maximized: !1,
        focusableMax: null,
        focusableClose: null,
        target: null,
      };
    },
    documentKeydownListener: null,
    container: null,
    mask: null,
    content: null,
    headerContainer: null,
    footerContainer: null,
    maximizableButton: null,
    closeButton: null,
    styleElement: null,
    dragging: null,
    documentDragListener: null,
    documentDragEndListener: null,
    lastPageX: null,
    lastPageY: null,
    maskMouseDownTarget: null,
    updated: function () {
      this.visible && (this.containerVisible = this.visible);
    },
    beforeUnmount: function () {
      (this.unbindDocumentState(),
        this.unbindGlobalListeners(),
        this.destroyStyle(),
        this.mask && this.autoZIndex && On.clear(this.mask),
        (this.container = null),
        (this.mask = null));
    },
    mounted: function () {
      this.breakpoints && this.createStyle();
    },
    methods: {
      close: function () {
        this.$emit("update:visible", !1);
      },
      onEnter: function () {
        (this.$emit("show"),
          (this.target = document.activeElement),
          this.enableDocumentSettings(),
          this.bindGlobalListeners(),
          this.autoZIndex &&
            On.set(
              "modal",
              this.mask,
              this.baseZIndex + this.$primevue.config.zIndex.modal,
            ));
      },
      onAfterEnter: function () {
        this.focus();
      },
      onBeforeLeave: function () {
        (this.modal &&
          !this.isUnstyled &&
          Vn(this.mask, "p-overlay-mask-leave"),
          this.dragging &&
            this.documentDragEndListener &&
            this.documentDragEndListener());
      },
      onLeave: function () {
        (this.$emit("hide"),
          Dn(this.target),
          (this.target = null),
          (this.focusableClose = null),
          (this.focusableMax = null));
      },
      onAfterLeave: function () {
        (this.autoZIndex && On.clear(this.mask),
          (this.containerVisible = !1),
          this.unbindDocumentState(),
          this.unbindGlobalListeners(),
          this.$emit("after-hide"));
      },
      onMaskMouseDown: function (e) {
        this.maskMouseDownTarget = e.target;
      },
      onMaskMouseUp: function () {
        this.dismissableMask &&
          this.modal &&
          this.mask === this.maskMouseDownTarget &&
          this.close();
      },
      focus: function () {
        var e = function (i) {
            return i && i.querySelector("[autofocus]");
          },
          n = this.$slots.footer && e(this.footerContainer);
        (n ||
          ((n = this.$slots.header && e(this.headerContainer)),
          n ||
            ((n = this.$slots.default && e(this.content)),
            n ||
              (this.maximizable
                ? ((this.focusableMax = !0), (n = this.maximizableButton))
                : ((this.focusableClose = !0), (n = this.closeButton))))),
          n && Dn(n, { focusVisible: !0 }));
      },
      maximize: function (e) {
        (this.maximized
          ? ((this.maximized = !1), this.$emit("unmaximize", e))
          : ((this.maximized = !0), this.$emit("maximize", e)),
          this.modal || (this.maximized ? eh() : th()));
      },
      enableDocumentSettings: function () {
        (this.modal ||
          (!this.modal && this.blockScroll) ||
          (this.maximizable && this.maximized)) &&
          eh();
      },
      unbindDocumentState: function () {
        (this.modal ||
          (!this.modal && this.blockScroll) ||
          (this.maximizable && this.maximized)) &&
          th();
      },
      onKeyDown: function (e) {
        e.code === "Escape" && this.closeOnEscape && this.close();
      },
      bindDocumentKeyDownListener: function () {
        this.documentKeydownListener ||
          ((this.documentKeydownListener = this.onKeyDown.bind(this)),
          window.document.addEventListener(
            "keydown",
            this.documentKeydownListener,
          ));
      },
      unbindDocumentKeyDownListener: function () {
        this.documentKeydownListener &&
          (window.document.removeEventListener(
            "keydown",
            this.documentKeydownListener,
          ),
          (this.documentKeydownListener = null));
      },
      containerRef: function (e) {
        this.container = e;
      },
      maskRef: function (e) {
        this.mask = e;
      },
      contentRef: function (e) {
        this.content = e;
      },
      headerContainerRef: function (e) {
        this.headerContainer = e;
      },
      footerContainerRef: function (e) {
        this.footerContainer = e;
      },
      maximizableRef: function (e) {
        this.maximizableButton = e ? e.$el : void 0;
      },
      closeButtonRef: function (e) {
        this.closeButton = e ? e.$el : void 0;
      },
      createStyle: function () {
        if (!this.styleElement && !this.isUnstyled) {
          var e;
          ((this.styleElement = document.createElement("style")),
            (this.styleElement.type = "text/css"),
            Qd(
              this.styleElement,
              "nonce",
              (e = this.$primevue) === null ||
                e === void 0 ||
                (e = e.config) === null ||
                e === void 0 ||
                (e = e.csp) === null ||
                e === void 0
                ? void 0
                : e.nonce,
            ),
            document.head.appendChild(this.styleElement));
          var n = "";
          for (var r in this.breakpoints)
            n += `
                        @media screen and (max-width: `
              .concat(
                r,
                `) {
                            .p-dialog[`,
              )
              .concat(
                this.$attrSelector,
                `] {
                                width: `,
              )
              .concat(
                this.breakpoints[r],
                ` !important;
                            }
                        }
                    `,
              );
          this.styleElement.innerHTML = n;
        }
      },
      destroyStyle: function () {
        this.styleElement &&
          (document.head.removeChild(this.styleElement),
          (this.styleElement = null));
      },
      initDrag: function (e) {
        e.target.closest("div").getAttribute("data-pc-section") !==
          "headeractions" &&
          this.draggable &&
          ((this.dragging = !0),
          (this.lastPageX = e.pageX),
          (this.lastPageY = e.pageY),
          (this.container.style.margin = "0"),
          document.body.setAttribute("data-p-unselectable-text", "true"),
          !this.isUnstyled && xc(document.body, { "user-select": "none" }),
          this.$emit("dragstart", e));
      },
      bindGlobalListeners: function () {
        (this.draggable &&
          (this.bindDocumentDragListener(), this.bindDocumentDragEndListener()),
          this.closeOnEscape &&
            this.closable &&
            this.bindDocumentKeyDownListener());
      },
      unbindGlobalListeners: function () {
        (this.unbindDocumentDragListener(),
          this.unbindDocumentDragEndListener(),
          this.unbindDocumentKeyDownListener());
      },
      bindDocumentDragListener: function () {
        var e = this;
        ((this.documentDragListener = function (n) {
          if (e.dragging) {
            var r = In(e.container),
              i = Kr(e.container),
              o = n.pageX - e.lastPageX,
              s = n.pageY - e.lastPageY,
              a = e.container.getBoundingClientRect(),
              c = a.left + o,
              u = a.top + s,
              d = Qo(),
              f = getComputedStyle(e.container),
              p = parseFloat(f.marginLeft),
              h = parseFloat(f.marginTop);
            ((e.container.style.position = "fixed"),
              e.keepInViewport
                ? (c >= e.minX &&
                    c + r < d.width &&
                    ((e.lastPageX = n.pageX),
                    (e.container.style.left = c - p + "px")),
                  u >= e.minY &&
                    u + i < d.height &&
                    ((e.lastPageY = n.pageY),
                    (e.container.style.top = u - h + "px")))
                : ((e.lastPageX = n.pageX),
                  (e.container.style.left = c - p + "px"),
                  (e.lastPageY = n.pageY),
                  (e.container.style.top = u - h + "px")));
          }
        }),
          window.document.addEventListener(
            "mousemove",
            this.documentDragListener,
          ));
      },
      unbindDocumentDragListener: function () {
        this.documentDragListener &&
          (window.document.removeEventListener(
            "mousemove",
            this.documentDragListener,
          ),
          (this.documentDragListener = null));
      },
      bindDocumentDragEndListener: function () {
        var e = this;
        ((this.documentDragEndListener = function (n) {
          e.dragging &&
            ((e.dragging = !1),
            document.body.removeAttribute("data-p-unselectable-text"),
            !e.isUnstyled && (document.body.style["user-select"] = ""),
            e.$emit("dragend", n));
        }),
          window.document.addEventListener(
            "mouseup",
            this.documentDragEndListener,
          ));
      },
      unbindDocumentDragEndListener: function () {
        this.documentDragEndListener &&
          (window.document.removeEventListener(
            "mouseup",
            this.documentDragEndListener,
          ),
          (this.documentDragEndListener = null));
      },
    },
    computed: {
      maximizeIconComponent: function () {
        return this.maximized
          ? this.minimizeIcon
            ? "span"
            : "WindowMinimizeIcon"
          : this.maximizeIcon
            ? "span"
            : "WindowMaximizeIcon";
      },
      ariaLabelledById: function () {
        return this.header != null || this.$attrs["aria-labelledby"] !== null
          ? this.$id + "_header"
          : null;
      },
      closeAriaLabel: function () {
        return this.$primevue.config.locale.aria
          ? this.$primevue.config.locale.aria.close
          : void 0;
      },
      dataP: function () {
        return At({ maximized: this.maximized, modal: this.modal });
      },
    },
    directives: { ripple: Ha, focustrap: Kw },
    components: {
      Button: Ce,
      Portal: ja,
      WindowMinimizeIcon: nv,
      WindowMaximizeIcon: tv,
      TimesIcon: Sc,
    },
  };
function va(t) {
  "@babel/helpers - typeof";
  return (
    (va =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    va(t)
  );
}
function nh(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    (e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r));
  }
  return n;
}
function rh(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? nh(Object(n), !0).forEach(function (r) {
          ek(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
        : nh(Object(n)).forEach(function (r) {
            Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
          });
  }
  return t;
}
function ek(t, e, n) {
  return (
    (e = tk(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function tk(t) {
  var e = nk(t, "string");
  return va(e) == "symbol" ? e : e + "";
}
function nk(t, e) {
  if (va(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (va(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var rk = ["data-p"],
  ik = ["aria-labelledby", "aria-modal", "data-p"],
  ok = ["id"],
  sk = ["data-p"];
function ak(t, e, n, r, i, o) {
  var s = Mt("Button"),
    a = Mt("Portal"),
    c = Xn("focustrap");
  return (
    E(),
    Be(
      a,
      { appendTo: t.appendTo },
      {
        default: Ye(function () {
          return [
            i.containerVisible
              ? (E(),
                R(
                  "div",
                  Q(
                    {
                      key: 0,
                      ref: o.maskRef,
                      class: t.cx("mask"),
                      style: t.sx("mask", !0, {
                        position: t.position,
                        modal: t.modal,
                      }),
                      onMousedown:
                        e[1] ||
                        (e[1] = function () {
                          return (
                            o.onMaskMouseDown &&
                            o.onMaskMouseDown.apply(o, arguments)
                          );
                        }),
                      onMouseup:
                        e[2] ||
                        (e[2] = function () {
                          return (
                            o.onMaskMouseUp &&
                            o.onMaskMouseUp.apply(o, arguments)
                          );
                        }),
                      "data-p": o.dataP,
                    },
                    t.ptm("mask"),
                  ),
                  [
                    O(
                      Fa,
                      Q(
                        {
                          name: "p-dialog",
                          onEnter: o.onEnter,
                          onAfterEnter: o.onAfterEnter,
                          onBeforeLeave: o.onBeforeLeave,
                          onLeave: o.onLeave,
                          onAfterLeave: o.onAfterLeave,
                          appear: "",
                        },
                        t.ptm("transition"),
                      ),
                      {
                        default: Ye(function () {
                          return [
                            t.visible
                              ? st(
                                  (E(),
                                  R(
                                    "div",
                                    Q(
                                      {
                                        key: 0,
                                        ref: o.containerRef,
                                        class: t.cx("root"),
                                        style: t.sx("root"),
                                        role: "dialog",
                                        "aria-labelledby": o.ariaLabelledById,
                                        "aria-modal": t.modal,
                                        "data-p": o.dataP,
                                      },
                                      t.ptmi("root"),
                                    ),
                                    [
                                      t.$slots.container
                                        ? De(t.$slots, "container", {
                                            key: 0,
                                            closeCallback: o.close,
                                            maximizeCallback: function (d) {
                                              return o.maximize(d);
                                            },
                                          })
                                        : (E(),
                                          R(
                                            We,
                                            { key: 1 },
                                            [
                                              t.showHeader
                                                ? (E(),
                                                  R(
                                                    "div",
                                                    Q(
                                                      {
                                                        key: 0,
                                                        ref: o.headerContainerRef,
                                                        class: t.cx("header"),
                                                        onMousedown:
                                                          e[0] ||
                                                          (e[0] = function () {
                                                            return (
                                                              o.initDrag &&
                                                              o.initDrag.apply(
                                                                o,
                                                                arguments,
                                                              )
                                                            );
                                                          }),
                                                      },
                                                      t.ptm("header"),
                                                    ),
                                                    [
                                                      De(
                                                        t.$slots,
                                                        "header",
                                                        {
                                                          class: Ie(
                                                            t.cx("title"),
                                                          ),
                                                        },
                                                        function () {
                                                          return [
                                                            t.header
                                                              ? (E(),
                                                                R(
                                                                  "span",
                                                                  Q(
                                                                    {
                                                                      key: 0,
                                                                      id: o.ariaLabelledById,
                                                                      class:
                                                                        t.cx(
                                                                          "title",
                                                                        ),
                                                                    },
                                                                    t.ptm(
                                                                      "title",
                                                                    ),
                                                                  ),
                                                                  z(t.header),
                                                                  17,
                                                                  ok,
                                                                ))
                                                              : le("", !0),
                                                          ];
                                                        },
                                                      ),
                                                      l(
                                                        "div",
                                                        Q(
                                                          {
                                                            class:
                                                              t.cx(
                                                                "headerActions",
                                                              ),
                                                          },
                                                          t.ptm(
                                                            "headerActions",
                                                          ),
                                                        ),
                                                        [
                                                          t.maximizable
                                                            ? De(
                                                                t.$slots,
                                                                "maximizebutton",
                                                                {
                                                                  key: 0,
                                                                  maximized:
                                                                    i.maximized,
                                                                  maximizeCallback:
                                                                    function (
                                                                      d,
                                                                    ) {
                                                                      return o.maximize(
                                                                        d,
                                                                      );
                                                                    },
                                                                },
                                                                function () {
                                                                  return [
                                                                    O(
                                                                      s,
                                                                      Q(
                                                                        {
                                                                          ref: o.maximizableRef,
                                                                          autofocus:
                                                                            i.focusableMax,
                                                                          class:
                                                                            t.cx(
                                                                              "pcMaximizeButton",
                                                                            ),
                                                                          onClick:
                                                                            o.maximize,
                                                                          tabindex:
                                                                            t.maximizable
                                                                              ? "0"
                                                                              : "-1",
                                                                          unstyled:
                                                                            t.unstyled,
                                                                        },
                                                                        t.maximizeButtonProps,
                                                                        {
                                                                          pt: t.ptm(
                                                                            "pcMaximizeButton",
                                                                          ),
                                                                          "data-pc-group-section":
                                                                            "headericon",
                                                                        },
                                                                      ),
                                                                      {
                                                                        icon: Ye(
                                                                          function (
                                                                            u,
                                                                          ) {
                                                                            return [
                                                                              De(
                                                                                t.$slots,
                                                                                "maximizeicon",
                                                                                {
                                                                                  maximized:
                                                                                    i.maximized,
                                                                                },
                                                                                function () {
                                                                                  return [
                                                                                    (E(),
                                                                                    Be(
                                                                                      Dt(
                                                                                        o.maximizeIconComponent,
                                                                                      ),
                                                                                      Q(
                                                                                        {
                                                                                          class:
                                                                                            [
                                                                                              u.class,
                                                                                              i.maximized
                                                                                                ? t.minimizeIcon
                                                                                                : t.maximizeIcon,
                                                                                            ],
                                                                                        },
                                                                                        t.ptm(
                                                                                          "pcMaximizeButton",
                                                                                        )
                                                                                          .icon,
                                                                                      ),
                                                                                      null,
                                                                                      16,
                                                                                      [
                                                                                        "class",
                                                                                      ],
                                                                                    )),
                                                                                  ];
                                                                                },
                                                                              ),
                                                                            ];
                                                                          },
                                                                        ),
                                                                        _: 3,
                                                                      },
                                                                      16,
                                                                      [
                                                                        "autofocus",
                                                                        "class",
                                                                        "onClick",
                                                                        "tabindex",
                                                                        "unstyled",
                                                                        "pt",
                                                                      ],
                                                                    ),
                                                                  ];
                                                                },
                                                              )
                                                            : le("", !0),
                                                          t.closable
                                                            ? De(
                                                                t.$slots,
                                                                "closebutton",
                                                                {
                                                                  key: 1,
                                                                  closeCallback:
                                                                    o.close,
                                                                },
                                                                function () {
                                                                  return [
                                                                    O(
                                                                      s,
                                                                      Q(
                                                                        {
                                                                          ref: o.closeButtonRef,
                                                                          autofocus:
                                                                            i.focusableClose,
                                                                          class:
                                                                            t.cx(
                                                                              "pcCloseButton",
                                                                            ),
                                                                          onClick:
                                                                            o.close,
                                                                          "aria-label":
                                                                            o.closeAriaLabel,
                                                                          unstyled:
                                                                            t.unstyled,
                                                                        },
                                                                        t.closeButtonProps,
                                                                        {
                                                                          pt: t.ptm(
                                                                            "pcCloseButton",
                                                                          ),
                                                                          "data-pc-group-section":
                                                                            "headericon",
                                                                        },
                                                                      ),
                                                                      {
                                                                        icon: Ye(
                                                                          function (
                                                                            u,
                                                                          ) {
                                                                            return [
                                                                              De(
                                                                                t.$slots,
                                                                                "closeicon",
                                                                                {},
                                                                                function () {
                                                                                  return [
                                                                                    (E(),
                                                                                    Be(
                                                                                      Dt(
                                                                                        t.closeIcon
                                                                                          ? "span"
                                                                                          : "TimesIcon",
                                                                                      ),
                                                                                      Q(
                                                                                        {
                                                                                          class:
                                                                                            [
                                                                                              t.closeIcon,
                                                                                              u.class,
                                                                                            ],
                                                                                        },
                                                                                        t.ptm(
                                                                                          "pcCloseButton",
                                                                                        )
                                                                                          .icon,
                                                                                      ),
                                                                                      null,
                                                                                      16,
                                                                                      [
                                                                                        "class",
                                                                                      ],
                                                                                    )),
                                                                                  ];
                                                                                },
                                                                              ),
                                                                            ];
                                                                          },
                                                                        ),
                                                                        _: 3,
                                                                      },
                                                                      16,
                                                                      [
                                                                        "autofocus",
                                                                        "class",
                                                                        "onClick",
                                                                        "aria-label",
                                                                        "unstyled",
                                                                        "pt",
                                                                      ],
                                                                    ),
                                                                  ];
                                                                },
                                                              )
                                                            : le("", !0),
                                                        ],
                                                        16,
                                                      ),
                                                    ],
                                                    16,
                                                  ))
                                                : le("", !0),
                                              l(
                                                "div",
                                                Q(
                                                  {
                                                    ref: o.contentRef,
                                                    class: [
                                                      t.cx("content"),
                                                      t.contentClass,
                                                    ],
                                                    style: t.contentStyle,
                                                    "data-p": o.dataP,
                                                  },
                                                  rh(
                                                    rh({}, t.contentProps),
                                                    t.ptm("content"),
                                                  ),
                                                ),
                                                [De(t.$slots, "default")],
                                                16,
                                                sk,
                                              ),
                                              t.footer || t.$slots.footer
                                                ? (E(),
                                                  R(
                                                    "div",
                                                    Q(
                                                      {
                                                        key: 1,
                                                        ref: o.footerContainerRef,
                                                        class: t.cx("footer"),
                                                      },
                                                      t.ptm("footer"),
                                                    ),
                                                    [
                                                      De(
                                                        t.$slots,
                                                        "footer",
                                                        {},
                                                        function () {
                                                          return [
                                                            Ke(z(t.footer), 1),
                                                          ];
                                                        },
                                                      ),
                                                    ],
                                                    16,
                                                  ))
                                                : le("", !0),
                                            ],
                                            64,
                                          )),
                                    ],
                                    16,
                                    ik,
                                  )),
                                  [[c, { disabled: !t.modal }]],
                                )
                              : le("", !0),
                          ];
                        }),
                        _: 3,
                      },
                      16,
                      [
                        "onEnter",
                        "onAfterEnter",
                        "onBeforeLeave",
                        "onLeave",
                        "onAfterLeave",
                      ],
                    ),
                  ],
                  16,
                  rk,
                ))
              : le("", !0),
          ];
        }),
        _: 3,
      },
      8,
      ["appendTo"],
    )
  );
}
on.render = ak;
const lk = { class: "flex flex-col gap-6" },
  ck = { class: "flex items-start gap-4" },
  uk = { key: 0, class: "text-center py-8" },
  dk = {
    key: 1,
    class:
      "p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg",
  },
  fk = { class: "flex items-center gap-2 text-red-700 dark:text-red-300" },
  pk = { key: 2, class: "flex flex-col gap-6" },
  hk = { class: "flex flex-col gap-4" },
  mk = { class: "grid grid-cols-2 gap-3" },
  gk = ["onClick"],
  vk = {
    key: 0,
    class:
      "absolute -top-2 -right-2 bg-orange-500 text-white text-xs px-2 py-1 rounded-full font-bold",
  },
  bk = { class: "text-center" },
  yk = { class: "flex items-center justify-center gap-2 mb-2" },
  xk = { class: "text-xl font-bold text-surface-900 dark:text-surface-0" },
  _k = {
    class: "text-lg font-semibold text-primary-600 dark:text-primary-400",
  },
  wk = {
    key: 0,
    class: "text-xs text-green-600 dark:text-green-400 font-medium",
  },
  kk = { class: "text-xs text-surface-500 dark:text-surface-400 mt-1" },
  Sk = { key: 0, class: "p-4 bg-surface-50 dark:bg-surface-800 rounded-lg" },
  Ck = { class: "space-y-1 text-sm" },
  Mk = { class: "flex justify-between" },
  Ek = { class: "font-medium text-surface-900 dark:text-surface-0" },
  Tk = { class: "flex justify-between" },
  Ak = { class: "font-medium text-surface-900 dark:text-surface-0" },
  Pk = {
    key: 0,
    class: "flex justify-between text-green-600 dark:text-green-400",
  },
  Rk = { class: "font-medium" },
  Lk = { class: "flex justify-between border-t pt-1 mt-2" },
  Dk = { class: "font-bold text-surface-900 dark:text-surface-0" },
  Ik = { class: "flex justify-between" },
  Ok = { class: "font-bold text-primary-600 dark:text-primary-400" },
  $k = {
    key: 1,
    class:
      "p-4 bg-orange-50 dark:bg-orange-900/20 border border-orange-200 dark:border-orange-800 rounded-lg",
  },
  zk = { class: "flex items-start gap-3" },
  Bk = { class: "flex-1" },
  Uk = { class: "text-sm text-orange-700 dark:text-orange-300 mb-3" },
  Fk = { class: "mt-1 ml-4 list-disc" },
  Nk = { key: 0 },
  Vk = { key: 1 },
  Hk = { key: 2 },
  jk = { key: 3 },
  Gk = { class: "flex justify-end gap-4" },
  Wk = { key: 3, class: "flex flex-col gap-6" },
  Kk = {
    class:
      "p-4 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg",
  },
  Xk = { class: "flex justify-between items-center" },
  Yk = { class: "font-semibold text-blue-900 dark:text-blue-100" },
  qk = { class: "text-sm text-blue-800 dark:text-blue-200" },
  Zk = { class: "text-right" },
  Jk = { class: "text-lg font-bold text-blue-900 dark:text-blue-100" },
  Qk = {
    class:
      "p-4 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg",
  },
  e2 = { class: "text-sm text-green-800 dark:text-green-200 space-y-1" },
  t2 = {
    key: 0,
    class: "pt-1 border-t border-green-200 dark:border-green-700",
  },
  n2 = { key: 0, class: "space-y-4" },
  r2 = {
    class: "p-4 border border-surface-200 dark:border-surface-700 rounded-lg",
  },
  i2 = {
    key: 0,
    class:
      "p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg",
  },
  o2 = { class: "flex items-center gap-2 text-red-700 dark:text-red-300" },
  s2 = { class: "text-sm" },
  a2 = { class: "flex justify-end gap-4" },
  l2 = { key: 4, class: "text-center py-8" },
  c2 = { class: "text-surface-600 dark:text-surface-300 mb-4" },
  u2 = {
    key: 0,
    class: "p-4 bg-surface-50 dark:bg-surface-800 rounded-lg mb-6",
  },
  d2 = { class: "space-y-2 text-sm" },
  f2 = { class: "flex justify-between" },
  p2 = { class: "font-bold" },
  h2 = { class: "flex justify-between" },
  m2 = { class: "font-mono text-xs" },
  g2 = {
    __name: "CoinRechargeDialog",
    props: {
      show: { type: Boolean, default: !1 },
      userProfile: { type: Object, default: () => ({}) },
    },
    emits: ["close", "payment-success"],
    setup(t, { emit: e }) {
      const n = t,
        r = e,
        i = Na(),
        o = sr("toast", null),
        s = N(!1),
        a = N(!1),
        c = N(""),
        u = N(1),
        d = N([]),
        f = N(null),
        p = N(!1),
        h = N(!1),
        v = N(""),
        b = N(null),
        g = N(null),
        m = N(null),
        _ = N(!1);
      let y = null,
        x = null,
        C = null;
      const w = Xe(() => {
        const ie = n.userProfile;
        return !ie || typeof ie != "object"
          ? !1
          : [
              "billing_name",
              "billing_address",
              "billing_postal_code",
              "billing_city",
            ].every((re) => {
              const Ee = ie[re];
              return Ee && typeof Ee == "string" && Ee.trim().length > 0;
            });
      });
      Xe(() => !1);
      const S = Xe(() => _.value && !h.value && !v.value),
        D = () => {
          (U(),
            o &&
              o.add({
                severity: "info",
                summary: "Profil szerkesztés",
                detail: "Töltsd ki a számlázási adatokat a vásárláshoz",
                life: 4e3,
              }),
            i.push("/dashboard/profile"));
        };
      (Ft(
        () => n.show,
        (ie) => {
          ((s.value = ie), ie && (ne(), W()));
        },
      ),
        Ft(s, (ie) => {
          ie || r("close");
        }),
        Ft(
          () => n.userProfile,
          (ie) => {},
          { deep: !0 },
        ));
      const k = async () =>
          window.Stripe
            ? window.Stripe
            : new Promise((ie, J) => {
                if (document.querySelector('script[src*="js.stripe.com"]')) {
                  ie(window.Stripe);
                  return;
                }
                const V = document.createElement("script");
                ((V.src = "https://js.stripe.com/v3/"),
                  (V.onload = () => ie(window.Stripe)),
                  (V.onerror = () => J(new Error("Failed to load Stripe"))),
                  document.head.appendChild(V));
              }),
        P = async () => {
          try {
            if (
              ((y = (await k())(
                "pk_live_51RZA3qCYhcFWeLnWFKw1fY5bj0zjDim1JrXHpEtYdpyD8WcV3YvIzatc34P2Gw9hiLBvguBDRXsIOxGea2JnsPxv000wZsDaTA",
              )),
              !y)
            )
              throw new Error("Failed to initialize Stripe");
            return !0;
          } catch {
            return ((v.value = "Fizetési rendszer betöltése sikertelen"), !1);
          }
        },
        I = async () => {
          if (!(!y || !m.value))
            try {
              _.value = !1;
              const ie = {
                theme: "stripe",
                variables: {
                  colorPrimary: "#6366f1",
                  colorBackground: "#ffffff",
                  colorText: "#424770",
                  colorDanger: "#df1b41",
                  fontFamily: "Ideal Sans, system-ui, sans-serif",
                  spacingUnit: "2px",
                  borderRadius: "4px",
                },
              };
              ((x = y.elements({
                clientSecret: m.value.client_secret,
                appearance: ie,
              })),
                (C = x.create("payment")),
                await ao(),
                g.value &&
                  (await C.mount(g.value),
                  (_.value = !0),
                  C.on("change", (J) => {
                    J.error ? (v.value = J.error.message) : (v.value = "");
                  })));
            } catch {
              ((v.value = "Fizetési form betöltése sikertelen"),
                (_.value = !1));
            }
        },
        W = async () => {
          ((a.value = !0), (c.value = ""));
          try {
            const ie = await Ve.getCoinPacks();
            d.value = ie.data || ie;
          } catch {
            c.value = "Nem sikerült betölteni a csomagokat";
          } finally {
            a.value = !1;
          }
        },
        X = (ie) => {
          f.value = ie;
        },
        Z = async () => {
          if (f.value) {
            if (!w.value) {
              o &&
                o.add({
                  severity: "warn",
                  summary: "Hiányos adatok",
                  detail:
                    "Kérlek töltsd ki a számlázási adatokat a profilodban",
                  life: 4e3,
                });
              return;
            }
            ((p.value = !0), (v.value = ""));
            try {
              if (!y && !(await P()))
                throw new Error("Stripe initialization failed");
              const ie = await Ve.createPaymentIntent(f.value.id);
              ((m.value = ie.data || ie), (u.value = 2), await ao(), await I());
            } catch (ie) {
              v.value = ie.message || "Fizetés előkészítése sikertelen";
            } finally {
              p.value = !1;
            }
          }
        },
        G = async () => {
          if (!y || !x || !m.value) {
            v.value = "Fizetési rendszer nincs betöltve";
            return;
          }
          ((h.value = !0), (v.value = ""));
          try {
            const { error: ie } = await y.confirmPayment({
              elements: x,
              confirmParams: {
                return_url: window.location.origin + "/payment-success",
              },
              redirect: "if_required",
            });
            if (ie) {
              v.value = ie.message;
              return;
            }
            const J = await Ve.confirmPayment({
              payment_intent_id: m.value.payment_intent_id,
              pack_id: f.value.id,
            });
            let V = J;
            (J instanceof Response && (V = await J.json()),
              (b.value = V.data || V),
              (u.value = 3),
              r("payment-success", b.value));
          } catch (ie) {
            v.value = ie.message || "Fizetés megerősítése sikertelen";
          } finally {
            h.value = !1;
          }
        },
        $ = () => {
          ((u.value = 1),
            (v.value = ""),
            (_.value = !1),
            C && (C.unmount(), (C = null)),
            x && (x = null),
            (m.value = null));
        },
        ne = () => {
          ((u.value = 1),
            (f.value = null),
            (m.value = null),
            (v.value = ""),
            (b.value = null),
            (_.value = !1),
            C && (C.unmount(), (C = null)),
            x && (x = null));
        },
        U = () => {
          ((s.value = !1), ne());
        };
      return (
        $t(async () => {}),
        uo(() => {
          C && C.unmount();
        }),
        (ie, J) => (
          E(),
          Be(
            H(on),
            {
              visible: s.value,
              "onUpdate:visible": J[0] || (J[0] = (V) => (s.value = V)),
              "append-to": "body",
              modal: "",
              breakpoints: { "960px": "75vw", "640px": "80vw" },
              style: { width: "45rem" },
              draggable: !1,
              resizable: !1,
              "show-header": !1,
              class: "shadow-sm rounded-2xl",
              pt: { content: "!p-6", footer: "!pb-6 !px-6" },
              onHide: U,
            },
            {
              default: Ye(() => {
                var V, re, Ee, Pe;
                return [
                  l("div", lk, [
                    l("div", ck, [
                      J[1] ||
                        (J[1] = l(
                          "div",
                          { class: "flex-1 flex flex-col gap-2" },
                          [
                            l(
                              "h1",
                              {
                                class:
                                  "m-0 text-surface-900 dark:text-surface-0 font-semibold text-xl leading-normal",
                              },
                              "Bányászérme feltöltés",
                            ),
                            l(
                              "span",
                              {
                                class:
                                  "text-surface-500 dark:text-surface-400 text-base leading-normal",
                              },
                              "Válaszd ki a feltölteni kívánt bányászérme mennyiségét és add meg a fizetési adataidat.",
                            ),
                          ],
                          -1,
                        )),
                      O(H(Ce), {
                        icon: "pi pi-times",
                        text: "",
                        rounded: "",
                        severity: "secondary",
                        class: "w-10 h-10 !p-2",
                        onClick: U,
                      }),
                    ]),
                    a.value
                      ? (E(),
                        R(
                          "div",
                          uk,
                          J[2] ||
                            (J[2] = [
                              l(
                                "div",
                                {
                                  class:
                                    "flex items-center justify-center gap-2 text-surface-500 dark:text-surface-400",
                                },
                                [
                                  l("i", { class: "pi pi-spin pi-spinner" }),
                                  l("span", null, "Csomag adatok betöltése..."),
                                ],
                                -1,
                              ),
                            ]),
                        ))
                      : c.value
                        ? (E(),
                          R("div", dk, [
                            l("div", fk, [
                              J[3] ||
                                (J[3] = l(
                                  "i",
                                  { class: "pi pi-exclamation-triangle" },
                                  null,
                                  -1,
                                )),
                              l("span", null, z(c.value), 1),
                            ]),
                            l(
                              "button",
                              {
                                onClick: W,
                                class:
                                  "mt-2 text-red-600 dark:text-red-400 hover:text-red-800 dark:hover:text-red-200 text-sm underline",
                              },
                              " Újra próbálkozás ",
                            ),
                          ]))
                        : u.value === 1
                          ? (E(),
                            R("div", pk, [
                              l("div", hk, [
                                J[6] ||
                                  (J[6] = l(
                                    "label",
                                    {
                                      class: "text-color text-base font-medium",
                                    },
                                    "Bányászérme csomag kiválasztása",
                                    -1,
                                  )),
                                l("div", mk, [
                                  (E(!0),
                                  R(
                                    We,
                                    null,
                                    mt(d.value, (be) => {
                                      var ce;
                                      return (
                                        E(),
                                        R(
                                          "div",
                                          {
                                            key: be.id,
                                            onClick: (oe) => X(be),
                                            class: Ie([
                                              "p-4 border-2 rounded-lg cursor-pointer transition-all relative",
                                              ((ce = f.value) == null
                                                ? void 0
                                                : ce.id) === be.id
                                                ? "border-primary-500 bg-primary-50 dark:bg-primary-900/20"
                                                : "border-surface-200 dark:border-surface-700 hover:border-primary-300",
                                            ]),
                                          },
                                          [
                                            be.popular
                                              ? (E(),
                                                R("div", vk, " NÉPSZERŰ "))
                                              : le("", !0),
                                            l("div", bk, [
                                              l("div", yk, [
                                                J[4] ||
                                                  (J[4] = l(
                                                    "i",
                                                    {
                                                      class:
                                                        "pi pi-star text-yellow-500 text-xl",
                                                    },
                                                    null,
                                                    -1,
                                                  )),
                                                l(
                                                  "span",
                                                  xk,
                                                  z(
                                                    be.total_coins.toLocaleString(),
                                                  ),
                                                  1,
                                                ),
                                                J[5] ||
                                                  (J[5] = l(
                                                    "span",
                                                    {
                                                      class:
                                                        "text-sm text-surface-500 dark:text-surface-400",
                                                    },
                                                    "BÉ",
                                                    -1,
                                                  )),
                                              ]),
                                              l(
                                                "div",
                                                _k,
                                                z(be.price_formatted),
                                                1,
                                              ),
                                              be.bonus_coins > 0
                                                ? (E(),
                                                  R(
                                                    "div",
                                                    wk,
                                                    " +" +
                                                      z(be.bonus_coins) +
                                                      " bónusz! ",
                                                    1,
                                                  ))
                                                : le("", !0),
                                              l(
                                                "div",
                                                kk,
                                                z(be.description),
                                                1,
                                              ),
                                            ]),
                                          ],
                                          10,
                                          gk,
                                        )
                                      );
                                    }),
                                    128,
                                  )),
                                ]),
                              ]),
                              f.value
                                ? (E(),
                                  R("div", Sk, [
                                    J[12] ||
                                      (J[12] = l(
                                        "div",
                                        {
                                          class:
                                            "flex justify-between items-center mb-2",
                                        },
                                        [
                                          l(
                                            "span",
                                            {
                                              class:
                                                "font-medium text-surface-900 dark:text-surface-0",
                                            },
                                            "Összesítés",
                                          ),
                                        ],
                                        -1,
                                      )),
                                    l("div", Ck, [
                                      l("div", Mk, [
                                        J[7] ||
                                          (J[7] = l(
                                            "span",
                                            {
                                              class:
                                                "text-surface-600 dark:text-surface-300",
                                            },
                                            "Csomag:",
                                            -1,
                                          )),
                                        l("span", Ek, z(f.value.name), 1),
                                      ]),
                                      l("div", Tk, [
                                        J[8] ||
                                          (J[8] = l(
                                            "span",
                                            {
                                              class:
                                                "text-surface-600 dark:text-surface-300",
                                            },
                                            "Alap bányászérme:",
                                            -1,
                                          )),
                                        l(
                                          "span",
                                          Ak,
                                          z(f.value.coins.toLocaleString()) +
                                            " BÉ",
                                          1,
                                        ),
                                      ]),
                                      f.value.bonus_coins > 0
                                        ? (E(),
                                          R("div", Pk, [
                                            J[9] ||
                                              (J[9] = l(
                                                "span",
                                                null,
                                                "Bónusz:",
                                                -1,
                                              )),
                                            l(
                                              "span",
                                              Rk,
                                              "+" +
                                                z(
                                                  f.value.bonus_coins.toLocaleString(),
                                                ) +
                                                " BÉ",
                                              1,
                                            ),
                                          ]))
                                        : le("", !0),
                                      l("div", Lk, [
                                        J[10] ||
                                          (J[10] = l(
                                            "span",
                                            {
                                              class:
                                                "font-semibold text-surface-900 dark:text-surface-0",
                                            },
                                            "Összesen:",
                                            -1,
                                          )),
                                        l(
                                          "span",
                                          Dk,
                                          z(
                                            f.value.total_coins.toLocaleString(),
                                          ) + " BÉ",
                                          1,
                                        ),
                                      ]),
                                      l("div", Ik, [
                                        J[11] ||
                                          (J[11] = l(
                                            "span",
                                            {
                                              class:
                                                "font-semibold text-surface-900 dark:text-surface-0",
                                            },
                                            "Ár:",
                                            -1,
                                          )),
                                        l(
                                          "span",
                                          Ok,
                                          z(f.value.price_formatted),
                                          1,
                                        ),
                                      ]),
                                    ]),
                                  ]))
                                : le("", !0),
                              !w.value && f.value
                                ? (E(),
                                  R("div", $k, [
                                    l("div", zk, [
                                      J[16] ||
                                        (J[16] = l(
                                          "i",
                                          {
                                            class:
                                              "pi pi-exclamation-triangle text-orange-600 dark:text-orange-400 text-lg flex-shrink-0 mt-0.5",
                                          },
                                          null,
                                          -1,
                                        )),
                                      l("div", Bk, [
                                        J[14] ||
                                          (J[14] = l(
                                            "h4",
                                            {
                                              class:
                                                "font-semibold text-orange-900 dark:text-orange-100 mb-2",
                                            },
                                            "Hiányos számlázási adatok",
                                            -1,
                                          )),
                                        J[15] ||
                                          (J[15] = l(
                                            "p",
                                            {
                                              class:
                                                "text-sm text-orange-800 dark:text-orange-200 mb-3",
                                            },
                                            " A vásárláshoz teljes számlázási adatokra van szükség. Kérlek töltsd ki a hiányzó mezőket a profilodban. ",
                                            -1,
                                          )),
                                        l("div", Uk, [
                                          J[13] ||
                                            (J[13] = l(
                                              "strong",
                                              null,
                                              "Hiányzó adatok:",
                                              -1,
                                            )),
                                          l("ul", Fk, [
                                            t.userProfile.billing_name
                                              ? le("", !0)
                                              : (E(),
                                                R("li", Nk, "Számlázási név")),
                                            t.userProfile.billing_address
                                              ? le("", !0)
                                              : (E(), R("li", Vk, "Cím")),
                                            t.userProfile.billing_postal_code
                                              ? le("", !0)
                                              : (E(),
                                                R("li", Hk, "Irányítószám")),
                                            t.userProfile.billing_city
                                              ? le("", !0)
                                              : (E(), R("li", jk, "Város")),
                                          ]),
                                        ]),
                                        O(H(Ce), {
                                          label: "Profil szerkesztése",
                                          size: "small",
                                          outlined: "",
                                          onClick: D,
                                          class:
                                            "text-orange-700 dark:text-orange-300 border-orange-300 hover:bg-orange-100 dark:hover:bg-orange-800",
                                        }),
                                      ]),
                                    ]),
                                  ]))
                                : le("", !0),
                              l("div", Gk, [
                                O(H(Ce), {
                                  label: "Mégse",
                                  outlined: "",
                                  onClick: U,
                                }),
                                f.value
                                  ? (E(),
                                    Be(
                                      H(Ce),
                                      {
                                        key: 0,
                                        label: w.value
                                          ? "Tovább a fizetéshez"
                                          : "Számlázási adatok hiányoznak",
                                        loading: p.value,
                                        disabled: !w.value,
                                        severity: w.value
                                          ? "primary"
                                          : "secondary",
                                        onClick: Z,
                                      },
                                      null,
                                      8,
                                      [
                                        "label",
                                        "loading",
                                        "disabled",
                                        "severity",
                                      ],
                                    ))
                                  : le("", !0),
                              ]),
                            ]))
                          : u.value === 2
                            ? (E(),
                              R("div", Wk, [
                                l(
                                  "div",
                                  {
                                    class:
                                      "flex items-center gap-2 text-surface-900 dark:text-surface-0",
                                  },
                                  [
                                    l(
                                      "button",
                                      {
                                        onClick: $,
                                        class:
                                          "p-2 hover:bg-surface-100 dark:hover:bg-surface-800 rounded",
                                      },
                                      J[17] ||
                                        (J[17] = [
                                          l(
                                            "i",
                                            { class: "pi pi-arrow-left" },
                                            null,
                                            -1,
                                          ),
                                        ]),
                                    ),
                                    J[18] ||
                                      (J[18] = l(
                                        "h3",
                                        { class: "text-lg font-semibold" },
                                        "Fizetési adatok",
                                        -1,
                                      )),
                                  ],
                                ),
                                l("div", Kk, [
                                  l("div", Xk, [
                                    l("div", null, [
                                      l("h4", Yk, z(f.value.name), 1),
                                      l(
                                        "p",
                                        qk,
                                        z(
                                          f.value.total_coins.toLocaleString(),
                                        ) + " Bányászérme",
                                        1,
                                      ),
                                    ]),
                                    l("div", Zk, [
                                      l("p", Jk, z(f.value.price_formatted), 1),
                                    ]),
                                  ]),
                                ]),
                                l("div", Qk, [
                                  J[19] ||
                                    (J[19] = l(
                                      "h4",
                                      {
                                        class:
                                          "font-semibold text-green-900 dark:text-green-100 mb-3",
                                      },
                                      "Számlázási cím",
                                      -1,
                                    )),
                                  l("div", e2, [
                                    l(
                                      "div",
                                      null,
                                      z(t.userProfile.billing_name),
                                      1,
                                    ),
                                    l(
                                      "div",
                                      null,
                                      z(t.userProfile.billing_address),
                                      1,
                                    ),
                                    l(
                                      "div",
                                      null,
                                      z(t.userProfile.billing_postal_code) +
                                        " " +
                                        z(t.userProfile.billing_city),
                                      1,
                                    ),
                                    l(
                                      "div",
                                      null,
                                      z(
                                        t.userProfile.billing_country ||
                                          "Magyarország",
                                      ),
                                      1,
                                    ),
                                    t.userProfile.tax_number
                                      ? (E(),
                                        R(
                                          "div",
                                          t2,
                                          " Adószám: " +
                                            z(t.userProfile.tax_number),
                                          1,
                                        ))
                                      : le("", !0),
                                  ]),
                                ]),
                                m.value
                                  ? (E(),
                                    R("div", n2, [
                                      l("div", r2, [
                                        J[20] ||
                                          (J[20] = l(
                                            "h4",
                                            {
                                              class:
                                                "font-medium text-surface-900 dark:text-surface-0 mb-4",
                                            },
                                            "Fizetési mód",
                                            -1,
                                          )),
                                        l(
                                          "div",
                                          {
                                            ref_key: "stripeElements",
                                            ref: g,
                                            class: "min-h-[100px]",
                                          },
                                          null,
                                          512,
                                        ),
                                      ]),
                                      v.value
                                        ? (E(),
                                          R("div", i2, [
                                            l("div", o2, [
                                              J[21] ||
                                                (J[21] = l(
                                                  "i",
                                                  {
                                                    class:
                                                      "pi pi-exclamation-triangle",
                                                  },
                                                  null,
                                                  -1,
                                                )),
                                              l("span", s2, z(v.value), 1),
                                            ]),
                                          ]))
                                        : le("", !0),
                                      J[22] ||
                                        (J[22] = l(
                                          "div",
                                          {
                                            class:
                                              "p-3 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg",
                                          },
                                          [
                                            l(
                                              "div",
                                              {
                                                class:
                                                  "flex items-center gap-2 text-green-700 dark:text-green-300",
                                              },
                                              [
                                                l("i", {
                                                  class: "pi pi-shield",
                                                }),
                                                l(
                                                  "span",
                                                  { class: "text-sm" },
                                                  "A fizetés Stripe segítségével biztonságosan feldolgozásra kerül. Kártyaadataidat nem tároljuk.",
                                                ),
                                              ],
                                            ),
                                          ],
                                          -1,
                                        )),
                                    ]))
                                  : le("", !0),
                                l("div", a2, [
                                  O(H(Ce), {
                                    label: "Vissza",
                                    outlined: "",
                                    onClick: $,
                                  }),
                                  O(
                                    H(Ce),
                                    {
                                      label: h.value
                                        ? "Fizetés feldolgozása..."
                                        : `Fizetés - ${(V = f.value) == null ? void 0 : V.price_formatted}`,
                                      loading: h.value,
                                      disabled: !S.value,
                                      onClick: G,
                                    },
                                    null,
                                    8,
                                    ["label", "loading", "disabled"],
                                  ),
                                ]),
                              ]))
                            : u.value === 3
                              ? (E(),
                                R("div", l2, [
                                  J[25] ||
                                    (J[25] = l(
                                      "div",
                                      { class: "flex justify-center mb-4" },
                                      [
                                        l(
                                          "div",
                                          {
                                            class:
                                              "w-16 h-16 bg-green-100 dark:bg-green-900/20 rounded-full flex items-center justify-center",
                                          },
                                          [
                                            l("i", {
                                              class:
                                                "pi pi-check text-green-600 dark:text-green-400 text-2xl",
                                            }),
                                          ],
                                        ),
                                      ],
                                      -1,
                                    )),
                                  J[26] ||
                                    (J[26] = l(
                                      "h3",
                                      {
                                        class:
                                          "text-xl font-bold text-surface-900 dark:text-surface-0 mb-2",
                                      },
                                      "Fizetés sikeres!",
                                      -1,
                                    )),
                                  l(
                                    "p",
                                    c2,
                                    z(
                                      ((Ee =
                                        (re = b.value) == null
                                          ? void 0
                                          : re.coins_added) == null
                                        ? void 0
                                        : Ee.toLocaleString()) || 0,
                                    ) +
                                      " Bányászérme sikeresen hozzáadva a fiókodhoz. ",
                                    1,
                                  ),
                                  b.value
                                    ? (E(),
                                      R("div", u2, [
                                        l("div", d2, [
                                          l("div", f2, [
                                            J[23] ||
                                              (J[23] = l(
                                                "span",
                                                null,
                                                "Új egyenleg:",
                                                -1,
                                              )),
                                            l(
                                              "span",
                                              p2,
                                              z(
                                                ((Pe = b.value.new_balance) ==
                                                null
                                                  ? void 0
                                                  : Pe.toLocaleString()) || 0,
                                              ) + " BÉ",
                                              1,
                                            ),
                                          ]),
                                          l("div", h2, [
                                            J[24] ||
                                              (J[24] = l(
                                                "span",
                                                null,
                                                "Tranzakció ID:",
                                                -1,
                                              )),
                                            l(
                                              "span",
                                              m2,
                                              z(b.value.transaction_id),
                                              1,
                                            ),
                                          ]),
                                        ]),
                                      ]))
                                    : le("", !0),
                                  O(H(Ce), {
                                    label: "Bezárás",
                                    onClick: U,
                                    class: "w-full",
                                  }),
                                ]))
                              : le("", !0),
                  ]),
                ];
              }),
              _: 1,
            },
            8,
            ["visible"],
          )
        )
      );
    },
  },
  v2 = {
    id: "app-sidebar-1",
    class:
      "bg-surface-0 dark:bg-surface-900 h-screen hidden lg:block flex-shrink-0 absolute lg:fixed left-0 top-0 z-10 border-r border-surface-200 dark:border-surface-700 select-none w-[280px]",
  },
  b2 = { class: "flex flex-col h-full" },
  y2 = { class: "overflow-y-auto flex-1 p-2 flex flex-col gap-4" },
  x2 = { class: "list-none m-0 flex flex-col gap-1" },
  _2 = {
    class:
      "flex items-center cursor-pointer p-3 gap-4 rounded-lg text-surface-900 dark:text-surface-0 hover:bg-surface-50 dark:hover:bg-surface-800 border border-transparent hover:border-surface-100 dark:hover:border-surface-700 transition-colors duration-150",
  },
  w2 = { class: "list-none m-0 overflow-hidden flex flex-col gap-1 mt-1" },
  k2 = { class: "list-none m-0 flex flex-col gap-1" },
  S2 = {
    class:
      "flex items-center cursor-pointer p-3 gap-4 rounded-lg text-surface-900 dark:text-surface-0 hover:bg-surface-50 dark:hover:bg-surface-800 border border-transparent hover:border-surface-100 dark:hover:border-surface-700 transition-colors duration-150",
  },
  C2 = { key: 0 },
  M2 = { class: "list-none m-0 flex flex-col gap-1" },
  E2 = {
    class:
      "p-2 mt-auto border-surface-200 dark:border-surface-800 has-[ul.hidden]:border-t",
  },
  T2 = {
    class:
      "list-none p-2 m-0 hidden origin-bottom animate-duration-150 border-t border-surface-200 dark:border-surface-800",
  },
  A2 = {
    class:
      "flex items-center cursor-pointer p-2 gap-2 text-surface-900 dark:text-surface-0 hover: transition-colors duration-150",
  },
  P2 = { class: "font-medium text-base leading-tight" },
  R2 = {
    __name: "Sidebar",
    setup(t) {
      Xd();
      const e = Na(),
        { user: n, isAdmin: r, logout: i } = Va(),
        o = N(!1),
        s = N({}),
        a = N(!1),
        c = async () => {
          if (!a.value) {
            a.value = !0;
            try {
              const h = await Ve.getUserProfile();
              s.value = h.data || h;
            } catch {
              s.value = n.value || {};
            } finally {
              a.value = !1;
            }
          }
        },
        u = async () => {
          (await c(), (o.value = !0));
        },
        d = () => {
          o.value = !1;
        },
        f = (h) => {
          c();
        },
        p = async () => {
          (i(), e.push("/login"));
        };
      return (
        $t(() => {
          n.value && c();
        }),
        (h, v) => {
          var m;
          const b = Mt("router-link"),
            g = Xn("styleclass");
          return (
            E(),
            R("div", v2, [
              l("div", b2, [
                v[21] ||
                  (v[21] = l(
                    "div",
                    { class: "p-4 flex items-center gap-4" },
                    [
                      l("img", { src: H1, alt: "MesterMC Logo", class: "" }),
                      l(
                        "span",
                        {
                          class:
                            "text-lg font-semibold leading-tight text-surface-900 dark:text-surface-0",
                        },
                        "MesterMC Bányaközpont",
                      ),
                    ],
                    -1,
                  )),
                l("div", y2, [
                  l("ul", x2, [
                    l("li", null, [
                      st(
                        (E(),
                        R(
                          "div",
                          _2,
                          v[0] ||
                            (v[0] = [
                              l(
                                "span",
                                {
                                  class:
                                    "font-semibold text-base leading-tight",
                                },
                                "Vezérlőpult",
                                -1,
                              ),
                              l(
                                "i",
                                {
                                  class:
                                    "pi pi-angle-down !text-base !leading-none text-surface-500 dark:text-surface-400 ml-auto",
                                },
                                null,
                                -1,
                              ),
                            ]),
                        )),
                        [
                          [
                            g,
                            {
                              selector: "@next",
                              enterFromClass: "hidden",
                              enterActiveClass: "animate-slidedown",
                              leaveToClass: "hidden",
                              leaveActiveClass: "animate-slideup",
                            },
                          ],
                        ],
                      ),
                      l("ul", w2, [
                        l("li", null, [
                          O(
                            b,
                            {
                              to: "/",
                              class:
                                "flex items-center cursor-pointer p-3 gap-2 rounded-lg text-surface-700 dark:text-surface-200 hover:bg-surface-50 dark:hover:bg-surface-800 border border-transparent hover:border-surface-100 dark:hover:border-surface-700 transition-colors duration-150 hover:text-surface-900 dark:hover:text-surface-50",
                            },
                            {
                              default: Ye(
                                () =>
                                  v[1] ||
                                  (v[1] = [
                                    l(
                                      "i",
                                      {
                                        class:
                                          "pi pi-home !text-base !leading-none text-surface-500 dark:text-surface-400 hover:text-surface-900 dark:hover:text-surface-50",
                                      },
                                      null,
                                      -1,
                                    ),
                                    l(
                                      "span",
                                      {
                                        class:
                                          "font-medium text-base leading-tight",
                                      },
                                      "Áttekintés",
                                      -1,
                                    ),
                                  ]),
                              ),
                              _: 1,
                              __: [1],
                            },
                          ),
                        ]),
                        l("li", null, [
                          O(
                            b,
                            {
                              to: "/ranks",
                              class:
                                "flex items-center cursor-pointer p-3 gap-2 rounded-lg text-surface-700 dark:text-surface-200 hover:bg-surface-50 dark:hover:bg-surface-800 border border-transparent hover:border-surface-100 dark:border-surface-700 transition-colors duration-150 hover:text-surface-900 dark:hover:text-surface-50",
                            },
                            {
                              default: Ye(() => [
                                v[2] ||
                                  (v[2] = l(
                                    "i",
                                    {
                                      class:
                                        "pi pi-crown !text-base !leading-none text-surface-500 dark:text-surface-400 hover:text-surface-900 dark:hover:text-surface-50",
                                    },
                                    null,
                                    -1,
                                  )),
                                v[3] ||
                                  (v[3] = l(
                                    "span",
                                    {
                                      class:
                                        "font-medium text-base leading-tight",
                                    },
                                    "Rangkezelés",
                                    -1,
                                  )),
                                O(H(vt), {
                                  value: "6",
                                  severity: "contrast",
                                  class:
                                    "ml-auto !h-5 !min-w-5 !text-xs !font-bold !leading-tight !rounded-xl",
                                }),
                              ]),
                              _: 1,
                              __: [2, 3],
                            },
                          ),
                        ]),
                        l("li", null, [
                          O(
                            b,
                            {
                              to: "/extras",
                              class:
                                "flex items-center cursor-pointer p-3 gap-2 rounded-lg text-surface-700 dark:text-surface-200 hover:bg-surface-50 dark:hover:bg-surface-800 border border-transparent hover:border-surface-100 dark:hover:border-surface-700 transition-colors duration-150 hover:text-surface-900 dark:hover:text-surface-50",
                            },
                            {
                              default: Ye(
                                () =>
                                  v[4] ||
                                  (v[4] = [
                                    l(
                                      "i",
                                      {
                                        class:
                                          "pi pi-gift !text-base !leading-none text-surface-500 dark:text-surface-400 hover:text-surface-900 dark:hover:text-surface-50",
                                      },
                                      null,
                                      -1,
                                    ),
                                    l(
                                      "span",
                                      {
                                        class:
                                          "font-medium text-base leading-tight",
                                      },
                                      "Extrák",
                                      -1,
                                    ),
                                  ]),
                              ),
                              _: 1,
                              __: [4],
                            },
                          ),
                        ]),
                        l("li", null, [
                          O(
                            b,
                            {
                              to: "/lucky-wheel",
                              class:
                                "flex items-center cursor-pointer p-3 gap-2 rounded-lg text-surface-700 dark:text-surface-200 hover:bg-surface-50 dark:hover:bg-surface-800 border border-transparent hover:border-surface-100 dark:hover:border-surface-700 transition-colors duration-150 hover:text-surface-900 dark:hover:text-surface-50",
                            },
                            {
                              default: Ye(() => [
                                v[5] ||
                                  (v[5] = l(
                                    "i",
                                    {
                                      class:
                                        "pi pi-spin pi-sun !text-base !leading-none text-surface-500 dark:text-surface-400 hover:text-surface-900 dark:hover:text-surface-50",
                                    },
                                    null,
                                    -1,
                                  )),
                                v[6] ||
                                  (v[6] = l(
                                    "span",
                                    {
                                      class:
                                        "font-medium text-base leading-tight",
                                    },
                                    "Szerencsekerék",
                                    -1,
                                  )),
                                O(H(vt), {
                                  value: "24h",
                                  severity: "warning",
                                  class:
                                    "ml-auto !h-5 !min-w-5 !text-xs !font-bold !leading-tight !rounded-xl",
                                }),
                              ]),
                              _: 1,
                              __: [5, 6],
                            },
                          ),
                        ]),
                        l("li", null, [
                          O(
                            b,
                            {
                              to: "/messages",
                              class:
                                "flex items-center cursor-pointer p-3 gap-2 rounded-lg text-surface-700 dark:text-surface-200 hover:bg-surface-50 dark:hover:bg-surface-800 border border-transparent hover:border-surface-100 dark:hover:border-surface-700 transition-colors duration-150 hover:text-surface-900 dark:hover:text-surface-50",
                            },
                            {
                              default: Ye(() => [
                                v[7] ||
                                  (v[7] = l(
                                    "i",
                                    {
                                      class:
                                        "pi pi-inbox !text-base !leading-none text-surface-500 dark:text-surface-400 hover:text-surface-900 dark:hover:text-surface-50",
                                    },
                                    null,
                                    -1,
                                  )),
                                v[8] ||
                                  (v[8] = l(
                                    "span",
                                    {
                                      class:
                                        "font-medium text-base leading-tight",
                                    },
                                    "Jelentések",
                                    -1,
                                  )),
                                O(H(vt), {
                                  value: "5",
                                  severity: "secondary",
                                  class:
                                    "ml-auto !h-5 !min-w-5 !text-xs !font-bold !leading-tight !rounded-xl",
                                }),
                              ]),
                              _: 1,
                              __: [7, 8],
                            },
                          ),
                        ]),
                        l("li", null, [
                          O(
                            b,
                            {
                              to: "/skin-upload",
                              class:
                                "flex items-center cursor-pointer p-3 gap-2 rounded-lg text-surface-700 dark:text-surface-200 hover:bg-surface-50 dark:hover:bg-surface-800 border border-transparent hover:border-surface-100 dark:hover:border-surface-700 transition-colors duration-150 hover:text-surface-900 dark:hover:text-surface-50",
                            },
                            {
                              default: Ye(
                                () =>
                                  v[9] ||
                                  (v[9] = [
                                    l(
                                      "i",
                                      {
                                        class:
                                          "pi pi-image !text-base !leading-none text-surface-500 dark:text-surface-400 hover:text-surface-900 dark:hover:text-surface-50",
                                      },
                                      null,
                                      -1,
                                    ),
                                    l(
                                      "span",
                                      {
                                        class:
                                          "font-medium text-base leading-tight",
                                      },
                                      "Skin Feltöltés",
                                      -1,
                                    ),
                                  ]),
                              ),
                              _: 1,
                              __: [9],
                            },
                          ),
                        ]),
                      ]),
                    ]),
                  ]),
                  v[15] ||
                    (v[15] = l(
                      "hr",
                      {
                        class:
                          "border-t border-surface-200 dark:border-surface-800 my-0",
                      },
                      null,
                      -1,
                    )),
                  l("ul", k2, [
                    l("li", null, [
                      st(
                        (E(),
                        R(
                          "div",
                          S2,
                          v[10] ||
                            (v[10] = [
                              l(
                                "span",
                                {
                                  class:
                                    "font-semibold text-base leading-tight",
                                },
                                "Bányászérme & Bányák",
                                -1,
                              ),
                              l(
                                "i",
                                {
                                  class:
                                    "pi pi-angle-down !text-base !leading-none text-surface-500 dark:text-surface-400 ml-auto",
                                },
                                null,
                                -1,
                              ),
                            ]),
                        )),
                        [
                          [
                            g,
                            {
                              selector: "@next",
                              enterFromClass: "hidden",
                              enterActiveClass: "animate-slidedown",
                              leaveToClass: "hidden",
                              leaveActiveClass: "animate-slideup",
                            },
                          ],
                        ],
                      ),
                      l(
                        "ul",
                        {
                          class:
                            "list-none m-0 overflow-hidden flex flex-col gap-1 mt-1",
                        },
                        [
                          l("li", null, [
                            l(
                              "a",
                              {
                                onClick: u,
                                class:
                                  "flex items-center cursor-pointer p-3 gap-2 rounded-lg text-surface-700 dark:text-surface-200 hover:bg-surface-50 dark:hover:bg-surface-800 border border-transparent hover:border-surface-100 dark:hover:border-surface-700 transition-colors duration-150 hover:text-surface-900 dark:hover:text-surface-50",
                              },
                              v[11] ||
                                (v[11] = [
                                  l(
                                    "span",
                                    {
                                      class:
                                        "inline-flex items-center justify-center p-1 bg-yellow-100 dark:bg-yellow-500/20 rounded-md border border-yellow-200 dark:border-yellow-500/30",
                                    },
                                    [
                                      l("i", {
                                        class:
                                          "pi pi-star !text-xs !leading-none text-yellow-600 dark:text-yellow-300",
                                      }),
                                    ],
                                    -1,
                                  ),
                                  l(
                                    "span",
                                    {
                                      class:
                                        "font-medium text-base leading-tight",
                                    },
                                    "Bányászérme feltöltés",
                                    -1,
                                  ),
                                ]),
                            ),
                          ]),
                        ],
                      ),
                    ]),
                  ]),
                  H(r)
                    ? (E(),
                      R("div", C2, [
                        v[14] ||
                          (v[14] = l(
                            "hr",
                            {
                              class:
                                "border-t border-surface-200 dark:border-surface-800 my-0",
                            },
                            null,
                            -1,
                          )),
                        l("ul", M2, [
                          l("li", null, [
                            O(
                              b,
                              {
                                to: "/admin",
                                class: Ie([
                                  "flex items-center cursor-pointer p-3 gap-2 rounded-lg text-surface-700 dark:text-surface-200 hover:bg-surface-50 dark:hover:bg-surface-800 border border-transparent hover:border-surface-100 dark:hover:border-surface-700 transition-colors duration-150 hover:text-surface-900 dark:hover:text-surface-50",
                                  {
                                    "bg-red-50 dark:bg-red-900/20 text-red-700 dark:text-red-300":
                                      h.$route.name === "AdminDashboard",
                                  },
                                ]),
                              },
                              {
                                default: Ye(() => [
                                  v[12] ||
                                    (v[12] = l(
                                      "span",
                                      {
                                        class:
                                          "inline-flex items-center justify-center p-1 bg-red-100 dark:bg-red-500/20 rounded-md border border-red-200 dark:border-red-500/30",
                                      },
                                      [
                                        l("i", {
                                          class:
                                            "pi pi-shield !text-xs !leading-none text-red-600 dark:text-red-300",
                                        }),
                                      ],
                                      -1,
                                    )),
                                  v[13] ||
                                    (v[13] = l(
                                      "span",
                                      {
                                        class:
                                          "font-medium text-base leading-tight",
                                      },
                                      "Admin Panel",
                                      -1,
                                    )),
                                  O(H(vt), {
                                    value: "Admin",
                                    severity: "danger",
                                    class:
                                      "ml-auto !h-5 !min-w-5 !text-xs !font-bold !leading-tight !rounded-xl",
                                  }),
                                ]),
                                _: 1,
                                __: [12, 13],
                              },
                              8,
                              ["class"],
                            ),
                          ]),
                        ]),
                      ]))
                    : le("", !0),
                ]),
                l("div", E2, [
                  l("ul", T2, [
                    l("li", null, [
                      O(
                        b,
                        {
                          to: "/profile",
                          class:
                            "flex items-center cursor-pointer p-3 gap-2 rounded-lg text-surface-700 dark:text-surface-200 hover:bg-surface-50 dark:hover:bg-surface-800 border border-transparent hover:border-surface-200 dark:hover:border-surface-700 transition-colors duration-150 hover:text-surface-900 dark:hover:text-surface-50",
                        },
                        {
                          default: Ye(
                            () =>
                              v[16] ||
                              (v[16] = [
                                l(
                                  "i",
                                  {
                                    class:
                                      "pi pi-user !text-base !leading-none",
                                  },
                                  null,
                                  -1,
                                ),
                                l(
                                  "span",
                                  {
                                    class:
                                      "font-medium text-base leading-tight",
                                  },
                                  "Profil",
                                  -1,
                                ),
                              ]),
                          ),
                          _: 1,
                          __: [16],
                        },
                      ),
                    ]),
                    l("li", null, [
                      O(
                        b,
                        {
                          to: "/profile",
                          class:
                            "flex items-center cursor-pointer p-3 gap-2 rounded-lg text-surface-700 dark:text-surface-200 hover:bg-surface-50 dark:hover:bg-surface-800 border border-transparent hover:border-surface-200 dark:hover:border-surface-700 transition-colors duration-150 hover:text-surface-900 dark:hover:text-surface-50",
                        },
                        {
                          default: Ye(
                            () =>
                              v[17] ||
                              (v[17] = [
                                l(
                                  "i",
                                  {
                                    class: "pi pi-cog !text-base !leading-none",
                                  },
                                  null,
                                  -1,
                                ),
                                l(
                                  "span",
                                  {
                                    class:
                                      "font-medium text-base leading-tight",
                                  },
                                  "Beállítások",
                                  -1,
                                ),
                              ]),
                          ),
                          _: 1,
                          __: [17],
                        },
                      ),
                    ]),
                    l("li", null, [
                      l(
                        "a",
                        {
                          onClick: p,
                          class:
                            "flex items-center cursor-pointer p-3 gap-2 rounded-lg text-surface-700 dark:text-surface-200 hover:bg-surface-50 dark:hover:bg-surface-800 border border-transparent hover:border-surface-200 dark:hover:border-surface-700 transition-colors duration-150 hover:text-surface-900 dark:hover:text-surface-50",
                        },
                        v[18] ||
                          (v[18] = [
                            l(
                              "i",
                              {
                                class:
                                  "pi pi-sign-out !text-base !leading-none",
                              },
                              null,
                              -1,
                            ),
                            l(
                              "span",
                              { class: "font-medium text-base leading-tight" },
                              "Kijelentkezés",
                              -1,
                            ),
                          ]),
                      ),
                    ]),
                  ]),
                  st(
                    (E(),
                    R("a", A2, [
                      v[19] ||
                        (v[19] = l(
                          "img",
                          { src: Gd, class: "w-8 h-8 rounded-full" },
                          null,
                          -1,
                        )),
                      l(
                        "span",
                        P2,
                        z(
                          ((m = H(n)) == null ? void 0 : m.displayName) ||
                            "MesterMC",
                        ),
                        1,
                      ),
                      v[20] ||
                        (v[20] = l(
                          "i",
                          {
                            class:
                              "pi pi-angle-up !text-base !leading-none text-surface-500 dark:text-surface-400 ml-auto",
                          },
                          null,
                          -1,
                        )),
                    ])),
                    [
                      [
                        g,
                        {
                          selector: "@prev",
                          enterFromClass: "hidden",
                          enterActiveClass: "animate-scalein",
                          leaveToClass: "hidden",
                          leaveActiveClass: "animate-fadeout",
                        },
                      ],
                    ],
                  ),
                ]),
              ]),
              O(
                g2,
                {
                  show: o.value,
                  "user-profile": s.value,
                  onClose: d,
                  onPaymentSuccess: f,
                },
                null,
                8,
                ["show", "user-profile"],
              ),
            ])
          );
        }
      );
    },
  },
  L2 = {
    class:
      "flex justify-between items-center py-4 px-8 bg-surface-0 dark:bg-surface-900 border-b border-surface-200 dark:border-surface-700 relative lg:static",
  },
  D2 = { class: "flex items-center gap-4" },
  I2 = {
    class:
      "cursor-pointer flex items-center justify-center lg:hidden text-surface-700 dark:text-surface-100",
  },
  O2 = { class: "text-xl font-semibold text-surface-900 dark:text-surface-0" },
  $2 = { class: "flex items-center gap-8" },
  z2 = { class: "relative" },
  B2 = {
    class: "text-surface-900 dark:text-surface-0 font-medium hidden sm:block",
  },
  U2 = {
    key: 0,
    class:
      "absolute right-0 top-full mt-2 w-48 bg-surface-0 dark:bg-surface-800 border border-surface-200 dark:border-surface-700 rounded-lg shadow-lg z-50",
  },
  F2 = { class: "p-3 border-b border-surface-200 dark:border-surface-700" },
  N2 = { class: "font-semibold text-surface-900 dark:text-surface-0" },
  V2 = { class: "text-sm text-surface-500 dark:text-surface-400" },
  H2 = { class: "p-1" },
  j2 = {
    __name: "Header",
    setup(t) {
      const e = Xd(),
        n = Na(),
        { user: r, userDisplayName: i, logout: o } = Va(),
        s = N(!1),
        a = N(!1),
        c = {
          Dashboard: "Vezérlőpult",
          RankManagement: "Rangkezelés",
          Extras: "Extrák",
          Messages: "Jelentések",
          SkinUpload: "Skin Feltöltés",
          Profile: "Profil beállítások",
        },
        u = Xe(() => c[e.name] || "MesterMC Bányaközpont"),
        d = () => {
          ((s.value = !s.value),
            s.value
              ? (document.documentElement.classList.add("p-dark"),
                localStorage.setItem("darkMode", "true"))
              : (document.documentElement.classList.remove("p-dark"),
                localStorage.setItem("darkMode", "false")));
        },
        f = () => {
          a.value = !a.value;
        },
        p = async () => {
          (o(), n.push("/login"));
        },
        h = (v) => {
          v.target.closest(".relative") || (a.value = !1);
        };
      return (
        $t(() => {
          (localStorage.getItem("darkMode") === "true" &&
            ((s.value = !0), document.documentElement.classList.add("p-dark")),
            document.addEventListener("click", h));
        }),
        uo(() => {
          document.removeEventListener("click", h);
        }),
        (v, b) => {
          var _, y, x;
          const g = Mt("router-link"),
            m = Xn("styleclass");
          return (
            E(),
            R("div", L2, [
              l("div", D2, [
                st(
                  (E(),
                  R(
                    "a",
                    I2,
                    b[1] ||
                      (b[1] = [
                        l("i", { class: "pi pi-bars !text-xl" }, null, -1),
                      ]),
                  )),
                  [
                    [
                      m,
                      {
                        selector: "#app-sidebar-1",
                        enterFromClass: "hidden",
                        enterActiveClass: "animate-fadeinleft",
                        leaveToClass: "hidden",
                        leaveActiveClass: "animate-fadeoutleft",
                        hideOnOutsideClick: !0,
                      },
                    ],
                  ],
                ),
                l("h1", O2, z(u.value), 1),
              ]),
              l("div", $2, [
                l(
                  "button",
                  {
                    onClick: d,
                    class:
                      "p-2 rounded-lg text-surface-500 dark:text-surface-400 hover:text-surface-900 dark:hover:text-surface-0 hover:bg-surface-100 dark:hover:bg-surface-800 transition-colors",
                  },
                  [
                    l(
                      "i",
                      {
                        class: Ie([
                          s.value ? "pi pi-sun" : "pi pi-moon",
                          "!text-lg !leading-none",
                        ]),
                      },
                      null,
                      2,
                    ),
                  ],
                ),
                l("div", z2, [
                  l(
                    "button",
                    {
                      onClick: f,
                      class:
                        "flex items-center gap-2 cursor-pointer hover:bg-surface-100 dark:hover:bg-surface-800 p-2 rounded-lg transition-colors",
                    },
                    [
                      b[2] ||
                        (b[2] = l(
                          "img",
                          { src: Gd, class: "w-8 h-8 rounded-full" },
                          null,
                          -1,
                        )),
                      l(
                        "span",
                        B2,
                        z(
                          H(i) ||
                            ((_ = H(r)) == null ? void 0 : _.displayName) ||
                            "Játékos",
                        ),
                        1,
                      ),
                      b[3] ||
                        (b[3] = l(
                          "i",
                          {
                            class:
                              "pi pi-angle-down text-surface-500 dark:text-surface-400",
                          },
                          null,
                          -1,
                        )),
                    ],
                  ),
                  a.value
                    ? (E(),
                      R("div", U2, [
                        l("div", F2, [
                          l(
                            "div",
                            N2,
                            z((y = H(r)) == null ? void 0 : y.displayName),
                            1,
                          ),
                          l(
                            "div",
                            V2,
                            "@" + z((x = H(r)) == null ? void 0 : x.username),
                            1,
                          ),
                        ]),
                        l("div", H2, [
                          O(
                            g,
                            {
                              to: "/profile",
                              onClick: b[0] || (b[0] = (C) => (a.value = !1)),
                              class:
                                "w-full flex items-center gap-2 px-3 py-2 text-left hover:bg-surface-100 dark:hover:bg-surface-700 rounded-md transition-colors text-surface-700 dark:text-surface-300",
                            },
                            {
                              default: Ye(
                                () =>
                                  b[4] ||
                                  (b[4] = [
                                    l("i", { class: "pi pi-user" }, null, -1),
                                    l("span", null, "Profil beállítások", -1),
                                  ]),
                              ),
                              _: 1,
                              __: [4],
                            },
                          ),
                          l(
                            "button",
                            {
                              onClick: p,
                              class:
                                "w-full flex items-center gap-2 px-3 py-2 text-left hover:bg-surface-100 dark:hover:bg-surface-700 rounded-md transition-colors text-red-600 dark:text-red-400",
                            },
                            b[5] ||
                              (b[5] = [
                                l("i", { class: "pi pi-sign-out" }, null, -1),
                                l("span", null, "Kijelentkezés", -1),
                              ]),
                          ),
                        ]),
                      ]))
                    : le("", !0),
                ]),
              ]),
            ])
          );
        }
      );
    },
  },
  ws = N([]);
let G2 = 0;
const mn = {
    SUCCESS: "success",
    ERROR: "error",
    WARNING: "warning",
    INFO: "info",
  },
  W2 = { duration: 5e3, position: "top-right", closable: !0, autoClose: !0 };
function K2() {
  const t = (c, u = mn.INFO, d = {}) => {
      const f = {
        id: ++G2,
        message: c,
        type: u,
        ...W2,
        ...d,
        createdAt: Date.now(),
      };
      return (
        ws.value.push(f),
        f.autoClose &&
          f.duration > 0 &&
          setTimeout(() => {
            e(f.id);
          }, f.duration),
        f.id
      );
    },
    e = (c) => {
      const u = ws.value.findIndex((d) => d.id === c);
      u > -1 && ws.value.splice(u, 1);
    };
  return {
    toasts: ws,
    addToast: t,
    removeToast: e,
    clearAllToasts: () => {
      ws.value = [];
    },
    showSuccessToast: (c, u = {}) => t(c, mn.SUCCESS, { duration: 4e3, ...u }),
    showErrorToast: (c, u = {}) => t(c, mn.ERROR, { duration: 6e3, ...u }),
    showWarningToast: (c, u = {}) => t(c, mn.WARNING, { duration: 5e3, ...u }),
    showInfoToast: (c, u = {}) => t(c, mn.INFO, { duration: 4e3, ...u }),
    showLoadingToast: (c, u = {}) =>
      t(c, mn.INFO, { duration: 0, autoClose: !1, closable: !1, ...u }),
  };
}
const cr = (t, e) => {
    const n = t.__vccOpts || t;
    for (const [r, i] of e) n[r] = i;
    return n;
  },
  X2 = { class: "fixed top-4 right-4 z-50 space-y-2" },
  Y2 = { class: "flex-shrink-0" },
  q2 = { class: "flex-1 min-w-0" },
  Z2 = { class: "text-sm font-medium text-white break-words" },
  J2 = ["onClick"],
  Q2 = {
    __name: "ToastNotification",
    setup(t) {
      const { toasts: e, removeToast: n } = K2(),
        r = (o) => {
          const s = {
            [mn.SUCCESS]: "bg-green-500",
            [mn.ERROR]: "bg-red-500",
            [mn.WARNING]: "bg-orange-500",
            [mn.INFO]: "bg-blue-500",
          };
          return s[o] || s[mn.INFO];
        },
        i = (o) => {
          const s = {
            [mn.SUCCESS]: "pi pi-check-circle",
            [mn.ERROR]: "pi pi-times-circle",
            [mn.WARNING]: "pi pi-exclamation-triangle",
            [mn.INFO]: "pi pi-info-circle",
          };
          return s[o] || s[mn.INFO];
        };
      return (o, s) => (
        E(),
        Be(Og, { to: "body" }, [
          l("div", X2, [
            O(
              P1,
              { name: "toast", tag: "div" },
              {
                default: Ye(() => [
                  (E(!0),
                  R(
                    We,
                    null,
                    mt(
                      H(e),
                      (a) => (
                        E(),
                        R(
                          "div",
                          {
                            key: a.id,
                            class: Ie([
                              "flex items-center gap-3 p-4 rounded-lg shadow-lg max-w-sm min-w-80",
                              "animate-slideInRight",
                              r(a.type),
                            ]),
                          },
                          [
                            l("div", Y2, [
                              l(
                                "i",
                                { class: Ie([i(a.type), "text-lg"]) },
                                null,
                                2,
                              ),
                            ]),
                            l("div", q2, [l("p", Z2, z(a.message), 1)]),
                            a.closable
                              ? (E(),
                                R(
                                  "button",
                                  {
                                    key: 0,
                                    onClick: (c) => H(n)(a.id),
                                    class:
                                      "flex-shrink-0 text-white/80 hover:text-white transition-colors",
                                  },
                                  s[0] ||
                                    (s[0] = [
                                      l(
                                        "i",
                                        { class: "pi pi-times text-sm" },
                                        null,
                                        -1,
                                      ),
                                    ]),
                                  8,
                                  J2,
                                ))
                              : le("", !0),
                            a.autoClose && a.duration > 0
                              ? (E(),
                                R(
                                  "div",
                                  {
                                    key: 1,
                                    class:
                                      "absolute bottom-0 left-0 h-1 bg-white/30 rounded-b-lg",
                                    style: ir({
                                      animation: `toast-progress ${a.duration}ms linear forwards`,
                                      animationDelay: "100ms",
                                    }),
                                  },
                                  null,
                                  4,
                                ))
                              : le("", !0),
                          ],
                          2,
                        )
                      ),
                    ),
                    128,
                  )),
                ]),
                _: 1,
              },
            ),
          ]),
        ])
      );
    },
  },
  rv = cr(Q2, [["__scopeId", "data-v-3d82c9b6"]]),
  eS = { key: 0 },
  tS = {
    key: 1,
    class:
      "min-h-screen flex relative lg:static bg-surface-50 dark:bg-surface-950",
  },
  nS = { class: "min-h-screen flex flex-col relative flex-auto lg:ml-[280px]" },
  rS = { class: "p-8 flex flex-col flex-auto" },
  iS = {
    __name: "Layout",
    setup(t) {
      return (e, n) => {
        const r = Mt("router-view");
        return (
          E(),
          R(
            We,
            null,
            [
              e.$route.meta.layout === "none"
                ? (E(), R("div", eS, [O(r)]))
                : (E(),
                  R("div", tS, [
                    O(R2),
                    l("div", nS, [O(j2), l("div", rS, [O(r)])]),
                  ])),
              O(rv),
            ],
            64,
          )
        );
      };
    },
  },
  oS = {
    class:
      "fixed inset-0 z-[9999] bg-black/60 flex items-center justify-center p-4",
  },
  sS = {
    class:
      "bg-white dark:bg-gray-900 border-2 border-red-600 max-w-4xl w-full shadow-xl",
  },
  aS = { class: "p-6 space-y-6" },
  lS = {
    class:
      "bg-gray-50 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 p-4",
  },
  cS = { class: "grid grid-cols-1 md:grid-cols-3 gap-4 text-sm" },
  uS = { class: "text-red-600 dark:text-red-400 ml-2" },
  dS = { class: "text-gray-600 dark:text-gray-400 ml-2" },
  fS = { class: "font-mono text-gray-600 dark:text-gray-400 ml-2" },
  pS = {
    key: 0,
    class:
      "bg-gray-50 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 p-4",
  },
  hS = { class: "flex items-center justify-between mb-2" },
  mS = { class: "text-sm text-gray-500 dark:text-gray-400" },
  gS = { class: "w-full bg-gray-200 dark:bg-gray-700 h-2" },
  vS = { class: "border-t border-gray-200 dark:border-gray-700 pt-4" },
  bS = { class: "flex flex-col sm:flex-row gap-3" },
  yS = ["disabled"],
  xS = { key: 0, class: "w-4 h-4", fill: "none", viewBox: "0 0 24 24" },
  _S = {
    key: 1,
    class: "w-4 h-4",
    fill: "none",
    stroke: "currentColor",
    viewBox: "0 0 24 24",
  },
  wS = {
    class:
      "border-t border-gray-200 dark:border-gray-700 pt-4 text-xs text-gray-500 dark:text-gray-400",
  },
  kS = { class: "text-center" },
  /* SS = {
    __name: "EmergencyAlert",
    emits: ["retry-connection", "dismiss"],
    setup(t, { emit: e }) {
      const n = e,
        r = N(""),
        i = N(!1),
        o = N(""),
        s = N(0),
        a = N(0),
        c = [
          "Védelmi protokoll aktív",
          "Rendszer izolálva",
          "Biztonsági ellenőrzés",
          "Fenyegetés elhárítás",
          "Helyreállítás előkészítés",
          "Adatok védelme aktív",
        ],
        u = Xe(() => c[a.value]);
      let d = null,
        f = null,
        p = null;
      const h = () => {
          a.value = (a.value + 1) % c.length;
        },
        v = () => {
          r.value = new Date().toLocaleTimeString("hu-HU");
        },
        b = () => {
          const y = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
          let x = "SEC-";
          for (let C = 0; C < 8; C++)
            x += y.charAt(Math.floor(Math.random() * y.length));
          return x;
        },
        g = async () => {
          ((i.value = !0),
            (s.value = 0),
            (p = setInterval(() => {
              ((s.value += 10),
                s.value >= 100 &&
                  (clearInterval(p), (i.value = !1), n("retry-connection")));
            }, 200)));
        },
        m = () => {
          window.open(
            "mailto:admin@mestermc.hu?subject=Emergency Support Request&body=Incident ID: " +
              o.value,
          );
        },
        _ = () => {
          n("dismiss");
        };
      return (
        $t(() => {
          ((o.value = b()),
            v(),
            (d = setInterval(h, 5e3)),
            (f = setInterval(v, 1e3)),
            document.body.classList.add("emergency-active"));
        }),
        uo(() => {
          (d && clearInterval(d),
            f && clearInterval(f),
            p && clearInterval(p),
            document.body.classList.remove("emergency-active"));
        }),
        (y, x) => (
          E(),
          R("div", oS, [
            l("div", sS, [
              l("div", { class: "bg-red-600 text-white p-4" }, [
                l("div", { class: "flex items-center justify-between" }, [
                  x[1] ||
                    (x[1] = l(
                      "div",
                      { class: "flex items-center space-x-3" },
                      [
                        l(
                          "svg",
                          {
                            class: "w-6 h-6",
                            fill: "currentColor",
                            viewBox: "0 0 20 20",
                          },
                          [
                            l("path", {
                              "fill-rule": "evenodd",
                              d: "M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z",
                            }),
                          ],
                        ),
                        l(
                          "h1",
                          { class: "text-xl font-bold" },
                          "HIVATALOS KÖZLEMÉNY",
                        ),
                      ],
                      -1,
                    )),
                  l(
                    "button",
                    {
                      onClick: _,
                      class: "text-white hover:bg-red-700 p-1 rounded",
                    },
                    x[0] ||
                      (x[0] = [
                        l(
                          "svg",
                          {
                            class: "w-5 h-5",
                            fill: "none",
                            stroke: "currentColor",
                            viewBox: "0 0 24 24",
                          },
                          [
                            l("path", {
                              "stroke-linecap": "round",
                              "stroke-linejoin": "round",
                              "stroke-width": "2",
                              d: "M6 18L18 6M6 6l12 12",
                            }),
                          ],
                          -1,
                        ),
                      ]),
                  ),
                ]),
              ]),
              l("div", aS, [
                x[11] ||
                  (x[11] = l(
                    "div",
                    { class: "border-l-4 border-red-600 pl-4" },
                    [
                      l(
                        "h2",
                        {
                          class:
                            "text-2xl font-bold text-gray-900 dark:text-white mb-2",
                        },
                        " Biztonsági riasztás ",
                      ),
                      l(
                        "p",
                        { class: "text-gray-700 dark:text-gray-300" },
                        " A MesterMC Bányaközpont szerverrendszere biztonsági incidensbe ütközött. ",
                      ),
                    ],
                    -1,
                  )),
                l("div", lS, [
                  l("div", cS, [
                    l("div", null, [
                      x[2] ||
                        (x[2] = l(
                          "span",
                          {
                            class:
                              "font-semibold text-gray-900 dark:text-white",
                          },
                          "Státusz:",
                          -1,
                        )),
                      l("span", uS, z(u.value), 1),
                    ]),
                    l("div", null, [
                      x[3] ||
                        (x[3] = l(
                          "span",
                          {
                            class:
                              "font-semibold text-gray-900 dark:text-white",
                          },
                          "Időpont:",
                          -1,
                        )),
                      l("span", dS, z(r.value), 1),
                    ]),
                    l("div", null, [
                      x[4] ||
                        (x[4] = l(
                          "span",
                          {
                            class:
                              "font-semibold text-gray-900 dark:text-white",
                          },
                          "Incident ID:",
                          -1,
                        )),
                      l("span", fS, z(o.value), 1),
                    ]),
                  ]),
                ]),
                x[12] ||
                  (x[12] = Jo(
                    '<div class="bg-amber-50 dark:bg-amber-900/20 border border-amber-200 dark:border-amber-800 p-4" data-v-3d0e768b><h3 class="font-bold text-amber-800 dark:text-amber-200 mb-2" data-v-3d0e768b> Automata karantén protokoll aktiválva </h3><p class="text-sm text-amber-700 dark:text-amber-300" data-v-3d0e768b> A rendszer biztonsági intézkedéseket alkalmazott a további károk megelőzése érdekében. Minden szolgáltatás átmenetileg korlátozottan elérhető. </p></div><div class="grid grid-cols-1 lg:grid-cols-2 gap-6" data-v-3d0e768b><div class="border border-green-200 dark:border-green-800 bg-green-50 dark:bg-green-900/20 p-4" data-v-3d0e768b><h3 class="font-bold text-green-800 dark:text-green-200 mb-3" data-v-3d0e768b> Védelmi intézkedések </h3><ul class="text-sm text-green-700 dark:text-green-300 space-y-1" data-v-3d0e768b><li data-v-3d0e768b>• Adatbázis biztonságosan izolálva</li><li data-v-3d0e768b>• Felhasználói adatok védettek</li><li data-v-3d0e768b>• Biztonsági mentések aktiválva</li><li data-v-3d0e768b>• Hálózati forgalom szűrése</li></ul></div><div class="border border-blue-200 dark:border-blue-800 bg-blue-50 dark:bg-blue-900/20 p-4" data-v-3d0e768b><h3 class="font-bold text-blue-800 dark:text-blue-200 mb-3" data-v-3d0e768b> Helyreállítási folyamat </h3><ul class="text-sm text-blue-700 dark:text-blue-300 space-y-1" data-v-3d0e768b><li data-v-3d0e768b>• Biztonsági csapat értesítve</li><li data-v-3d0e768b>• Rendszerellenőrzés folyamatban</li><li data-v-3d0e768b>• Fenyegetés elhárítás alatt</li><li data-v-3d0e768b>• Újraindítás előkészítése</li></ul></div></div>',
                    2,
                  )),
                i.value
                  ? (E(),
                    R("div", pS, [
                      l("div", hS, [
                        x[5] ||
                          (x[5] = l(
                            "span",
                            {
                              class:
                                "text-sm font-medium text-gray-700 dark:text-gray-300",
                            },
                            " Kapcsolat ellenőrzése... ",
                            -1,
                          )),
                        l("span", mS, z(s.value) + "% ", 1),
                      ]),
                      l("div", gS, [
                        l(
                          "div",
                          {
                            class:
                              "bg-blue-600 h-2 transition-all duration-300",
                            style: ir({ width: s.value + "%" }),
                          },
                          null,
                          4,
                        ),
                      ]),
                    ]))
                  : le("", !0),
                x[13] ||
                  (x[13] = l(
                    "div",
                    {
                      class:
                        "border-t border-gray-200 dark:border-gray-700 pt-4",
                    },
                    [
                      l(
                        "h3",
                        {
                          class: "font-bold text-gray-900 dark:text-white mb-2",
                        },
                        " Hivatalos nyilatkozat ",
                      ),
                      l(
                        "p",
                        {
                          class:
                            "text-sm text-gray-600 dark:text-gray-400 leading-relaxed",
                        },
                        " A MesterMC technikai csapata jelenleg dolgozik a probléma megoldásán. Minden felhasználói adat biztonságban van. A szolgáltatás helyreállásáról a Discord szerveren és a weboldalon tájékoztatjuk a közösséget. ",
                      ),
                    ],
                    -1,
                  )),
                l("div", vS, [
                  l("div", bS, [
                    l(
                      "button",
                      {
                        onClick: g,
                        disabled: i.value,
                        class:
                          "bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white px-6 py-3 font-medium transition-colors flex items-center justify-center space-x-2",
                      },
                      [
                        i.value
                          ? (E(),
                            R(
                              "svg",
                              xS,
                              x[6] ||
                                (x[6] = [
                                  l(
                                    "circle",
                                    {
                                      class: "opacity-25",
                                      cx: "12",
                                      cy: "12",
                                      r: "10",
                                      stroke: "currentColor",
                                      "stroke-width": "4",
                                    },
                                    null,
                                    -1,
                                  ),
                                  l(
                                    "path",
                                    {
                                      class: "opacity-75",
                                      fill: "currentColor",
                                      d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z",
                                    },
                                    null,
                                    -1,
                                  ),
                                ]),
                            ))
                          : (E(),
                            R(
                              "svg",
                              _S,
                              x[7] ||
                                (x[7] = [
                                  l(
                                    "path",
                                    {
                                      "stroke-linecap": "round",
                                      "stroke-linejoin": "round",
                                      "stroke-width": "2",
                                      d: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15",
                                    },
                                    null,
                                    -1,
                                  ),
                                ]),
                            )),
                        l(
                          "span",
                          null,
                          z(
                            i.value
                              ? "Ellenőrzés..."
                              : "Kapcsolat újraellenőrzése",
                          ),
                          1,
                        ),
                      ],
                      8,
                      yS,
                    ),
                    l(
                      "button",
                      {
                        onClick: m,
                        class:
                          "border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-800 text-gray-700 dark:text-gray-300 px-6 py-3 font-medium transition-colors flex items-center justify-center space-x-2",
                      },
                      x[8] ||
                        (x[8] = [
                          l(
                            "svg",
                            {
                              class: "w-4 h-4",
                              fill: "none",
                              stroke: "currentColor",
                              viewBox: "0 0 24 24",
                            },
                            [
                              l("path", {
                                "stroke-linecap": "round",
                                "stroke-linejoin": "round",
                                "stroke-width": "2",
                                d: "M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z",
                              }),
                            ],
                            -1,
                          ),
                          l("span", null, "Támogatás kérése", -1),
                        ]),
                    ),
                  ]),
                ]),
                l("div", wS, [
                  l("p", kS, [
                    x[9] || (x[9] = Ke(" Sürgős esetben: ")),
                    x[10] ||
                      (x[10] = l(
                        "a",
                        {
                          href: "mailto:admin@mestermc.hu",
                          class: "text-blue-600 dark:text-blue-400 underline",
                        },
                        " admin@mestermc.hu ",
                        -1,
                      )),
                    Ke(
                      " | Discord: MesterMC Community | Incidensazonosító: " +
                        z(o.value),
                      1,
                    ),
                  ]),
                ]),
              ]),
            ]),
          ])
        )
      );
    },
  }, */
  CS = cr(SS, [["__scopeId", "data-v-3d0e768b"]]),
  ih = 2,
  MS = {
    __name: "App",
    setup(t) {
      const e = N(!1),
        n = N(!1),
        r = N(null),
        i = N(0),
        o = async (d = !1) => {
          if (!(n.value && !d)) {
            n.value = !0;
            try {
              const f = new AbortController(),
                p = setTimeout(() => f.abort(), 5e3);
              try {
                const h = await fetch(
                  "https://api.mestermc.hu:8443/api/health",
                  {
                    method: "GET",
                    signal: f.signal,
                    headers: { "Content-Type": "application/json" },
                  },
                );
                if ((clearTimeout(p), h.ok))
                  return ((i.value = 0), (e.value = !1), !0);
                throw new Error(`HTTP ${h.status}`);
              } catch {
                clearTimeout(p);
                try {
                  const v = new AbortController(),
                    b = setTimeout(() => v.abort(), 3e3),
                    g = await fetch(
                      "https://api.mestermc.hu:8443/api/auth/verify",
                      {
                        method: "GET",
                        signal: v.signal,
                        headers: { "Content-Type": "application/json" },
                      },
                    );
                  if ((clearTimeout(b), g.status < 500))
                    return ((i.value = 0), (e.value = !1), !0);
                  throw new Error(`HTTP ${g.status}`);
                } catch (v) {
                  throw (clearTimeout(fallbackTimeoutId), v);
                }
              }
            } catch {
              return (i.value++, i.value >= ih && (e.value = !0), !1);
            } finally {
              n.value = !1;
            }
          }
        },
        s = () => {
          (o(),
            (r.value = setInterval(() => {
              o();
            }, 3e4)));
        },
        a = () => {
          r.value && (clearInterval(r.value), (r.value = null));
        },
        c = () => {
          ((i.value = 0), o());
        },
        u = () => {};
      return (
        $t(() => {
          (s(),
            window.addEventListener("online", c),
            window.addEventListener("offline", u));
          const d = () => {
            o();
          };
          window.addEventListener("focus", d);
        }),
        uo(() => {
          (a(),
            window.removeEventListener("online", c),
            window.removeEventListener("offline", u),
            window.removeEventListener("focus", handleFocus));
        }),
        window.addEventListener("unhandledrejection", (d) => {
          var f, p, h, v, b, g;
          (((p = (f = d.reason) == null ? void 0 : f.message) != null &&
            p.includes("fetch")) ||
            ((v = (h = d.reason) == null ? void 0 : h.message) != null &&
              v.includes("Network")) ||
            ((g = (b = d.reason) == null ? void 0 : b.message) != null &&
              g.includes("API"))) &&
            (i.value++, i.value >= ih && (e.value = !0));
        }),
        (d, f) => {
          const p = Mt("ToastNotification");
          return e.value
            ? (E(), Be(CS, { key: 0, onRetryConnection: o }))
            : (E(), R(We, { key: 1 }, [O(iS), O(p)], 64));
        }
      );
    },
  },
  ES = "modulepreload",
  TS = function (t) {
    return "/" + t;
  },
  oh = {},
  sh = function (e, n, r) {
    let i = Promise.resolve();
    if (n && n.length > 0) {
      let s = function (u) {
        return Promise.all(
          u.map((d) =>
            Promise.resolve(d).then(
              (f) => ({ status: "fulfilled", value: f }),
              (f) => ({ status: "rejected", reason: f }),
            ),
          ),
        );
      };
      document.getElementsByTagName("link");
      const a = document.querySelector("meta[property=csp-nonce]"),
        c =
          (a == null ? void 0 : a.nonce) ||
          (a == null ? void 0 : a.getAttribute("nonce"));
      i = s(
        n.map((u) => {
          if (((u = TS(u)), u in oh)) return;
          oh[u] = !0;
          const d = u.endsWith(".css"),
            f = d ? '[rel="stylesheet"]' : "";
          if (document.querySelector(`link[href="${u}"]${f}`)) return;
          const p = document.createElement("link");
          if (
            ((p.rel = d ? "stylesheet" : ES),
            d || (p.as = "script"),
            (p.crossOrigin = ""),
            (p.href = u),
            c && p.setAttribute("nonce", c),
            document.head.appendChild(p),
            d)
          )
            return new Promise((h, v) => {
              (p.addEventListener("load", h),
                p.addEventListener("error", () =>
                  v(new Error(`Unable to preload CSS for ${u}`)),
                ));
            });
        }),
      );
    }
    function o(s) {
      const a = new Event("vite:preloadError", { cancelable: !0 });
      if (((a.payload = s), window.dispatchEvent(a), !a.defaultPrevented))
        throw s;
    }
    return i.then((s) => {
      for (const a of s || []) a.status === "rejected" && o(a.reason);
      return e().catch(o);
    });
  },
  AS = { class: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6" },
  PS = { key: 0, class: "col-span-full flex justify-center" },
  RS = {
    key: 1,
    class:
      "col-span-full p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg",
  },
  LS = { class: "flex items-center gap-2 text-red-700 dark:text-red-300" },
  DS = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  IS = { class: "flex items-center gap-4" },
  OS = { class: "text-2xl font-bold text-surface-900 dark:text-surface-0" },
  $S = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  zS = { class: "flex items-center gap-4" },
  BS = { class: "text-2xl font-bold text-blue-600 dark:text-blue-400" },
  US = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  FS = { class: "flex items-center gap-4" },
  NS = { class: "text-lg font-bold text-surface-900 dark:text-surface-0" },
  VS = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  HS = { class: "flex items-center gap-4" },
  jS = { class: "text-2xl font-bold text-surface-900 dark:text-surface-0" },
  GS = {
    __name: "StatsCards",
    setup(t) {
      const e = N({}),
        n = N(!0),
        r = N(null),
        i = (s) => {
          if (!s) return "Ismeretlen";
          const a = new Date(s),
            u = Math.floor((new Date() - a) / 1e3);
          return u < 60
            ? `${u} másodperce`
            : u < 3600
              ? `${Math.floor(u / 60)} perce`
              : u < 86400
                ? `${Math.floor(u / 3600)} órája`
                : u < 604800
                  ? `${Math.floor(u / 86400)} napja`
                  : a.toLocaleDateString("hu-HU");
        },
        o = async () => {
          ((n.value = !0), (r.value = null));
          try {
            const [s, a] = await Promise.all([
              Ve.getUserProfile(),
              Ve.getUserRank(),
            ]);
            e.value = {
              account_id: s.account_id,
              current_rank: a.current_rank,
              last_login: s.last_login,
              coins_balance: s.coins_balance,
            };
          } catch {
            r.value = "Nem sikerült betölteni a statisztikákat";
          } finally {
            n.value = !1;
          }
        };
      return (
        $t(() => {
          o();
        }),
        (s, a) => {
          var c;
          return (
            E(),
            R("div", AS, [
              n.value
                ? (E(),
                  R(
                    "div",
                    PS,
                    a[0] ||
                      (a[0] = [
                        l(
                          "div",
                          {
                            class:
                              "flex items-center gap-2 text-surface-500 dark:text-surface-400",
                          },
                          [
                            l("i", { class: "pi pi-spin pi-spinner" }),
                            l("span", null, "Statisztikák betöltése..."),
                          ],
                          -1,
                        ),
                      ]),
                  ))
                : r.value
                  ? (E(),
                    R("div", RS, [
                      l("div", LS, [
                        a[1] ||
                          (a[1] = l(
                            "i",
                            { class: "pi pi-exclamation-triangle" },
                            null,
                            -1,
                          )),
                        l("span", null, z(r.value), 1),
                      ]),
                      l(
                        "button",
                        {
                          onClick: o,
                          class:
                            "mt-2 text-red-600 dark:text-red-400 hover:text-red-800 dark:hover:text-red-200 text-sm underline",
                        },
                        " Újra próbálkozás ",
                      ),
                    ]))
                  : (E(),
                    R(
                      We,
                      { key: 2 },
                      [
                        l("div", DS, [
                          l("div", IS, [
                            a[3] ||
                              (a[3] = l(
                                "div",
                                {
                                  class:
                                    "p-3 bg-blue-100 dark:bg-blue-500/20 rounded-lg",
                                },
                                [
                                  l("i", {
                                    class:
                                      "pi pi-id-card text-2xl text-blue-600 dark:text-blue-300",
                                  }),
                                ],
                                -1,
                              )),
                            l("div", null, [
                              a[2] ||
                                (a[2] = l(
                                  "p",
                                  {
                                    class:
                                      "text-sm text-surface-500 dark:text-surface-400",
                                  },
                                  "Account ID",
                                  -1,
                                )),
                              l("p", OS, z(e.value.account_id || "-"), 1),
                            ]),
                          ]),
                        ]),
                        l("div", $S, [
                          l("div", zS, [
                            a[5] ||
                              (a[5] = l(
                                "div",
                                {
                                  class:
                                    "p-3 bg-purple-100 dark:bg-purple-500/20 rounded-lg",
                                },
                                [
                                  l("i", {
                                    class:
                                      "pi pi-crown text-2xl text-purple-600 dark:text-purple-300",
                                  }),
                                ],
                                -1,
                              )),
                            l("div", null, [
                              a[4] ||
                                (a[4] = l(
                                  "p",
                                  {
                                    class:
                                      "text-sm text-surface-500 dark:text-surface-400",
                                  },
                                  "Jelenlegi rang",
                                  -1,
                                )),
                              l(
                                "p",
                                BS,
                                z(
                                  ((c = e.value.current_rank) == null
                                    ? void 0
                                    : c.name) || "Nincs",
                                ),
                                1,
                              ),
                            ]),
                          ]),
                        ]),
                        l("div", US, [
                          l("div", FS, [
                            a[7] ||
                              (a[7] = l(
                                "div",
                                {
                                  class:
                                    "p-3 bg-green-100 dark:bg-green-500/20 rounded-lg",
                                },
                                [
                                  l("i", {
                                    class:
                                      "pi pi-clock text-2xl text-green-600 dark:text-green-300",
                                  }),
                                ],
                                -1,
                              )),
                            l("div", null, [
                              a[6] ||
                                (a[6] = l(
                                  "p",
                                  {
                                    class:
                                      "text-sm text-surface-500 dark:text-surface-400",
                                  },
                                  "Utolsó bejelentkezés",
                                  -1,
                                )),
                              l("p", NS, z(i(e.value.last_login)), 1),
                            ]),
                          ]),
                        ]),
                        l("div", VS, [
                          l("div", HS, [
                            a[9] ||
                              (a[9] = l(
                                "div",
                                {
                                  class:
                                    "p-3 bg-yellow-100 dark:bg-yellow-500/20 rounded-lg",
                                },
                                [
                                  l("i", {
                                    class:
                                      "pi pi-star text-2xl text-yellow-600 dark:text-yellow-300",
                                  }),
                                ],
                                -1,
                              )),
                            l("div", null, [
                              a[8] ||
                                (a[8] = l(
                                  "p",
                                  {
                                    class:
                                      "text-sm text-surface-500 dark:text-surface-400",
                                  },
                                  "Bányászérme egyenleg",
                                  -1,
                                )),
                              l(
                                "p",
                                jS,
                                z(
                                  (e.value.coins_balance || 0).toLocaleString(),
                                ) + " BÉ",
                                1,
                              ),
                            ]),
                          ]),
                        ]),
                      ],
                      64,
                    )),
            ])
          );
        }
      );
    },
  };
var WS = `
    .p-avatar {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: dt('avatar.width');
        height: dt('avatar.height');
        font-size: dt('avatar.font.size');
        background: dt('avatar.background');
        color: dt('avatar.color');
        border-radius: dt('avatar.border.radius');
    }

    .p-avatar-image {
        background: transparent;
    }

    .p-avatar-circle {
        border-radius: 50%;
    }

    .p-avatar-circle img {
        border-radius: 50%;
    }

    .p-avatar-icon {
        font-size: dt('avatar.icon.size');
        width: dt('avatar.icon.size');
        height: dt('avatar.icon.size');
    }

    .p-avatar img {
        width: 100%;
        height: 100%;
    }

    .p-avatar-lg {
        width: dt('avatar.lg.width');
        height: dt('avatar.lg.width');
        font-size: dt('avatar.lg.font.size');
    }

    .p-avatar-lg .p-avatar-icon {
        font-size: dt('avatar.lg.icon.size');
        width: dt('avatar.lg.icon.size');
        height: dt('avatar.lg.icon.size');
    }

    .p-avatar-xl {
        width: dt('avatar.xl.width');
        height: dt('avatar.xl.width');
        font-size: dt('avatar.xl.font.size');
    }

    .p-avatar-xl .p-avatar-icon {
        font-size: dt('avatar.xl.icon.size');
        width: dt('avatar.xl.icon.size');
        height: dt('avatar.xl.icon.size');
    }

    .p-avatar-group {
        display: flex;
        align-items: center;
    }

    .p-avatar-group .p-avatar + .p-avatar {
        margin-inline-start: dt('avatar.group.offset');
    }

    .p-avatar-group .p-avatar {
        border: 2px solid dt('avatar.group.border.color');
    }

    .p-avatar-group .p-avatar-lg + .p-avatar-lg {
        margin-inline-start: dt('avatar.lg.group.offset');
    }

    .p-avatar-group .p-avatar-xl + .p-avatar-xl {
        margin-inline-start: dt('avatar.xl.group.offset');
    }
`,
  KS = {
    root: function (e) {
      var n = e.props;
      return [
        "p-avatar p-component",
        {
          "p-avatar-image": n.image != null,
          "p-avatar-circle": n.shape === "circle",
          "p-avatar-lg": n.size === "large",
          "p-avatar-xl": n.size === "xlarge",
        },
      ];
    },
    label: "p-avatar-label",
    icon: "p-avatar-icon",
  },
  XS = ot.extend({ name: "avatar", style: WS, classes: KS }),
  YS = {
    name: "BaseAvatar",
    extends: lr,
    props: {
      label: { type: String, default: null },
      icon: { type: String, default: null },
      image: { type: String, default: null },
      size: { type: String, default: "normal" },
      shape: { type: String, default: "square" },
      ariaLabelledby: { type: String, default: null },
      ariaLabel: { type: String, default: null },
    },
    style: XS,
    provide: function () {
      return { $pcAvatar: this, $parentInstance: this };
    },
  };
function ba(t) {
  "@babel/helpers - typeof";
  return (
    (ba =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    ba(t)
  );
}
function ah(t, e, n) {
  return (
    (e = qS(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function qS(t) {
  var e = ZS(t, "string");
  return ba(e) == "symbol" ? e : e + "";
}
function ZS(t, e) {
  if (ba(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (ba(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var nf = {
    name: "Avatar",
    extends: YS,
    inheritAttrs: !1,
    emits: ["error"],
    methods: {
      onError: function (e) {
        this.$emit("error", e);
      },
    },
    computed: {
      dataP: function () {
        return At(ah(ah({}, this.shape, this.shape), this.size, this.size));
      },
    },
  },
  JS = ["aria-labelledby", "aria-label", "data-p"],
  QS = ["data-p"],
  eC = ["data-p"],
  tC = ["src", "alt", "data-p"];
function nC(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "div",
      Q(
        {
          class: t.cx("root"),
          "aria-labelledby": t.ariaLabelledby,
          "aria-label": t.ariaLabel,
        },
        t.ptmi("root"),
        { "data-p": o.dataP },
      ),
      [
        De(t.$slots, "default", {}, function () {
          return [
            t.label
              ? (E(),
                R(
                  "span",
                  Q({ key: 0, class: t.cx("label") }, t.ptm("label"), {
                    "data-p": o.dataP,
                  }),
                  z(t.label),
                  17,
                  QS,
                ))
              : t.$slots.icon
                ? (E(),
                  Be(
                    Dt(t.$slots.icon),
                    { key: 1, class: Ie(t.cx("icon")) },
                    null,
                    8,
                    ["class"],
                  ))
                : t.icon
                  ? (E(),
                    R(
                      "span",
                      Q(
                        { key: 2, class: [t.cx("icon"), t.icon] },
                        t.ptm("icon"),
                        { "data-p": o.dataP },
                      ),
                      null,
                      16,
                      eC,
                    ))
                  : t.image
                    ? (E(),
                      R(
                        "img",
                        Q(
                          {
                            key: 3,
                            src: t.image,
                            alt: t.ariaLabel,
                            onError:
                              e[0] ||
                              (e[0] = function () {
                                return (
                                  o.onError && o.onError.apply(o, arguments)
                                );
                              }),
                          },
                          t.ptm("image"),
                          { "data-p": o.dataP },
                        ),
                        null,
                        16,
                        tC,
                      ))
                    : le("", !0),
          ];
        }),
      ],
      16,
      JS,
    )
  );
}
nf.render = nC;
var rC = `
    .p-divider-horizontal {
        display: flex;
        width: 100%;
        position: relative;
        align-items: center;
        margin: dt('divider.horizontal.margin');
        padding: dt('divider.horizontal.padding');
    }

    .p-divider-horizontal:before {
        position: absolute;
        display: block;
        inset-block-start: 50%;
        inset-inline-start: 0;
        width: 100%;
        content: '';
        border-block-start: 1px solid dt('divider.border.color');
    }

    .p-divider-horizontal .p-divider-content {
        padding: dt('divider.horizontal.content.padding');
    }

    .p-divider-vertical {
        min-height: 100%;
        display: flex;
        position: relative;
        justify-content: center;
        margin: dt('divider.vertical.margin');
        padding: dt('divider.vertical.padding');
    }

    .p-divider-vertical:before {
        position: absolute;
        display: block;
        inset-block-start: 0;
        inset-inline-start: 50%;
        height: 100%;
        content: '';
        border-inline-start: 1px solid dt('divider.border.color');
    }

    .p-divider.p-divider-vertical .p-divider-content {
        padding: dt('divider.vertical.content.padding');
    }

    .p-divider-content {
        z-index: 1;
        background: dt('divider.content.background');
        color: dt('divider.content.color');
    }

    .p-divider-solid.p-divider-horizontal:before {
        border-block-start-style: solid;
    }

    .p-divider-solid.p-divider-vertical:before {
        border-inline-start-style: solid;
    }

    .p-divider-dashed.p-divider-horizontal:before {
        border-block-start-style: dashed;
    }

    .p-divider-dashed.p-divider-vertical:before {
        border-inline-start-style: dashed;
    }

    .p-divider-dotted.p-divider-horizontal:before {
        border-block-start-style: dotted;
    }

    .p-divider-dotted.p-divider-vertical:before {
        border-inline-start-style: dotted;
    }

    .p-divider-left:dir(rtl),
    .p-divider-right:dir(rtl) {
        flex-direction: row-reverse;
    }
`,
  iC = {
    root: function (e) {
      var n = e.props;
      return {
        justifyContent:
          n.layout === "horizontal"
            ? n.align === "center" || n.align === null
              ? "center"
              : n.align === "left"
                ? "flex-start"
                : n.align === "right"
                  ? "flex-end"
                  : null
            : null,
        alignItems:
          n.layout === "vertical"
            ? n.align === "center" || n.align === null
              ? "center"
              : n.align === "top"
                ? "flex-start"
                : n.align === "bottom"
                  ? "flex-end"
                  : null
            : null,
      };
    },
  },
  oC = {
    root: function (e) {
      var n = e.props;
      return [
        "p-divider p-component",
        "p-divider-" + n.layout,
        "p-divider-" + n.type,
        {
          "p-divider-left":
            n.layout === "horizontal" && (!n.align || n.align === "left"),
        },
        {
          "p-divider-center": n.layout === "horizontal" && n.align === "center",
        },
        { "p-divider-right": n.layout === "horizontal" && n.align === "right" },
        { "p-divider-top": n.layout === "vertical" && n.align === "top" },
        {
          "p-divider-center":
            n.layout === "vertical" && (!n.align || n.align === "center"),
        },
        { "p-divider-bottom": n.layout === "vertical" && n.align === "bottom" },
      ];
    },
    content: "p-divider-content",
  },
  sC = ot.extend({ name: "divider", style: rC, classes: oC, inlineStyles: iC }),
  aC = {
    name: "BaseDivider",
    extends: lr,
    props: {
      align: { type: String, default: null },
      layout: { type: String, default: "horizontal" },
      type: { type: String, default: "solid" },
    },
    style: sC,
    provide: function () {
      return { $pcDivider: this, $parentInstance: this };
    },
  };
function ya(t) {
  "@babel/helpers - typeof";
  return (
    (ya =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    ya(t)
  );
}
function eu(t, e, n) {
  return (
    (e = lC(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function lC(t) {
  var e = cC(t, "string");
  return ya(e) == "symbol" ? e : e + "";
}
function cC(t, e) {
  if (ya(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (ya(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var Ks = {
    name: "Divider",
    extends: aC,
    inheritAttrs: !1,
    computed: {
      dataP: function () {
        return At(
          eu(
            eu(eu({}, this.align, this.align), this.layout, this.layout),
            this.type,
            this.type,
          ),
        );
      },
    },
  },
  uC = ["aria-orientation", "data-p"],
  dC = ["data-p"];
function fC(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "div",
      Q(
        {
          class: t.cx("root"),
          style: t.sx("root"),
          role: "separator",
          "aria-orientation": t.layout,
          "data-p": o.dataP,
        },
        t.ptmi("root"),
      ),
      [
        t.$slots.default
          ? (E(),
            R(
              "div",
              Q(
                { key: 0, class: t.cx("content"), "data-p": o.dataP },
                t.ptm("content"),
              ),
              [De(t.$slots, "default")],
              16,
              dC,
            ))
          : le("", !0),
      ],
      16,
      uC,
    )
  );
}
Ks.render = fC;
const pC = { key: 0, class: "flex flex-col gap-4" },
  hC = { class: "flex justify-between items-center" },
  mC = { class: "flex items-center gap-2" },
  gC = {
    class: "text-surface-900 dark:text-surface-0 font-semibold text-base",
  },
  vC = { class: "flex justify-between items-start gap-4" },
  bC = {
    class:
      "font-semibold text-xl m-0 text-surface-900 dark:text-surface-0 flex items-center gap-2",
  },
  yC = { class: "px-2 flex flex-col gap-4" },
  xC = { class: "flex items-start gap-2" },
  _C = {
    key: 0,
    class:
      "text-red-500 dark:text-red-400 font-medium text-base flex items-center gap-1",
  },
  wC = {
    key: 1,
    class: "text-green-500 dark:text-green-400 font-medium text-base",
  },
  kC = { class: "flex items-center gap-2" },
  SC = { class: "flex items-center gap-2" },
  CC = {
    class: "text-surface-700 dark:text-surface-300 font-medium text-base",
  },
  MC = { class: "flex items-center gap-2" },
  EC = {
    class: "text-surface-700 dark:text-surface-300 font-medium text-base",
  },
  TC = { class: "flex items-center gap-2" },
  AC = {
    class: "text-surface-700 dark:text-surface-300 font-medium text-base",
  },
  PC = { class: "px-2 flex flex-col gap-2" },
  RC = {
    class:
      "text-base leading-normal text-surface-700 dark:text-surface-300 m-0",
  },
  LC = { key: 0 },
  DC = { class: "px-2 flex flex-col gap-4" },
  IC = { class: "flex justify-between items-center" },
  OC = { class: "flex items-center gap-2" },
  $C = {
    class: "font-semibold text-base text-surface-900 dark:text-surface-0",
  },
  zC = { class: "flex flex-col gap-3 pl-1" },
  BC = { class: "text-base text-surface-700 dark:text-surface-300" },
  UC = { class: "flex justify-end gap-2" },
  FC = {
    __name: "NewsDialog",
    props: {
      news: { type: Object, default: null },
      show: { type: Boolean, default: !1 },
    },
    emits: ["close"],
    setup(t, { emit: e }) {
      const n = t,
        r = e,
        i = N(!1);
      (Ft(
        () => n.show,
        (c) => {
          i.value = c;
        },
      ),
        Ft(i, (c) => {
          c || r("close");
        }));
      const o = (c) =>
          new Intl.DateTimeFormat("hu-HU", {
            year: "numeric",
            month: "long",
            day: "numeric",
            hour: "2-digit",
            minute: "2-digit",
          }).format(c),
        s = (c) =>
          ({
            Felfedezés: "text-yellow-600 dark:text-yellow-300",
            Karbantartás: "text-blue-600 dark:text-blue-300",
            Biztonság: "text-red-600 dark:text-red-300",
            Teljesítmény: "text-green-600 dark:text-green-300",
            Felszerelés: "text-purple-600 dark:text-purple-300",
          })[c] || "text-surface-600 dark:text-surface-300",
        a = (c) =>
          ({
            Felfedezés: "warning",
            Karbantartás: "info",
            Biztonság: "danger",
            Teljesítmény: "success",
            Felszerelés: "secondary",
          })[c] || "secondary";
      return (c, u) => (
        E(),
        Be(
          H(on),
          {
            visible: i.value,
            "onUpdate:visible": u[2] || (u[2] = (d) => (i.value = d)),
            modal: !0,
            "show-header": !1,
            breakpoints: { "960px": "75vw", "640px": "90vw" },
            style: { width: "45rem" },
            class: "shadow-sm rounded-2xl",
            pt: { content: "!p-6" },
            onHide: u[3] || (u[3] = (d) => c.$emit("close")),
          },
          {
            default: Ye(() => [
              t.news
                ? (E(),
                  R("div", pC, [
                    l("div", hC, [
                      l("div", mC, [
                        u[4] ||
                          (u[4] = l(
                            "span",
                            {
                              class:
                                "text-surface-600 dark:text-surface-400 font-medium text-base",
                            },
                            "Hírek",
                            -1,
                          )),
                        u[5] ||
                          (u[5] = l(
                            "span",
                            {
                              class:
                                "text-surface-600 dark:text-surface-400 font-medium text-base",
                            },
                            "/",
                            -1,
                          )),
                        l("span", gC, z(t.news.category), 1),
                      ]),
                      O(H(Ce), {
                        type: "button",
                        icon: "pi pi-times",
                        text: "",
                        rounded: "",
                        severity: "secondary",
                        class: "w-10 h-10 !p-2",
                        onClick: u[0] || (u[0] = (d) => (i.value = !1)),
                      }),
                    ]),
                    l("div", vC, [
                      l("h3", bC, [
                        l(
                          "i",
                          { class: Ie([t.news.icon, s(t.news.category)]) },
                          null,
                          2,
                        ),
                        Ke(" " + z(t.news.title), 1),
                      ]),
                      O(
                        H(vt),
                        {
                          value: t.news.category,
                          severity: a(t.news.category),
                        },
                        null,
                        8,
                        ["value", "severity"],
                      ),
                    ]),
                    l("div", yC, [
                      l("div", xC, [
                        u[7] ||
                          (u[7] = l(
                            "div",
                            {
                              class:
                                "w-[100px] text-surface-500 dark:text-surface-400 font-medium text-base",
                            },
                            "Státusz",
                            -1,
                          )),
                        t.news.isImportant
                          ? (E(),
                            R(
                              "div",
                              _C,
                              u[6] ||
                                (u[6] = [
                                  l(
                                    "i",
                                    { class: "pi pi-exclamation-triangle" },
                                    null,
                                    -1,
                                  ),
                                  Ke(" Fontos "),
                                ]),
                            ))
                          : (E(), R("div", wC, "Normál")),
                      ]),
                      l("div", kC, [
                        u[8] ||
                          (u[8] = l(
                            "div",
                            {
                              class:
                                "w-[100px] text-surface-500 dark:text-surface-400 font-medium text-base",
                            },
                            "Szerző",
                            -1,
                          )),
                        l("div", SC, [
                          O(
                            H(nf),
                            {
                              image: t.news.author.avatar,
                              shape: "circle",
                              class: "w-7 h-7",
                            },
                            null,
                            8,
                            ["image"],
                          ),
                          l("span", CC, z(t.news.author.name), 1),
                        ]),
                      ]),
                      l("div", MC, [
                        u[9] ||
                          (u[9] = l(
                            "div",
                            {
                              class:
                                "w-[100px] text-surface-500 dark:text-surface-400 font-medium text-base",
                            },
                            "Dátum",
                            -1,
                          )),
                        l("div", EC, z(o(t.news.timestamp)), 1),
                      ]),
                      l("div", TC, [
                        u[10] ||
                          (u[10] = l(
                            "div",
                            {
                              class:
                                "w-[100px] text-surface-500 dark:text-surface-400 font-medium text-base",
                            },
                            "Lokáció",
                            -1,
                          )),
                        l("div", AC, z(t.news.location || "Bányaközpont"), 1),
                      ]),
                    ]),
                    O(H(Ks), { class: "!my-2" }),
                    l("div", PC, [
                      u[11] ||
                        (u[11] = l(
                          "h4",
                          {
                            class:
                              "font-medium text-lg m-0 text-surface-900 dark:text-surface-0",
                          },
                          "Részletek",
                          -1,
                        )),
                      l(
                        "p",
                        RC,
                        z(t.news.fullDescription || t.news.description),
                        1,
                      ),
                    ]),
                    t.news.actions && t.news.actions.length > 0
                      ? (E(),
                        R("div", LC, [
                          O(H(Ks), { class: "!my-2" }),
                          l("div", DC, [
                            l("div", IC, [
                              u[13] ||
                                (u[13] = l(
                                  "h4",
                                  {
                                    class:
                                      "font-medium text-lg m-0 text-surface-900 dark:text-surface-0",
                                  },
                                  "Teendők",
                                  -1,
                                )),
                              l("div", OC, [
                                u[12] ||
                                  (u[12] = l(
                                    "i",
                                    {
                                      class:
                                        "pi pi-list !text-base !leading-normal text-surface-700 dark:text-surface-300",
                                    },
                                    null,
                                    -1,
                                  )),
                                l(
                                  "span",
                                  $C,
                                  z(t.news.actions.length) + " elem",
                                  1,
                                ),
                              ]),
                            ]),
                            l("div", zC, [
                              (E(!0),
                              R(
                                We,
                                null,
                                mt(
                                  t.news.actions,
                                  (d, f) => (
                                    E(),
                                    R(
                                      "div",
                                      {
                                        key: f,
                                        class: "flex gap-2 items-start",
                                      },
                                      [
                                        u[14] ||
                                          (u[14] = l(
                                            "i",
                                            {
                                              class:
                                                "pi pi-circle-fill !text-xs text-primary-500 mt-1.5",
                                            },
                                            null,
                                            -1,
                                          )),
                                        l("span", BC, z(d), 1),
                                      ],
                                    )
                                  ),
                                ),
                                128,
                              )),
                            ]),
                          ]),
                        ]))
                      : le("", !0),
                    O(H(Ks), { class: "!my-2" }),
                    l("div", UC, [
                      O(H(Ce), {
                        label: "Bezárás",
                        severity: "secondary",
                        outlined: "",
                        onClick: u[1] || (u[1] = (d) => (i.value = !1)),
                      }),
                      O(H(Ce), {
                        label: "Megosztás",
                        severity: "primary",
                        icon: "pi pi-share-alt",
                      }),
                    ]),
                  ]))
                : le("", !0),
            ]),
            _: 1,
          },
          8,
          ["visible"],
        )
      );
    },
  },
  NC = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  VC = { key: 0, class: "flex justify-center py-8" },
  HC = {
    key: 1,
    class:
      "p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg",
  },
  jC = { class: "flex items-center gap-2 text-red-700 dark:text-red-300" },
  GC = { key: 2, class: "space-y-4" },
  WC = ["onClick"],
  KC = { class: "flex items-start gap-4" },
  XC = { class: "flex-1 min-w-0" },
  YC = { class: "flex items-center justify-between mb-2" },
  qC = { class: "font-semibold text-surface-900 dark:text-surface-0 truncate" },
  ZC = {
    class: "text-xs text-surface-500 dark:text-surface-400 flex-shrink-0 ml-2",
  },
  JC = { class: "text-surface-600 dark:text-surface-300 text-sm line-clamp-2" },
  QC = { class: "flex items-center gap-2 mt-2" },
  eM = { key: 0, class: "text-xs text-red-500 dark:text-red-400 font-medium" },
  tM = { key: 1, class: "text-xs text-surface-400 dark:text-surface-500" },
  nM = { key: 3, class: "text-center py-8" },
  rM = {
    __name: "NewsSection",
    setup(t) {
      const e = N([]),
        n = N(null),
        r = N(!1),
        i = N(!0),
        o = N(null),
        s = (h) => {
          if (!h) return [];
          if (Array.isArray(h)) return h;
          if (typeof h == "string")
            try {
              return JSON.parse(h);
            } catch {
              return [];
            }
          return typeof h == "object" ? [h] : [];
        },
        a = async (h) => {
          try {
            const v = await Ve.getNewsById(h.id);
            (await Ve.markNewsAsRead(h.id),
              (n.value = {
                ...v,
                author: {
                  name: v.author_name || "Admin",
                  avatar:
                    v.author_avatar ||
                    "https://primefaces.org/cdn/primevue/images/avatar/amyelsner.png",
                },
                timestamp: new Date(v.published_at),
                actions: s(v.actions),
              }),
              (r.value = !0));
          } catch {
            ((n.value = {
              ...h,
              author: {
                name: "Admin",
                avatar:
                  "https://primefaces.org/cdn/primevue/images/avatar/amyelsner.png",
              },
              timestamp: new Date(h.published_at),
              actions: s(h.actions),
            }),
              (r.value = !0));
          }
        },
        c = () => {
          ((r.value = !1), (n.value = null));
        },
        u = (h) => {
          if (!h) return "";
          const v = new Date(h),
            g = Math.floor((new Date() - v) / 1e3);
          return g < 60
            ? `${g} másodperce`
            : g < 3600
              ? `${Math.floor(g / 60)} perce`
              : g < 86400
                ? `${Math.floor(g / 3600)} órája`
                : g < 604800
                  ? `${Math.floor(g / 86400)} napja`
                  : `${Math.floor(g / 604800)} hete`;
        },
        d = (h) =>
          ({
            Felfedezés:
              "bg-yellow-100 dark:bg-yellow-500/20 text-yellow-600 dark:text-yellow-300",
            Karbantartás:
              "bg-blue-100 dark:bg-blue-500/20 text-blue-600 dark:text-blue-300",
            Biztonság:
              "bg-red-100 dark:bg-red-500/20 text-red-600 dark:text-red-300",
            Teljesítmény:
              "bg-green-100 dark:bg-green-500/20 text-green-600 dark:text-green-300",
            Felszerelés:
              "bg-purple-100 dark:bg-purple-500/20 text-purple-600 dark:text-purple-300",
          })[h] ||
          "bg-surface-100 dark:bg-surface-700 text-surface-600 dark:text-surface-300",
        f = (h) =>
          ({
            Felfedezés: "warning",
            Karbantartás: "info",
            Biztonság: "danger",
            Teljesítmény: "success",
            Felszerelés: "secondary",
          })[h] || "secondary",
        p = async () => {
          ((i.value = !0), (o.value = null));
          try {
            const h = await Ve.getNews(5, 0);
            e.value = h.data || h;
          } catch {
            o.value = "Nem sikerült betölteni a híreket";
          } finally {
            i.value = !1;
          }
        };
      return (
        $t(() => {
          p();
        }),
        (h, v) => (
          E(),
          R("div", NC, [
            v[5] ||
              (v[5] = l(
                "div",
                { class: "flex items-center justify-between mb-6" },
                [
                  l(
                    "h3",
                    {
                      class:
                        "text-lg font-semibold text-surface-900 dark:text-surface-0 flex items-center gap-2",
                    },
                    [
                      l("i", { class: "pi pi-megaphone text-primary-500" }),
                      Ke(" Legfrissebb hírek "),
                    ],
                  ),
                  l(
                    "button",
                    {
                      class:
                        "text-primary-500 hover:text-primary-600 text-sm font-medium",
                    },
                    " Összes hír → ",
                  ),
                ],
                -1,
              )),
            i.value
              ? (E(),
                R(
                  "div",
                  VC,
                  v[0] ||
                    (v[0] = [
                      l(
                        "div",
                        {
                          class:
                            "flex items-center gap-2 text-surface-500 dark:text-surface-400",
                        },
                        [
                          l("i", { class: "pi pi-spin pi-spinner" }),
                          l("span", null, "Hírek betöltése..."),
                        ],
                        -1,
                      ),
                    ]),
                ))
              : o.value
                ? (E(),
                  R("div", HC, [
                    l("div", jC, [
                      v[1] ||
                        (v[1] = l(
                          "i",
                          { class: "pi pi-exclamation-triangle" },
                          null,
                          -1,
                        )),
                      l("span", null, z(o.value), 1),
                    ]),
                    l(
                      "button",
                      {
                        onClick: p,
                        class:
                          "mt-2 text-red-600 dark:text-red-400 hover:text-red-800 dark:hover:text-red-200 text-sm underline",
                      },
                      " Újra próbálkozás ",
                    ),
                  ]))
                : e.value.length > 0
                  ? (E(),
                    R("div", GC, [
                      (E(!0),
                      R(
                        We,
                        null,
                        mt(
                          e.value,
                          (b) => (
                            E(),
                            R(
                              "div",
                              {
                                key: b.id,
                                class:
                                  "p-4 bg-surface-50 dark:bg-surface-800 rounded-lg hover:bg-surface-100 dark:hover:bg-surface-700 transition-colors cursor-pointer",
                                onClick: (g) => a(b),
                              },
                              [
                                l("div", KC, [
                                  l(
                                    "div",
                                    {
                                      class: Ie([
                                        d(b.category),
                                        "p-2 rounded-lg flex-shrink-0",
                                      ]),
                                    },
                                    [
                                      l(
                                        "i",
                                        { class: Ie([b.icon, "text-lg"]) },
                                        null,
                                        2,
                                      ),
                                    ],
                                    2,
                                  ),
                                  l("div", XC, [
                                    l("div", YC, [
                                      l("h4", qC, z(b.title), 1),
                                      l("span", ZC, z(u(b.published_at)), 1),
                                    ]),
                                    l("p", JC, z(b.description), 1),
                                    l("div", QC, [
                                      O(
                                        H(vt),
                                        {
                                          value: b.category,
                                          severity: f(b.category),
                                          class: "text-xs",
                                        },
                                        null,
                                        8,
                                        ["value", "severity"],
                                      ),
                                      b.is_important
                                        ? (E(),
                                          R(
                                            "span",
                                            eM,
                                            v[2] ||
                                              (v[2] = [
                                                l(
                                                  "i",
                                                  {
                                                    class:
                                                      "pi pi-exclamation-triangle mr-1",
                                                  },
                                                  null,
                                                  -1,
                                                ),
                                                Ke(" Fontos "),
                                              ]),
                                          ))
                                        : le("", !0),
                                      b.location
                                        ? (E(),
                                          R("span", tM, [
                                            v[3] ||
                                              (v[3] = l(
                                                "i",
                                                {
                                                  class:
                                                    "pi pi-map-marker mr-1",
                                                },
                                                null,
                                                -1,
                                              )),
                                            Ke(" " + z(b.location), 1),
                                          ]))
                                        : le("", !0),
                                    ]),
                                  ]),
                                ]),
                              ],
                              8,
                              WC,
                            )
                          ),
                        ),
                        128,
                      )),
                    ]))
                  : (E(),
                    R(
                      "div",
                      nM,
                      v[4] ||
                        (v[4] = [
                          l(
                            "i",
                            {
                              class:
                                "pi pi-inbox text-4xl text-surface-400 dark:text-surface-500 mb-4",
                            },
                            null,
                            -1,
                          ),
                          l(
                            "p",
                            { class: "text-surface-500 dark:text-surface-400" },
                            "Nincsenek új hírek",
                            -1,
                          ),
                        ]),
                    )),
            O(FC, { news: n.value, show: r.value, onClose: c }, null, 8, [
              "news",
              "show",
            ]),
          ])
        )
      );
    },
  },
  iM = cr(rM, [["__scopeId", "data-v-cbc62cc2"]]),
  oM = { class: "space-y-6" },
  sM = {
    __name: "Dashboard",
    setup(t) {
      return (e, n) => (E(), R("div", oM, [O(GS), O(iM)]));
    },
  },
  aM = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-2 rounded-lg border border-surface-200 dark:border-surface-700 mb-3",
  },
  lM = { key: 0, class: "flex justify-center py-8" },
  cM = {
    key: 1,
    class:
      "p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg",
  },
  uM = { class: "flex items-center gap-2 text-red-700 dark:text-red-300" },
  dM = { key: 2, class: "text-center py-8" },
  fM = { key: 3, class: "grid grid-cols-1 lg:grid-cols-2 gap-2 p-2" },
  pM = { class: "flex items-start gap-2" },
  hM = { class: "relative" },
  mM = ["src", "alt"],
  gM = { class: "pt-1" },
  vM = { class: "flex items-start gap-2" },
  bM = { class: "pt-1" },
  yM = { class: "text-xl font-bold text-surface-900 dark:text-surface-0" },
  xM = {
    key: 4,
    class:
      "grid grid-cols-3 gap-2 mt-2 pt-2 border-t border-surface-200 dark:border-surface-700 px-2",
  },
  _M = { class: "text-center" },
  wM = { class: "text-2xl font-bold text-primary-500" },
  kM = { class: "text-center" },
  SM = { class: "text-2xl font-bold text-green-500" },
  CM = { class: "text-center" },
  MM = { class: "text-2xl font-bold text-orange-500" },
  EM = {
    __name: "UserRankInfo",
    setup(t) {
      const e = N(null),
        n = N(null),
        r = N({ total_coins_spent: 0, days_active: 0, rank_changes: 0 }),
        i = N(!0),
        o = N(null),
        s = (p) =>
          p
            ? new Intl.DateTimeFormat("hu-HU", {
                year: "numeric",
                month: "long",
                day: "numeric",
                hour: "2-digit",
                minute: "2-digit",
              }).format(new Date(p))
            : "Ismeretlen",
        a = () => {
          if (!n.value) return "Ismeretlen";
          const p = new Date(),
            h = new Date(n.value),
            v = Math.floor((h - p) / (1e3 * 60 * 60 * 24));
          return v < 0
            ? "Lejárt"
            : v === 0
              ? "Ma lejár"
              : v === 1
                ? "Holnap lejár"
                : v < 7
                  ? `${v} nap múlva lejár`
                  : `${v} nap múlva lejár`;
        },
        c = () => {
          if (!n.value) return "text-surface-500 dark:text-surface-400 text-xs";
          const p = new Date(),
            h = new Date(n.value),
            v = Math.floor((h - p) / (1e3 * 60 * 60 * 24));
          return v < 0
            ? "text-red-500 dark:text-red-400 text-xs font-medium"
            : v <= 3
              ? "text-orange-500 dark:text-orange-400 text-xs font-medium"
              : v <= 7
                ? "text-yellow-500 dark:text-yellow-400 text-xs"
                : "text-green-500 dark:text-green-400 text-xs";
        },
        u = (p) => {
          p.target.style.display = "none";
          const h = p.target.parentElement;
          h.innerHTML =
            '<div class="w-48 h-48 bg-surface-100 dark:bg-surface-800 flex items-center justify-center"><i class="pi pi-user text-6xl text-surface-500"></i></div>';
        },
        d = async () => {
          ((i.value = !0), (o.value = null));
          try {
            const [p, h] = await Promise.all([
              Ve.getUserProfile(),
              Ve.getUserRank(),
            ]);
            (h.current_rank &&
              ((e.value = h.current_rank), (n.value = h.expires_at)),
              (r.value = {
                total_coins_spent: p.total_coins_spent || 0,
                days_active: f(p.registration_date),
                rank_changes: h.rank_changes || 0,
              }));
          } catch {
            o.value = "Nem sikerült betölteni a rang információkat";
          } finally {
            i.value = !1;
          }
        },
        f = (p) => {
          if (!p) return 0;
          const h = new Date(p),
            b = Math.abs(new Date() - h);
          return Math.ceil(b / (1e3 * 60 * 60 * 24));
        };
      return (
        $t(() => {
          d();
        }),
        (p, h) => (
          E(),
          R("div", aM, [
            h[10] ||
              (h[10] = l(
                "h3",
                {
                  class:
                    "text-lg font-semibold text-surface-900 dark:text-surface-0 mb-1 flex items-center gap-2 px-2",
                },
                [
                  l("i", { class: "pi pi-user text-primary-500" }),
                  Ke(" Rangod információi "),
                ],
                -1,
              )),
            i.value
              ? (E(),
                R(
                  "div",
                  lM,
                  h[0] ||
                    (h[0] = [
                      l(
                        "div",
                        {
                          class:
                            "flex items-center gap-2 text-surface-500 dark:text-surface-400",
                        },
                        [
                          l("i", { class: "pi pi-spin pi-spinner" }),
                          l("span", null, "Rang információk betöltése..."),
                        ],
                        -1,
                      ),
                    ]),
                ))
              : o.value
                ? (E(),
                  R("div", cM, [
                    l("div", uM, [
                      h[1] ||
                        (h[1] = l(
                          "i",
                          { class: "pi pi-exclamation-triangle" },
                          null,
                          -1,
                        )),
                      l("span", null, z(o.value), 1),
                    ]),
                    l(
                      "button",
                      {
                        onClick: d,
                        class:
                          "mt-2 text-red-600 dark:text-red-400 hover:text-red-800 dark:hover:text-red-200 text-sm underline",
                      },
                      " Újra próbálkozás ",
                    ),
                  ]))
                : e.value
                  ? (E(),
                    R("div", fM, [
                      l("div", pM, [
                        l("div", hM, [
                          l(
                            "img",
                            {
                              src: `/images/ranks/${e.value.rank_key}.png`,
                              alt: e.value.name,
                              class: "w-48 h-48 object-contain",
                              onError: u,
                            },
                            null,
                            40,
                            mM,
                          ),
                        ]),
                        l("div", gM, [
                          h[3] ||
                            (h[3] = l(
                              "p",
                              {
                                class:
                                  "text-sm text-surface-500 dark:text-surface-400",
                              },
                              "Jelenlegi rangod",
                              -1,
                            )),
                          l(
                            "p",
                            {
                              class: Ie([
                                "text-xl font-bold",
                                e.value.color_class,
                              ]),
                            },
                            z(e.value.name),
                            3,
                          ),
                          h[4] ||
                            (h[4] = l(
                              "p",
                              {
                                class:
                                  "text-xs text-surface-500 dark:text-surface-400",
                              },
                              "Aktív rang",
                              -1,
                            )),
                        ]),
                      ]),
                      l("div", vM, [
                        h[6] ||
                          (h[6] = l(
                            "div",
                            {
                              class:
                                "p-3 bg-blue-100 dark:bg-blue-500/20 rounded-lg mt-1",
                            },
                            [
                              l("i", {
                                class:
                                  "pi pi-calendar text-2xl text-blue-600 dark:text-blue-300",
                              }),
                            ],
                            -1,
                          )),
                        l("div", bM, [
                          h[5] ||
                            (h[5] = l(
                              "p",
                              {
                                class:
                                  "text-sm text-surface-500 dark:text-surface-400",
                              },
                              "Lejárati idő",
                              -1,
                            )),
                          l("p", yM, z(s(n.value)), 1),
                          l("p", { class: Ie(c()) }, z(a()), 3),
                        ]),
                      ]),
                    ]))
                  : (E(),
                    R(
                      "div",
                      dM,
                      h[2] ||
                        (h[2] = [
                          l(
                            "i",
                            {
                              class:
                                "pi pi-crown text-4xl text-surface-400 dark:text-surface-500 mb-4",
                            },
                            null,
                            -1,
                          ),
                          l(
                            "p",
                            {
                              class:
                                "text-surface-500 dark:text-surface-400 mb-2",
                            },
                            "Még nincs aktív rangod",
                            -1,
                          ),
                          l(
                            "p",
                            {
                              class:
                                "text-sm text-surface-400 dark:text-surface-500",
                            },
                            "Vásárolj egy rangot a bányaközpontban!",
                            -1,
                          ),
                        ]),
                    )),
            e.value
              ? (E(),
                R("div", xM, [
                  l("div", _M, [
                    l(
                      "p",
                      wM,
                      z(r.value.total_coins_spent.toLocaleString()),
                      1,
                    ),
                    h[7] ||
                      (h[7] = l(
                        "p",
                        {
                          class:
                            "text-xs text-surface-500 dark:text-surface-400",
                        },
                        "BÉ költve",
                        -1,
                      )),
                  ]),
                  l("div", kM, [
                    l("p", SM, z(r.value.days_active || 0), 1),
                    h[8] ||
                      (h[8] = l(
                        "p",
                        {
                          class:
                            "text-xs text-surface-500 dark:text-surface-400",
                        },
                        "Aktív napok",
                        -1,
                      )),
                  ]),
                  l("div", CM, [
                    l("p", MM, z(r.value.rank_changes || 0), 1),
                    h[9] ||
                      (h[9] = l(
                        "p",
                        {
                          class:
                            "text-xs text-surface-500 dark:text-surface-400",
                        },
                        "Rang váltás",
                        -1,
                      )),
                  ]),
                ]))
              : le("", !0),
          ])
        )
      );
    },
  },
  TM = ["src", "alt"],
  AM = {
    __name: "RankCard",
    props: {
      rank: { type: Object, required: !0 },
      currentUserRank: { type: String, default: null },
    },
    emits: ["click"],
    setup(t, { emit: e }) {
      const n = t,
        r = (o) =>
          ({
            star: "pi pi-star",
            zap: "pi pi-bolt",
            crown: "pi pi-crown",
            shield: "pi pi-shield",
            flame: "pi pi-sun",
            sword: "pi pi-send",
          })[o] || "pi pi-star",
        i = (o) => {
          const s = r(n.rank.icon);
          o.target.style.display = "none";
          const a = o.target.parentElement;
          a.innerHTML = `<div class="w-full aspect-square bg-surface-100 dark:bg-surface-800 flex items-center justify-center"><i class="${s} ${n.rank.color_class} text-6xl"></i></div>`;
        };
      return (o, s) => (
        E(),
        R(
          "div",
          {
            class: "cursor-pointer",
            onClick: s[0] || (s[0] = (a) => o.$emit("click", t.rank)),
          },
          [
            l(
              "img",
              {
                src: `/images/ranks/${t.rank.rank_key}.png`,
                alt: t.rank.name,
                class: "w-full h-auto",
                onError: i,
              },
              null,
              40,
              TM,
            ),
          ],
        )
      );
    },
  },
  PM = { key: 0, class: "flex flex-col gap-6" },
  RM = { class: "flex justify-between items-center" },
  LM = { class: "flex items-center gap-2" },
  DM = {
    class: "text-surface-900 dark:text-surface-0 font-semibold text-base",
  },
  IM = {
    class: "text-center py-6 bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  OM = ["src", "alt"],
  $M = { class: "flex items-center justify-center gap-2 mb-2" },
  zM = { class: "text-3xl font-bold text-surface-900 dark:text-surface-0" },
  BM = { class: "text-surface-600 dark:text-surface-300" },
  UM = { key: 0, class: "space-y-4" },
  FM = {
    class:
      "p-4 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg",
  },
  NM = { class: "text-sm text-blue-800 dark:text-blue-200" },
  VM = { class: "grid grid-cols-2 gap-4" },
  HM = {
    key: 0,
    class:
      "p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg",
  },
  jM = { class: "text-sm text-red-800 dark:text-red-200" },
  GM = {
    key: 1,
    class:
      "p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg",
  },
  WM = { class: "text-sm text-red-800 dark:text-red-200" },
  KM = { class: "space-y-4" },
  XM = { class: "grid grid-cols-1 md:grid-cols-2 gap-3" },
  YM = { class: "text-surface-700 dark:text-surface-300 font-mono text-sm" },
  qM = {
    class:
      "p-4 bg-gradient-to-r from-primary-50 to-primary-100 dark:from-primary-900/20 dark:to-primary-800/20 rounded-lg border border-primary-200 dark:border-primary-700",
  },
  ZM = { class: "grid grid-cols-1 md:grid-cols-3 gap-4 text-sm" },
  JM = { class: "flex items-center gap-2" },
  QM = { class: "text-primary-800 dark:text-primary-200" },
  eE = { class: "flex justify-end gap-2" },
  tE = {
    __name: "RankDialog",
    props: {
      rank: { type: Object, default: null },
      show: { type: Boolean, default: !1 },
      mode: { type: String, default: "details" },
      userBalance: { type: Number, default: 0 },
    },
    emits: ["close", "purchase-confirmed", "mode-change"],
    setup(t, { emit: e }) {
      const n = t,
        r = e,
        i = N(!1),
        o = N(!1),
        s = N(""),
        a = Xe(() => {
          var g;
          return (
            n.userBalance - (((g = n.rank) == null ? void 0 : g.price) || 0)
          );
        }),
        c = Xe(() => {
          var g;
          return (
            n.userBalance >= (((g = n.rank) == null ? void 0 : g.price) || 0)
          );
        }),
        u = Xe(() => {
          var g;
          if (!((g = n.rank) != null && g.features)) return [];
          try {
            return typeof n.rank.features == "string"
              ? JSON.parse(n.rank.features)
              : n.rank.features;
          } catch {
            return [];
          }
        });
      (Ft(
        () => n.show,
        (g) => {
          ((i.value = g), g && (s.value = ""));
        },
      ),
        Ft(i, (g) => {
          g || r("close");
        }));
      const d = () => {
          ((s.value = ""), r("mode-change", "purchase"));
        },
        f = () => {
          s.value = "";
        },
        p = async () => {
          if (!o.value) {
            ((o.value = !0), (s.value = ""));
            try {
              const g = await Ve.purchaseRank(n.rank.id);
              ((i.value = !1),
                r("purchase-confirmed", {
                  rank: n.rank,
                  result: g,
                  timestamp: Date.now(),
                  success: !0,
                }));
            } catch (g) {
              let m = "Hiba történt a vásárlás során.";
              (g.message &&
                (g.message.includes("Insufficient coins")
                  ? (m = "Nincs elég Bányásérméd a vásárláshoz.")
                  : g.message.includes("already have this rank")
                    ? (m = "Már rendelkezel ezzel a ranggal.")
                    : g.message.includes("not found")
                      ? (m = "A rang nem található.")
                      : (m = g.message)),
                (s.value = m),
                r("purchase-confirmed", {
                  rank: n.rank,
                  error: g.message,
                  timestamp: Date.now(),
                  success: !1,
                }));
            } finally {
              o.value = !1;
            }
          }
        },
        h = () =>
          n.rank
            ? {
                vip: "4 sor enderchest",
                elit: "5 sor enderchest",
                zsirkiraly: "6 sor enderchest",
                titan: "7 sor enderchest",
                felisten: "8 sor enderchest",
                mindenheto: "8 sor enderchest",
              }[n.rank.rank_key] || "Enderchest bővítés"
            : "",
        v = (g) =>
          ({
            star: "pi pi-star",
            zap: "pi pi-bolt",
            crown: "pi pi-crown",
            shield: "pi pi-shield",
            flame: "pi pi-sun",
            sword: "pi pi-send",
          })[g] || "pi pi-star",
        b = (g) => {
          const m = v(n.rank.icon);
          g.target.style.display = "none";
          const _ = g.target.parentElement;
          _.innerHTML = `<div class="w-auto h-auto max-w-48 max-h-48 bg-surface-100 dark:bg-surface-800 flex items-center justify-center p-8 mx-auto mb-4"><i class="${m} text-6xl ${n.rank.color_class}"></i></div>`;
        };
      return (g, m) => (
        E(),
        Be(
          H(on),
          {
            visible: i.value,
            "onUpdate:visible": m[2] || (m[2] = (_) => (i.value = _)),
            modal: !0,
            "show-header": !1,
            breakpoints: { "960px": "75vw", "640px": "90vw" },
            style: { width: "50rem" },
            class: "shadow-sm rounded-2xl",
            pt: { content: "!p-6" },
            onHide: m[3] || (m[3] = (_) => g.$emit("close")),
          },
          {
            default: Ye(() => [
              t.rank
                ? (E(),
                  R("div", PM, [
                    l("div", RM, [
                      l("div", LM, [
                        m[4] ||
                          (m[4] = l(
                            "span",
                            {
                              class:
                                "text-surface-600 dark:text-surface-400 font-medium text-base",
                            },
                            "Rangkezelés",
                            -1,
                          )),
                        m[5] ||
                          (m[5] = l(
                            "span",
                            {
                              class:
                                "text-surface-600 dark:text-surface-400 font-medium text-base",
                            },
                            "/",
                            -1,
                          )),
                        l("span", DM, z(t.rank.name), 1),
                      ]),
                      O(H(Ce), {
                        type: "button",
                        icon: "pi pi-times",
                        text: "",
                        rounded: "",
                        severity: "secondary",
                        class: "w-10 h-10 !p-2",
                        onClick: m[0] || (m[0] = (_) => (i.value = !1)),
                      }),
                    ]),
                    l("div", IM, [
                      l(
                        "img",
                        {
                          src: `/images/ranks/${t.rank.rank_key}.png`,
                          alt: t.rank.name,
                          class: "w-auto h-auto max-w-48 max-h-48 mx-auto mb-4",
                          onError: b,
                        },
                        null,
                        40,
                        OM,
                      ),
                      l(
                        "h3",
                        {
                          class: Ie([
                            "text-3xl font-bold mb-2",
                            t.rank.color_class,
                          ]),
                        },
                        z(t.rank.name),
                        3,
                      ),
                      l("div", $M, [
                        l(
                          "i",
                          {
                            class: Ie([
                              [v(t.rank.icon), t.rank.color_class],
                              "text-xl",
                            ]),
                          },
                          null,
                          2,
                        ),
                        l("span", zM, z(t.rank.price.toLocaleString()), 1),
                        m[6] ||
                          (m[6] = l(
                            "span",
                            {
                              class:
                                "text-lg text-surface-500 dark:text-surface-400",
                            },
                            "Bányászérme",
                            -1,
                          )),
                      ]),
                      l("p", BM, z(t.rank.description), 1),
                    ]),
                    t.mode === "purchase"
                      ? (E(),
                        R("div", UM, [
                          l("div", FM, [
                            m[14] ||
                              (m[14] = l(
                                "div",
                                { class: "flex items-center gap-2 mb-2" },
                                [
                                  l("i", {
                                    class:
                                      "pi pi-shopping-cart text-blue-600 dark:text-blue-400",
                                  }),
                                  l(
                                    "span",
                                    {
                                      class:
                                        "font-semibold text-blue-900 dark:text-blue-100",
                                    },
                                    "Vásárlás megerősítése",
                                  ),
                                ],
                                -1,
                              )),
                            l("div", NM, [
                              l("div", VM, [
                                l("div", null, [
                                  m[7] ||
                                    (m[7] = l(
                                      "strong",
                                      null,
                                      "Jelenlegi egyenleged:",
                                      -1,
                                    )),
                                  m[8] || (m[8] = l("br", null, null, -1)),
                                  Ke(
                                    " " +
                                      z(t.userBalance.toLocaleString()) +
                                      " BÉ ",
                                    1,
                                  ),
                                ]),
                                l("div", null, [
                                  m[9] ||
                                    (m[9] = l("strong", null, "Rang ára:", -1)),
                                  m[10] || (m[10] = l("br", null, null, -1)),
                                  Ke(
                                    " " +
                                      z(t.rank.price.toLocaleString()) +
                                      " BÉ ",
                                    1,
                                  ),
                                ]),
                                l("div", null, [
                                  m[11] ||
                                    (m[11] = l(
                                      "strong",
                                      null,
                                      "Maradó egyenleg:",
                                      -1,
                                    )),
                                  m[12] || (m[12] = l("br", null, null, -1)),
                                  l(
                                    "span",
                                    {
                                      class: Ie(
                                        a.value >= 0
                                          ? "text-green-600"
                                          : "text-red-600",
                                      ),
                                    },
                                    z(a.value.toLocaleString()) + " BÉ ",
                                    3,
                                  ),
                                ]),
                                m[13] ||
                                  (m[13] = l(
                                    "div",
                                    null,
                                    [
                                      l("strong", null, "Érvényesség:"),
                                      l("br"),
                                      Ke(" 30 nap "),
                                    ],
                                    -1,
                                  )),
                              ]),
                            ]),
                          ]),
                          a.value < 0
                            ? (E(),
                              R("div", HM, [
                                m[15] ||
                                  (m[15] = l(
                                    "div",
                                    { class: "flex items-center gap-2 mb-2" },
                                    [
                                      l("i", {
                                        class:
                                          "pi pi-exclamation-triangle text-red-600 dark:text-red-400",
                                      }),
                                      l(
                                        "span",
                                        {
                                          class:
                                            "font-semibold text-red-900 dark:text-red-100",
                                        },
                                        "Nincs elég Bányaérméd",
                                      ),
                                    ],
                                    -1,
                                  )),
                                l(
                                  "div",
                                  jM,
                                  " Még " +
                                    z(Math.abs(a.value).toLocaleString()) +
                                    " BÉ hiányzik a vásárláshoz. ",
                                  1,
                                ),
                              ]))
                            : le("", !0),
                        ]))
                      : le("", !0),
                    s.value
                      ? (E(),
                        R("div", GM, [
                          m[16] ||
                            (m[16] = l(
                              "div",
                              { class: "flex items-center gap-2 mb-2" },
                              [
                                l("i", {
                                  class:
                                    "pi pi-exclamation-triangle text-red-600 dark:text-red-400",
                                }),
                                l(
                                  "span",
                                  {
                                    class:
                                      "font-semibold text-red-900 dark:text-red-100",
                                  },
                                  "Hiba történt",
                                ),
                              ],
                              -1,
                            )),
                          l("div", WM, z(s.value), 1),
                          l(
                            "button",
                            {
                              onClick: f,
                              class:
                                "mt-2 text-red-600 dark:text-red-400 hover:text-red-800 dark:hover:text-red-200 text-sm underline",
                            },
                            " Bezárás ",
                          ),
                        ]))
                      : le("", !0),
                    l("div", KM, [
                      m[18] ||
                        (m[18] = l(
                          "h4",
                          {
                            class:
                              "font-medium text-lg m-0 text-surface-900 dark:text-surface-0 flex items-center gap-2",
                          },
                          [
                            l("i", { class: "pi pi-list" }),
                            Ke(" Rang képességek és parancsok "),
                          ],
                          -1,
                        )),
                      l("div", XM, [
                        (E(!0),
                        R(
                          We,
                          null,
                          mt(
                            u.value,
                            (_, y) => (
                              E(),
                              R(
                                "div",
                                {
                                  key: y,
                                  class:
                                    "flex items-center gap-2 p-3 bg-surface-50 dark:bg-surface-800 rounded-lg",
                                },
                                [
                                  m[17] ||
                                    (m[17] = l(
                                      "i",
                                      {
                                        class:
                                          "pi pi-check-circle text-green-500",
                                      },
                                      null,
                                      -1,
                                    )),
                                  l("span", YM, z(_), 1),
                                ],
                              )
                            ),
                          ),
                          128,
                        )),
                      ]),
                    ]),
                    l("div", qM, [
                      m[22] ||
                        (m[22] = l(
                          "h5",
                          {
                            class:
                              "font-semibold text-primary-900 dark:text-primary-100 mb-2",
                          },
                          "✨ Exkluzív előnyök",
                          -1,
                        )),
                      l("div", ZM, [
                        m[20] ||
                          (m[20] = l(
                            "div",
                            { class: "flex items-center gap-2" },
                            [
                              l("i", { class: "pi pi-star text-primary-600" }),
                              l(
                                "span",
                                {
                                  class:
                                    "text-primary-800 dark:text-primary-200",
                                },
                                "Csatlakozási prioritás",
                              ),
                            ],
                            -1,
                          )),
                        l("div", JM, [
                          m[19] ||
                            (m[19] = l(
                              "i",
                              { class: "pi pi-box text-primary-600" },
                              null,
                              -1,
                            )),
                          l("span", QM, z(h()), 1),
                        ]),
                        m[21] ||
                          (m[21] = l(
                            "div",
                            { class: "flex items-center gap-2" },
                            [
                              l("i", {
                                class: "pi pi-shield text-primary-600",
                              }),
                              l(
                                "span",
                                {
                                  class:
                                    "text-primary-800 dark:text-primary-200",
                                },
                                "Prémium kit-ek",
                              ),
                            ],
                            -1,
                          )),
                      ]),
                    ]),
                    l("div", eE, [
                      O(
                        H(Ce),
                        {
                          label: "Mégse",
                          severity: "secondary",
                          outlined: "",
                          onClick: m[1] || (m[1] = (_) => (i.value = !1)),
                          disabled: o.value,
                        },
                        null,
                        8,
                        ["disabled"],
                      ),
                      t.mode === "purchase" && a.value >= 0
                        ? (E(),
                          Be(
                            H(Ce),
                            {
                              key: 0,
                              label: "Megvásárlom!",
                              severity: "primary",
                              icon: "pi pi-shopping-cart",
                              loading: o.value,
                              onClick: p,
                            },
                            null,
                            8,
                            ["loading"],
                          ))
                        : t.mode === "details" && c.value
                          ? (E(),
                            Be(
                              H(Ce),
                              {
                                key: 1,
                                label: "Vásárlás",
                                severity: "primary",
                                icon: "pi pi-shopping-cart",
                                onClick: d,
                                disabled: o.value,
                              },
                              null,
                              8,
                              ["disabled"],
                            ))
                          : t.mode === "details" && !c.value
                            ? (E(),
                              Be(H(Ce), {
                                key: 2,
                                label: "Nincs elég BÉ",
                                severity: "secondary",
                                icon: "pi pi-exclamation-triangle",
                                disabled: "",
                              }))
                            : le("", !0),
                    ]),
                  ]))
                : le("", !0),
            ]),
            _: 1,
          },
          8,
          ["visible"],
        )
      );
    },
  },
  nE = { class: "space-y-6" },
  rE = { class: "flex justify-between items-center" },
  iE = { class: "flex items-center gap-4" },
  oE = { class: "text-right" },
  sE = { class: "text-2xl font-bold text-primary-500" },
  aE = { key: 0, class: "text-center py-8" },
  lE = {
    key: 1,
    class:
      "p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg",
  },
  cE = { class: "flex items-center gap-2 text-red-700 dark:text-red-300" },
  uE = {
    key: 2,
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  dE = { class: "flex items-center justify-between mb-6" },
  fE = { class: "flex items-center gap-2" },
  pE = { class: "grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-6" },
  hE = { key: 3, class: "fixed top-4 right-4 z-50" },
  mE = {
    class:
      "bg-green-500 text-white px-6 py-4 rounded-lg shadow-lg flex items-center gap-2 animate-fadeIn",
  },
  gE = {
    __name: "RankManagement",
    setup(t, { expose: e }) {
      const n = N(0),
        r = N(null),
        i = N([]),
        o = N(null),
        s = N(!1),
        a = N("details"),
        c = N(!1),
        u = N(""),
        d = N(!0),
        f = N(null),
        p = N(null),
        h = (S) => {
          ((o.value = S), (a.value = "details"), (s.value = !0));
        },
        v = () => {
          ((s.value = !1), (o.value = null));
        },
        b = (S) => {
          a.value = S;
        },
        g = async (S) => {
          var D, k;
          try {
            await y();
            const P =
              ((D = S.rank) == null ? void 0 : D.name) ||
              ((k = o.value) == null ? void 0 : k.name) ||
              "rang";
            ((u.value = `${P} sikeresen megvásárolva!`),
              (c.value = !0),
              setTimeout(() => {
                c.value = !1;
              }, 3e3),
              v());
          } catch {
            ((u.value = "Rang megvásárolva! Frissítsd az oldalt."),
              (c.value = !0),
              setTimeout(() => {
                c.value = !1;
              }, 5e3));
          }
        },
        m = async () => {
          await w();
        },
        _ = () => {},
        y = async () => {
          await Promise.all([w(), x()]);
        },
        x = async () => {
          p.value &&
            typeof p.value.loadUserRankInfo == "function" &&
            (await p.value.loadUserRankInfo());
        },
        C = async () => {
          ((d.value = !0), (f.value = null));
          try {
            const S = await Ve.getRanks();
            i.value = S.data || S;
          } catch {
            f.value = "Nem sikerült betölteni a rangokat";
          } finally {
            d.value = !1;
          }
        },
        w = async () => {
          var S;
          try {
            const [D, k] = await Promise.all([
              Ve.getUserProfile(),
              Ve.getUserRank().catch(() => ({ current_rank: null })),
            ]);
            ((n.value = D.coins_balance || 0),
              (r.value =
                ((S = k.current_rank) == null ? void 0 : S.rank_key) || null));
          } catch {}
        };
      return (
        $t(async () => {
          await Promise.all([C(), w()]);
        }),
        e({ refreshAllData: y, loadUserData: w }),
        (S, D) => (
          E(),
          R("div", nE, [
            l("div", rE, [
              D[1] ||
                (D[1] = l(
                  "h2",
                  {
                    class:
                      "text-2xl font-bold text-surface-900 dark:text-surface-0",
                  },
                  "Rangkezelés",
                  -1,
                )),
              l("div", iE, [
                l("div", oE, [
                  D[0] ||
                    (D[0] = l(
                      "p",
                      {
                        class: "text-sm text-surface-500 dark:text-surface-400",
                      },
                      "Bányászérme egyenleged",
                      -1,
                    )),
                  l("p", sE, z(n.value.toLocaleString()) + " BÉ", 1),
                ]),
                O(H(Ce), {
                  label: "BÉ vásárlás",
                  icon: "pi pi-shopping-bag",
                  severity: "secondary",
                  onClick: _,
                }),
              ]),
            ]),
            O(
              EM,
              { ref_key: "userRankInfoRef", ref: p, onRankUpdated: m },
              null,
              512,
            ),
            d.value
              ? (E(),
                R(
                  "div",
                  aE,
                  D[2] ||
                    (D[2] = [
                      l(
                        "div",
                        {
                          class:
                            "flex items-center justify-center gap-2 text-surface-500 dark:text-surface-400",
                        },
                        [
                          l("i", { class: "pi pi-spin pi-spinner" }),
                          l("span", null, "Rangok betöltése..."),
                        ],
                        -1,
                      ),
                    ]),
                ))
              : f.value
                ? (E(),
                  R("div", lE, [
                    l("div", cE, [
                      D[3] ||
                        (D[3] = l(
                          "i",
                          { class: "pi pi-exclamation-triangle" },
                          null,
                          -1,
                        )),
                      l("span", null, z(f.value), 1),
                    ]),
                    l(
                      "button",
                      {
                        onClick: C,
                        class:
                          "mt-2 text-red-600 dark:text-red-400 hover:text-red-800 dark:hover:text-red-200 text-sm underline",
                      },
                      " Újra próbálkozás ",
                    ),
                  ]))
                : (E(),
                  R("div", uE, [
                    l("div", dE, [
                      D[4] ||
                        (D[4] = l(
                          "h3",
                          {
                            class:
                              "text-lg font-semibold text-surface-900 dark:text-surface-0",
                          },
                          "Elérhető rangok",
                          -1,
                        )),
                      l("div", fE, [
                        O(
                          H(vt),
                          { value: `${i.value.length} rang`, severity: "info" },
                          null,
                          8,
                          ["value"],
                        ),
                      ]),
                    ]),
                    l("div", pE, [
                      (E(!0),
                      R(
                        We,
                        null,
                        mt(
                          i.value,
                          (k) => (
                            E(),
                            Be(
                              AM,
                              {
                                key: k.id,
                                rank: k,
                                "current-user-rank": r.value,
                                onClick: h,
                              },
                              null,
                              8,
                              ["rank", "current-user-rank"],
                            )
                          ),
                        ),
                        128,
                      )),
                    ]),
                  ])),
            O(
              tE,
              {
                rank: o.value,
                show: s.value,
                mode: a.value,
                "user-balance": n.value,
                onClose: v,
                onPurchaseConfirmed: g,
                onModeChange: b,
              },
              null,
              8,
              ["rank", "show", "mode", "user-balance"],
            ),
            c.value
              ? (E(),
                R("div", hE, [
                  l("div", mE, [
                    D[5] ||
                      (D[5] = l(
                        "i",
                        { class: "pi pi-check-circle" },
                        null,
                        -1,
                      )),
                    l("span", null, z(u.value), 1),
                  ]),
                ]))
              : le("", !0),
          ])
        )
      );
    },
  },
  vE = cr(gE, [["__scopeId", "data-v-5701fe0b"]]);
var iv = {
    name: "BaseEditableHolder",
    extends: lr,
    emits: ["update:modelValue", "value-change"],
    props: {
      modelValue: { type: null, default: void 0 },
      defaultValue: { type: null, default: void 0 },
      name: { type: String, default: void 0 },
      invalid: { type: Boolean, default: void 0 },
      disabled: { type: Boolean, default: !1 },
      formControl: { type: Object, default: void 0 },
    },
    inject: {
      $parentInstance: { default: void 0 },
      $pcForm: { default: void 0 },
      $pcFormField: { default: void 0 },
    },
    data: function () {
      return {
        d_value:
          this.defaultValue !== void 0 ? this.defaultValue : this.modelValue,
      };
    },
    watch: {
      modelValue: function (e) {
        this.d_value = e;
      },
      defaultValue: function (e) {
        this.d_value = e;
      },
      $formName: {
        immediate: !0,
        handler: function (e) {
          var n, r;
          this.formField =
            ((n = this.$pcForm) === null ||
            n === void 0 ||
            (r = n.register) === null ||
            r === void 0
              ? void 0
              : r.call(n, e, this.$formControl)) || {};
        },
      },
      $formControl: {
        immediate: !0,
        handler: function (e) {
          var n, r;
          this.formField =
            ((n = this.$pcForm) === null ||
            n === void 0 ||
            (r = n.register) === null ||
            r === void 0
              ? void 0
              : r.call(n, this.$formName, e)) || {};
        },
      },
      $formDefaultValue: {
        immediate: !0,
        handler: function (e) {
          this.d_value !== e && (this.d_value = e);
        },
      },
      $formValue: {
        immediate: !1,
        handler: function (e) {
          var n;
          (n = this.$pcForm) !== null &&
            n !== void 0 &&
            n.getFieldState(this.$formName) &&
            e !== this.d_value &&
            (this.d_value = e);
        },
      },
    },
    formField: {},
    methods: {
      writeValue: function (e, n) {
        var r, i;
        (this.controlled &&
          ((this.d_value = e), this.$emit("update:modelValue", e)),
          this.$emit("value-change", e),
          (r = (i = this.formField).onChange) === null ||
            r === void 0 ||
            r.call(i, { originalEvent: n, value: e }));
      },
      findNonEmpty: function () {
        for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++)
          n[r] = arguments[r];
        return n.find(ct);
      },
    },
    computed: {
      $filled: function () {
        return ct(this.d_value);
      },
      $invalid: function () {
        var e, n;
        return (
          !this.$formNovalidate &&
          this.findNonEmpty(
            this.invalid,
            (e = this.$pcFormField) === null ||
              e === void 0 ||
              (e = e.$field) === null ||
              e === void 0
              ? void 0
              : e.invalid,
            (n = this.$pcForm) === null ||
              n === void 0 ||
              (n = n.getFieldState(this.$formName)) === null ||
              n === void 0
              ? void 0
              : n.invalid,
          )
        );
      },
      $formName: function () {
        var e;
        return this.$formNovalidate
          ? void 0
          : this.name ||
              ((e = this.$formControl) === null || e === void 0
                ? void 0
                : e.name);
      },
      $formControl: function () {
        var e;
        return (
          this.formControl ||
          ((e = this.$pcFormField) === null || e === void 0
            ? void 0
            : e.formControl)
        );
      },
      $formNovalidate: function () {
        var e;
        return (e = this.$formControl) === null || e === void 0
          ? void 0
          : e.novalidate;
      },
      $formDefaultValue: function () {
        var e, n;
        return this.findNonEmpty(
          this.d_value,
          (e = this.$pcFormField) === null || e === void 0
            ? void 0
            : e.initialValue,
          (n = this.$pcForm) === null ||
            n === void 0 ||
            (n = n.initialValues) === null ||
            n === void 0
            ? void 0
            : n[this.$formName],
        );
      },
      $formValue: function () {
        var e, n;
        return this.findNonEmpty(
          (e = this.$pcFormField) === null ||
            e === void 0 ||
            (e = e.$field) === null ||
            e === void 0
            ? void 0
            : e.value,
          (n = this.$pcForm) === null ||
            n === void 0 ||
            (n = n.getFieldState(this.$formName)) === null ||
            n === void 0
            ? void 0
            : n.value,
        );
      },
      controlled: function () {
        return (
          this.$inProps.hasOwnProperty("modelValue") ||
          (!this.$inProps.hasOwnProperty("modelValue") &&
            !this.$inProps.hasOwnProperty("defaultValue"))
        );
      },
      filled: function () {
        return this.$filled;
      },
    },
  },
  po = {
    name: "BaseInput",
    extends: iv,
    props: {
      size: { type: String, default: null },
      fluid: { type: Boolean, default: null },
      variant: { type: String, default: null },
    },
    inject: {
      $parentInstance: { default: void 0 },
      $pcFluid: { default: void 0 },
    },
    computed: {
      $variant: function () {
        var e;
        return (e = this.variant) !== null && e !== void 0
          ? e
          : this.$primevue.config.inputStyle ||
              this.$primevue.config.inputVariant;
      },
      $fluid: function () {
        var e;
        return (e = this.fluid) !== null && e !== void 0 ? e : !!this.$pcFluid;
      },
      hasFluid: function () {
        return this.$fluid;
      },
    },
  },
  bE = `
    .p-inputtext {
        font-family: inherit;
        font-feature-settings: inherit;
        font-size: 1rem;
        color: dt('inputtext.color');
        background: dt('inputtext.background');
        padding-block: dt('inputtext.padding.y');
        padding-inline: dt('inputtext.padding.x');
        border: 1px solid dt('inputtext.border.color');
        transition:
            background dt('inputtext.transition.duration'),
            color dt('inputtext.transition.duration'),
            border-color dt('inputtext.transition.duration'),
            outline-color dt('inputtext.transition.duration'),
            box-shadow dt('inputtext.transition.duration');
        appearance: none;
        border-radius: dt('inputtext.border.radius');
        outline-color: transparent;
        box-shadow: dt('inputtext.shadow');
    }

    .p-inputtext:enabled:hover {
        border-color: dt('inputtext.hover.border.color');
    }

    .p-inputtext:enabled:focus {
        border-color: dt('inputtext.focus.border.color');
        box-shadow: dt('inputtext.focus.ring.shadow');
        outline: dt('inputtext.focus.ring.width') dt('inputtext.focus.ring.style') dt('inputtext.focus.ring.color');
        outline-offset: dt('inputtext.focus.ring.offset');
    }

    .p-inputtext.p-invalid {
        border-color: dt('inputtext.invalid.border.color');
    }

    .p-inputtext.p-variant-filled {
        background: dt('inputtext.filled.background');
    }

    .p-inputtext.p-variant-filled:enabled:hover {
        background: dt('inputtext.filled.hover.background');
    }

    .p-inputtext.p-variant-filled:enabled:focus {
        background: dt('inputtext.filled.focus.background');
    }

    .p-inputtext:disabled {
        opacity: 1;
        background: dt('inputtext.disabled.background');
        color: dt('inputtext.disabled.color');
    }

    .p-inputtext::placeholder {
        color: dt('inputtext.placeholder.color');
    }

    .p-inputtext.p-invalid::placeholder {
        color: dt('inputtext.invalid.placeholder.color');
    }

    .p-inputtext-sm {
        font-size: dt('inputtext.sm.font.size');
        padding-block: dt('inputtext.sm.padding.y');
        padding-inline: dt('inputtext.sm.padding.x');
    }

    .p-inputtext-lg {
        font-size: dt('inputtext.lg.font.size');
        padding-block: dt('inputtext.lg.padding.y');
        padding-inline: dt('inputtext.lg.padding.x');
    }

    .p-inputtext-fluid {
        width: 100%;
    }
`,
  yE = {
    root: function (e) {
      var n = e.instance,
        r = e.props;
      return [
        "p-inputtext p-component",
        {
          "p-filled": n.$filled,
          "p-inputtext-sm p-inputfield-sm": r.size === "small",
          "p-inputtext-lg p-inputfield-lg": r.size === "large",
          "p-invalid": n.$invalid,
          "p-variant-filled": n.$variant === "filled",
          "p-inputtext-fluid": n.$fluid,
        },
      ];
    },
  },
  xE = ot.extend({ name: "inputtext", style: bE, classes: yE }),
  _E = {
    name: "BaseInputText",
    extends: po,
    style: xE,
    provide: function () {
      return { $pcInputText: this, $parentInstance: this };
    },
  };
function xa(t) {
  "@babel/helpers - typeof";
  return (
    (xa =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    xa(t)
  );
}
function wE(t, e, n) {
  return (
    (e = kE(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function kE(t) {
  var e = SE(t, "string");
  return xa(e) == "symbol" ? e : e + "";
}
function SE(t, e) {
  if (xa(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (xa(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var yt = {
    name: "InputText",
    extends: _E,
    inheritAttrs: !1,
    methods: {
      onInput: function (e) {
        this.writeValue(e.target.value, e);
      },
    },
    computed: {
      attrs: function () {
        return Q(
          this.ptmi("root", {
            context: { filled: this.$filled, disabled: this.disabled },
          }),
          this.formField,
        );
      },
      dataP: function () {
        return At(
          wE(
            {
              invalid: this.$invalid,
              fluid: this.$fluid,
              filled: this.$variant === "filled",
            },
            this.size,
            this.size,
          ),
        );
      },
    },
  },
  CE = ["value", "name", "disabled", "aria-invalid", "data-p"];
function ME(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "input",
      Q(
        {
          type: "text",
          class: t.cx("root"),
          value: t.d_value,
          name: t.name,
          disabled: t.disabled,
          "aria-invalid": t.$invalid || void 0,
          "data-p": o.dataP,
          onInput:
            e[0] ||
            (e[0] = function () {
              return o.onInput && o.onInput.apply(o, arguments);
            }),
        },
        o.attrs,
      ),
      null,
      16,
      CE,
    )
  );
}
yt.render = ME;
var EE = `
    .p-textarea {
        font-family: inherit;
        font-feature-settings: inherit;
        font-size: 1rem;
        color: dt('textarea.color');
        background: dt('textarea.background');
        padding-block: dt('textarea.padding.y');
        padding-inline: dt('textarea.padding.x');
        border: 1px solid dt('textarea.border.color');
        transition:
            background dt('textarea.transition.duration'),
            color dt('textarea.transition.duration'),
            border-color dt('textarea.transition.duration'),
            outline-color dt('textarea.transition.duration'),
            box-shadow dt('textarea.transition.duration');
        appearance: none;
        border-radius: dt('textarea.border.radius');
        outline-color: transparent;
        box-shadow: dt('textarea.shadow');
    }

    .p-textarea:enabled:hover {
        border-color: dt('textarea.hover.border.color');
    }

    .p-textarea:enabled:focus {
        border-color: dt('textarea.focus.border.color');
        box-shadow: dt('textarea.focus.ring.shadow');
        outline: dt('textarea.focus.ring.width') dt('textarea.focus.ring.style') dt('textarea.focus.ring.color');
        outline-offset: dt('textarea.focus.ring.offset');
    }

    .p-textarea.p-invalid {
        border-color: dt('textarea.invalid.border.color');
    }

    .p-textarea.p-variant-filled {
        background: dt('textarea.filled.background');
    }

    .p-textarea.p-variant-filled:enabled:hover {
        background: dt('textarea.filled.hover.background');
    }

    .p-textarea.p-variant-filled:enabled:focus {
        background: dt('textarea.filled.focus.background');
    }

    .p-textarea:disabled {
        opacity: 1;
        background: dt('textarea.disabled.background');
        color: dt('textarea.disabled.color');
    }

    .p-textarea::placeholder {
        color: dt('textarea.placeholder.color');
    }

    .p-textarea.p-invalid::placeholder {
        color: dt('textarea.invalid.placeholder.color');
    }

    .p-textarea-fluid {
        width: 100%;
    }

    .p-textarea-resizable {
        overflow: hidden;
        resize: none;
    }

    .p-textarea-sm {
        font-size: dt('textarea.sm.font.size');
        padding-block: dt('textarea.sm.padding.y');
        padding-inline: dt('textarea.sm.padding.x');
    }

    .p-textarea-lg {
        font-size: dt('textarea.lg.font.size');
        padding-block: dt('textarea.lg.padding.y');
        padding-inline: dt('textarea.lg.padding.x');
    }
`,
  TE = {
    root: function (e) {
      var n = e.instance,
        r = e.props;
      return [
        "p-textarea p-component",
        {
          "p-filled": n.$filled,
          "p-textarea-resizable ": r.autoResize,
          "p-textarea-sm p-inputfield-sm": r.size === "small",
          "p-textarea-lg p-inputfield-lg": r.size === "large",
          "p-invalid": n.$invalid,
          "p-variant-filled": n.$variant === "filled",
          "p-textarea-fluid": n.$fluid,
        },
      ];
    },
  },
  AE = ot.extend({ name: "textarea", style: EE, classes: TE }),
  PE = {
    name: "BaseTextarea",
    extends: po,
    props: { autoResize: Boolean },
    style: AE,
    provide: function () {
      return { $pcTextarea: this, $parentInstance: this };
    },
  };
function _a(t) {
  "@babel/helpers - typeof";
  return (
    (_a =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    _a(t)
  );
}
function RE(t, e, n) {
  return (
    (e = LE(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function LE(t) {
  var e = DE(t, "string");
  return _a(e) == "symbol" ? e : e + "";
}
function DE(t, e) {
  if (_a(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (_a(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var Lr = {
    name: "Textarea",
    extends: PE,
    inheritAttrs: !1,
    observer: null,
    mounted: function () {
      var e = this;
      this.autoResize &&
        ((this.observer = new ResizeObserver(function () {
          requestAnimationFrame(function () {
            e.resize();
          });
        })),
        this.observer.observe(this.$el));
    },
    updated: function () {
      this.autoResize && this.resize();
    },
    beforeUnmount: function () {
      this.observer && this.observer.disconnect();
    },
    methods: {
      resize: function () {
        this.$el.offsetParent &&
          ((this.$el.style.height = "auto"),
          (this.$el.style.height = this.$el.scrollHeight + "px"),
          parseFloat(this.$el.style.height) >=
          parseFloat(this.$el.style.maxHeight)
            ? ((this.$el.style.overflowY = "scroll"),
              (this.$el.style.height = this.$el.style.maxHeight))
            : (this.$el.style.overflow = "hidden"));
      },
      onInput: function (e) {
        (this.autoResize && this.resize(), this.writeValue(e.target.value, e));
      },
    },
    computed: {
      attrs: function () {
        return Q(
          this.ptmi("root", {
            context: { filled: this.$filled, disabled: this.disabled },
          }),
          this.formField,
        );
      },
      dataP: function () {
        return At(
          RE(
            {
              invalid: this.$invalid,
              fluid: this.$fluid,
              filled: this.$variant === "filled",
            },
            this.size,
            this.size,
          ),
        );
      },
    },
  },
  IE = ["value", "name", "disabled", "aria-invalid", "data-p"];
function OE(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "textarea",
      Q(
        {
          class: t.cx("root"),
          value: t.d_value,
          name: t.name,
          disabled: t.disabled,
          "aria-invalid": t.invalid || void 0,
          "data-p": o.dataP,
          onInput:
            e[0] ||
            (e[0] = function () {
              return o.onInput && o.onInput.apply(o, arguments);
            }),
        },
        o.attrs,
      ),
      null,
      16,
      IE,
    )
  );
}
Lr.render = OE;
const $E = { class: "space-y-6" },
  zE = { class: "flex justify-between items-center" },
  BE = { class: "flex items-center gap-4" },
  UE = { class: "text-right" },
  FE = { class: "text-2xl font-bold text-primary-500" },
  NE = { key: 0, class: "text-center py-8" },
  VE = {
    key: 1,
    class:
      "p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg",
  },
  HE = { class: "flex items-center gap-2 text-red-700 dark:text-red-300" },
  jE = {
    key: 2,
    class: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6",
  },
  GE = { class: "flex flex-col items-center text-center space-y-4" },
  WE = { class: "space-y-2" },
  KE = { class: "text-xl font-semibold text-surface-900 dark:text-surface-0" },
  XE = { class: "text-surface-600 dark:text-surface-300 text-sm" },
  YE = { class: "space-y-3 w-full" },
  qE = { class: "flex items-center justify-center gap-2" },
  ZE = { class: "text-2xl font-bold text-surface-900 dark:text-surface-0" },
  JE = { class: "space-y-2 text-xs text-surface-500 dark:text-surface-400" },
  QE = { key: 0 },
  eT = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  tT = { key: 0, class: "text-center py-4" },
  nT = { key: 1, class: "text-center py-8" },
  rT = { key: 2, class: "space-y-3" },
  iT = { class: "flex items-center gap-3" },
  oT = { class: "font-semibold text-surface-900 dark:text-surface-0" },
  sT = { class: "text-sm text-surface-500 dark:text-surface-400" },
  aT = { class: "flex items-center gap-2" },
  lT = { key: 3, class: "fixed top-4 right-4 z-50" },
  cT = {
    class:
      "bg-green-500 text-white px-6 py-4 rounded-lg shadow-lg flex items-center gap-2 animate-fadeIn",
  },
  uT = { key: 0, class: "flex flex-col gap-4" },
  dT = { class: "flex justify-between items-center" },
  fT = { class: "text-lg font-semibold text-surface-900 dark:text-surface-0" },
  pT = { class: "space-y-4" },
  hT = { key: 0 },
  mT = { key: 1 },
  gT = { class: "flex justify-end gap-2" },
  vT = {
    __name: "Extras",
    setup(t) {
      const e = N(0),
        n = N([]),
        r = N([]),
        i = N(!0),
        o = N(!0),
        s = N(null),
        a = N(new Set()),
        c = N(!1),
        u = N(""),
        d = N(!1),
        f = N(null),
        p = N(null),
        h = N(!1),
        v = N({ prefixText: "", welcomeText: "" }),
        b = async () => {
          ((i.value = !0), (s.value = null));
          try {
            const k = await Ve.getExtras();
            n.value = k.data || k;
          } catch {
            s.value = "Nem sikerült betölteni az extrákat";
          } finally {
            i.value = !1;
          }
        },
        g = async () => {
          o.value = !0;
          try {
            const k = await Ve.getUserExtras();
            r.value = k.data || k;
          } catch {
            r.value = [];
          } finally {
            o.value = !1;
          }
        },
        m = async () => {
          try {
            const k = await Ve.getUserProfile();
            e.value = k.coins_balance || 0;
          } catch {}
        },
        _ = (k) => a.value.has(k),
        y = (k) =>
          r.value.some(
            (P) =>
              (P.extra_id === k || P.id === k) &&
              (P.is_active || P.user_active),
          ),
        x = async (k) => {
          a.value.add(k.id);
          try {
            (await Ve.purchaseExtra(k.id),
              await Promise.all([m(), g()]),
              (u.value = `${k.name} sikeresen megvásárolva!`),
              (c.value = !0),
              setTimeout(() => {
                c.value = !1;
              }, 3e3));
          } catch (P) {
            let I = "Vásárlás sikertelen";
            (P.message &&
              (P.message.includes("Insufficient coins")
                ? (I = "Nincs elég Bányaérméd")
                : P.message.includes("already own")
                  ? (I = "Már rendelkezel ezzel az extraval")
                  : (I = P.message)),
              (u.value = I),
              (c.value = !0),
              setTimeout(() => {
                c.value = !1;
              }, 4e3));
          } finally {
            a.value.delete(k.id);
          }
        },
        C = (k, P = null) => {
          if (((f.value = k), (p.value = P), P != null && P.configuration)) {
            const I =
              typeof P.configuration == "string"
                ? JSON.parse(P.configuration)
                : P.configuration;
            (k.extra_key === "prefix" &&
              (v.value.prefixText = I.prefixText || ""),
              k.extra_key === "welcome" &&
                (v.value.welcomeText = I.welcomeText || ""));
          } else v.value = { prefixText: "", welcomeText: "" };
          d.value = !0;
        },
        w = async () => {
          h.value = !0;
          try {
            const k = {};
            (f.value.extra_key === "prefix" &&
              (k.prefixText = v.value.prefixText),
              f.value.extra_key === "welcome" &&
                (k.welcomeText = v.value.welcomeText),
              await Ve.configureExtra(f.value.id, k),
              await g(),
              (d.value = !1),
              (u.value = "Beállítások sikeresen mentve!"),
              (c.value = !0),
              setTimeout(() => {
                c.value = !1;
              }, 3e3));
          } catch {
            ((u.value = "Beállítások mentése sikertelen"),
              (c.value = !0),
              setTimeout(() => {
                c.value = !1;
              }, 4e3));
          } finally {
            h.value = !1;
          }
        },
        S = (k) => {
          if (!k) return "Ismeretlen";
          try {
            return new Intl.DateTimeFormat("hu-HU", {
              year: "numeric",
              month: "long",
              day: "numeric",
            }).format(new Date(k));
          } catch {
            return "Hibás dátum";
          }
        },
        D = (k) =>
          ({
            "text-purple-600":
              "bg-purple-100 dark:bg-purple-500/20 text-purple-600 dark:text-purple-300",
            "text-blue-600":
              "bg-blue-100 dark:bg-blue-500/20 text-blue-600 dark:text-blue-300",
            "text-green-600":
              "bg-green-100 dark:bg-green-500/20 text-green-600 dark:text-green-300",
          })[k] ||
          "bg-surface-100 dark:bg-surface-800 text-surface-600 dark:text-surface-300";
      return (
        $t(async () => {
          await Promise.all([b(), g(), m()]);
        }),
        (k, P) => (
          E(),
          R("div", $E, [
            l("div", zE, [
              P[6] ||
                (P[6] = l(
                  "h2",
                  {
                    class:
                      "text-2xl font-bold text-surface-900 dark:text-surface-0",
                  },
                  "Extrák",
                  -1,
                )),
              l("div", BE, [
                l("div", UE, [
                  P[5] ||
                    (P[5] = l(
                      "p",
                      {
                        class: "text-sm text-surface-500 dark:text-surface-400",
                      },
                      "Bányászérme egyenleged",
                      -1,
                    )),
                  l("p", FE, z(e.value.toLocaleString()) + " BÉ", 1),
                ]),
              ]),
            ]),
            i.value
              ? (E(),
                R(
                  "div",
                  NE,
                  P[7] ||
                    (P[7] = [
                      l(
                        "div",
                        {
                          class:
                            "flex items-center justify-center gap-2 text-surface-500 dark:text-surface-400",
                        },
                        [
                          l("i", { class: "pi pi-spin pi-spinner" }),
                          l("span", null, "Extrák betöltése..."),
                        ],
                        -1,
                      ),
                    ]),
                ))
              : s.value
                ? (E(),
                  R("div", VE, [
                    l("div", HE, [
                      P[8] ||
                        (P[8] = l(
                          "i",
                          { class: "pi pi-exclamation-triangle" },
                          null,
                          -1,
                        )),
                      l("span", null, z(s.value), 1),
                    ]),
                    l(
                      "button",
                      {
                        onClick: b,
                        class:
                          "mt-2 text-red-600 dark:text-red-400 hover:text-red-800 dark:hover:text-red-200 text-sm underline",
                      },
                      " Újra próbálkozás ",
                    ),
                  ]))
                : (E(),
                  R("div", jE, [
                    (E(!0),
                    R(
                      We,
                      null,
                      mt(
                        n.value,
                        (I) => (
                          E(),
                          R(
                            "div",
                            {
                              key: I.id,
                              class:
                                "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700 hover:shadow-lg transition-shadow",
                            },
                            [
                              l("div", GE, [
                                l(
                                  "div",
                                  {
                                    class: Ie([
                                      "p-4 rounded-full",
                                      D(I.color_class),
                                    ]),
                                  },
                                  [
                                    l(
                                      "i",
                                      { class: Ie([I.icon, "text-3xl"]) },
                                      null,
                                      2,
                                    ),
                                  ],
                                  2,
                                ),
                                l("div", WE, [
                                  l("h3", KE, z(I.name), 1),
                                  l("p", XE, z(I.description), 1),
                                ]),
                                l("div", YE, [
                                  l("div", qE, [
                                    P[9] ||
                                      (P[9] = l(
                                        "i",
                                        { class: "pi pi-star text-yellow-500" },
                                        null,
                                        -1,
                                      )),
                                    l(
                                      "span",
                                      ZE,
                                      z(I.price.toLocaleString()),
                                      1,
                                    ),
                                    P[10] ||
                                      (P[10] = l(
                                        "span",
                                        {
                                          class:
                                            "text-sm text-surface-500 dark:text-surface-400",
                                        },
                                        "BÉ",
                                        -1,
                                      )),
                                  ]),
                                  l("div", JE, [
                                    (E(!0),
                                    R(
                                      We,
                                      null,
                                      mt(
                                        I.features,
                                        (W) => (
                                          E(),
                                          R(
                                            "div",
                                            {
                                              key: W,
                                              class:
                                                "flex items-center justify-center gap-1",
                                            },
                                            [
                                              P[11] ||
                                                (P[11] = l(
                                                  "i",
                                                  {
                                                    class:
                                                      "pi pi-check text-green-500",
                                                  },
                                                  null,
                                                  -1,
                                                )),
                                              l("span", null, z(W), 1),
                                            ],
                                          )
                                        ),
                                      ),
                                      128,
                                    )),
                                  ]),
                                  y(I.id)
                                    ? (E(),
                                      R("div", QE, [
                                        O(H(Ce), {
                                          label: "Már megvan",
                                          disabled: "",
                                          class: "w-full mb-2",
                                        }),
                                        O(
                                          H(Ce),
                                          {
                                            label: "Beállítások",
                                            outlined: "",
                                            class: "w-full",
                                            onClick: (W) => C(I),
                                          },
                                          null,
                                          8,
                                          ["onClick"],
                                        ),
                                      ]))
                                    : (E(),
                                      Be(
                                        H(Ce),
                                        {
                                          key: 1,
                                          label:
                                            e.value >= I.price
                                              ? "Megvásárlom"
                                              : "Nincs elég BÉ",
                                          disabled:
                                            e.value < I.price || _(I.id),
                                          loading: _(I.id),
                                          class: "w-full",
                                          onClick: (W) => x(I),
                                        },
                                        null,
                                        8,
                                        [
                                          "label",
                                          "disabled",
                                          "loading",
                                          "onClick",
                                        ],
                                      )),
                                ]),
                              ]),
                            ],
                          )
                        ),
                      ),
                      128,
                    )),
                  ])),
            l("div", eT, [
              P[14] ||
                (P[14] = l(
                  "h3",
                  {
                    class:
                      "text-lg font-semibold text-surface-900 dark:text-surface-0 mb-4 flex items-center gap-2",
                  },
                  [
                    l("i", { class: "pi pi-shopping-cart text-primary-500" }),
                    Ke(" Megvásárolt extrák "),
                  ],
                  -1,
                )),
              o.value
                ? (E(),
                  R(
                    "div",
                    tT,
                    P[12] ||
                      (P[12] = [
                        l(
                          "i",
                          { class: "pi pi-spin pi-spinner text-surface-400" },
                          null,
                          -1,
                        ),
                      ]),
                  ))
                : r.value.length === 0
                  ? (E(),
                    R(
                      "div",
                      nT,
                      P[13] ||
                        (P[13] = [
                          l(
                            "i",
                            {
                              class:
                                "pi pi-shopping-bag text-4xl text-surface-400 dark:text-surface-500 mb-4",
                            },
                            null,
                            -1,
                          ),
                          l(
                            "p",
                            { class: "text-surface-500 dark:text-surface-400" },
                            "Még nem vásároltál extrát",
                            -1,
                          ),
                        ]),
                    ))
                  : (E(),
                    R("div", rT, [
                      (E(!0),
                      R(
                        We,
                        null,
                        mt(
                          r.value,
                          (I) => (
                            E(),
                            R(
                              "div",
                              {
                                key: I.id,
                                class:
                                  "flex items-center justify-between p-4 bg-surface-50 dark:bg-surface-800 rounded-lg",
                              },
                              [
                                l("div", iT, [
                                  l(
                                    "i",
                                    {
                                      class: Ie([
                                        [
                                          I.icon || "pi pi-star",
                                          I.color_class || "text-primary-500",
                                        ],
                                        "text-xl",
                                      ]),
                                    },
                                    null,
                                    2,
                                  ),
                                  l("div", null, [
                                    l("h4", oT, z(I.name || "Extra"), 1),
                                    l(
                                      "p",
                                      sT,
                                      " Vásárolva: " + z(S(I.purchased_at)),
                                      1,
                                    ),
                                  ]),
                                ]),
                                l("div", aT, [
                                  O(
                                    H(vt),
                                    {
                                      value:
                                        I.is_active || I.user_active
                                          ? "Aktív"
                                          : "Inaktív",
                                      severity:
                                        I.is_active || I.user_active
                                          ? "success"
                                          : "secondary",
                                    },
                                    null,
                                    8,
                                    ["value", "severity"],
                                  ),
                                  O(
                                    H(Ce),
                                    {
                                      icon: "pi pi-cog",
                                      text: "",
                                      rounded: "",
                                      severity: "secondary",
                                      class: "w-8 h-8",
                                      onClick: (W) => C(I, I),
                                    },
                                    null,
                                    8,
                                    ["onClick"],
                                  ),
                                ]),
                              ],
                            )
                          ),
                        ),
                        128,
                      )),
                    ])),
            ]),
            c.value
              ? (E(),
                R("div", lT, [
                  l("div", cT, [
                    P[15] ||
                      (P[15] = l(
                        "i",
                        { class: "pi pi-check-circle" },
                        null,
                        -1,
                      )),
                    l("span", null, z(u.value), 1),
                  ]),
                ]))
              : le("", !0),
            O(
              H(on),
              {
                visible: d.value,
                "onUpdate:visible": P[4] || (P[4] = (I) => (d.value = I)),
                modal: !0,
                "show-header": !1,
                breakpoints: { "960px": "75vw", "640px": "90vw" },
                style: { width: "30rem" },
                class: "shadow-sm rounded-2xl",
                pt: { content: "!p-6" },
              },
              {
                default: Ye(() => [
                  f.value
                    ? (E(),
                      R("div", uT, [
                        l("div", dT, [
                          l("h3", fT, z(f.value.name) + " beállítása ", 1),
                          O(H(Ce), {
                            icon: "pi pi-times",
                            text: "",
                            rounded: "",
                            severity: "secondary",
                            class: "w-8 h-8",
                            onClick: P[0] || (P[0] = (I) => (d.value = !1)),
                          }),
                        ]),
                        l("div", pT, [
                          f.value.extra_key === "prefix"
                            ? (E(),
                              R("div", hT, [
                                P[16] ||
                                  (P[16] = l(
                                    "label",
                                    {
                                      class:
                                        "text-surface-900 dark:text-surface-0 font-medium block mb-2",
                                    },
                                    " Névelőtag szövege ",
                                    -1,
                                  )),
                                O(
                                  H(yt),
                                  {
                                    modelValue: v.value.prefixText,
                                    "onUpdate:modelValue":
                                      P[1] ||
                                      (P[1] = (I) => (v.value.prefixText = I)),
                                    placeholder: "Például: Mester",
                                    class: "w-full",
                                    maxlength: "15",
                                  },
                                  null,
                                  8,
                                  ["modelValue"],
                                ),
                                P[17] ||
                                  (P[17] = l(
                                    "small",
                                    {
                                      class:
                                        "text-surface-500 dark:text-surface-400",
                                    },
                                    " Maximum 15 karakter. Színkódok: &1-&9, &a-&f ",
                                    -1,
                                  )),
                              ]))
                            : le("", !0),
                          f.value.extra_key === "welcome"
                            ? (E(),
                              R("div", mT, [
                                P[18] ||
                                  (P[18] = l(
                                    "label",
                                    {
                                      class:
                                        "text-surface-900 dark:text-surface-0 font-medium block mb-2",
                                    },
                                    " Üdvözlő üzenet ",
                                    -1,
                                  )),
                                O(
                                  H(Lr),
                                  {
                                    modelValue: v.value.welcomeText,
                                    "onUpdate:modelValue":
                                      P[2] ||
                                      (P[2] = (I) => (v.value.welcomeText = I)),
                                    placeholder: "Például: Üdv a szerveren!",
                                    class: "w-full",
                                    rows: "3",
                                    maxlength: "50",
                                  },
                                  null,
                                  8,
                                  ["modelValue"],
                                ),
                                P[19] ||
                                  (P[19] = l(
                                    "small",
                                    {
                                      class:
                                        "text-surface-500 dark:text-surface-400",
                                    },
                                    " Maximum 50 karakter. Színkódok: &1-&9, &a-&f ",
                                    -1,
                                  )),
                              ]))
                            : le("", !0),
                        ]),
                        l("div", gT, [
                          O(H(Ce), {
                            label: "Mégse",
                            outlined: "",
                            onClick: P[3] || (P[3] = (I) => (d.value = !1)),
                          }),
                          O(
                            H(Ce),
                            { label: "Mentés", onClick: w, loading: h.value },
                            null,
                            8,
                            ["loading"],
                          ),
                        ]),
                      ]))
                    : le("", !0),
                ]),
                _: 1,
              },
              8,
              ["visible"],
            ),
          ])
        )
      );
    },
  },
  bT = cr(vT, [["__scopeId", "data-v-21e5f1d8"]]),
  yT = "/arrow.png",
  xT = {
    props: { disabled: { type: Boolean, default: !1 } },
    emits: ["spin", "spin-complete", "click-to-spin"],
    data() {
      return {
        rewards: [
          { name: "30 Bé", start: 0, end: 14, reward: 30 },
          { name: "Röff", start: 15, end: 30, reward: !1 },
          { name: "Eltalált a hógólem", start: 31, end: 45, reward: !1 },
          { name: "Zombi nyert", start: 46, end: 60, reward: !1 },
          { name: "5 Bé", start: 61, end: 75, reward: 5 },
          { name: "Átvert egy falusi", start: 76, end: 105, reward: !1 },
          { name: "Eltalált a skeleton", start: 106, end: 120, reward: !1 },
          { name: "Chicken jockey!", start: 121, end: 150, reward: !1 },
          { name: "50 Bé", start: 151, end: 165, reward: 50 },
          { name: "Elégtél a lávában!", start: 166, end: 195, reward: !1 },
          { name: "Meghallott a warden", start: 196, end: 210, reward: !1 },
          { name: "Felrobbantál", start: 211, end: 225, reward: !1 },
          { name: "Nem nyert", start: 226, end: 240, reward: !1 },
          { name: "10 Bé", start: 241, end: 255, reward: 10 },
          { name: "Leköpött egy láma", start: 256, end: 285, reward: !1 },
          { name: "100 Bé", start: 286, end: 300, reward: 100 },
          { name: "Megölt az Ender dragon!", start: 301, end: 330, reward: !1 },
          { name: "Raid", start: 331, end: 345, reward: !1 },
        ],
        currentRotation: 0,
        transitionTime: 4,
        spinning: !1,
        pendingBackendResult: null,
        debugMode: !1,
        angleCalculationMode: "direct",
      };
    },
    methods: {
      spinToAngle(t, e) {
        if (this.spinning) return;
        ((this.spinning = !0),
          (this.pendingBackendResult = e),
          this.$emit("spin"),
          (this.currentRotation = 0));
        const r = this.randomIntFromInterval(8, 15) * 360;
        let i;
        this.angleCalculationMode === "direct" ? (i = t) : (i = 360 - t);
        const o = r + i;
        if (this.debugMode) {
          const s = this.findRewardAtAngle(t);
          (s == null || s.name, e.name);
        }
        ((this.currentRotation = o),
          (this.transitionTime = this.randomIntFromInterval(3, 6)),
          setTimeout(() => {
            const s = this.pendingBackendResult;
            (this.$emit("spin-complete", s), this.resetRotation());
          }, this.transitionTime * 1e3));
      },
      findRewardAtAngle(t) {
        for (let e = 0; e < this.rewards.length; e++)
          if (this.rewards[e].start <= t && this.rewards[e].end >= t)
            return this.rewards[e];
        return (t >= 346 && t <= 360) || (t >= 0 && t <= 14)
          ? this.rewards[0]
          : null;
      },
      testAngle(t) {
        if (!this.debugMode) return;
        let e = null;
        for (let n = 0; n < this.rewards.length; n++)
          if (this.rewards[n].start <= t && this.rewards[n].end >= t) {
            e = this.rewards[n];
            break;
          }
        return (
          e ||
            (((t >= 346 && t <= 360) || (t >= 1 && t <= 14)) &&
              (e = this.rewards[0])),
          e
        );
      },
      spin() {
        if (!(this.spinning || this.disabled)) {
          ((this.spinning = !0),
            this.$emit("spin"),
            (this.currentRotation = 0),
            (this.currentRotation = this.randomIntFromInterval(
              360 * 10,
              360 * 50,
            )),
            (this.transitionTime = this.randomIntFromInterval(10, 25)));
          var t = this.currentRotation % 360,
            e = null;
          for (let n = 0; n < this.rewards.length; n++)
            if (this.rewards[n].start <= t && this.rewards[n].end >= t) {
              e = this.rewards[n];
              break;
            }
          (e == null &&
            ((t >= 346 && t <= 360) || (t >= 1 && t <= 14)) &&
            (e = this.rewards[0]),
            setTimeout(() => {
              (this.resetRotation(), this.$emit("spin-complete", e));
            }, this.transitionTime * 1e3));
        }
      },
      handleClick() {
        this.spinning ||
          this.disabled ||
          (this.currentRotation == 0
            ? this.$emit("click-to-spin")
            : ((this.transitionTime = 0), (this.currentRotation = 0)));
      },
      resetRotation() {
        ((this.spinning = !1), (this.pendingBackendResult = null));
      },
      randomIntFromInterval(t, e) {
        return Math.floor(Math.random() * (e - t + 1) + t);
      },
    },
    mounted() {
      ((this.debugMode = !1),
        this.debugMode &&
          ((window.testWheelAngle = this.testAngle.bind(this)),
          (window.switchAngleMode = (t) => {
            this.angleCalculationMode = t;
          }),
          this.findRewardAtAngle(287.15),
          this.findRewardAtAngle(72.85)));
    },
  },
  _T = { class: "luckywheel_container" },
  wT = { key: 0, class: "debug-info" },
  kT = ["title"];
function ST(t, e, n, r, i, o) {
  var s;
  return (
    E(),
    R("div", _T, [
      i.debugMode && i.spinning
        ? (E(),
          R("div", wT, [
            l(
              "p",
              null,
              "🎯 Target: " +
                z((s = i.pendingBackendResult) == null ? void 0 : s.name),
              1,
            ),
            l("p", null, "⏰ Time: " + z(i.transitionTime) + "s", 1),
            l("p", null, "🔧 Mode: " + z(i.angleCalculationMode), 1),
          ]))
        : le("", !0),
      l(
        "div",
        {
          class: Ie([
            "luckywheel",
            { "opacity-50": n.disabled, spinning: i.spinning },
          ]),
          style: ir(
            "transform: rotate(" +
              i.currentRotation +
              "deg); transition: transform " +
              i.transitionTime +
              "s;",
          ),
        },
        null,
        6,
      ),
      l(
        "div",
        {
          class: Ie([
            "luckywheel_overlay",
            {
              "cursor-not-allowed": n.disabled || i.spinning,
              "cursor-pointer": !n.disabled && !i.spinning,
              "pointer-events-none": i.spinning,
            },
          ]),
          onClick: e[0] || (e[0] = (a) => o.handleClick()),
          title: n.disabled
            ? "Várj a következő pörgetésig"
            : i.spinning
              ? "Pörgetés folyamatban..."
              : "Kattints a pörgetéshez",
        },
        null,
        10,
        kT,
      ),
      e[1] ||
        (e[1] = l(
          "img",
          { src: yT, alt: "Arrow", class: "wheel-arrow" },
          null,
          -1,
        )),
    ])
  );
}
const CT = cr(xT, [
    ["render", ST],
    ["__scopeId", "data-v-29c21bac"],
  ]),
  MT = { class: "space-y-6" },
  ET = { class: "flex justify-between items-center" },
  TT = { class: "flex items-center gap-4" },
  AT = { class: "text-right" },
  PT = { class: "text-2xl font-bold text-primary-500" },
  RT = {
    key: 0,
    class:
      "p-4 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg",
  },
  LT = {
    key: 1,
    class:
      "p-4 bg-orange-50 dark:bg-orange-900/20 border border-orange-200 dark:border-orange-800 rounded-lg",
  },
  DT = {
    class: "flex items-center gap-2 text-orange-700 dark:text-orange-300",
  },
  IT = { class: "font-medium" },
  OT = {
    key: 2,
    class:
      "p-4 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg",
  },
  $T = {
    class: "flex items-center gap-2 text-yellow-700 dark:text-yellow-300 mb-2",
  },
  zT = { class: "grid grid-cols-2 gap-4 text-sm" },
  BT = { key: 0, class: "mt-2 text-xs" },
  UT = { class: "grid grid-cols-1 lg:grid-cols-3 gap-6" },
  FT = {
    class:
      "lg:col-span-2 bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  NT = { class: "flex justify-center" },
  VT = { class: "text-center mt-6" },
  HT = { key: 0, class: "text-sm text-surface-500 dark:text-surface-400 mt-2" },
  jT = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  GT = { class: "space-y-3" },
  WT = { class: "flex items-center gap-2" },
  KT = { class: "text-surface-900 dark:text-surface-0 font-medium" },
  XT = { key: 0, class: "flex items-center gap-1" },
  YT = { class: "font-bold text-surface-900 dark:text-surface-0" },
  qT = {
    class: "mt-6 pt-4 border-t border-surface-200 dark:border-surface-700",
  },
  ZT = { class: "space-y-2 text-sm" },
  JT = { class: "flex justify-between" },
  QT = { class: "font-medium text-surface-900 dark:text-surface-0" },
  e3 = { class: "flex justify-between" },
  t3 = { class: "font-medium text-surface-900 dark:text-surface-0" },
  n3 = { class: "flex justify-between" },
  r3 = { class: "font-medium text-surface-900 dark:text-surface-0" },
  i3 = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  o3 = { key: 0, class: "text-center py-4" },
  s3 = { key: 1, class: "text-center py-8" },
  a3 = { key: 2, class: "space-y-3" },
  l3 = { class: "flex items-center gap-3" },
  c3 = { class: "font-medium text-surface-900 dark:text-surface-0" },
  u3 = { class: "text-sm text-surface-500 dark:text-surface-400" },
  d3 = { class: "text-right" },
  f3 = { key: 0, class: "flex items-center gap-1" },
  p3 = { class: "text-lg font-bold text-surface-900 dark:text-surface-0" },
  h3 = {
    key: 1,
    class: "text-sm font-medium text-surface-600 dark:text-surface-300",
  },
  m3 = { key: 3, class: "text-center mt-4" },
  g3 = { key: 0, class: "text-center space-y-4" },
  v3 = { class: "text-xl font-bold text-surface-900 dark:text-surface-0 mb-2" },
  b3 = { key: 0, class: "flex items-center justify-center gap-2" },
  y3 = { class: "text-2xl font-bold text-primary-500" },
  x3 = { key: 1, class: "text-surface-600 dark:text-surface-300" },
  _3 = { key: 3, class: "fixed top-4 right-4 z-50" },
  w3 = {
    class:
      "bg-green-500 text-white px-6 py-4 rounded-lg shadow-lg flex items-center gap-2 animate-fadeIn",
  },
  k3 = { key: 4, class: "fixed top-4 right-4 z-50" },
  S3 = {
    class:
      "bg-red-500 text-white px-6 py-4 rounded-lg shadow-lg flex items-center gap-2 animate-fadeIn",
  },
  C3 = {
    __name: "LuckyWheel",
    setup(t) {
      const e = N(0),
        n = N({ canSpin: !1, lastSpinTime: null, nextSpinTime: null }),
        r = N([]),
        i = N({ totalSpins: 0, totalWinnings: 0, biggestWin: 0 }),
        o = N(!1),
        s = N(""),
        a = N(null),
        c = N(!1),
        u = N(!1),
        d = N(""),
        f = N(!1),
        p = N(""),
        h = N(!0),
        v = N(!1),
        b = N(!0),
        g = N(0),
        m = N(!1),
        _ = N(!1),
        y = N(!1),
        x = N("Unknown"),
        C = N(null),
        w = N(null),
        S = N(null),
        D = N([
          { name: "30 Bé", reward: 30 },
          { name: "Röff", reward: !1 },
          { name: "Eltalált a hógólem", reward: !1 },
          { name: "Zombi nyert", reward: !1 },
          { name: "5 Bé", reward: 5 },
          { name: "Átvert egy falusi", reward: !1 },
          { name: "Eltalált a skeleton", reward: !1 },
          { name: "Chicken jockey!", reward: !1 },
          { name: "50 Bé", reward: 50 },
          { name: "Elégtél a lávában!", reward: !1 },
          { name: "Meghallott a warden", reward: !1 },
          { name: "Felrobbantál", reward: !1 },
          { name: "Nem nyert", reward: !1 },
          { name: "10 Bé", reward: 10 },
          { name: "Leköpött egy láma", reward: !1 },
          { name: "100 Bé", reward: 100 },
          { name: "Megölt az Ender dragon!", reward: !1 },
          { name: "Raid", reward: !1 },
        ]),
        k = () =>
          o.value
            ? "Pörgetés..."
            : n.value.canSpin
              ? "Pörgetés!"
              : "Várj egy napot",
        P = async () => {
          if (!(!n.value.canSpin || o.value)) {
            ((o.value = !0),
              (s.value = "Kapcsolódás a szerverhez..."),
              (x.value = "Calling API..."));
            try {
              s.value = "Szerencse meghatározása...";
              const be = await Ve.spinLuckyWheel(),
                ce = be.data || be;
              if (
                ((w.value = ce),
                (x.value = "Success"),
                !ce.reward || typeof ce.spin_angle > "u")
              )
                throw new Error(
                  "Invalid backend response: missing reward or spin_angle",
                );
              ((C.value = ce.spin_angle),
                (s.value = "Kerék animálása..."),
                S.value && S.value.spinToAngle
                  ? S.value.spinToAngle(ce.spin_angle, ce.reward)
                  : setTimeout(() => {
                      W(ce.reward);
                    }, 4e3));
            } catch (be) {
              ((x.value = "Error"),
                (o.value = !1),
                (s.value = ""),
                J("Hiba történt a pörgetés során. Próbáld újra később!"),
                (a.value = {
                  prize: !1,
                  prize_name: "Hiba történt",
                  message:
                    be.message || "Ismeretlen hiba történt a pörgetés során.",
                }),
                (c.value = !0));
            }
          }
        },
        I = () => {
          s.value = "Kerék pörgetése...";
        },
        W = async (be) => {
          try {
            ((s.value = "Eredmény feldolgozása..."),
              (a.value = {
                prize: be.reward,
                prize_name: be.name,
                message:
                  typeof be.reward == "number"
                    ? `Gratulálunk! Nyertél ${be.reward} bányaérmét!`
                    : "Próbálj szerencsét holnap újra!",
              }),
              await Promise.all([X(), Z(), G(), $(0)]),
              (c.value = !0),
              typeof be.reward == "number" &&
                be.reward > 0 &&
                ie(`Nyertél ${be.reward} Bányaérmét!`));
          } catch {
            J("Hiba történt az eredmény feldolgozása során.");
          } finally {
            ((o.value = !1), (s.value = ""));
          }
        },
        X = async () => {
          try {
            const be = await Ve.getUserProfile();
            e.value = be.coins_balance || 0;
          } catch {}
        },
        Z = async () => {
          try {
            const be = await Ve.getLuckyWheelStatus();
            n.value = {
              canSpin: be.can_spin,
              lastSpinTime: be.last_spin_time,
              nextSpinTime: be.next_spin_time,
            };
          } catch {
            n.value.canSpin = !0;
          }
        },
        G = async () => {
          try {
            const be = await Ve.getLuckyWheelStats();
            i.value = {
              totalSpins: be.total_spins || 0,
              totalWinnings: be.total_winnings || 0,
              biggestWin: be.biggest_win || 0,
            };
          } catch {}
        },
        $ = async (be = 0) => {
          be === 0 ? ((h.value = !0), (r.value = [])) : (v.value = !0);
          try {
            const ce = await Ve.getLuckyWheelWinners(be, 10),
              oe = ce.data || ce;
            (be === 0 ? (r.value = oe) : r.value.push(...oe),
              (b.value = oe.length === 10),
              (g.value = be));
          } catch {
          } finally {
            ((h.value = !1), (v.value = !1));
          }
        },
        ne = () => {
          $(g.value + 1);
        },
        U = () => {
          ((c.value = !1), (a.value = null));
        },
        ie = (be) => {
          ((d.value = be),
            (u.value = !0),
            setTimeout(() => {
              u.value = !1;
            }, 3e3));
        },
        J = (be) => {
          ((p.value = be),
            (f.value = !0),
            setTimeout(() => {
              f.value = !1;
            }, 3e3));
        },
        V = (be) => {
          if (!be) return "Ismeretlen";
          const ce = new Date(),
            me = new Date(be) - ce;
          if (me <= 0) return "Most";
          const ge = Math.floor(me / (1e3 * 60 * 60)),
            Oe = Math.floor((me % (1e3 * 60 * 60)) / (1e3 * 60));
          return ge > 0 ? `${ge}ó ${Oe}p` : `${Oe}p`;
        },
        re = (be) => {
          if (!be) return "";
          const ce = new Date(),
            oe = new Date(be),
            me = Math.floor((ce - oe) / 1e3);
          return me < 60
            ? `${me} másodperce`
            : me < 3600
              ? `${Math.floor(me / 60)} perce`
              : me < 86400
                ? `${Math.floor(me / 3600)} órája`
                : `${Math.floor(me / 86400)} napja`;
        },
        Ee = (be) =>
          typeof be.reward == "number"
            ? "pi pi-star text-yellow-500"
            : be.reward
              ? "pi pi-gift text-green-500"
              : "pi pi-times text-red-500",
        Pe = async () => {
          if (m.value)
            try {
              const be = await Ve.spinLuckyWheel();
              ((w.value = be.data || be), (x.value = "Test Success"));
            } catch {
              x.value = "Test Failed";
            }
        };
      return (
        $t(async () => {
          (await Promise.all([X(), Z(), G(), $(0)]),
            m.value &&
              (window.debugLuckyWheel = {
                executeBackendSpin: P,
                testBackendSpin: Pe,
                spinComponent: S,
                state: {
                  userBalance: e,
                  wheelStatus: n,
                  isSpinning: o,
                  lastBackendResult: w,
                },
              }));
        }),
        (be, ce) => {
          var oe, me;
          return (
            E(),
            R("div", MT, [
              l("div", ET, [
                ce[5] ||
                  (ce[5] = l(
                    "h2",
                    {
                      class:
                        "text-2xl font-bold text-surface-900 dark:text-surface-0",
                    },
                    "Szerencsekerék",
                    -1,
                  )),
                l("div", TT, [
                  l("div", AT, [
                    ce[4] ||
                      (ce[4] = l(
                        "p",
                        {
                          class:
                            "text-sm text-surface-500 dark:text-surface-400",
                        },
                        "Bányászérme egyenleged",
                        -1,
                      )),
                    l("p", PT, z(e.value.toLocaleString()) + " BÉ", 1),
                  ]),
                ]),
              ]),
              n.value.canSpin
                ? (E(),
                  R(
                    "div",
                    RT,
                    ce[6] ||
                      (ce[6] = [
                        l(
                          "div",
                          {
                            class:
                              "flex items-center gap-2 text-green-700 dark:text-green-300",
                          },
                          [
                            l("i", { class: "pi pi-check-circle" }),
                            l(
                              "span",
                              { class: "font-medium" },
                              "Kész vagy a pörgetésre! Próbáld ki a szerencséd!",
                            ),
                          ],
                          -1,
                        ),
                      ]),
                  ))
                : (E(),
                  R("div", LT, [
                    l("div", DT, [
                      ce[7] ||
                        (ce[7] = l("i", { class: "pi pi-clock" }, null, -1)),
                      l(
                        "span",
                        IT,
                        " Következő pörgetés: " + z(V(n.value.nextSpinTime)),
                        1,
                      ),
                    ]),
                    ce[8] ||
                      (ce[8] = l(
                        "p",
                        {
                          class:
                            "text-sm text-orange-600 dark:text-orange-400 mt-1",
                        },
                        " A szerencsekeretet naponta egyszer pörgetheted! ",
                        -1,
                      )),
                  ])),
              _.value
                ? (E(),
                  R("div", OT, [
                    l("div", $T, [
                      ce[9] ||
                        (ce[9] = l("i", { class: "pi pi-cog" }, null, -1)),
                      ce[10] ||
                        (ce[10] = l(
                          "span",
                          { class: "font-medium" },
                          "Debug Panel",
                          -1,
                        )),
                      l(
                        "button",
                        {
                          onClick: ce[0] || (ce[0] = (ge) => (_.value = !1)),
                          class: "ml-auto text-sm underline",
                        },
                        "Bezár",
                      ),
                    ]),
                    l("div", zT, [
                      l("div", null, [
                        l("p", null, [
                          ce[11] ||
                            (ce[11] = l("strong", null, "API Status:", -1)),
                          Ke(" " + z(x.value), 1),
                        ]),
                        l("p", null, [
                          ce[12] ||
                            (ce[12] = l(
                              "strong",
                              null,
                              "Last Spin Angle:",
                              -1,
                            )),
                          Ke(" " + z(C.value) + "°", 1),
                        ]),
                        l("p", null, [
                          ce[13] ||
                            (ce[13] = l(
                              "strong",
                              null,
                              "Last Backend Result:",
                              -1,
                            )),
                          Ke(
                            " " +
                              z(
                                ((me =
                                  (oe = w.value) == null
                                    ? void 0
                                    : oe.reward) == null
                                  ? void 0
                                  : me.name) || "None",
                              ),
                            1,
                          ),
                        ]),
                      ]),
                      l("div", null, [
                        l(
                          "button",
                          {
                            onClick: Pe,
                            class:
                              "px-3 py-1 bg-blue-500 text-white rounded text-sm mr-2",
                          },
                          "Test Backend",
                        ),
                        l(
                          "button",
                          {
                            onClick:
                              ce[1] || (ce[1] = (ge) => (y.value = !y.value)),
                            class:
                              "px-3 py-1 bg-gray-500 text-white rounded text-sm",
                          },
                          "Toggle Config",
                        ),
                      ]),
                    ]),
                    y.value
                      ? (E(),
                        R("div", BT, [
                          l(
                            "pre",
                            null,
                            z(JSON.stringify(D.value, null, 2)),
                            1,
                          ),
                        ]))
                      : le("", !0),
                  ]))
                : le("", !0),
              l("div", UT, [
                l("div", FT, [
                  ce[14] ||
                    (ce[14] = l(
                      "div",
                      { class: "text-center mb-6" },
                      [
                        l(
                          "h3",
                          {
                            class:
                              "text-lg font-semibold text-surface-900 dark:text-surface-0 mb-2",
                          },
                          " MesterMC Szerencsekerék ",
                        ),
                        l(
                          "p",
                          { class: "text-surface-600 dark:text-surface-300" },
                          " Pörgess és nyerj Bányaérmét vagy próbálj szerencsét! ",
                        ),
                      ],
                      -1,
                    )),
                  l("div", NT, [
                    O(
                      CT,
                      {
                        ref_key: "wheelComponent",
                        ref: S,
                        disabled: !n.value.canSpin || o.value,
                        onClickToSpin: P,
                        onSpin: I,
                        onSpinComplete: W,
                      },
                      null,
                      8,
                      ["disabled"],
                    ),
                  ]),
                  l("div", VT, [
                    O(
                      H(Ce),
                      {
                        label: k(),
                        disabled: !n.value.canSpin || o.value,
                        loading: o.value,
                        size: "large",
                        class: "!px-12 !py-3",
                        onClick: P,
                      },
                      null,
                      8,
                      ["label", "disabled", "loading"],
                    ),
                    o.value ? (E(), R("p", HT, z(s.value), 1)) : le("", !0),
                  ]),
                ]),
                l("div", jT, [
                  ce[21] ||
                    (ce[21] = l(
                      "h3",
                      {
                        class:
                          "text-lg font-semibold text-surface-900 dark:text-surface-0 mb-4 flex items-center gap-2",
                      },
                      [
                        l("i", { class: "pi pi-gift text-primary-500" }),
                        Ke(" Lehetséges nyeremények "),
                      ],
                      -1,
                    )),
                  l("div", GT, [
                    (E(!0),
                    R(
                      We,
                      null,
                      mt(
                        D.value,
                        (ge) => (
                          E(),
                          R(
                            "div",
                            {
                              key: ge.name,
                              class:
                                "flex items-center justify-between p-3 bg-surface-50 dark:bg-surface-800 rounded-lg",
                            },
                            [
                              l("div", WT, [
                                l(
                                  "i",
                                  { class: Ie([Ee(ge), "text-lg"]) },
                                  null,
                                  2,
                                ),
                                l("span", KT, z(ge.name), 1),
                              ]),
                              typeof ge.reward == "number"
                                ? (E(),
                                  R("div", XT, [
                                    ce[15] ||
                                      (ce[15] = l(
                                        "i",
                                        { class: "pi pi-star text-yellow-500" },
                                        null,
                                        -1,
                                      )),
                                    l("span", YT, z(ge.reward), 1),
                                    ce[16] ||
                                      (ce[16] = l(
                                        "span",
                                        { class: "text-xs text-surface-500" },
                                        "BÉ",
                                        -1,
                                      )),
                                  ]))
                                : (E(),
                                  Be(
                                    H(vt),
                                    {
                                      key: 1,
                                      value: ge.reward
                                        ? "Nyeremény"
                                        : "Próbálj újra",
                                      severity: ge.reward
                                        ? "success"
                                        : "secondary",
                                    },
                                    null,
                                    8,
                                    ["value", "severity"],
                                  )),
                            ],
                          )
                        ),
                      ),
                      128,
                    )),
                  ]),
                  l("div", qT, [
                    ce[20] ||
                      (ce[20] = l(
                        "h4",
                        {
                          class:
                            "font-medium text-surface-900 dark:text-surface-0 mb-2",
                        },
                        "Statisztikáid",
                        -1,
                      )),
                    l("div", ZT, [
                      l("div", JT, [
                        ce[17] ||
                          (ce[17] = l(
                            "span",
                            { class: "text-surface-600 dark:text-surface-300" },
                            "Összes pörgetés:",
                            -1,
                          )),
                        l("span", QT, z(i.value.totalSpins), 1),
                      ]),
                      l("div", e3, [
                        ce[18] ||
                          (ce[18] = l(
                            "span",
                            { class: "text-surface-600 dark:text-surface-300" },
                            "Összes nyeremény:",
                            -1,
                          )),
                        l("span", t3, z(i.value.totalWinnings) + " BÉ", 1),
                      ]),
                      l("div", n3, [
                        ce[19] ||
                          (ce[19] = l(
                            "span",
                            { class: "text-surface-600 dark:text-surface-300" },
                            "Legnagyobb nyeremény:",
                            -1,
                          )),
                        l("span", r3, z(i.value.biggestWin) + " BÉ", 1),
                      ]),
                    ]),
                  ]),
                ]),
              ]),
              l("div", i3, [
                ce[27] ||
                  (ce[27] = l(
                    "h3",
                    {
                      class:
                        "text-lg font-semibold text-surface-900 dark:text-surface-0 mb-4 flex items-center gap-2",
                    },
                    [
                      l("i", { class: "pi pi-trophy text-primary-500" }),
                      Ke(" Legutóbbi győztesek "),
                    ],
                    -1,
                  )),
                h.value
                  ? (E(),
                    R(
                      "div",
                      o3,
                      ce[22] ||
                        (ce[22] = [
                          l(
                            "i",
                            { class: "pi pi-spin pi-spinner text-surface-400" },
                            null,
                            -1,
                          ),
                        ]),
                    ))
                  : r.value.length === 0
                    ? (E(),
                      R(
                        "div",
                        s3,
                        ce[23] ||
                          (ce[23] = [
                            l(
                              "i",
                              {
                                class:
                                  "pi pi-trophy text-4xl text-surface-400 dark:text-surface-500 mb-4",
                              },
                              null,
                              -1,
                            ),
                            l(
                              "p",
                              {
                                class: "text-surface-500 dark:text-surface-400",
                              },
                              "Még nincsenek győztesek ma",
                              -1,
                            ),
                          ]),
                      ))
                    : (E(),
                      R("div", a3, [
                        (E(!0),
                        R(
                          We,
                          null,
                          mt(
                            r.value,
                            (ge) => (
                              E(),
                              R(
                                "div",
                                {
                                  key: ge.id,
                                  class:
                                    "flex items-center justify-between p-4 bg-surface-50 dark:bg-surface-800 rounded-lg",
                                },
                                [
                                  l("div", l3, [
                                    ce[24] ||
                                      (ce[24] = l(
                                        "img",
                                        {
                                          src: Gd,
                                          class: "w-8 h-8 rounded-full",
                                        },
                                        null,
                                        -1,
                                      )),
                                    l("div", null, [
                                      l("p", c3, z(ge.username), 1),
                                      l("p", u3, z(re(ge.created_at)), 1),
                                    ]),
                                  ]),
                                  l("div", d3, [
                                    typeof ge.prize == "number"
                                      ? (E(),
                                        R("div", f3, [
                                          ce[25] ||
                                            (ce[25] = l(
                                              "i",
                                              {
                                                class:
                                                  "pi pi-star text-yellow-500",
                                              },
                                              null,
                                              -1,
                                            )),
                                          l(
                                            "span",
                                            p3,
                                            z(ge.prize.toLocaleString()),
                                            1,
                                          ),
                                          ce[26] ||
                                            (ce[26] = l(
                                              "span",
                                              {
                                                class:
                                                  "text-sm text-surface-500",
                                              },
                                              "BÉ",
                                              -1,
                                            )),
                                        ]))
                                      : (E(), R("p", h3, z(ge.prize_name), 1)),
                                  ]),
                                ],
                              )
                            ),
                          ),
                          128,
                        )),
                      ])),
                b.value && !h.value
                  ? (E(),
                    R("div", m3, [
                      O(
                        H(Ce),
                        {
                          label: "További betöltése",
                          outlined: "",
                          size: "small",
                          onClick: ne,
                          loading: v.value,
                        },
                        null,
                        8,
                        ["loading"],
                      ),
                    ]))
                  : le("", !0),
              ]),
              O(
                H(on),
                {
                  visible: c.value,
                  "onUpdate:visible": ce[2] || (ce[2] = (ge) => (c.value = ge)),
                  modal: !0,
                  "show-header": !1,
                  breakpoints: { "960px": "75vw", "640px": "90vw" },
                  style: { width: "25rem" },
                  class: "shadow-sm rounded-2xl",
                  pt: { content: "!p-6" },
                },
                {
                  default: Ye(() => [
                    a.value
                      ? (E(),
                        R("div", g3, [
                          ce[29] ||
                            (ce[29] = l(
                              "div",
                              { class: "flex justify-center" },
                              [
                                l(
                                  "div",
                                  {
                                    class:
                                      "w-16 h-16 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-full flex items-center justify-center",
                                  },
                                  [
                                    l("i", {
                                      class: "pi pi-star text-white text-2xl",
                                    }),
                                  ],
                                ),
                              ],
                              -1,
                            )),
                          l("div", null, [
                            l(
                              "h3",
                              v3,
                              z(
                                typeof a.value.prize == "number"
                                  ? "Gratulálunk!"
                                  : a.value.prize_name,
                              ),
                              1,
                            ),
                            typeof a.value.prize == "number"
                              ? (E(),
                                R("div", b3, [
                                  l(
                                    "span",
                                    y3,
                                    z(a.value.prize.toLocaleString()),
                                    1,
                                  ),
                                  ce[28] ||
                                    (ce[28] = l(
                                      "span",
                                      {
                                        class:
                                          "text-surface-500 dark:text-surface-400",
                                      },
                                      "Bányaérme nyereményed!",
                                      -1,
                                    )),
                                ]))
                              : (E(),
                                R(
                                  "p",
                                  x3,
                                  z(
                                    a.value.message ||
                                      "Próbálj szerencsét holnap újra!",
                                  ),
                                  1,
                                )),
                          ]),
                          O(H(Ce), {
                            label: "Rendben",
                            onClick: U,
                            class: "w-full",
                          }),
                        ]))
                      : le("", !0),
                  ]),
                  _: 1,
                },
                8,
                ["visible"],
              ),
              u.value
                ? (E(),
                  R("div", _3, [
                    l("div", w3, [
                      ce[30] ||
                        (ce[30] = l(
                          "i",
                          { class: "pi pi-check-circle" },
                          null,
                          -1,
                        )),
                      l("span", null, z(d.value), 1),
                    ]),
                  ]))
                : le("", !0),
              f.value
                ? (E(),
                  R("div", k3, [
                    l("div", S3, [
                      ce[31] ||
                        (ce[31] = l(
                          "i",
                          { class: "pi pi-times-circle" },
                          null,
                          -1,
                        )),
                      l("span", null, z(p.value), 1),
                    ]),
                  ]))
                : le("", !0),
              m.value && !_.value
                ? (E(),
                  R(
                    "button",
                    {
                      key: 5,
                      onClick: ce[3] || (ce[3] = (ge) => (_.value = !0)),
                      class:
                        "fixed bottom-4 right-4 bg-yellow-500 text-white p-2 rounded-full shadow-lg z-40",
                      title: "Show Debug Panel",
                    },
                    " 🐛 ",
                  ))
                : le("", !0),
            ])
          );
        }
      );
    },
  },
  M3 = cr(C3, [["__scopeId", "data-v-73d401ca"]]),
  E3 = { class: "space-y-6" },
  T3 = { class: "flex justify-between items-center" },
  A3 = { class: "flex items-center gap-2" },
  P3 = {
    class:
      "bg-surface-0 dark:bg-surface-900 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  R3 = { class: "flex border-b border-surface-200 dark:border-surface-700" },
  L3 = ["onClick"],
  D3 = { class: "p-6" },
  I3 = { key: 0, class: "flex justify-center py-8" },
  O3 = {
    key: 1,
    class:
      "p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg",
  },
  $3 = { class: "flex items-center gap-2 text-red-700 dark:text-red-300" },
  z3 = { key: 2, class: "text-center py-8" },
  B3 = { class: "text-surface-500 dark:text-surface-400" },
  U3 = { key: 3, class: "space-y-4" },
  F3 = ["onClick"],
  N3 = { class: "flex items-start gap-4" },
  V3 = { class: "flex-shrink-0" },
  H3 = { class: "flex-1 min-w-0" },
  j3 = { class: "flex items-center justify-between mb-2" },
  G3 = { class: "flex items-center gap-2 flex-shrink-0 ml-2" },
  W3 = { class: "text-xs text-surface-500 dark:text-surface-400" },
  K3 = { key: 0, class: "w-2 h-2 bg-blue-500 rounded-full" },
  X3 = {
    class: "text-surface-600 dark:text-surface-300 text-sm mb-2 line-clamp-2",
  },
  Y3 = { class: "flex items-center gap-2" },
  q3 = ["onClick"],
  Z3 = { class: "flex-shrink-0" },
  J3 = { key: 4, class: "text-center mt-6" },
  Q3 = { class: "flex justify-between items-center" },
  e5 = { class: "flex gap-2" },
  t5 = {
    __name: "Messages",
    setup(t) {
      const e = N([]),
        n = N(!0),
        r = N(!1),
        i = N(!1),
        o = N(null),
        s = N("all"),
        a = N(0),
        c = N(20),
        u = N(!0),
        d = N([
          { key: "all", label: "Összes", icon: "pi pi-list", count: 0 },
          {
            key: "unread",
            label: "Olvasatlan",
            icon: "pi pi-circle-fill",
            count: 0,
          },
          {
            key: "rank",
            label: "Rang értesítések",
            icon: "pi pi-crown",
            count: 0,
          },
          { key: "system", label: "Rendszer", icon: "pi pi-cog", count: 0 },
          {
            key: "purchase",
            label: "Vásárlások",
            icon: "pi pi-shopping-cart",
            count: 0,
          },
        ]),
        f = (I) => {
          if (Array.isArray(I)) return I;
          if (I && Array.isArray(I.data)) return I.data;
          if (I && Array.isArray(I.items)) return I.items;
          if (I && Array.isArray(I.notifications)) return I.notifications;
          if (I && typeof I == "object" && !Array.isArray(I)) {
            const W = Object.values(I);
            if (W.every((X) => X && typeof X == "object" && X.id)) return W;
          }
          return [];
        },
        p = Xe(() => {
          const I = f(e.value);
          return s.value === "all"
            ? I
            : s.value === "unread"
              ? I.filter((W) => !W.is_read)
              : I.filter((W) => W.type === s.value);
        }),
        h = Xe(() => f(e.value).filter((W) => !W.is_read).length),
        v = async (I = !1) => {
          (I ? ((n.value = !0), (a.value = 0), (e.value = [])) : (r.value = !0),
            (o.value = null));
          try {
            const W = await Ve.getNotifications(a.value + 1, c.value),
              X = f(W);
            if (I) e.value = X;
            else {
              const Z = f(e.value);
              e.value = [...Z, ...X];
            }
            ((u.value = X.length === c.value), a.value++, C());
          } catch {
            ((o.value = "Nem sikerült betölteni a jelentéseket"),
              I && (e.value = []));
          } finally {
            ((n.value = !1), (r.value = !1));
          }
        },
        b = () => {
          v(!1);
        },
        g = () => {
          v(!0);
        },
        m = async (I) => {
          if (!I.is_read)
            try {
              (await Ve.markNotificationAsRead(I.id), (I.is_read = !0), C());
            } catch {}
        },
        _ = async () => {
          i.value = !0;
          try {
            await Ve.markAllNotificationsAsRead();
            const I = f(e.value);
            (I.forEach((W) => (W.is_read = !0)), (e.value = I), C());
          } catch {
          } finally {
            i.value = !1;
          }
        },
        y = async (I) => {
          try {
            await Ve.delete(`/notifications/${I.id}`);
            const W = f(e.value),
              X = W.findIndex((Z) => Z.id === I.id);
            (X > -1 && (W.splice(X, 1), (e.value = W)), C());
          } catch {}
        },
        x = (I) => {
          I.action_url && window.open(I.action_url, "_blank");
        },
        C = () => {
          const I = f(e.value);
          d.value.forEach((W) => {
            try {
              switch (W.key) {
                case "all":
                  W.count = I.length;
                  break;
                case "unread":
                  W.count = I.filter((X) => !X.is_read).length;
                  break;
                default:
                  W.count = I.filter((X) => X.type === W.key).length;
                  break;
              }
            } catch {
              W.count = 0;
            }
          });
        },
        w = (I) => {
          if (!I) return "";
          const W = new Date(I),
            Z = Math.floor((new Date() - W) / 1e3);
          return Z < 60
            ? `${Z} másodperce`
            : Z < 3600
              ? `${Math.floor(Z / 60)} perce`
              : Z < 86400
                ? `${Math.floor(Z / 3600)} órája`
                : Z < 604800
                  ? `${Math.floor(Z / 86400)} napja`
                  : `${Math.floor(Z / 604800)} hete`;
        },
        S = (I) =>
          ({
            rank: "pi pi-crown",
            system: "pi pi-cog",
            purchase: "pi pi-shopping-cart",
            security: "pi pi-shield",
            maintenance: "pi pi-wrench",
          })[I] || "pi pi-info-circle",
        D = (I) =>
          ({
            rank: "bg-purple-100 dark:bg-purple-500/20 text-purple-600 dark:text-purple-300",
            system:
              "bg-blue-100 dark:bg-blue-500/20 text-blue-600 dark:text-blue-300",
            purchase:
              "bg-green-100 dark:bg-green-500/20 text-green-600 dark:text-green-300",
            security:
              "bg-red-100 dark:bg-red-500/20 text-red-600 dark:text-red-300",
            maintenance:
              "bg-orange-100 dark:bg-orange-500/20 text-orange-600 dark:text-orange-300",
          })[I] ||
          "bg-surface-100 dark:bg-surface-700 text-surface-600 dark:text-surface-300",
        k = (I) =>
          ({
            rank: "Rang",
            system: "Rendszer",
            purchase: "Vásárlás",
            security: "Biztonság",
            maintenance: "Karbantartás",
          })[I] || "Értesítés",
        P = (I) =>
          ({
            rank: "secondary",
            system: "info",
            purchase: "success",
            security: "danger",
            maintenance: "warning",
          })[I] || "secondary";
      return (
        $t(() => {
          v(!0);
        }),
        (I, W) => {
          const X = Xn("tooltip");
          return (
            E(),
            R("div", E3, [
              l("div", T3, [
                W[0] ||
                  (W[0] = l(
                    "h2",
                    {
                      class:
                        "text-2xl font-bold text-surface-900 dark:text-surface-0",
                    },
                    "Jelentések",
                    -1,
                  )),
                l("div", A3, [
                  O(
                    H(vt),
                    {
                      value: `${h.value} olvasatlan`,
                      severity: h.value > 0 ? "warning" : "success",
                    },
                    null,
                    8,
                    ["value", "severity"],
                  ),
                ]),
              ]),
              l("div", P3, [
                l("div", R3, [
                  (E(!0),
                  R(
                    We,
                    null,
                    mt(
                      d.value,
                      (Z) => (
                        E(),
                        R(
                          "button",
                          {
                            key: Z.key,
                            onClick: (G) => (s.value = Z.key),
                            class: Ie([
                              "px-6 py-4 font-medium transition-colors",
                              s.value === Z.key
                                ? "text-primary-500 border-b-2 border-primary-500"
                                : "text-surface-600 dark:text-surface-300 hover:text-surface-900 dark:hover:text-surface-0",
                            ]),
                          },
                          [
                            l("i", { class: Ie([Z.icon, "mr-2"]) }, null, 2),
                            Ke(" " + z(Z.label) + " ", 1),
                            Z.count > 0
                              ? (E(),
                                Be(
                                  H(vt),
                                  {
                                    key: 0,
                                    value: Z.count,
                                    severity: "secondary",
                                    class: "ml-2",
                                  },
                                  null,
                                  8,
                                  ["value"],
                                ))
                              : le("", !0),
                          ],
                          10,
                          L3,
                        )
                      ),
                    ),
                    128,
                  )),
                ]),
                l("div", D3, [
                  n.value
                    ? (E(),
                      R(
                        "div",
                        I3,
                        W[1] ||
                          (W[1] = [
                            l(
                              "div",
                              {
                                class:
                                  "flex items-center gap-2 text-surface-500 dark:text-surface-400",
                              },
                              [
                                l("i", { class: "pi pi-spin pi-spinner" }),
                                l("span", null, "Jelentések betöltése..."),
                              ],
                              -1,
                            ),
                          ]),
                      ))
                    : o.value
                      ? (E(),
                        R("div", O3, [
                          l("div", $3, [
                            W[2] ||
                              (W[2] = l(
                                "i",
                                { class: "pi pi-exclamation-triangle" },
                                null,
                                -1,
                              )),
                            l("span", null, z(o.value), 1),
                          ]),
                          l(
                            "button",
                            {
                              onClick: v,
                              class:
                                "mt-2 text-red-600 dark:text-red-400 hover:text-red-800 dark:hover:text-red-200 text-sm underline",
                            },
                            " Újra próbálkozás ",
                          ),
                        ]))
                      : p.value.length === 0
                        ? (E(),
                          R("div", z3, [
                            W[3] ||
                              (W[3] = l(
                                "i",
                                {
                                  class:
                                    "pi pi-inbox text-4xl text-surface-400 dark:text-surface-500 mb-4",
                                },
                                null,
                                -1,
                              )),
                            l(
                              "p",
                              B3,
                              z(
                                s.value === "all"
                                  ? "Nincsenek jelentések"
                                  : "Nincsenek jelentések ebben a kategóriában",
                              ),
                              1,
                            ),
                          ]))
                        : (E(),
                          R("div", U3, [
                            (E(!0),
                            R(
                              We,
                              null,
                              mt(
                                p.value,
                                (Z) => (
                                  E(),
                                  R(
                                    "div",
                                    {
                                      key: Z.id,
                                      class: Ie([
                                        "p-4 rounded-lg border transition-colors cursor-pointer",
                                        Z.is_read
                                          ? "bg-surface-50 dark:bg-surface-800 border-surface-200 dark:border-surface-700"
                                          : "bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-700",
                                      ]),
                                      onClick: (G) => m(Z),
                                    },
                                    [
                                      l("div", N3, [
                                        l("div", V3, [
                                          l(
                                            "div",
                                            {
                                              class: Ie([
                                                "w-10 h-10 rounded-full flex items-center justify-center",
                                                D(Z.type),
                                              ]),
                                            },
                                            [
                                              l(
                                                "i",
                                                {
                                                  class: Ie([
                                                    S(Z.type),
                                                    "text-lg",
                                                  ]),
                                                },
                                                null,
                                                2,
                                              ),
                                            ],
                                            2,
                                          ),
                                        ]),
                                        l("div", H3, [
                                          l("div", j3, [
                                            l(
                                              "h4",
                                              {
                                                class: Ie([
                                                  "font-semibold truncate",
                                                  Z.is_read
                                                    ? "text-surface-900 dark:text-surface-0"
                                                    : "text-blue-900 dark:text-blue-100",
                                                ]),
                                              },
                                              z(Z.title),
                                              3,
                                            ),
                                            l("div", G3, [
                                              l(
                                                "span",
                                                W3,
                                                z(w(Z.created_at)),
                                                1,
                                              ),
                                              Z.is_read
                                                ? le("", !0)
                                                : (E(), R("div", K3)),
                                            ]),
                                          ]),
                                          l("p", X3, z(Z.message), 1),
                                          l("div", Y3, [
                                            O(
                                              H(vt),
                                              {
                                                value: k(Z.type),
                                                severity: P(Z.type),
                                                class: "text-xs",
                                              },
                                              null,
                                              8,
                                              ["value", "severity"],
                                            ),
                                            Z.action_url
                                              ? (E(),
                                                R(
                                                  "button",
                                                  {
                                                    key: 0,
                                                    onClick: oi(
                                                      (G) => x(Z),
                                                      ["stop"],
                                                    ),
                                                    class:
                                                      "text-primary-500 hover:text-primary-600 text-xs font-medium",
                                                  },
                                                  " Megtekintés → ",
                                                  8,
                                                  q3,
                                                ))
                                              : le("", !0),
                                          ]),
                                        ]),
                                        l("div", Z3, [
                                          st(
                                            O(
                                              H(Ce),
                                              {
                                                icon: "pi pi-times",
                                                text: "",
                                                rounded: "",
                                                severity: "secondary",
                                                size: "small",
                                                onClick: oi(
                                                  (G) => y(Z),
                                                  ["stop"],
                                                ),
                                              },
                                              null,
                                              8,
                                              ["onClick"],
                                            ),
                                            [[X, "Törlés"]],
                                          ),
                                        ]),
                                      ]),
                                    ],
                                    10,
                                    F3,
                                  )
                                ),
                              ),
                              128,
                            )),
                          ])),
                  u.value && !n.value
                    ? (E(),
                      R("div", J3, [
                        O(
                          H(Ce),
                          {
                            label: "További betöltése",
                            outlined: "",
                            onClick: b,
                            loading: r.value,
                          },
                          null,
                          8,
                          ["loading"],
                        ),
                      ]))
                    : le("", !0),
                ]),
              ]),
              l("div", Q3, [
                O(
                  H(Ce),
                  {
                    label: "Összes olvasottnak jelölése",
                    icon: "pi pi-check",
                    outlined: "",
                    onClick: _,
                    disabled: h.value === 0,
                    loading: i.value,
                  },
                  null,
                  8,
                  ["disabled", "loading"],
                ),
                l("div", e5, [
                  O(
                    H(Ce),
                    {
                      label: "Frissítés",
                      icon: "pi pi-refresh",
                      severity: "secondary",
                      outlined: "",
                      onClick: g,
                      loading: n.value,
                    },
                    null,
                    8,
                    ["loading"],
                  ),
                ]),
              ]),
            ])
          );
        }
      );
    },
  },
  n5 = cr(t5, [["__scopeId", "data-v-4f0ea603"]]);
/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */ const rf = "156",
  go = { ROTATE: 0, DOLLY: 1, PAN: 2 },
  vo = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 },
  r5 = 0,
  lh = 1,
  i5 = 2,
  ov = 1,
  o5 = 2,
  Gr = 3,
  Dr = 0,
  $n = 1,
  rr = 2,
  ti = 0,
  ts = 1,
  ch = 2,
  uh = 3,
  dh = 4,
  s5 = 5,
  Ho = 100,
  a5 = 101,
  l5 = 102,
  fh = 103,
  ph = 104,
  c5 = 200,
  u5 = 201,
  d5 = 202,
  f5 = 203,
  sv = 204,
  av = 205,
  p5 = 206,
  h5 = 207,
  m5 = 208,
  g5 = 209,
  v5 = 210,
  b5 = 0,
  y5 = 1,
  x5 = 2,
  ad = 3,
  _5 = 4,
  w5 = 5,
  k5 = 6,
  S5 = 7,
  lv = 0,
  C5 = 1,
  M5 = 2,
  Ti = 0,
  E5 = 1,
  T5 = 2,
  A5 = 3,
  P5 = 4,
  R5 = 5,
  cv = 300,
  ss = 301,
  as = 302,
  ec = 303,
  ld = 304,
  Mc = 306,
  cd = 1e3,
  mr = 1001,
  ud = 1002,
  Ht = 1003,
  hh = 1004,
  tu = 1005,
  tr = 1006,
  L5 = 1007,
  wa = 1008,
  Ai = 1009,
  D5 = 1010,
  I5 = 1011,
  of = 1012,
  uv = 1013,
  Mi = 1014,
  Jr = 1015,
  ls = 1016,
  dv = 1017,
  fv = 1018,
  ro = 1020,
  O5 = 1021,
  gr = 1023,
  $5 = 1024,
  z5 = 1025,
  io = 1026,
  cs = 1027,
  B5 = 1028,
  pv = 1029,
  U5 = 1030,
  hv = 1031,
  mv = 1033,
  nu = 33776,
  ru = 33777,
  iu = 33778,
  ou = 33779,
  mh = 35840,
  gh = 35841,
  vh = 35842,
  bh = 35843,
  F5 = 36196,
  yh = 37492,
  xh = 37496,
  _h = 37808,
  wh = 37809,
  kh = 37810,
  Sh = 37811,
  Ch = 37812,
  Mh = 37813,
  Eh = 37814,
  Th = 37815,
  Ah = 37816,
  Ph = 37817,
  Rh = 37818,
  Lh = 37819,
  Dh = 37820,
  Ih = 37821,
  su = 36492,
  Oh = 36494,
  $h = 36495,
  N5 = 36283,
  zh = 36284,
  Bh = 36285,
  Uh = 36286,
  gv = 3e3,
  oo = 3001,
  V5 = 3200,
  H5 = 3201,
  vv = 0,
  j5 = 1,
  so = "",
  Bt = "srgb",
  Ir = "srgb-linear",
  Ec = "display-p3",
  au = 7680,
  G5 = 519,
  W5 = 512,
  K5 = 513,
  X5 = 514,
  Y5 = 515,
  q5 = 516,
  Z5 = 517,
  J5 = 518,
  Q5 = 519,
  dd = 35044,
  Fh = "300 es",
  fd = 1035,
  Qr = 2e3,
  tc = 2001;
class ho {
  addEventListener(e, n) {
    this._listeners === void 0 && (this._listeners = {});
    const r = this._listeners;
    (r[e] === void 0 && (r[e] = []), r[e].indexOf(n) === -1 && r[e].push(n));
  }
  hasEventListener(e, n) {
    if (this._listeners === void 0) return !1;
    const r = this._listeners;
    return r[e] !== void 0 && r[e].indexOf(n) !== -1;
  }
  removeEventListener(e, n) {
    if (this._listeners === void 0) return;
    const i = this._listeners[e];
    if (i !== void 0) {
      const o = i.indexOf(n);
      o !== -1 && i.splice(o, 1);
    }
  }
  dispatchEvent(e) {
    if (this._listeners === void 0) return;
    const r = this._listeners[e.type];
    if (r !== void 0) {
      e.target = this;
      const i = r.slice(0);
      for (let o = 0, s = i.length; o < s; o++) i[o].call(this, e);
      e.target = null;
    }
  }
}
const fn = [
    "00",
    "01",
    "02",
    "03",
    "04",
    "05",
    "06",
    "07",
    "08",
    "09",
    "0a",
    "0b",
    "0c",
    "0d",
    "0e",
    "0f",
    "10",
    "11",
    "12",
    "13",
    "14",
    "15",
    "16",
    "17",
    "18",
    "19",
    "1a",
    "1b",
    "1c",
    "1d",
    "1e",
    "1f",
    "20",
    "21",
    "22",
    "23",
    "24",
    "25",
    "26",
    "27",
    "28",
    "29",
    "2a",
    "2b",
    "2c",
    "2d",
    "2e",
    "2f",
    "30",
    "31",
    "32",
    "33",
    "34",
    "35",
    "36",
    "37",
    "38",
    "39",
    "3a",
    "3b",
    "3c",
    "3d",
    "3e",
    "3f",
    "40",
    "41",
    "42",
    "43",
    "44",
    "45",
    "46",
    "47",
    "48",
    "49",
    "4a",
    "4b",
    "4c",
    "4d",
    "4e",
    "4f",
    "50",
    "51",
    "52",
    "53",
    "54",
    "55",
    "56",
    "57",
    "58",
    "59",
    "5a",
    "5b",
    "5c",
    "5d",
    "5e",
    "5f",
    "60",
    "61",
    "62",
    "63",
    "64",
    "65",
    "66",
    "67",
    "68",
    "69",
    "6a",
    "6b",
    "6c",
    "6d",
    "6e",
    "6f",
    "70",
    "71",
    "72",
    "73",
    "74",
    "75",
    "76",
    "77",
    "78",
    "79",
    "7a",
    "7b",
    "7c",
    "7d",
    "7e",
    "7f",
    "80",
    "81",
    "82",
    "83",
    "84",
    "85",
    "86",
    "87",
    "88",
    "89",
    "8a",
    "8b",
    "8c",
    "8d",
    "8e",
    "8f",
    "90",
    "91",
    "92",
    "93",
    "94",
    "95",
    "96",
    "97",
    "98",
    "99",
    "9a",
    "9b",
    "9c",
    "9d",
    "9e",
    "9f",
    "a0",
    "a1",
    "a2",
    "a3",
    "a4",
    "a5",
    "a6",
    "a7",
    "a8",
    "a9",
    "aa",
    "ab",
    "ac",
    "ad",
    "ae",
    "af",
    "b0",
    "b1",
    "b2",
    "b3",
    "b4",
    "b5",
    "b6",
    "b7",
    "b8",
    "b9",
    "ba",
    "bb",
    "bc",
    "bd",
    "be",
    "bf",
    "c0",
    "c1",
    "c2",
    "c3",
    "c4",
    "c5",
    "c6",
    "c7",
    "c8",
    "c9",
    "ca",
    "cb",
    "cc",
    "cd",
    "ce",
    "cf",
    "d0",
    "d1",
    "d2",
    "d3",
    "d4",
    "d5",
    "d6",
    "d7",
    "d8",
    "d9",
    "da",
    "db",
    "dc",
    "dd",
    "de",
    "df",
    "e0",
    "e1",
    "e2",
    "e3",
    "e4",
    "e5",
    "e6",
    "e7",
    "e8",
    "e9",
    "ea",
    "eb",
    "ec",
    "ed",
    "ee",
    "ef",
    "f0",
    "f1",
    "f2",
    "f3",
    "f4",
    "f5",
    "f6",
    "f7",
    "f8",
    "f9",
    "fa",
    "fb",
    "fc",
    "fd",
    "fe",
    "ff",
  ],
  Bl = Math.PI / 180,
  pd = 180 / Math.PI;
function Pi() {
  const t = (Math.random() * 4294967295) | 0,
    e = (Math.random() * 4294967295) | 0,
    n = (Math.random() * 4294967295) | 0,
    r = (Math.random() * 4294967295) | 0;
  return (
    fn[t & 255] +
    fn[(t >> 8) & 255] +
    fn[(t >> 16) & 255] +
    fn[(t >> 24) & 255] +
    "-" +
    fn[e & 255] +
    fn[(e >> 8) & 255] +
    "-" +
    fn[((e >> 16) & 15) | 64] +
    fn[(e >> 24) & 255] +
    "-" +
    fn[(n & 63) | 128] +
    fn[(n >> 8) & 255] +
    "-" +
    fn[(n >> 16) & 255] +
    fn[(n >> 24) & 255] +
    fn[r & 255] +
    fn[(r >> 8) & 255] +
    fn[(r >> 16) & 255] +
    fn[(r >> 24) & 255]
  ).toLowerCase();
}
function An(t, e, n) {
  return Math.max(e, Math.min(n, t));
}
function eA(t, e) {
  return ((t % e) + e) % e;
}
function lu(t, e, n) {
  return (1 - n) * t + n * e;
}
function Nh(t) {
  return (t & (t - 1)) === 0 && t !== 0;
}
function hd(t) {
  return Math.pow(2, Math.floor(Math.log(t) / Math.LN2));
}
function Zr(t, e) {
  switch (e.constructor) {
    case Float32Array:
      return t;
    case Uint32Array:
      return t / 4294967295;
    case Uint16Array:
      return t / 65535;
    case Uint8Array:
      return t / 255;
    case Int32Array:
      return Math.max(t / 2147483647, -1);
    case Int16Array:
      return Math.max(t / 32767, -1);
    case Int8Array:
      return Math.max(t / 127, -1);
    default:
      throw new Error("Invalid component type.");
  }
}
function Et(t, e) {
  switch (e.constructor) {
    case Float32Array:
      return t;
    case Uint32Array:
      return Math.round(t * 4294967295);
    case Uint16Array:
      return Math.round(t * 65535);
    case Uint8Array:
      return Math.round(t * 255);
    case Int32Array:
      return Math.round(t * 2147483647);
    case Int16Array:
      return Math.round(t * 32767);
    case Int8Array:
      return Math.round(t * 127);
    default:
      throw new Error("Invalid component type.");
  }
}
const tA = { DEG2RAD: Bl };
class qe {
  constructor(e = 0, n = 0) {
    ((qe.prototype.isVector2 = !0), (this.x = e), (this.y = n));
  }
  get width() {
    return this.x;
  }
  set width(e) {
    this.x = e;
  }
  get height() {
    return this.y;
  }
  set height(e) {
    this.y = e;
  }
  set(e, n) {
    return ((this.x = e), (this.y = n), this);
  }
  setScalar(e) {
    return ((this.x = e), (this.y = e), this);
  }
  setX(e) {
    return ((this.x = e), this);
  }
  setY(e) {
    return ((this.y = e), this);
  }
  setComponent(e, n) {
    switch (e) {
      case 0:
        this.x = n;
        break;
      case 1:
        this.y = n;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }
  getComponent(e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      default:
        throw new Error("index is out of range: " + e);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y);
  }
  copy(e) {
    return ((this.x = e.x), (this.y = e.y), this);
  }
  add(e) {
    return ((this.x += e.x), (this.y += e.y), this);
  }
  addScalar(e) {
    return ((this.x += e), (this.y += e), this);
  }
  addVectors(e, n) {
    return ((this.x = e.x + n.x), (this.y = e.y + n.y), this);
  }
  addScaledVector(e, n) {
    return ((this.x += e.x * n), (this.y += e.y * n), this);
  }
  sub(e) {
    return ((this.x -= e.x), (this.y -= e.y), this);
  }
  subScalar(e) {
    return ((this.x -= e), (this.y -= e), this);
  }
  subVectors(e, n) {
    return ((this.x = e.x - n.x), (this.y = e.y - n.y), this);
  }
  multiply(e) {
    return ((this.x *= e.x), (this.y *= e.y), this);
  }
  multiplyScalar(e) {
    return ((this.x *= e), (this.y *= e), this);
  }
  divide(e) {
    return ((this.x /= e.x), (this.y /= e.y), this);
  }
  divideScalar(e) {
    return this.multiplyScalar(1 / e);
  }
  applyMatrix3(e) {
    const n = this.x,
      r = this.y,
      i = e.elements;
    return (
      (this.x = i[0] * n + i[3] * r + i[6]),
      (this.y = i[1] * n + i[4] * r + i[7]),
      this
    );
  }
  min(e) {
    return (
      (this.x = Math.min(this.x, e.x)),
      (this.y = Math.min(this.y, e.y)),
      this
    );
  }
  max(e) {
    return (
      (this.x = Math.max(this.x, e.x)),
      (this.y = Math.max(this.y, e.y)),
      this
    );
  }
  clamp(e, n) {
    return (
      (this.x = Math.max(e.x, Math.min(n.x, this.x))),
      (this.y = Math.max(e.y, Math.min(n.y, this.y))),
      this
    );
  }
  clampScalar(e, n) {
    return (
      (this.x = Math.max(e, Math.min(n, this.x))),
      (this.y = Math.max(e, Math.min(n, this.y))),
      this
    );
  }
  clampLength(e, n) {
    const r = this.length();
    return this.divideScalar(r || 1).multiplyScalar(
      Math.max(e, Math.min(n, r)),
    );
  }
  floor() {
    return ((this.x = Math.floor(this.x)), (this.y = Math.floor(this.y)), this);
  }
  ceil() {
    return ((this.x = Math.ceil(this.x)), (this.y = Math.ceil(this.y)), this);
  }
  round() {
    return ((this.x = Math.round(this.x)), (this.y = Math.round(this.y)), this);
  }
  roundToZero() {
    return ((this.x = Math.trunc(this.x)), (this.y = Math.trunc(this.y)), this);
  }
  negate() {
    return ((this.x = -this.x), (this.y = -this.y), this);
  }
  dot(e) {
    return this.x * e.x + this.y * e.y;
  }
  cross(e) {
    return this.x * e.y - this.y * e.x;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  angle() {
    return Math.atan2(-this.y, -this.x) + Math.PI;
  }
  angleTo(e) {
    const n = Math.sqrt(this.lengthSq() * e.lengthSq());
    if (n === 0) return Math.PI / 2;
    const r = this.dot(e) / n;
    return Math.acos(An(r, -1, 1));
  }
  distanceTo(e) {
    return Math.sqrt(this.distanceToSquared(e));
  }
  distanceToSquared(e) {
    const n = this.x - e.x,
      r = this.y - e.y;
    return n * n + r * r;
  }
  manhattanDistanceTo(e) {
    return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
  }
  setLength(e) {
    return this.normalize().multiplyScalar(e);
  }
  lerp(e, n) {
    return (
      (this.x += (e.x - this.x) * n),
      (this.y += (e.y - this.y) * n),
      this
    );
  }
  lerpVectors(e, n, r) {
    return (
      (this.x = e.x + (n.x - e.x) * r),
      (this.y = e.y + (n.y - e.y) * r),
      this
    );
  }
  equals(e) {
    return e.x === this.x && e.y === this.y;
  }
  fromArray(e, n = 0) {
    return ((this.x = e[n]), (this.y = e[n + 1]), this);
  }
  toArray(e = [], n = 0) {
    return ((e[n] = this.x), (e[n + 1] = this.y), e);
  }
  fromBufferAttribute(e, n) {
    return ((this.x = e.getX(n)), (this.y = e.getY(n)), this);
  }
  rotateAround(e, n) {
    const r = Math.cos(n),
      i = Math.sin(n),
      o = this.x - e.x,
      s = this.y - e.y;
    return (
      (this.x = o * r - s * i + e.x),
      (this.y = o * i + s * r + e.y),
      this
    );
  }
  random() {
    return ((this.x = Math.random()), (this.y = Math.random()), this);
  }
  *[Symbol.iterator]() {
    (yield this.x, yield this.y);
  }
}
class ut {
  constructor(e, n, r, i, o, s, a, c, u) {
    ((ut.prototype.isMatrix3 = !0),
      (this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1]),
      e !== void 0 && this.set(e, n, r, i, o, s, a, c, u));
  }
  set(e, n, r, i, o, s, a, c, u) {
    const d = this.elements;
    return (
      (d[0] = e),
      (d[1] = i),
      (d[2] = a),
      (d[3] = n),
      (d[4] = o),
      (d[5] = c),
      (d[6] = r),
      (d[7] = s),
      (d[8] = u),
      this
    );
  }
  identity() {
    return (this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this);
  }
  copy(e) {
    const n = this.elements,
      r = e.elements;
    return (
      (n[0] = r[0]),
      (n[1] = r[1]),
      (n[2] = r[2]),
      (n[3] = r[3]),
      (n[4] = r[4]),
      (n[5] = r[5]),
      (n[6] = r[6]),
      (n[7] = r[7]),
      (n[8] = r[8]),
      this
    );
  }
  extractBasis(e, n, r) {
    return (
      e.setFromMatrix3Column(this, 0),
      n.setFromMatrix3Column(this, 1),
      r.setFromMatrix3Column(this, 2),
      this
    );
  }
  setFromMatrix4(e) {
    const n = e.elements;
    return (
      this.set(n[0], n[4], n[8], n[1], n[5], n[9], n[2], n[6], n[10]),
      this
    );
  }
  multiply(e) {
    return this.multiplyMatrices(this, e);
  }
  premultiply(e) {
    return this.multiplyMatrices(e, this);
  }
  multiplyMatrices(e, n) {
    const r = e.elements,
      i = n.elements,
      o = this.elements,
      s = r[0],
      a = r[3],
      c = r[6],
      u = r[1],
      d = r[4],
      f = r[7],
      p = r[2],
      h = r[5],
      v = r[8],
      b = i[0],
      g = i[3],
      m = i[6],
      _ = i[1],
      y = i[4],
      x = i[7],
      C = i[2],
      w = i[5],
      S = i[8];
    return (
      (o[0] = s * b + a * _ + c * C),
      (o[3] = s * g + a * y + c * w),
      (o[6] = s * m + a * x + c * S),
      (o[1] = u * b + d * _ + f * C),
      (o[4] = u * g + d * y + f * w),
      (o[7] = u * m + d * x + f * S),
      (o[2] = p * b + h * _ + v * C),
      (o[5] = p * g + h * y + v * w),
      (o[8] = p * m + h * x + v * S),
      this
    );
  }
  multiplyScalar(e) {
    const n = this.elements;
    return (
      (n[0] *= e),
      (n[3] *= e),
      (n[6] *= e),
      (n[1] *= e),
      (n[4] *= e),
      (n[7] *= e),
      (n[2] *= e),
      (n[5] *= e),
      (n[8] *= e),
      this
    );
  }
  determinant() {
    const e = this.elements,
      n = e[0],
      r = e[1],
      i = e[2],
      o = e[3],
      s = e[4],
      a = e[5],
      c = e[6],
      u = e[7],
      d = e[8];
    return (
      n * s * d - n * a * u - r * o * d + r * a * c + i * o * u - i * s * c
    );
  }
  invert() {
    const e = this.elements,
      n = e[0],
      r = e[1],
      i = e[2],
      o = e[3],
      s = e[4],
      a = e[5],
      c = e[6],
      u = e[7],
      d = e[8],
      f = d * s - a * u,
      p = a * c - d * o,
      h = u * o - s * c,
      v = n * f + r * p + i * h;
    if (v === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
    const b = 1 / v;
    return (
      (e[0] = f * b),
      (e[1] = (i * u - d * r) * b),
      (e[2] = (a * r - i * s) * b),
      (e[3] = p * b),
      (e[4] = (d * n - i * c) * b),
      (e[5] = (i * o - a * n) * b),
      (e[6] = h * b),
      (e[7] = (r * c - u * n) * b),
      (e[8] = (s * n - r * o) * b),
      this
    );
  }
  transpose() {
    let e;
    const n = this.elements;
    return (
      (e = n[1]),
      (n[1] = n[3]),
      (n[3] = e),
      (e = n[2]),
      (n[2] = n[6]),
      (n[6] = e),
      (e = n[5]),
      (n[5] = n[7]),
      (n[7] = e),
      this
    );
  }
  getNormalMatrix(e) {
    return this.setFromMatrix4(e).invert().transpose();
  }
  transposeIntoArray(e) {
    const n = this.elements;
    return (
      (e[0] = n[0]),
      (e[1] = n[3]),
      (e[2] = n[6]),
      (e[3] = n[1]),
      (e[4] = n[4]),
      (e[5] = n[7]),
      (e[6] = n[2]),
      (e[7] = n[5]),
      (e[8] = n[8]),
      this
    );
  }
  setUvTransform(e, n, r, i, o, s, a) {
    const c = Math.cos(o),
      u = Math.sin(o);
    return (
      this.set(
        r * c,
        r * u,
        -r * (c * s + u * a) + s + e,
        -i * u,
        i * c,
        -i * (-u * s + c * a) + a + n,
        0,
        0,
        1,
      ),
      this
    );
  }
  scale(e, n) {
    return (this.premultiply(cu.makeScale(e, n)), this);
  }
  rotate(e) {
    return (this.premultiply(cu.makeRotation(-e)), this);
  }
  translate(e, n) {
    return (this.premultiply(cu.makeTranslation(e, n)), this);
  }
  makeTranslation(e, n) {
    return (
      e.isVector2
        ? this.set(1, 0, e.x, 0, 1, e.y, 0, 0, 1)
        : this.set(1, 0, e, 0, 1, n, 0, 0, 1),
      this
    );
  }
  makeRotation(e) {
    const n = Math.cos(e),
      r = Math.sin(e);
    return (this.set(n, -r, 0, r, n, 0, 0, 0, 1), this);
  }
  makeScale(e, n) {
    return (this.set(e, 0, 0, 0, n, 0, 0, 0, 1), this);
  }
  equals(e) {
    const n = this.elements,
      r = e.elements;
    for (let i = 0; i < 9; i++) if (n[i] !== r[i]) return !1;
    return !0;
  }
  fromArray(e, n = 0) {
    for (let r = 0; r < 9; r++) this.elements[r] = e[r + n];
    return this;
  }
  toArray(e = [], n = 0) {
    const r = this.elements;
    return (
      (e[n] = r[0]),
      (e[n + 1] = r[1]),
      (e[n + 2] = r[2]),
      (e[n + 3] = r[3]),
      (e[n + 4] = r[4]),
      (e[n + 5] = r[5]),
      (e[n + 6] = r[6]),
      (e[n + 7] = r[7]),
      (e[n + 8] = r[8]),
      e
    );
  }
  clone() {
    return new this.constructor().fromArray(this.elements);
  }
}
const cu = new ut();
function bv(t) {
  for (let e = t.length - 1; e >= 0; --e) if (t[e] >= 65535) return !0;
  return !1;
}
function nc(t) {
  return document.createElementNS("http://www.w3.org/1999/xhtml", t);
}
function nA() {
  const t = nc("canvas");
  return ((t.style.display = "block"), t);
}
const Vh = {};
function Xs(t) {
  t in Vh || ((Vh[t] = !0), console.warn(t));
}
function ns(t) {
  return t < 0.04045
    ? t * 0.0773993808
    : Math.pow(t * 0.9478672986 + 0.0521327014, 2.4);
}
function uu(t) {
  return t < 0.0031308 ? t * 12.92 : 1.055 * Math.pow(t, 0.41666) - 0.055;
}
const rA = new ut().fromArray([
    0.8224621, 0.0331941, 0.0170827, 0.177538, 0.9668058, 0.0723974, -1e-7,
    1e-7, 0.9105199,
  ]),
  iA = new ut().fromArray([
    1.2249401, -0.0420569, -0.0196376, -0.2249404, 1.0420571, -0.0786361, 1e-7,
    0, 1.0982735,
  ]);
function oA(t) {
  return t.convertSRGBToLinear().applyMatrix3(iA);
}
function sA(t) {
  return t.applyMatrix3(rA).convertLinearToSRGB();
}
const aA = { [Ir]: (t) => t, [Bt]: (t) => t.convertSRGBToLinear(), [Ec]: oA },
  lA = { [Ir]: (t) => t, [Bt]: (t) => t.convertLinearToSRGB(), [Ec]: sA },
  er = {
    enabled: !0,
    get legacyMode() {
      return (
        console.warn(
          "THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.",
        ),
        !this.enabled
      );
    },
    set legacyMode(t) {
      (console.warn(
        "THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.",
      ),
        (this.enabled = !t));
    },
    get workingColorSpace() {
      return Ir;
    },
    set workingColorSpace(t) {
      console.warn("THREE.ColorManagement: .workingColorSpace is readonly.");
    },
    convert: function (t, e, n) {
      if (this.enabled === !1 || e === n || !e || !n) return t;
      const r = aA[e],
        i = lA[n];
      if (r === void 0 || i === void 0)
        throw new Error(
          `Unsupported color space conversion, "${e}" to "${n}".`,
        );
      return i(r(t));
    },
    fromWorkingColorSpace: function (t, e) {
      return this.convert(t, this.workingColorSpace, e);
    },
    toWorkingColorSpace: function (t, e) {
      return this.convert(t, e, this.workingColorSpace);
    },
  };
let bo;
class yv {
  static getDataURL(e) {
    if (/^data:/i.test(e.src) || typeof HTMLCanvasElement > "u") return e.src;
    let n;
    if (e instanceof HTMLCanvasElement) n = e;
    else {
      (bo === void 0 && (bo = nc("canvas")),
        (bo.width = e.width),
        (bo.height = e.height));
      const r = bo.getContext("2d");
      (e instanceof ImageData
        ? r.putImageData(e, 0, 0)
        : r.drawImage(e, 0, 0, e.width, e.height),
        (n = bo));
    }
    return n.width > 2048 || n.height > 2048
      ? (console.warn(
          "THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",
          e,
        ),
        n.toDataURL("image/jpeg", 0.6))
      : n.toDataURL("image/png");
  }
  static sRGBToLinear(e) {
    if (
      (typeof HTMLImageElement < "u" && e instanceof HTMLImageElement) ||
      (typeof HTMLCanvasElement < "u" && e instanceof HTMLCanvasElement) ||
      (typeof ImageBitmap < "u" && e instanceof ImageBitmap)
    ) {
      const n = nc("canvas");
      ((n.width = e.width), (n.height = e.height));
      const r = n.getContext("2d");
      r.drawImage(e, 0, 0, e.width, e.height);
      const i = r.getImageData(0, 0, e.width, e.height),
        o = i.data;
      for (let s = 0; s < o.length; s++) o[s] = ns(o[s] / 255) * 255;
      return (r.putImageData(i, 0, 0), n);
    } else if (e.data) {
      const n = e.data.slice(0);
      for (let r = 0; r < n.length; r++)
        n instanceof Uint8Array || n instanceof Uint8ClampedArray
          ? (n[r] = Math.floor(ns(n[r] / 255) * 255))
          : (n[r] = ns(n[r]));
      return { data: n, width: e.width, height: e.height };
    } else
      return (
        console.warn(
          "THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.",
        ),
        e
      );
  }
}
let cA = 0;
class xv {
  constructor(e = null) {
    ((this.isSource = !0),
      Object.defineProperty(this, "id", { value: cA++ }),
      (this.uuid = Pi()),
      (this.data = e),
      (this.version = 0));
  }
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
  toJSON(e) {
    const n = e === void 0 || typeof e == "string";
    if (!n && e.images[this.uuid] !== void 0) return e.images[this.uuid];
    const r = { uuid: this.uuid, url: "" },
      i = this.data;
    if (i !== null) {
      let o;
      if (Array.isArray(i)) {
        o = [];
        for (let s = 0, a = i.length; s < a; s++)
          i[s].isDataTexture ? o.push(du(i[s].image)) : o.push(du(i[s]));
      } else o = du(i);
      r.url = o;
    }
    return (n || (e.images[this.uuid] = r), r);
  }
}
function du(t) {
  return (typeof HTMLImageElement < "u" && t instanceof HTMLImageElement) ||
    (typeof HTMLCanvasElement < "u" && t instanceof HTMLCanvasElement) ||
    (typeof ImageBitmap < "u" && t instanceof ImageBitmap)
    ? yv.getDataURL(t)
    : t.data
      ? {
          data: Array.from(t.data),
          width: t.width,
          height: t.height,
          type: t.data.constructor.name,
        }
      : (console.warn("THREE.Texture: Unable to serialize Texture."), {});
}
let uA = 0;
class yn extends ho {
  constructor(
    e = yn.DEFAULT_IMAGE,
    n = yn.DEFAULT_MAPPING,
    r = mr,
    i = mr,
    o = tr,
    s = wa,
    a = gr,
    c = Ai,
    u = yn.DEFAULT_ANISOTROPY,
    d = so,
  ) {
    (super(),
      (this.isTexture = !0),
      Object.defineProperty(this, "id", { value: uA++ }),
      (this.uuid = Pi()),
      (this.name = ""),
      (this.source = new xv(e)),
      (this.mipmaps = []),
      (this.mapping = n),
      (this.channel = 0),
      (this.wrapS = r),
      (this.wrapT = i),
      (this.magFilter = o),
      (this.minFilter = s),
      (this.anisotropy = u),
      (this.format = a),
      (this.internalFormat = null),
      (this.type = c),
      (this.offset = new qe(0, 0)),
      (this.repeat = new qe(1, 1)),
      (this.center = new qe(0, 0)),
      (this.rotation = 0),
      (this.matrixAutoUpdate = !0),
      (this.matrix = new ut()),
      (this.generateMipmaps = !0),
      (this.premultiplyAlpha = !1),
      (this.flipY = !0),
      (this.unpackAlignment = 4),
      typeof d == "string"
        ? (this.colorSpace = d)
        : (Xs(
            "THREE.Texture: Property .encoding has been replaced by .colorSpace.",
          ),
          (this.colorSpace = d === oo ? Bt : so)),
      (this.userData = {}),
      (this.version = 0),
      (this.onUpdate = null),
      (this.isRenderTargetTexture = !1),
      (this.needsPMREMUpdate = !1));
  }
  get image() {
    return this.source.data;
  }
  set image(e = null) {
    this.source.data = e;
  }
  updateMatrix() {
    this.matrix.setUvTransform(
      this.offset.x,
      this.offset.y,
      this.repeat.x,
      this.repeat.y,
      this.rotation,
      this.center.x,
      this.center.y,
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return (
      (this.name = e.name),
      (this.source = e.source),
      (this.mipmaps = e.mipmaps.slice(0)),
      (this.mapping = e.mapping),
      (this.channel = e.channel),
      (this.wrapS = e.wrapS),
      (this.wrapT = e.wrapT),
      (this.magFilter = e.magFilter),
      (this.minFilter = e.minFilter),
      (this.anisotropy = e.anisotropy),
      (this.format = e.format),
      (this.internalFormat = e.internalFormat),
      (this.type = e.type),
      this.offset.copy(e.offset),
      this.repeat.copy(e.repeat),
      this.center.copy(e.center),
      (this.rotation = e.rotation),
      (this.matrixAutoUpdate = e.matrixAutoUpdate),
      this.matrix.copy(e.matrix),
      (this.generateMipmaps = e.generateMipmaps),
      (this.premultiplyAlpha = e.premultiplyAlpha),
      (this.flipY = e.flipY),
      (this.unpackAlignment = e.unpackAlignment),
      (this.colorSpace = e.colorSpace),
      (this.userData = JSON.parse(JSON.stringify(e.userData))),
      (this.needsUpdate = !0),
      this
    );
  }
  toJSON(e) {
    const n = e === void 0 || typeof e == "string";
    if (!n && e.textures[this.uuid] !== void 0) return e.textures[this.uuid];
    const r = {
      metadata: { version: 4.6, type: "Texture", generator: "Texture.toJSON" },
      uuid: this.uuid,
      name: this.name,
      image: this.source.toJSON(e).uuid,
      mapping: this.mapping,
      channel: this.channel,
      repeat: [this.repeat.x, this.repeat.y],
      offset: [this.offset.x, this.offset.y],
      center: [this.center.x, this.center.y],
      rotation: this.rotation,
      wrap: [this.wrapS, this.wrapT],
      format: this.format,
      internalFormat: this.internalFormat,
      type: this.type,
      colorSpace: this.colorSpace,
      minFilter: this.minFilter,
      magFilter: this.magFilter,
      anisotropy: this.anisotropy,
      flipY: this.flipY,
      generateMipmaps: this.generateMipmaps,
      premultiplyAlpha: this.premultiplyAlpha,
      unpackAlignment: this.unpackAlignment,
    };
    return (
      Object.keys(this.userData).length > 0 && (r.userData = this.userData),
      n || (e.textures[this.uuid] = r),
      r
    );
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
  transformUv(e) {
    if (this.mapping !== cv) return e;
    if ((e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1))
      switch (this.wrapS) {
        case cd:
          e.x = e.x - Math.floor(e.x);
          break;
        case mr:
          e.x = e.x < 0 ? 0 : 1;
          break;
        case ud:
          Math.abs(Math.floor(e.x) % 2) === 1
            ? (e.x = Math.ceil(e.x) - e.x)
            : (e.x = e.x - Math.floor(e.x));
          break;
      }
    if (e.y < 0 || e.y > 1)
      switch (this.wrapT) {
        case cd:
          e.y = e.y - Math.floor(e.y);
          break;
        case mr:
          e.y = e.y < 0 ? 0 : 1;
          break;
        case ud:
          Math.abs(Math.floor(e.y) % 2) === 1
            ? (e.y = Math.ceil(e.y) - e.y)
            : (e.y = e.y - Math.floor(e.y));
          break;
      }
    return (this.flipY && (e.y = 1 - e.y), e);
  }
  set needsUpdate(e) {
    e === !0 && (this.version++, (this.source.needsUpdate = !0));
  }
  get encoding() {
    return (
      Xs("THREE.Texture: Property .encoding has been replaced by .colorSpace."),
      this.colorSpace === Bt ? oo : gv
    );
  }
  set encoding(e) {
    (Xs("THREE.Texture: Property .encoding has been replaced by .colorSpace."),
      (this.colorSpace = e === oo ? Bt : so));
  }
}
yn.DEFAULT_IMAGE = null;
yn.DEFAULT_MAPPING = cv;
yn.DEFAULT_ANISOTROPY = 1;
class Ut {
  constructor(e = 0, n = 0, r = 0, i = 1) {
    ((Ut.prototype.isVector4 = !0),
      (this.x = e),
      (this.y = n),
      (this.z = r),
      (this.w = i));
  }
  get width() {
    return this.z;
  }
  set width(e) {
    this.z = e;
  }
  get height() {
    return this.w;
  }
  set height(e) {
    this.w = e;
  }
  set(e, n, r, i) {
    return ((this.x = e), (this.y = n), (this.z = r), (this.w = i), this);
  }
  setScalar(e) {
    return ((this.x = e), (this.y = e), (this.z = e), (this.w = e), this);
  }
  setX(e) {
    return ((this.x = e), this);
  }
  setY(e) {
    return ((this.y = e), this);
  }
  setZ(e) {
    return ((this.z = e), this);
  }
  setW(e) {
    return ((this.w = e), this);
  }
  setComponent(e, n) {
    switch (e) {
      case 0:
        this.x = n;
        break;
      case 1:
        this.y = n;
        break;
      case 2:
        this.z = n;
        break;
      case 3:
        this.w = n;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }
  getComponent(e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      case 3:
        return this.w;
      default:
        throw new Error("index is out of range: " + e);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y, this.z, this.w);
  }
  copy(e) {
    return (
      (this.x = e.x),
      (this.y = e.y),
      (this.z = e.z),
      (this.w = e.w !== void 0 ? e.w : 1),
      this
    );
  }
  add(e) {
    return (
      (this.x += e.x),
      (this.y += e.y),
      (this.z += e.z),
      (this.w += e.w),
      this
    );
  }
  addScalar(e) {
    return ((this.x += e), (this.y += e), (this.z += e), (this.w += e), this);
  }
  addVectors(e, n) {
    return (
      (this.x = e.x + n.x),
      (this.y = e.y + n.y),
      (this.z = e.z + n.z),
      (this.w = e.w + n.w),
      this
    );
  }
  addScaledVector(e, n) {
    return (
      (this.x += e.x * n),
      (this.y += e.y * n),
      (this.z += e.z * n),
      (this.w += e.w * n),
      this
    );
  }
  sub(e) {
    return (
      (this.x -= e.x),
      (this.y -= e.y),
      (this.z -= e.z),
      (this.w -= e.w),
      this
    );
  }
  subScalar(e) {
    return ((this.x -= e), (this.y -= e), (this.z -= e), (this.w -= e), this);
  }
  subVectors(e, n) {
    return (
      (this.x = e.x - n.x),
      (this.y = e.y - n.y),
      (this.z = e.z - n.z),
      (this.w = e.w - n.w),
      this
    );
  }
  multiply(e) {
    return (
      (this.x *= e.x),
      (this.y *= e.y),
      (this.z *= e.z),
      (this.w *= e.w),
      this
    );
  }
  multiplyScalar(e) {
    return ((this.x *= e), (this.y *= e), (this.z *= e), (this.w *= e), this);
  }
  applyMatrix4(e) {
    const n = this.x,
      r = this.y,
      i = this.z,
      o = this.w,
      s = e.elements;
    return (
      (this.x = s[0] * n + s[4] * r + s[8] * i + s[12] * o),
      (this.y = s[1] * n + s[5] * r + s[9] * i + s[13] * o),
      (this.z = s[2] * n + s[6] * r + s[10] * i + s[14] * o),
      (this.w = s[3] * n + s[7] * r + s[11] * i + s[15] * o),
      this
    );
  }
  divideScalar(e) {
    return this.multiplyScalar(1 / e);
  }
  setAxisAngleFromQuaternion(e) {
    this.w = 2 * Math.acos(e.w);
    const n = Math.sqrt(1 - e.w * e.w);
    return (
      n < 1e-4
        ? ((this.x = 1), (this.y = 0), (this.z = 0))
        : ((this.x = e.x / n), (this.y = e.y / n), (this.z = e.z / n)),
      this
    );
  }
  setAxisAngleFromRotationMatrix(e) {
    let n, r, i, o;
    const c = e.elements,
      u = c[0],
      d = c[4],
      f = c[8],
      p = c[1],
      h = c[5],
      v = c[9],
      b = c[2],
      g = c[6],
      m = c[10];
    if (
      Math.abs(d - p) < 0.01 &&
      Math.abs(f - b) < 0.01 &&
      Math.abs(v - g) < 0.01
    ) {
      if (
        Math.abs(d + p) < 0.1 &&
        Math.abs(f + b) < 0.1 &&
        Math.abs(v + g) < 0.1 &&
        Math.abs(u + h + m - 3) < 0.1
      )
        return (this.set(1, 0, 0, 0), this);
      n = Math.PI;
      const y = (u + 1) / 2,
        x = (h + 1) / 2,
        C = (m + 1) / 2,
        w = (d + p) / 4,
        S = (f + b) / 4,
        D = (v + g) / 4;
      return (
        y > x && y > C
          ? y < 0.01
            ? ((r = 0), (i = 0.707106781), (o = 0.707106781))
            : ((r = Math.sqrt(y)), (i = w / r), (o = S / r))
          : x > C
            ? x < 0.01
              ? ((r = 0.707106781), (i = 0), (o = 0.707106781))
              : ((i = Math.sqrt(x)), (r = w / i), (o = D / i))
            : C < 0.01
              ? ((r = 0.707106781), (i = 0.707106781), (o = 0))
              : ((o = Math.sqrt(C)), (r = S / o), (i = D / o)),
        this.set(r, i, o, n),
        this
      );
    }
    let _ = Math.sqrt(
      (g - v) * (g - v) + (f - b) * (f - b) + (p - d) * (p - d),
    );
    return (
      Math.abs(_) < 0.001 && (_ = 1),
      (this.x = (g - v) / _),
      (this.y = (f - b) / _),
      (this.z = (p - d) / _),
      (this.w = Math.acos((u + h + m - 1) / 2)),
      this
    );
  }
  min(e) {
    return (
      (this.x = Math.min(this.x, e.x)),
      (this.y = Math.min(this.y, e.y)),
      (this.z = Math.min(this.z, e.z)),
      (this.w = Math.min(this.w, e.w)),
      this
    );
  }
  max(e) {
    return (
      (this.x = Math.max(this.x, e.x)),
      (this.y = Math.max(this.y, e.y)),
      (this.z = Math.max(this.z, e.z)),
      (this.w = Math.max(this.w, e.w)),
      this
    );
  }
  clamp(e, n) {
    return (
      (this.x = Math.max(e.x, Math.min(n.x, this.x))),
      (this.y = Math.max(e.y, Math.min(n.y, this.y))),
      (this.z = Math.max(e.z, Math.min(n.z, this.z))),
      (this.w = Math.max(e.w, Math.min(n.w, this.w))),
      this
    );
  }
  clampScalar(e, n) {
    return (
      (this.x = Math.max(e, Math.min(n, this.x))),
      (this.y = Math.max(e, Math.min(n, this.y))),
      (this.z = Math.max(e, Math.min(n, this.z))),
      (this.w = Math.max(e, Math.min(n, this.w))),
      this
    );
  }
  clampLength(e, n) {
    const r = this.length();
    return this.divideScalar(r || 1).multiplyScalar(
      Math.max(e, Math.min(n, r)),
    );
  }
  floor() {
    return (
      (this.x = Math.floor(this.x)),
      (this.y = Math.floor(this.y)),
      (this.z = Math.floor(this.z)),
      (this.w = Math.floor(this.w)),
      this
    );
  }
  ceil() {
    return (
      (this.x = Math.ceil(this.x)),
      (this.y = Math.ceil(this.y)),
      (this.z = Math.ceil(this.z)),
      (this.w = Math.ceil(this.w)),
      this
    );
  }
  round() {
    return (
      (this.x = Math.round(this.x)),
      (this.y = Math.round(this.y)),
      (this.z = Math.round(this.z)),
      (this.w = Math.round(this.w)),
      this
    );
  }
  roundToZero() {
    return (
      (this.x = Math.trunc(this.x)),
      (this.y = Math.trunc(this.y)),
      (this.z = Math.trunc(this.z)),
      (this.w = Math.trunc(this.w)),
      this
    );
  }
  negate() {
    return (
      (this.x = -this.x),
      (this.y = -this.y),
      (this.z = -this.z),
      (this.w = -this.w),
      this
    );
  }
  dot(e) {
    return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
  }
  lengthSq() {
    return (
      this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
    );
  }
  length() {
    return Math.sqrt(
      this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w,
    );
  }
  manhattanLength() {
    return (
      Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
    );
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  setLength(e) {
    return this.normalize().multiplyScalar(e);
  }
  lerp(e, n) {
    return (
      (this.x += (e.x - this.x) * n),
      (this.y += (e.y - this.y) * n),
      (this.z += (e.z - this.z) * n),
      (this.w += (e.w - this.w) * n),
      this
    );
  }
  lerpVectors(e, n, r) {
    return (
      (this.x = e.x + (n.x - e.x) * r),
      (this.y = e.y + (n.y - e.y) * r),
      (this.z = e.z + (n.z - e.z) * r),
      (this.w = e.w + (n.w - e.w) * r),
      this
    );
  }
  equals(e) {
    return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w;
  }
  fromArray(e, n = 0) {
    return (
      (this.x = e[n]),
      (this.y = e[n + 1]),
      (this.z = e[n + 2]),
      (this.w = e[n + 3]),
      this
    );
  }
  toArray(e = [], n = 0) {
    return (
      (e[n] = this.x),
      (e[n + 1] = this.y),
      (e[n + 2] = this.z),
      (e[n + 3] = this.w),
      e
    );
  }
  fromBufferAttribute(e, n) {
    return (
      (this.x = e.getX(n)),
      (this.y = e.getY(n)),
      (this.z = e.getZ(n)),
      (this.w = e.getW(n)),
      this
    );
  }
  random() {
    return (
      (this.x = Math.random()),
      (this.y = Math.random()),
      (this.z = Math.random()),
      (this.w = Math.random()),
      this
    );
  }
  *[Symbol.iterator]() {
    (yield this.x, yield this.y, yield this.z, yield this.w);
  }
}
class dA extends ho {
  constructor(e = 1, n = 1, r = {}) {
    (super(),
      (this.isRenderTarget = !0),
      (this.width = e),
      (this.height = n),
      (this.depth = 1),
      (this.scissor = new Ut(0, 0, e, n)),
      (this.scissorTest = !1),
      (this.viewport = new Ut(0, 0, e, n)));
    const i = { width: e, height: n, depth: 1 };
    (r.encoding !== void 0 &&
      (Xs(
        "THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace.",
      ),
      (r.colorSpace = r.encoding === oo ? Bt : so)),
      (this.texture = new yn(
        i,
        r.mapping,
        r.wrapS,
        r.wrapT,
        r.magFilter,
        r.minFilter,
        r.format,
        r.type,
        r.anisotropy,
        r.colorSpace,
      )),
      (this.texture.isRenderTargetTexture = !0),
      (this.texture.flipY = !1),
      (this.texture.generateMipmaps =
        r.generateMipmaps !== void 0 ? r.generateMipmaps : !1),
      (this.texture.internalFormat =
        r.internalFormat !== void 0 ? r.internalFormat : null),
      (this.texture.minFilter = r.minFilter !== void 0 ? r.minFilter : tr),
      (this.depthBuffer = r.depthBuffer !== void 0 ? r.depthBuffer : !0),
      (this.stencilBuffer = r.stencilBuffer !== void 0 ? r.stencilBuffer : !1),
      (this.depthTexture = r.depthTexture !== void 0 ? r.depthTexture : null),
      (this.samples = r.samples !== void 0 ? r.samples : 0));
  }
  setSize(e, n, r = 1) {
    ((this.width !== e || this.height !== n || this.depth !== r) &&
      ((this.width = e),
      (this.height = n),
      (this.depth = r),
      (this.texture.image.width = e),
      (this.texture.image.height = n),
      (this.texture.image.depth = r),
      this.dispose()),
      this.viewport.set(0, 0, e, n),
      this.scissor.set(0, 0, e, n));
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    ((this.width = e.width),
      (this.height = e.height),
      (this.depth = e.depth),
      this.scissor.copy(e.scissor),
      (this.scissorTest = e.scissorTest),
      this.viewport.copy(e.viewport),
      (this.texture = e.texture.clone()),
      (this.texture.isRenderTargetTexture = !0));
    const n = Object.assign({}, e.texture.image);
    return (
      (this.texture.source = new xv(n)),
      (this.depthBuffer = e.depthBuffer),
      (this.stencilBuffer = e.stencilBuffer),
      e.depthTexture !== null && (this.depthTexture = e.depthTexture.clone()),
      (this.samples = e.samples),
      this
    );
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
}
class ai extends dA {
  constructor(e = 1, n = 1, r = {}) {
    (super(e, n, r), (this.isWebGLRenderTarget = !0));
  }
}
class _v extends yn {
  constructor(e = null, n = 1, r = 1, i = 1) {
    (super(null),
      (this.isDataArrayTexture = !0),
      (this.image = { data: e, width: n, height: r, depth: i }),
      (this.magFilter = Ht),
      (this.minFilter = Ht),
      (this.wrapR = mr),
      (this.generateMipmaps = !1),
      (this.flipY = !1),
      (this.unpackAlignment = 1));
  }
}
class fA extends yn {
  constructor(e = null, n = 1, r = 1, i = 1) {
    (super(null),
      (this.isData3DTexture = !0),
      (this.image = { data: e, width: n, height: r, depth: i }),
      (this.magFilter = Ht),
      (this.minFilter = Ht),
      (this.wrapR = mr),
      (this.generateMipmaps = !1),
      (this.flipY = !1),
      (this.unpackAlignment = 1));
  }
}
class co {
  constructor(e = 0, n = 0, r = 0, i = 1) {
    ((this.isQuaternion = !0),
      (this._x = e),
      (this._y = n),
      (this._z = r),
      (this._w = i));
  }
  static slerpFlat(e, n, r, i, o, s, a) {
    let c = r[i + 0],
      u = r[i + 1],
      d = r[i + 2],
      f = r[i + 3];
    const p = o[s + 0],
      h = o[s + 1],
      v = o[s + 2],
      b = o[s + 3];
    if (a === 0) {
      ((e[n + 0] = c), (e[n + 1] = u), (e[n + 2] = d), (e[n + 3] = f));
      return;
    }
    if (a === 1) {
      ((e[n + 0] = p), (e[n + 1] = h), (e[n + 2] = v), (e[n + 3] = b));
      return;
    }
    if (f !== b || c !== p || u !== h || d !== v) {
      let g = 1 - a;
      const m = c * p + u * h + d * v + f * b,
        _ = m >= 0 ? 1 : -1,
        y = 1 - m * m;
      if (y > Number.EPSILON) {
        const C = Math.sqrt(y),
          w = Math.atan2(C, m * _);
        ((g = Math.sin(g * w) / C), (a = Math.sin(a * w) / C));
      }
      const x = a * _;
      if (
        ((c = c * g + p * x),
        (u = u * g + h * x),
        (d = d * g + v * x),
        (f = f * g + b * x),
        g === 1 - a)
      ) {
        const C = 1 / Math.sqrt(c * c + u * u + d * d + f * f);
        ((c *= C), (u *= C), (d *= C), (f *= C));
      }
    }
    ((e[n] = c), (e[n + 1] = u), (e[n + 2] = d), (e[n + 3] = f));
  }
  static multiplyQuaternionsFlat(e, n, r, i, o, s) {
    const a = r[i],
      c = r[i + 1],
      u = r[i + 2],
      d = r[i + 3],
      f = o[s],
      p = o[s + 1],
      h = o[s + 2],
      v = o[s + 3];
    return (
      (e[n] = a * v + d * f + c * h - u * p),
      (e[n + 1] = c * v + d * p + u * f - a * h),
      (e[n + 2] = u * v + d * h + a * p - c * f),
      (e[n + 3] = d * v - a * f - c * p - u * h),
      e
    );
  }
  get x() {
    return this._x;
  }
  set x(e) {
    ((this._x = e), this._onChangeCallback());
  }
  get y() {
    return this._y;
  }
  set y(e) {
    ((this._y = e), this._onChangeCallback());
  }
  get z() {
    return this._z;
  }
  set z(e) {
    ((this._z = e), this._onChangeCallback());
  }
  get w() {
    return this._w;
  }
  set w(e) {
    ((this._w = e), this._onChangeCallback());
  }
  set(e, n, r, i) {
    return (
      (this._x = e),
      (this._y = n),
      (this._z = r),
      (this._w = i),
      this._onChangeCallback(),
      this
    );
  }
  clone() {
    return new this.constructor(this._x, this._y, this._z, this._w);
  }
  copy(e) {
    return (
      (this._x = e.x),
      (this._y = e.y),
      (this._z = e.z),
      (this._w = e.w),
      this._onChangeCallback(),
      this
    );
  }
  setFromEuler(e, n) {
    const r = e._x,
      i = e._y,
      o = e._z,
      s = e._order,
      a = Math.cos,
      c = Math.sin,
      u = a(r / 2),
      d = a(i / 2),
      f = a(o / 2),
      p = c(r / 2),
      h = c(i / 2),
      v = c(o / 2);
    switch (s) {
      case "XYZ":
        ((this._x = p * d * f + u * h * v),
          (this._y = u * h * f - p * d * v),
          (this._z = u * d * v + p * h * f),
          (this._w = u * d * f - p * h * v));
        break;
      case "YXZ":
        ((this._x = p * d * f + u * h * v),
          (this._y = u * h * f - p * d * v),
          (this._z = u * d * v - p * h * f),
          (this._w = u * d * f + p * h * v));
        break;
      case "ZXY":
        ((this._x = p * d * f - u * h * v),
          (this._y = u * h * f + p * d * v),
          (this._z = u * d * v + p * h * f),
          (this._w = u * d * f - p * h * v));
        break;
      case "ZYX":
        ((this._x = p * d * f - u * h * v),
          (this._y = u * h * f + p * d * v),
          (this._z = u * d * v - p * h * f),
          (this._w = u * d * f + p * h * v));
        break;
      case "YZX":
        ((this._x = p * d * f + u * h * v),
          (this._y = u * h * f + p * d * v),
          (this._z = u * d * v - p * h * f),
          (this._w = u * d * f - p * h * v));
        break;
      case "XZY":
        ((this._x = p * d * f - u * h * v),
          (this._y = u * h * f - p * d * v),
          (this._z = u * d * v + p * h * f),
          (this._w = u * d * f + p * h * v));
        break;
      default:
        console.warn(
          "THREE.Quaternion: .setFromEuler() encountered an unknown order: " +
            s,
        );
    }
    return (n !== !1 && this._onChangeCallback(), this);
  }
  setFromAxisAngle(e, n) {
    const r = n / 2,
      i = Math.sin(r);
    return (
      (this._x = e.x * i),
      (this._y = e.y * i),
      (this._z = e.z * i),
      (this._w = Math.cos(r)),
      this._onChangeCallback(),
      this
    );
  }
  setFromRotationMatrix(e) {
    const n = e.elements,
      r = n[0],
      i = n[4],
      o = n[8],
      s = n[1],
      a = n[5],
      c = n[9],
      u = n[2],
      d = n[6],
      f = n[10],
      p = r + a + f;
    if (p > 0) {
      const h = 0.5 / Math.sqrt(p + 1);
      ((this._w = 0.25 / h),
        (this._x = (d - c) * h),
        (this._y = (o - u) * h),
        (this._z = (s - i) * h));
    } else if (r > a && r > f) {
      const h = 2 * Math.sqrt(1 + r - a - f);
      ((this._w = (d - c) / h),
        (this._x = 0.25 * h),
        (this._y = (i + s) / h),
        (this._z = (o + u) / h));
    } else if (a > f) {
      const h = 2 * Math.sqrt(1 + a - r - f);
      ((this._w = (o - u) / h),
        (this._x = (i + s) / h),
        (this._y = 0.25 * h),
        (this._z = (c + d) / h));
    } else {
      const h = 2 * Math.sqrt(1 + f - r - a);
      ((this._w = (s - i) / h),
        (this._x = (o + u) / h),
        (this._y = (c + d) / h),
        (this._z = 0.25 * h));
    }
    return (this._onChangeCallback(), this);
  }
  setFromUnitVectors(e, n) {
    let r = e.dot(n) + 1;
    return (
      r < Number.EPSILON
        ? ((r = 0),
          Math.abs(e.x) > Math.abs(e.z)
            ? ((this._x = -e.y), (this._y = e.x), (this._z = 0), (this._w = r))
            : ((this._x = 0), (this._y = -e.z), (this._z = e.y), (this._w = r)))
        : ((this._x = e.y * n.z - e.z * n.y),
          (this._y = e.z * n.x - e.x * n.z),
          (this._z = e.x * n.y - e.y * n.x),
          (this._w = r)),
      this.normalize()
    );
  }
  angleTo(e) {
    return 2 * Math.acos(Math.abs(An(this.dot(e), -1, 1)));
  }
  rotateTowards(e, n) {
    const r = this.angleTo(e);
    if (r === 0) return this;
    const i = Math.min(1, n / r);
    return (this.slerp(e, i), this);
  }
  identity() {
    return this.set(0, 0, 0, 1);
  }
  invert() {
    return this.conjugate();
  }
  conjugate() {
    return (
      (this._x *= -1),
      (this._y *= -1),
      (this._z *= -1),
      this._onChangeCallback(),
      this
    );
  }
  dot(e) {
    return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w;
  }
  lengthSq() {
    return (
      this._x * this._x +
      this._y * this._y +
      this._z * this._z +
      this._w * this._w
    );
  }
  length() {
    return Math.sqrt(
      this._x * this._x +
        this._y * this._y +
        this._z * this._z +
        this._w * this._w,
    );
  }
  normalize() {
    let e = this.length();
    return (
      e === 0
        ? ((this._x = 0), (this._y = 0), (this._z = 0), (this._w = 1))
        : ((e = 1 / e),
          (this._x = this._x * e),
          (this._y = this._y * e),
          (this._z = this._z * e),
          (this._w = this._w * e)),
      this._onChangeCallback(),
      this
    );
  }
  multiply(e) {
    return this.multiplyQuaternions(this, e);
  }
  premultiply(e) {
    return this.multiplyQuaternions(e, this);
  }
  multiplyQuaternions(e, n) {
    const r = e._x,
      i = e._y,
      o = e._z,
      s = e._w,
      a = n._x,
      c = n._y,
      u = n._z,
      d = n._w;
    return (
      (this._x = r * d + s * a + i * u - o * c),
      (this._y = i * d + s * c + o * a - r * u),
      (this._z = o * d + s * u + r * c - i * a),
      (this._w = s * d - r * a - i * c - o * u),
      this._onChangeCallback(),
      this
    );
  }
  slerp(e, n) {
    if (n === 0) return this;
    if (n === 1) return this.copy(e);
    const r = this._x,
      i = this._y,
      o = this._z,
      s = this._w;
    let a = s * e._w + r * e._x + i * e._y + o * e._z;
    if (
      (a < 0
        ? ((this._w = -e._w),
          (this._x = -e._x),
          (this._y = -e._y),
          (this._z = -e._z),
          (a = -a))
        : this.copy(e),
      a >= 1)
    )
      return ((this._w = s), (this._x = r), (this._y = i), (this._z = o), this);
    const c = 1 - a * a;
    if (c <= Number.EPSILON) {
      const h = 1 - n;
      return (
        (this._w = h * s + n * this._w),
        (this._x = h * r + n * this._x),
        (this._y = h * i + n * this._y),
        (this._z = h * o + n * this._z),
        this.normalize(),
        this._onChangeCallback(),
        this
      );
    }
    const u = Math.sqrt(c),
      d = Math.atan2(u, a),
      f = Math.sin((1 - n) * d) / u,
      p = Math.sin(n * d) / u;
    return (
      (this._w = s * f + this._w * p),
      (this._x = r * f + this._x * p),
      (this._y = i * f + this._y * p),
      (this._z = o * f + this._z * p),
      this._onChangeCallback(),
      this
    );
  }
  slerpQuaternions(e, n, r) {
    return this.copy(e).slerp(n, r);
  }
  random() {
    const e = Math.random(),
      n = Math.sqrt(1 - e),
      r = Math.sqrt(e),
      i = 2 * Math.PI * Math.random(),
      o = 2 * Math.PI * Math.random();
    return this.set(
      n * Math.cos(i),
      r * Math.sin(o),
      r * Math.cos(o),
      n * Math.sin(i),
    );
  }
  equals(e) {
    return (
      e._x === this._x &&
      e._y === this._y &&
      e._z === this._z &&
      e._w === this._w
    );
  }
  fromArray(e, n = 0) {
    return (
      (this._x = e[n]),
      (this._y = e[n + 1]),
      (this._z = e[n + 2]),
      (this._w = e[n + 3]),
      this._onChangeCallback(),
      this
    );
  }
  toArray(e = [], n = 0) {
    return (
      (e[n] = this._x),
      (e[n + 1] = this._y),
      (e[n + 2] = this._z),
      (e[n + 3] = this._w),
      e
    );
  }
  fromBufferAttribute(e, n) {
    return (
      (this._x = e.getX(n)),
      (this._y = e.getY(n)),
      (this._z = e.getZ(n)),
      (this._w = e.getW(n)),
      this
    );
  }
  toJSON() {
    return this.toArray();
  }
  _onChange(e) {
    return ((this._onChangeCallback = e), this);
  }
  _onChangeCallback() {}
  *[Symbol.iterator]() {
    (yield this._x, yield this._y, yield this._z, yield this._w);
  }
}
class se {
  constructor(e = 0, n = 0, r = 0) {
    ((se.prototype.isVector3 = !0), (this.x = e), (this.y = n), (this.z = r));
  }
  set(e, n, r) {
    return (
      r === void 0 && (r = this.z),
      (this.x = e),
      (this.y = n),
      (this.z = r),
      this
    );
  }
  setScalar(e) {
    return ((this.x = e), (this.y = e), (this.z = e), this);
  }
  setX(e) {
    return ((this.x = e), this);
  }
  setY(e) {
    return ((this.y = e), this);
  }
  setZ(e) {
    return ((this.z = e), this);
  }
  setComponent(e, n) {
    switch (e) {
      case 0:
        this.x = n;
        break;
      case 1:
        this.y = n;
        break;
      case 2:
        this.z = n;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }
  getComponent(e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      default:
        throw new Error("index is out of range: " + e);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y, this.z);
  }
  copy(e) {
    return ((this.x = e.x), (this.y = e.y), (this.z = e.z), this);
  }
  add(e) {
    return ((this.x += e.x), (this.y += e.y), (this.z += e.z), this);
  }
  addScalar(e) {
    return ((this.x += e), (this.y += e), (this.z += e), this);
  }
  addVectors(e, n) {
    return (
      (this.x = e.x + n.x),
      (this.y = e.y + n.y),
      (this.z = e.z + n.z),
      this
    );
  }
  addScaledVector(e, n) {
    return (
      (this.x += e.x * n),
      (this.y += e.y * n),
      (this.z += e.z * n),
      this
    );
  }
  sub(e) {
    return ((this.x -= e.x), (this.y -= e.y), (this.z -= e.z), this);
  }
  subScalar(e) {
    return ((this.x -= e), (this.y -= e), (this.z -= e), this);
  }
  subVectors(e, n) {
    return (
      (this.x = e.x - n.x),
      (this.y = e.y - n.y),
      (this.z = e.z - n.z),
      this
    );
  }
  multiply(e) {
    return ((this.x *= e.x), (this.y *= e.y), (this.z *= e.z), this);
  }
  multiplyScalar(e) {
    return ((this.x *= e), (this.y *= e), (this.z *= e), this);
  }
  multiplyVectors(e, n) {
    return (
      (this.x = e.x * n.x),
      (this.y = e.y * n.y),
      (this.z = e.z * n.z),
      this
    );
  }
  applyEuler(e) {
    return this.applyQuaternion(Hh.setFromEuler(e));
  }
  applyAxisAngle(e, n) {
    return this.applyQuaternion(Hh.setFromAxisAngle(e, n));
  }
  applyMatrix3(e) {
    const n = this.x,
      r = this.y,
      i = this.z,
      o = e.elements;
    return (
      (this.x = o[0] * n + o[3] * r + o[6] * i),
      (this.y = o[1] * n + o[4] * r + o[7] * i),
      (this.z = o[2] * n + o[5] * r + o[8] * i),
      this
    );
  }
  applyNormalMatrix(e) {
    return this.applyMatrix3(e).normalize();
  }
  applyMatrix4(e) {
    const n = this.x,
      r = this.y,
      i = this.z,
      o = e.elements,
      s = 1 / (o[3] * n + o[7] * r + o[11] * i + o[15]);
    return (
      (this.x = (o[0] * n + o[4] * r + o[8] * i + o[12]) * s),
      (this.y = (o[1] * n + o[5] * r + o[9] * i + o[13]) * s),
      (this.z = (o[2] * n + o[6] * r + o[10] * i + o[14]) * s),
      this
    );
  }
  applyQuaternion(e) {
    const n = this.x,
      r = this.y,
      i = this.z,
      o = e.x,
      s = e.y,
      a = e.z,
      c = e.w,
      u = c * n + s * i - a * r,
      d = c * r + a * n - o * i,
      f = c * i + o * r - s * n,
      p = -o * n - s * r - a * i;
    return (
      (this.x = u * c + p * -o + d * -a - f * -s),
      (this.y = d * c + p * -s + f * -o - u * -a),
      (this.z = f * c + p * -a + u * -s - d * -o),
      this
    );
  }
  project(e) {
    return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(
      e.projectionMatrix,
    );
  }
  unproject(e) {
    return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(
      e.matrixWorld,
    );
  }
  transformDirection(e) {
    const n = this.x,
      r = this.y,
      i = this.z,
      o = e.elements;
    return (
      (this.x = o[0] * n + o[4] * r + o[8] * i),
      (this.y = o[1] * n + o[5] * r + o[9] * i),
      (this.z = o[2] * n + o[6] * r + o[10] * i),
      this.normalize()
    );
  }
  divide(e) {
    return ((this.x /= e.x), (this.y /= e.y), (this.z /= e.z), this);
  }
  divideScalar(e) {
    return this.multiplyScalar(1 / e);
  }
  min(e) {
    return (
      (this.x = Math.min(this.x, e.x)),
      (this.y = Math.min(this.y, e.y)),
      (this.z = Math.min(this.z, e.z)),
      this
    );
  }
  max(e) {
    return (
      (this.x = Math.max(this.x, e.x)),
      (this.y = Math.max(this.y, e.y)),
      (this.z = Math.max(this.z, e.z)),
      this
    );
  }
  clamp(e, n) {
    return (
      (this.x = Math.max(e.x, Math.min(n.x, this.x))),
      (this.y = Math.max(e.y, Math.min(n.y, this.y))),
      (this.z = Math.max(e.z, Math.min(n.z, this.z))),
      this
    );
  }
  clampScalar(e, n) {
    return (
      (this.x = Math.max(e, Math.min(n, this.x))),
      (this.y = Math.max(e, Math.min(n, this.y))),
      (this.z = Math.max(e, Math.min(n, this.z))),
      this
    );
  }
  clampLength(e, n) {
    const r = this.length();
    return this.divideScalar(r || 1).multiplyScalar(
      Math.max(e, Math.min(n, r)),
    );
  }
  floor() {
    return (
      (this.x = Math.floor(this.x)),
      (this.y = Math.floor(this.y)),
      (this.z = Math.floor(this.z)),
      this
    );
  }
  ceil() {
    return (
      (this.x = Math.ceil(this.x)),
      (this.y = Math.ceil(this.y)),
      (this.z = Math.ceil(this.z)),
      this
    );
  }
  round() {
    return (
      (this.x = Math.round(this.x)),
      (this.y = Math.round(this.y)),
      (this.z = Math.round(this.z)),
      this
    );
  }
  roundToZero() {
    return (
      (this.x = Math.trunc(this.x)),
      (this.y = Math.trunc(this.y)),
      (this.z = Math.trunc(this.z)),
      this
    );
  }
  negate() {
    return ((this.x = -this.x), (this.y = -this.y), (this.z = -this.z), this);
  }
  dot(e) {
    return this.x * e.x + this.y * e.y + this.z * e.z;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y + this.z * this.z;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  setLength(e) {
    return this.normalize().multiplyScalar(e);
  }
  lerp(e, n) {
    return (
      (this.x += (e.x - this.x) * n),
      (this.y += (e.y - this.y) * n),
      (this.z += (e.z - this.z) * n),
      this
    );
  }
  lerpVectors(e, n, r) {
    return (
      (this.x = e.x + (n.x - e.x) * r),
      (this.y = e.y + (n.y - e.y) * r),
      (this.z = e.z + (n.z - e.z) * r),
      this
    );
  }
  cross(e) {
    return this.crossVectors(this, e);
  }
  crossVectors(e, n) {
    const r = e.x,
      i = e.y,
      o = e.z,
      s = n.x,
      a = n.y,
      c = n.z;
    return (
      (this.x = i * c - o * a),
      (this.y = o * s - r * c),
      (this.z = r * a - i * s),
      this
    );
  }
  projectOnVector(e) {
    const n = e.lengthSq();
    if (n === 0) return this.set(0, 0, 0);
    const r = e.dot(this) / n;
    return this.copy(e).multiplyScalar(r);
  }
  projectOnPlane(e) {
    return (fu.copy(this).projectOnVector(e), this.sub(fu));
  }
  reflect(e) {
    return this.sub(fu.copy(e).multiplyScalar(2 * this.dot(e)));
  }
  angleTo(e) {
    const n = Math.sqrt(this.lengthSq() * e.lengthSq());
    if (n === 0) return Math.PI / 2;
    const r = this.dot(e) / n;
    return Math.acos(An(r, -1, 1));
  }
  distanceTo(e) {
    return Math.sqrt(this.distanceToSquared(e));
  }
  distanceToSquared(e) {
    const n = this.x - e.x,
      r = this.y - e.y,
      i = this.z - e.z;
    return n * n + r * r + i * i;
  }
  manhattanDistanceTo(e) {
    return (
      Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z)
    );
  }
  setFromSpherical(e) {
    return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
  }
  setFromSphericalCoords(e, n, r) {
    const i = Math.sin(n) * e;
    return (
      (this.x = i * Math.sin(r)),
      (this.y = Math.cos(n) * e),
      (this.z = i * Math.cos(r)),
      this
    );
  }
  setFromCylindrical(e) {
    return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
  }
  setFromCylindricalCoords(e, n, r) {
    return (
      (this.x = e * Math.sin(n)),
      (this.y = r),
      (this.z = e * Math.cos(n)),
      this
    );
  }
  setFromMatrixPosition(e) {
    const n = e.elements;
    return ((this.x = n[12]), (this.y = n[13]), (this.z = n[14]), this);
  }
  setFromMatrixScale(e) {
    const n = this.setFromMatrixColumn(e, 0).length(),
      r = this.setFromMatrixColumn(e, 1).length(),
      i = this.setFromMatrixColumn(e, 2).length();
    return ((this.x = n), (this.y = r), (this.z = i), this);
  }
  setFromMatrixColumn(e, n) {
    return this.fromArray(e.elements, n * 4);
  }
  setFromMatrix3Column(e, n) {
    return this.fromArray(e.elements, n * 3);
  }
  setFromEuler(e) {
    return ((this.x = e._x), (this.y = e._y), (this.z = e._z), this);
  }
  setFromColor(e) {
    return ((this.x = e.r), (this.y = e.g), (this.z = e.b), this);
  }
  equals(e) {
    return e.x === this.x && e.y === this.y && e.z === this.z;
  }
  fromArray(e, n = 0) {
    return ((this.x = e[n]), (this.y = e[n + 1]), (this.z = e[n + 2]), this);
  }
  toArray(e = [], n = 0) {
    return ((e[n] = this.x), (e[n + 1] = this.y), (e[n + 2] = this.z), e);
  }
  fromBufferAttribute(e, n) {
    return (
      (this.x = e.getX(n)),
      (this.y = e.getY(n)),
      (this.z = e.getZ(n)),
      this
    );
  }
  random() {
    return (
      (this.x = Math.random()),
      (this.y = Math.random()),
      (this.z = Math.random()),
      this
    );
  }
  randomDirection() {
    const e = (Math.random() - 0.5) * 2,
      n = Math.random() * Math.PI * 2,
      r = Math.sqrt(1 - e ** 2);
    return (
      (this.x = r * Math.cos(n)),
      (this.y = r * Math.sin(n)),
      (this.z = e),
      this
    );
  }
  *[Symbol.iterator]() {
    (yield this.x, yield this.y, yield this.z);
  }
}
const fu = new se(),
  Hh = new co();
class Ga {
  constructor(
    e = new se(1 / 0, 1 / 0, 1 / 0),
    n = new se(-1 / 0, -1 / 0, -1 / 0),
  ) {
    ((this.isBox3 = !0), (this.min = e), (this.max = n));
  }
  set(e, n) {
    return (this.min.copy(e), this.max.copy(n), this);
  }
  setFromArray(e) {
    this.makeEmpty();
    for (let n = 0, r = e.length; n < r; n += 3)
      this.expandByPoint(Fr.fromArray(e, n));
    return this;
  }
  setFromBufferAttribute(e) {
    this.makeEmpty();
    for (let n = 0, r = e.count; n < r; n++)
      this.expandByPoint(Fr.fromBufferAttribute(e, n));
    return this;
  }
  setFromPoints(e) {
    this.makeEmpty();
    for (let n = 0, r = e.length; n < r; n++) this.expandByPoint(e[n]);
    return this;
  }
  setFromCenterAndSize(e, n) {
    const r = Fr.copy(n).multiplyScalar(0.5);
    return (this.min.copy(e).sub(r), this.max.copy(e).add(r), this);
  }
  setFromObject(e, n = !1) {
    return (this.makeEmpty(), this.expandByObject(e, n));
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return (this.min.copy(e.min), this.max.copy(e.max), this);
  }
  makeEmpty() {
    return (
      (this.min.x = this.min.y = this.min.z = 1 / 0),
      (this.max.x = this.max.y = this.max.z = -1 / 0),
      this
    );
  }
  isEmpty() {
    return (
      this.max.x < this.min.x ||
      this.max.y < this.min.y ||
      this.max.z < this.min.z
    );
  }
  getCenter(e) {
    return this.isEmpty()
      ? e.set(0, 0, 0)
      : e.addVectors(this.min, this.max).multiplyScalar(0.5);
  }
  getSize(e) {
    return this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min);
  }
  expandByPoint(e) {
    return (this.min.min(e), this.max.max(e), this);
  }
  expandByVector(e) {
    return (this.min.sub(e), this.max.add(e), this);
  }
  expandByScalar(e) {
    return (this.min.addScalar(-e), this.max.addScalar(e), this);
  }
  expandByObject(e, n = !1) {
    if ((e.updateWorldMatrix(!1, !1), e.boundingBox !== void 0))
      (e.boundingBox === null && e.computeBoundingBox(),
        yo.copy(e.boundingBox),
        yo.applyMatrix4(e.matrixWorld),
        this.union(yo));
    else {
      const i = e.geometry;
      if (i !== void 0)
        if (n && i.attributes !== void 0 && i.attributes.position !== void 0) {
          const o = i.attributes.position;
          for (let s = 0, a = o.count; s < a; s++)
            (Fr.fromBufferAttribute(o, s).applyMatrix4(e.matrixWorld),
              this.expandByPoint(Fr));
        } else
          (i.boundingBox === null && i.computeBoundingBox(),
            yo.copy(i.boundingBox),
            yo.applyMatrix4(e.matrixWorld),
            this.union(yo));
    }
    const r = e.children;
    for (let i = 0, o = r.length; i < o; i++) this.expandByObject(r[i], n);
    return this;
  }
  containsPoint(e) {
    return !(
      e.x < this.min.x ||
      e.x > this.max.x ||
      e.y < this.min.y ||
      e.y > this.max.y ||
      e.z < this.min.z ||
      e.z > this.max.z
    );
  }
  containsBox(e) {
    return (
      this.min.x <= e.min.x &&
      e.max.x <= this.max.x &&
      this.min.y <= e.min.y &&
      e.max.y <= this.max.y &&
      this.min.z <= e.min.z &&
      e.max.z <= this.max.z
    );
  }
  getParameter(e, n) {
    return n.set(
      (e.x - this.min.x) / (this.max.x - this.min.x),
      (e.y - this.min.y) / (this.max.y - this.min.y),
      (e.z - this.min.z) / (this.max.z - this.min.z),
    );
  }
  intersectsBox(e) {
    return !(
      e.max.x < this.min.x ||
      e.min.x > this.max.x ||
      e.max.y < this.min.y ||
      e.min.y > this.max.y ||
      e.max.z < this.min.z ||
      e.min.z > this.max.z
    );
  }
  intersectsSphere(e) {
    return (
      this.clampPoint(e.center, Fr),
      Fr.distanceToSquared(e.center) <= e.radius * e.radius
    );
  }
  intersectsPlane(e) {
    let n, r;
    return (
      e.normal.x > 0
        ? ((n = e.normal.x * this.min.x), (r = e.normal.x * this.max.x))
        : ((n = e.normal.x * this.max.x), (r = e.normal.x * this.min.x)),
      e.normal.y > 0
        ? ((n += e.normal.y * this.min.y), (r += e.normal.y * this.max.y))
        : ((n += e.normal.y * this.max.y), (r += e.normal.y * this.min.y)),
      e.normal.z > 0
        ? ((n += e.normal.z * this.min.z), (r += e.normal.z * this.max.z))
        : ((n += e.normal.z * this.max.z), (r += e.normal.z * this.min.z)),
      n <= -e.constant && r >= -e.constant
    );
  }
  intersectsTriangle(e) {
    if (this.isEmpty()) return !1;
    (this.getCenter(ks),
      rl.subVectors(this.max, ks),
      xo.subVectors(e.a, ks),
      _o.subVectors(e.b, ks),
      wo.subVectors(e.c, ks),
      pi.subVectors(_o, xo),
      hi.subVectors(wo, _o),
      Vi.subVectors(xo, wo));
    let n = [
      0,
      -pi.z,
      pi.y,
      0,
      -hi.z,
      hi.y,
      0,
      -Vi.z,
      Vi.y,
      pi.z,
      0,
      -pi.x,
      hi.z,
      0,
      -hi.x,
      Vi.z,
      0,
      -Vi.x,
      -pi.y,
      pi.x,
      0,
      -hi.y,
      hi.x,
      0,
      -Vi.y,
      Vi.x,
      0,
    ];
    return !pu(n, xo, _o, wo, rl) ||
      ((n = [1, 0, 0, 0, 1, 0, 0, 0, 1]), !pu(n, xo, _o, wo, rl))
      ? !1
      : (il.crossVectors(pi, hi),
        (n = [il.x, il.y, il.z]),
        pu(n, xo, _o, wo, rl));
  }
  clampPoint(e, n) {
    return n.copy(e).clamp(this.min, this.max);
  }
  distanceToPoint(e) {
    return this.clampPoint(e, Fr).distanceTo(e);
  }
  getBoundingSphere(e) {
    return (
      this.isEmpty()
        ? e.makeEmpty()
        : (this.getCenter(e.center),
          (e.radius = this.getSize(Fr).length() * 0.5)),
      e
    );
  }
  intersect(e) {
    return (
      this.min.max(e.min),
      this.max.min(e.max),
      this.isEmpty() && this.makeEmpty(),
      this
    );
  }
  union(e) {
    return (this.min.min(e.min), this.max.max(e.max), this);
  }
  applyMatrix4(e) {
    return this.isEmpty()
      ? this
      : (Ur[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e),
        Ur[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
        Ur[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
        Ur[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
        Ur[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
        Ur[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
        Ur[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
        Ur[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
        this.setFromPoints(Ur),
        this);
  }
  translate(e) {
    return (this.min.add(e), this.max.add(e), this);
  }
  equals(e) {
    return e.min.equals(this.min) && e.max.equals(this.max);
  }
}
const Ur = [
    new se(),
    new se(),
    new se(),
    new se(),
    new se(),
    new se(),
    new se(),
    new se(),
  ],
  Fr = new se(),
  yo = new Ga(),
  xo = new se(),
  _o = new se(),
  wo = new se(),
  pi = new se(),
  hi = new se(),
  Vi = new se(),
  ks = new se(),
  rl = new se(),
  il = new se(),
  Hi = new se();
function pu(t, e, n, r, i) {
  for (let o = 0, s = t.length - 3; o <= s; o += 3) {
    Hi.fromArray(t, o);
    const a =
        i.x * Math.abs(Hi.x) + i.y * Math.abs(Hi.y) + i.z * Math.abs(Hi.z),
      c = e.dot(Hi),
      u = n.dot(Hi),
      d = r.dot(Hi);
    if (Math.max(-Math.max(c, u, d), Math.min(c, u, d)) > a) return !1;
  }
  return !0;
}
const pA = new Ga(),
  Ss = new se(),
  hu = new se();
class sf {
  constructor(e = new se(), n = -1) {
    ((this.center = e), (this.radius = n));
  }
  set(e, n) {
    return (this.center.copy(e), (this.radius = n), this);
  }
  setFromPoints(e, n) {
    const r = this.center;
    n !== void 0 ? r.copy(n) : pA.setFromPoints(e).getCenter(r);
    let i = 0;
    for (let o = 0, s = e.length; o < s; o++)
      i = Math.max(i, r.distanceToSquared(e[o]));
    return ((this.radius = Math.sqrt(i)), this);
  }
  copy(e) {
    return (this.center.copy(e.center), (this.radius = e.radius), this);
  }
  isEmpty() {
    return this.radius < 0;
  }
  makeEmpty() {
    return (this.center.set(0, 0, 0), (this.radius = -1), this);
  }
  containsPoint(e) {
    return e.distanceToSquared(this.center) <= this.radius * this.radius;
  }
  distanceToPoint(e) {
    return e.distanceTo(this.center) - this.radius;
  }
  intersectsSphere(e) {
    const n = this.radius + e.radius;
    return e.center.distanceToSquared(this.center) <= n * n;
  }
  intersectsBox(e) {
    return e.intersectsSphere(this);
  }
  intersectsPlane(e) {
    return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
  }
  clampPoint(e, n) {
    const r = this.center.distanceToSquared(e);
    return (
      n.copy(e),
      r > this.radius * this.radius &&
        (n.sub(this.center).normalize(),
        n.multiplyScalar(this.radius).add(this.center)),
      n
    );
  }
  getBoundingBox(e) {
    return this.isEmpty()
      ? (e.makeEmpty(), e)
      : (e.set(this.center, this.center), e.expandByScalar(this.radius), e);
  }
  applyMatrix4(e) {
    return (
      this.center.applyMatrix4(e),
      (this.radius = this.radius * e.getMaxScaleOnAxis()),
      this
    );
  }
  translate(e) {
    return (this.center.add(e), this);
  }
  expandByPoint(e) {
    if (this.isEmpty()) return (this.center.copy(e), (this.radius = 0), this);
    Ss.subVectors(e, this.center);
    const n = Ss.lengthSq();
    if (n > this.radius * this.radius) {
      const r = Math.sqrt(n),
        i = (r - this.radius) * 0.5;
      (this.center.addScaledVector(Ss, i / r), (this.radius += i));
    }
    return this;
  }
  union(e) {
    return e.isEmpty()
      ? this
      : this.isEmpty()
        ? (this.copy(e), this)
        : (this.center.equals(e.center) === !0
            ? (this.radius = Math.max(this.radius, e.radius))
            : (hu.subVectors(e.center, this.center).setLength(e.radius),
              this.expandByPoint(Ss.copy(e.center).add(hu)),
              this.expandByPoint(Ss.copy(e.center).sub(hu))),
          this);
  }
  equals(e) {
    return e.center.equals(this.center) && e.radius === this.radius;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const Nr = new se(),
  mu = new se(),
  ol = new se(),
  mi = new se(),
  gu = new se(),
  sl = new se(),
  vu = new se();
class wv {
  constructor(e = new se(), n = new se(0, 0, -1)) {
    ((this.origin = e), (this.direction = n));
  }
  set(e, n) {
    return (this.origin.copy(e), this.direction.copy(n), this);
  }
  copy(e) {
    return (this.origin.copy(e.origin), this.direction.copy(e.direction), this);
  }
  at(e, n) {
    return n.copy(this.origin).addScaledVector(this.direction, e);
  }
  lookAt(e) {
    return (this.direction.copy(e).sub(this.origin).normalize(), this);
  }
  recast(e) {
    return (this.origin.copy(this.at(e, Nr)), this);
  }
  closestPointToPoint(e, n) {
    n.subVectors(e, this.origin);
    const r = n.dot(this.direction);
    return r < 0
      ? n.copy(this.origin)
      : n.copy(this.origin).addScaledVector(this.direction, r);
  }
  distanceToPoint(e) {
    return Math.sqrt(this.distanceSqToPoint(e));
  }
  distanceSqToPoint(e) {
    const n = Nr.subVectors(e, this.origin).dot(this.direction);
    return n < 0
      ? this.origin.distanceToSquared(e)
      : (Nr.copy(this.origin).addScaledVector(this.direction, n),
        Nr.distanceToSquared(e));
  }
  distanceSqToSegment(e, n, r, i) {
    (mu.copy(e).add(n).multiplyScalar(0.5),
      ol.copy(n).sub(e).normalize(),
      mi.copy(this.origin).sub(mu));
    const o = e.distanceTo(n) * 0.5,
      s = -this.direction.dot(ol),
      a = mi.dot(this.direction),
      c = -mi.dot(ol),
      u = mi.lengthSq(),
      d = Math.abs(1 - s * s);
    let f, p, h, v;
    if (d > 0)
      if (((f = s * c - a), (p = s * a - c), (v = o * d), f >= 0))
        if (p >= -v)
          if (p <= v) {
            const b = 1 / d;
            ((f *= b),
              (p *= b),
              (h = f * (f + s * p + 2 * a) + p * (s * f + p + 2 * c) + u));
          } else
            ((p = o),
              (f = Math.max(0, -(s * p + a))),
              (h = -f * f + p * (p + 2 * c) + u));
        else
          ((p = -o),
            (f = Math.max(0, -(s * p + a))),
            (h = -f * f + p * (p + 2 * c) + u));
      else
        p <= -v
          ? ((f = Math.max(0, -(-s * o + a))),
            (p = f > 0 ? -o : Math.min(Math.max(-o, -c), o)),
            (h = -f * f + p * (p + 2 * c) + u))
          : p <= v
            ? ((f = 0),
              (p = Math.min(Math.max(-o, -c), o)),
              (h = p * (p + 2 * c) + u))
            : ((f = Math.max(0, -(s * o + a))),
              (p = f > 0 ? o : Math.min(Math.max(-o, -c), o)),
              (h = -f * f + p * (p + 2 * c) + u));
    else
      ((p = s > 0 ? -o : o),
        (f = Math.max(0, -(s * p + a))),
        (h = -f * f + p * (p + 2 * c) + u));
    return (
      r && r.copy(this.origin).addScaledVector(this.direction, f),
      i && i.copy(mu).addScaledVector(ol, p),
      h
    );
  }
  intersectSphere(e, n) {
    Nr.subVectors(e.center, this.origin);
    const r = Nr.dot(this.direction),
      i = Nr.dot(Nr) - r * r,
      o = e.radius * e.radius;
    if (i > o) return null;
    const s = Math.sqrt(o - i),
      a = r - s,
      c = r + s;
    return c < 0 ? null : a < 0 ? this.at(c, n) : this.at(a, n);
  }
  intersectsSphere(e) {
    return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
  }
  distanceToPlane(e) {
    const n = e.normal.dot(this.direction);
    if (n === 0) return e.distanceToPoint(this.origin) === 0 ? 0 : null;
    const r = -(this.origin.dot(e.normal) + e.constant) / n;
    return r >= 0 ? r : null;
  }
  intersectPlane(e, n) {
    const r = this.distanceToPlane(e);
    return r === null ? null : this.at(r, n);
  }
  intersectsPlane(e) {
    const n = e.distanceToPoint(this.origin);
    return n === 0 || e.normal.dot(this.direction) * n < 0;
  }
  intersectBox(e, n) {
    let r, i, o, s, a, c;
    const u = 1 / this.direction.x,
      d = 1 / this.direction.y,
      f = 1 / this.direction.z,
      p = this.origin;
    return (
      u >= 0
        ? ((r = (e.min.x - p.x) * u), (i = (e.max.x - p.x) * u))
        : ((r = (e.max.x - p.x) * u), (i = (e.min.x - p.x) * u)),
      d >= 0
        ? ((o = (e.min.y - p.y) * d), (s = (e.max.y - p.y) * d))
        : ((o = (e.max.y - p.y) * d), (s = (e.min.y - p.y) * d)),
      r > s ||
      o > i ||
      ((o > r || isNaN(r)) && (r = o),
      (s < i || isNaN(i)) && (i = s),
      f >= 0
        ? ((a = (e.min.z - p.z) * f), (c = (e.max.z - p.z) * f))
        : ((a = (e.max.z - p.z) * f), (c = (e.min.z - p.z) * f)),
      r > c || a > i) ||
      ((a > r || r !== r) && (r = a), (c < i || i !== i) && (i = c), i < 0)
        ? null
        : this.at(r >= 0 ? r : i, n)
    );
  }
  intersectsBox(e) {
    return this.intersectBox(e, Nr) !== null;
  }
  intersectTriangle(e, n, r, i, o) {
    (gu.subVectors(n, e), sl.subVectors(r, e), vu.crossVectors(gu, sl));
    let s = this.direction.dot(vu),
      a;
    if (s > 0) {
      if (i) return null;
      a = 1;
    } else if (s < 0) ((a = -1), (s = -s));
    else return null;
    mi.subVectors(this.origin, e);
    const c = a * this.direction.dot(sl.crossVectors(mi, sl));
    if (c < 0) return null;
    const u = a * this.direction.dot(gu.cross(mi));
    if (u < 0 || c + u > s) return null;
    const d = -a * mi.dot(vu);
    return d < 0 ? null : this.at(d / s, o);
  }
  applyMatrix4(e) {
    return (
      this.origin.applyMatrix4(e),
      this.direction.transformDirection(e),
      this
    );
  }
  equals(e) {
    return e.origin.equals(this.origin) && e.direction.equals(this.direction);
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class Kt {
  constructor(e, n, r, i, o, s, a, c, u, d, f, p, h, v, b, g) {
    ((Kt.prototype.isMatrix4 = !0),
      (this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
      e !== void 0 && this.set(e, n, r, i, o, s, a, c, u, d, f, p, h, v, b, g));
  }
  set(e, n, r, i, o, s, a, c, u, d, f, p, h, v, b, g) {
    const m = this.elements;
    return (
      (m[0] = e),
      (m[4] = n),
      (m[8] = r),
      (m[12] = i),
      (m[1] = o),
      (m[5] = s),
      (m[9] = a),
      (m[13] = c),
      (m[2] = u),
      (m[6] = d),
      (m[10] = f),
      (m[14] = p),
      (m[3] = h),
      (m[7] = v),
      (m[11] = b),
      (m[15] = g),
      this
    );
  }
  identity() {
    return (this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this);
  }
  clone() {
    return new Kt().fromArray(this.elements);
  }
  copy(e) {
    const n = this.elements,
      r = e.elements;
    return (
      (n[0] = r[0]),
      (n[1] = r[1]),
      (n[2] = r[2]),
      (n[3] = r[3]),
      (n[4] = r[4]),
      (n[5] = r[5]),
      (n[6] = r[6]),
      (n[7] = r[7]),
      (n[8] = r[8]),
      (n[9] = r[9]),
      (n[10] = r[10]),
      (n[11] = r[11]),
      (n[12] = r[12]),
      (n[13] = r[13]),
      (n[14] = r[14]),
      (n[15] = r[15]),
      this
    );
  }
  copyPosition(e) {
    const n = this.elements,
      r = e.elements;
    return ((n[12] = r[12]), (n[13] = r[13]), (n[14] = r[14]), this);
  }
  setFromMatrix3(e) {
    const n = e.elements;
    return (
      this.set(
        n[0],
        n[3],
        n[6],
        0,
        n[1],
        n[4],
        n[7],
        0,
        n[2],
        n[5],
        n[8],
        0,
        0,
        0,
        0,
        1,
      ),
      this
    );
  }
  extractBasis(e, n, r) {
    return (
      e.setFromMatrixColumn(this, 0),
      n.setFromMatrixColumn(this, 1),
      r.setFromMatrixColumn(this, 2),
      this
    );
  }
  makeBasis(e, n, r) {
    return (
      this.set(
        e.x,
        n.x,
        r.x,
        0,
        e.y,
        n.y,
        r.y,
        0,
        e.z,
        n.z,
        r.z,
        0,
        0,
        0,
        0,
        1,
      ),
      this
    );
  }
  extractRotation(e) {
    const n = this.elements,
      r = e.elements,
      i = 1 / ko.setFromMatrixColumn(e, 0).length(),
      o = 1 / ko.setFromMatrixColumn(e, 1).length(),
      s = 1 / ko.setFromMatrixColumn(e, 2).length();
    return (
      (n[0] = r[0] * i),
      (n[1] = r[1] * i),
      (n[2] = r[2] * i),
      (n[3] = 0),
      (n[4] = r[4] * o),
      (n[5] = r[5] * o),
      (n[6] = r[6] * o),
      (n[7] = 0),
      (n[8] = r[8] * s),
      (n[9] = r[9] * s),
      (n[10] = r[10] * s),
      (n[11] = 0),
      (n[12] = 0),
      (n[13] = 0),
      (n[14] = 0),
      (n[15] = 1),
      this
    );
  }
  makeRotationFromEuler(e) {
    const n = this.elements,
      r = e.x,
      i = e.y,
      o = e.z,
      s = Math.cos(r),
      a = Math.sin(r),
      c = Math.cos(i),
      u = Math.sin(i),
      d = Math.cos(o),
      f = Math.sin(o);
    if (e.order === "XYZ") {
      const p = s * d,
        h = s * f,
        v = a * d,
        b = a * f;
      ((n[0] = c * d),
        (n[4] = -c * f),
        (n[8] = u),
        (n[1] = h + v * u),
        (n[5] = p - b * u),
        (n[9] = -a * c),
        (n[2] = b - p * u),
        (n[6] = v + h * u),
        (n[10] = s * c));
    } else if (e.order === "YXZ") {
      const p = c * d,
        h = c * f,
        v = u * d,
        b = u * f;
      ((n[0] = p + b * a),
        (n[4] = v * a - h),
        (n[8] = s * u),
        (n[1] = s * f),
        (n[5] = s * d),
        (n[9] = -a),
        (n[2] = h * a - v),
        (n[6] = b + p * a),
        (n[10] = s * c));
    } else if (e.order === "ZXY") {
      const p = c * d,
        h = c * f,
        v = u * d,
        b = u * f;
      ((n[0] = p - b * a),
        (n[4] = -s * f),
        (n[8] = v + h * a),
        (n[1] = h + v * a),
        (n[5] = s * d),
        (n[9] = b - p * a),
        (n[2] = -s * u),
        (n[6] = a),
        (n[10] = s * c));
    } else if (e.order === "ZYX") {
      const p = s * d,
        h = s * f,
        v = a * d,
        b = a * f;
      ((n[0] = c * d),
        (n[4] = v * u - h),
        (n[8] = p * u + b),
        (n[1] = c * f),
        (n[5] = b * u + p),
        (n[9] = h * u - v),
        (n[2] = -u),
        (n[6] = a * c),
        (n[10] = s * c));
    } else if (e.order === "YZX") {
      const p = s * c,
        h = s * u,
        v = a * c,
        b = a * u;
      ((n[0] = c * d),
        (n[4] = b - p * f),
        (n[8] = v * f + h),
        (n[1] = f),
        (n[5] = s * d),
        (n[9] = -a * d),
        (n[2] = -u * d),
        (n[6] = h * f + v),
        (n[10] = p - b * f));
    } else if (e.order === "XZY") {
      const p = s * c,
        h = s * u,
        v = a * c,
        b = a * u;
      ((n[0] = c * d),
        (n[4] = -f),
        (n[8] = u * d),
        (n[1] = p * f + b),
        (n[5] = s * d),
        (n[9] = h * f - v),
        (n[2] = v * f - h),
        (n[6] = a * d),
        (n[10] = b * f + p));
    }
    return (
      (n[3] = 0),
      (n[7] = 0),
      (n[11] = 0),
      (n[12] = 0),
      (n[13] = 0),
      (n[14] = 0),
      (n[15] = 1),
      this
    );
  }
  makeRotationFromQuaternion(e) {
    return this.compose(hA, e, mA);
  }
  lookAt(e, n, r) {
    const i = this.elements;
    return (
      Un.subVectors(e, n),
      Un.lengthSq() === 0 && (Un.z = 1),
      Un.normalize(),
      gi.crossVectors(r, Un),
      gi.lengthSq() === 0 &&
        (Math.abs(r.z) === 1 ? (Un.x += 1e-4) : (Un.z += 1e-4),
        Un.normalize(),
        gi.crossVectors(r, Un)),
      gi.normalize(),
      al.crossVectors(Un, gi),
      (i[0] = gi.x),
      (i[4] = al.x),
      (i[8] = Un.x),
      (i[1] = gi.y),
      (i[5] = al.y),
      (i[9] = Un.y),
      (i[2] = gi.z),
      (i[6] = al.z),
      (i[10] = Un.z),
      this
    );
  }
  multiply(e) {
    return this.multiplyMatrices(this, e);
  }
  premultiply(e) {
    return this.multiplyMatrices(e, this);
  }
  multiplyMatrices(e, n) {
    const r = e.elements,
      i = n.elements,
      o = this.elements,
      s = r[0],
      a = r[4],
      c = r[8],
      u = r[12],
      d = r[1],
      f = r[5],
      p = r[9],
      h = r[13],
      v = r[2],
      b = r[6],
      g = r[10],
      m = r[14],
      _ = r[3],
      y = r[7],
      x = r[11],
      C = r[15],
      w = i[0],
      S = i[4],
      D = i[8],
      k = i[12],
      P = i[1],
      I = i[5],
      W = i[9],
      X = i[13],
      Z = i[2],
      G = i[6],
      $ = i[10],
      ne = i[14],
      U = i[3],
      ie = i[7],
      J = i[11],
      V = i[15];
    return (
      (o[0] = s * w + a * P + c * Z + u * U),
      (o[4] = s * S + a * I + c * G + u * ie),
      (o[8] = s * D + a * W + c * $ + u * J),
      (o[12] = s * k + a * X + c * ne + u * V),
      (o[1] = d * w + f * P + p * Z + h * U),
      (o[5] = d * S + f * I + p * G + h * ie),
      (o[9] = d * D + f * W + p * $ + h * J),
      (o[13] = d * k + f * X + p * ne + h * V),
      (o[2] = v * w + b * P + g * Z + m * U),
      (o[6] = v * S + b * I + g * G + m * ie),
      (o[10] = v * D + b * W + g * $ + m * J),
      (o[14] = v * k + b * X + g * ne + m * V),
      (o[3] = _ * w + y * P + x * Z + C * U),
      (o[7] = _ * S + y * I + x * G + C * ie),
      (o[11] = _ * D + y * W + x * $ + C * J),
      (o[15] = _ * k + y * X + x * ne + C * V),
      this
    );
  }
  multiplyScalar(e) {
    const n = this.elements;
    return (
      (n[0] *= e),
      (n[4] *= e),
      (n[8] *= e),
      (n[12] *= e),
      (n[1] *= e),
      (n[5] *= e),
      (n[9] *= e),
      (n[13] *= e),
      (n[2] *= e),
      (n[6] *= e),
      (n[10] *= e),
      (n[14] *= e),
      (n[3] *= e),
      (n[7] *= e),
      (n[11] *= e),
      (n[15] *= e),
      this
    );
  }
  determinant() {
    const e = this.elements,
      n = e[0],
      r = e[4],
      i = e[8],
      o = e[12],
      s = e[1],
      a = e[5],
      c = e[9],
      u = e[13],
      d = e[2],
      f = e[6],
      p = e[10],
      h = e[14],
      v = e[3],
      b = e[7],
      g = e[11],
      m = e[15];
    return (
      v *
        (+o * c * f -
          i * u * f -
          o * a * p +
          r * u * p +
          i * a * h -
          r * c * h) +
      b *
        (+n * c * h -
          n * u * p +
          o * s * p -
          i * s * h +
          i * u * d -
          o * c * d) +
      g *
        (+n * u * f -
          n * a * h -
          o * s * f +
          r * s * h +
          o * a * d -
          r * u * d) +
      m *
        (-i * a * d - n * c * f + n * a * p + i * s * f - r * s * p + r * c * d)
    );
  }
  transpose() {
    const e = this.elements;
    let n;
    return (
      (n = e[1]),
      (e[1] = e[4]),
      (e[4] = n),
      (n = e[2]),
      (e[2] = e[8]),
      (e[8] = n),
      (n = e[6]),
      (e[6] = e[9]),
      (e[9] = n),
      (n = e[3]),
      (e[3] = e[12]),
      (e[12] = n),
      (n = e[7]),
      (e[7] = e[13]),
      (e[13] = n),
      (n = e[11]),
      (e[11] = e[14]),
      (e[14] = n),
      this
    );
  }
  setPosition(e, n, r) {
    const i = this.elements;
    return (
      e.isVector3
        ? ((i[12] = e.x), (i[13] = e.y), (i[14] = e.z))
        : ((i[12] = e), (i[13] = n), (i[14] = r)),
      this
    );
  }
  invert() {
    const e = this.elements,
      n = e[0],
      r = e[1],
      i = e[2],
      o = e[3],
      s = e[4],
      a = e[5],
      c = e[6],
      u = e[7],
      d = e[8],
      f = e[9],
      p = e[10],
      h = e[11],
      v = e[12],
      b = e[13],
      g = e[14],
      m = e[15],
      _ = f * g * u - b * p * u + b * c * h - a * g * h - f * c * m + a * p * m,
      y = v * p * u - d * g * u - v * c * h + s * g * h + d * c * m - s * p * m,
      x = d * b * u - v * f * u + v * a * h - s * b * h - d * a * m + s * f * m,
      C = v * f * c - d * b * c - v * a * p + s * b * p + d * a * g - s * f * g,
      w = n * _ + r * y + i * x + o * C;
    if (w === 0)
      return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    const S = 1 / w;
    return (
      (e[0] = _ * S),
      (e[1] =
        (b * p * o -
          f * g * o -
          b * i * h +
          r * g * h +
          f * i * m -
          r * p * m) *
        S),
      (e[2] =
        (a * g * o -
          b * c * o +
          b * i * u -
          r * g * u -
          a * i * m +
          r * c * m) *
        S),
      (e[3] =
        (f * c * o -
          a * p * o -
          f * i * u +
          r * p * u +
          a * i * h -
          r * c * h) *
        S),
      (e[4] = y * S),
      (e[5] =
        (d * g * o -
          v * p * o +
          v * i * h -
          n * g * h -
          d * i * m +
          n * p * m) *
        S),
      (e[6] =
        (v * c * o -
          s * g * o -
          v * i * u +
          n * g * u +
          s * i * m -
          n * c * m) *
        S),
      (e[7] =
        (s * p * o -
          d * c * o +
          d * i * u -
          n * p * u -
          s * i * h +
          n * c * h) *
        S),
      (e[8] = x * S),
      (e[9] =
        (v * f * o -
          d * b * o -
          v * r * h +
          n * b * h +
          d * r * m -
          n * f * m) *
        S),
      (e[10] =
        (s * b * o -
          v * a * o +
          v * r * u -
          n * b * u -
          s * r * m +
          n * a * m) *
        S),
      (e[11] =
        (d * a * o -
          s * f * o -
          d * r * u +
          n * f * u +
          s * r * h -
          n * a * h) *
        S),
      (e[12] = C * S),
      (e[13] =
        (d * b * i -
          v * f * i +
          v * r * p -
          n * b * p -
          d * r * g +
          n * f * g) *
        S),
      (e[14] =
        (v * a * i -
          s * b * i -
          v * r * c +
          n * b * c +
          s * r * g -
          n * a * g) *
        S),
      (e[15] =
        (s * f * i -
          d * a * i +
          d * r * c -
          n * f * c -
          s * r * p +
          n * a * p) *
        S),
      this
    );
  }
  scale(e) {
    const n = this.elements,
      r = e.x,
      i = e.y,
      o = e.z;
    return (
      (n[0] *= r),
      (n[4] *= i),
      (n[8] *= o),
      (n[1] *= r),
      (n[5] *= i),
      (n[9] *= o),
      (n[2] *= r),
      (n[6] *= i),
      (n[10] *= o),
      (n[3] *= r),
      (n[7] *= i),
      (n[11] *= o),
      this
    );
  }
  getMaxScaleOnAxis() {
    const e = this.elements,
      n = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
      r = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
      i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
    return Math.sqrt(Math.max(n, r, i));
  }
  makeTranslation(e, n, r) {
    return (
      e.isVector3
        ? this.set(1, 0, 0, e.x, 0, 1, 0, e.y, 0, 0, 1, e.z, 0, 0, 0, 1)
        : this.set(1, 0, 0, e, 0, 1, 0, n, 0, 0, 1, r, 0, 0, 0, 1),
      this
    );
  }
  makeRotationX(e) {
    const n = Math.cos(e),
      r = Math.sin(e);
    return (this.set(1, 0, 0, 0, 0, n, -r, 0, 0, r, n, 0, 0, 0, 0, 1), this);
  }
  makeRotationY(e) {
    const n = Math.cos(e),
      r = Math.sin(e);
    return (this.set(n, 0, r, 0, 0, 1, 0, 0, -r, 0, n, 0, 0, 0, 0, 1), this);
  }
  makeRotationZ(e) {
    const n = Math.cos(e),
      r = Math.sin(e);
    return (this.set(n, -r, 0, 0, r, n, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this);
  }
  makeRotationAxis(e, n) {
    const r = Math.cos(n),
      i = Math.sin(n),
      o = 1 - r,
      s = e.x,
      a = e.y,
      c = e.z,
      u = o * s,
      d = o * a;
    return (
      this.set(
        u * s + r,
        u * a - i * c,
        u * c + i * a,
        0,
        u * a + i * c,
        d * a + r,
        d * c - i * s,
        0,
        u * c - i * a,
        d * c + i * s,
        o * c * c + r,
        0,
        0,
        0,
        0,
        1,
      ),
      this
    );
  }
  makeScale(e, n, r) {
    return (this.set(e, 0, 0, 0, 0, n, 0, 0, 0, 0, r, 0, 0, 0, 0, 1), this);
  }
  makeShear(e, n, r, i, o, s) {
    return (this.set(1, r, o, 0, e, 1, s, 0, n, i, 1, 0, 0, 0, 0, 1), this);
  }
  compose(e, n, r) {
    const i = this.elements,
      o = n._x,
      s = n._y,
      a = n._z,
      c = n._w,
      u = o + o,
      d = s + s,
      f = a + a,
      p = o * u,
      h = o * d,
      v = o * f,
      b = s * d,
      g = s * f,
      m = a * f,
      _ = c * u,
      y = c * d,
      x = c * f,
      C = r.x,
      w = r.y,
      S = r.z;
    return (
      (i[0] = (1 - (b + m)) * C),
      (i[1] = (h + x) * C),
      (i[2] = (v - y) * C),
      (i[3] = 0),
      (i[4] = (h - x) * w),
      (i[5] = (1 - (p + m)) * w),
      (i[6] = (g + _) * w),
      (i[7] = 0),
      (i[8] = (v + y) * S),
      (i[9] = (g - _) * S),
      (i[10] = (1 - (p + b)) * S),
      (i[11] = 0),
      (i[12] = e.x),
      (i[13] = e.y),
      (i[14] = e.z),
      (i[15] = 1),
      this
    );
  }
  decompose(e, n, r) {
    const i = this.elements;
    let o = ko.set(i[0], i[1], i[2]).length();
    const s = ko.set(i[4], i[5], i[6]).length(),
      a = ko.set(i[8], i[9], i[10]).length();
    (this.determinant() < 0 && (o = -o),
      (e.x = i[12]),
      (e.y = i[13]),
      (e.z = i[14]),
      dr.copy(this));
    const u = 1 / o,
      d = 1 / s,
      f = 1 / a;
    return (
      (dr.elements[0] *= u),
      (dr.elements[1] *= u),
      (dr.elements[2] *= u),
      (dr.elements[4] *= d),
      (dr.elements[5] *= d),
      (dr.elements[6] *= d),
      (dr.elements[8] *= f),
      (dr.elements[9] *= f),
      (dr.elements[10] *= f),
      n.setFromRotationMatrix(dr),
      (r.x = o),
      (r.y = s),
      (r.z = a),
      this
    );
  }
  makePerspective(e, n, r, i, o, s, a = Qr) {
    const c = this.elements,
      u = (2 * o) / (n - e),
      d = (2 * o) / (r - i),
      f = (n + e) / (n - e),
      p = (r + i) / (r - i);
    let h, v;
    if (a === Qr) ((h = -(s + o) / (s - o)), (v = (-2 * s * o) / (s - o)));
    else if (a === tc) ((h = -s / (s - o)), (v = (-s * o) / (s - o)));
    else
      throw new Error(
        "THREE.Matrix4.makePerspective(): Invalid coordinate system: " + a,
      );
    return (
      (c[0] = u),
      (c[4] = 0),
      (c[8] = f),
      (c[12] = 0),
      (c[1] = 0),
      (c[5] = d),
      (c[9] = p),
      (c[13] = 0),
      (c[2] = 0),
      (c[6] = 0),
      (c[10] = h),
      (c[14] = v),
      (c[3] = 0),
      (c[7] = 0),
      (c[11] = -1),
      (c[15] = 0),
      this
    );
  }
  makeOrthographic(e, n, r, i, o, s, a = Qr) {
    const c = this.elements,
      u = 1 / (n - e),
      d = 1 / (r - i),
      f = 1 / (s - o),
      p = (n + e) * u,
      h = (r + i) * d;
    let v, b;
    if (a === Qr) ((v = (s + o) * f), (b = -2 * f));
    else if (a === tc) ((v = o * f), (b = -1 * f));
    else
      throw new Error(
        "THREE.Matrix4.makeOrthographic(): Invalid coordinate system: " + a,
      );
    return (
      (c[0] = 2 * u),
      (c[4] = 0),
      (c[8] = 0),
      (c[12] = -p),
      (c[1] = 0),
      (c[5] = 2 * d),
      (c[9] = 0),
      (c[13] = -h),
      (c[2] = 0),
      (c[6] = 0),
      (c[10] = b),
      (c[14] = -v),
      (c[3] = 0),
      (c[7] = 0),
      (c[11] = 0),
      (c[15] = 1),
      this
    );
  }
  equals(e) {
    const n = this.elements,
      r = e.elements;
    for (let i = 0; i < 16; i++) if (n[i] !== r[i]) return !1;
    return !0;
  }
  fromArray(e, n = 0) {
    for (let r = 0; r < 16; r++) this.elements[r] = e[r + n];
    return this;
  }
  toArray(e = [], n = 0) {
    const r = this.elements;
    return (
      (e[n] = r[0]),
      (e[n + 1] = r[1]),
      (e[n + 2] = r[2]),
      (e[n + 3] = r[3]),
      (e[n + 4] = r[4]),
      (e[n + 5] = r[5]),
      (e[n + 6] = r[6]),
      (e[n + 7] = r[7]),
      (e[n + 8] = r[8]),
      (e[n + 9] = r[9]),
      (e[n + 10] = r[10]),
      (e[n + 11] = r[11]),
      (e[n + 12] = r[12]),
      (e[n + 13] = r[13]),
      (e[n + 14] = r[14]),
      (e[n + 15] = r[15]),
      e
    );
  }
}
const ko = new se(),
  dr = new Kt(),
  hA = new se(0, 0, 0),
  mA = new se(1, 1, 1),
  gi = new se(),
  al = new se(),
  Un = new se(),
  jh = new Kt(),
  Gh = new co();
class Tc {
  constructor(e = 0, n = 0, r = 0, i = Tc.DEFAULT_ORDER) {
    ((this.isEuler = !0),
      (this._x = e),
      (this._y = n),
      (this._z = r),
      (this._order = i));
  }
  get x() {
    return this._x;
  }
  set x(e) {
    ((this._x = e), this._onChangeCallback());
  }
  get y() {
    return this._y;
  }
  set y(e) {
    ((this._y = e), this._onChangeCallback());
  }
  get z() {
    return this._z;
  }
  set z(e) {
    ((this._z = e), this._onChangeCallback());
  }
  get order() {
    return this._order;
  }
  set order(e) {
    ((this._order = e), this._onChangeCallback());
  }
  set(e, n, r, i = this._order) {
    return (
      (this._x = e),
      (this._y = n),
      (this._z = r),
      (this._order = i),
      this._onChangeCallback(),
      this
    );
  }
  clone() {
    return new this.constructor(this._x, this._y, this._z, this._order);
  }
  copy(e) {
    return (
      (this._x = e._x),
      (this._y = e._y),
      (this._z = e._z),
      (this._order = e._order),
      this._onChangeCallback(),
      this
    );
  }
  setFromRotationMatrix(e, n = this._order, r = !0) {
    const i = e.elements,
      o = i[0],
      s = i[4],
      a = i[8],
      c = i[1],
      u = i[5],
      d = i[9],
      f = i[2],
      p = i[6],
      h = i[10];
    switch (n) {
      case "XYZ":
        ((this._y = Math.asin(An(a, -1, 1))),
          Math.abs(a) < 0.9999999
            ? ((this._x = Math.atan2(-d, h)), (this._z = Math.atan2(-s, o)))
            : ((this._x = Math.atan2(p, u)), (this._z = 0)));
        break;
      case "YXZ":
        ((this._x = Math.asin(-An(d, -1, 1))),
          Math.abs(d) < 0.9999999
            ? ((this._y = Math.atan2(a, h)), (this._z = Math.atan2(c, u)))
            : ((this._y = Math.atan2(-f, o)), (this._z = 0)));
        break;
      case "ZXY":
        ((this._x = Math.asin(An(p, -1, 1))),
          Math.abs(p) < 0.9999999
            ? ((this._y = Math.atan2(-f, h)), (this._z = Math.atan2(-s, u)))
            : ((this._y = 0), (this._z = Math.atan2(c, o))));
        break;
      case "ZYX":
        ((this._y = Math.asin(-An(f, -1, 1))),
          Math.abs(f) < 0.9999999
            ? ((this._x = Math.atan2(p, h)), (this._z = Math.atan2(c, o)))
            : ((this._x = 0), (this._z = Math.atan2(-s, u))));
        break;
      case "YZX":
        ((this._z = Math.asin(An(c, -1, 1))),
          Math.abs(c) < 0.9999999
            ? ((this._x = Math.atan2(-d, u)), (this._y = Math.atan2(-f, o)))
            : ((this._x = 0), (this._y = Math.atan2(a, h))));
        break;
      case "XZY":
        ((this._z = Math.asin(-An(s, -1, 1))),
          Math.abs(s) < 0.9999999
            ? ((this._x = Math.atan2(p, u)), (this._y = Math.atan2(a, o)))
            : ((this._x = Math.atan2(-d, h)), (this._y = 0)));
        break;
      default:
        console.warn(
          "THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " +
            n,
        );
    }
    return ((this._order = n), r === !0 && this._onChangeCallback(), this);
  }
  setFromQuaternion(e, n, r) {
    return (
      jh.makeRotationFromQuaternion(e),
      this.setFromRotationMatrix(jh, n, r)
    );
  }
  setFromVector3(e, n = this._order) {
    return this.set(e.x, e.y, e.z, n);
  }
  reorder(e) {
    return (Gh.setFromEuler(this), this.setFromQuaternion(Gh, e));
  }
  equals(e) {
    return (
      e._x === this._x &&
      e._y === this._y &&
      e._z === this._z &&
      e._order === this._order
    );
  }
  fromArray(e) {
    return (
      (this._x = e[0]),
      (this._y = e[1]),
      (this._z = e[2]),
      e[3] !== void 0 && (this._order = e[3]),
      this._onChangeCallback(),
      this
    );
  }
  toArray(e = [], n = 0) {
    return (
      (e[n] = this._x),
      (e[n + 1] = this._y),
      (e[n + 2] = this._z),
      (e[n + 3] = this._order),
      e
    );
  }
  _onChange(e) {
    return ((this._onChangeCallback = e), this);
  }
  _onChangeCallback() {}
  *[Symbol.iterator]() {
    (yield this._x, yield this._y, yield this._z, yield this._order);
  }
}
Tc.DEFAULT_ORDER = "XYZ";
class kv {
  constructor() {
    this.mask = 1;
  }
  set(e) {
    this.mask = ((1 << e) | 0) >>> 0;
  }
  enable(e) {
    this.mask |= (1 << e) | 0;
  }
  enableAll() {
    this.mask = -1;
  }
  toggle(e) {
    this.mask ^= (1 << e) | 0;
  }
  disable(e) {
    this.mask &= ~((1 << e) | 0);
  }
  disableAll() {
    this.mask = 0;
  }
  test(e) {
    return (this.mask & e.mask) !== 0;
  }
  isEnabled(e) {
    return (this.mask & ((1 << e) | 0)) !== 0;
  }
}
let gA = 0;
const Wh = new se(),
  So = new co(),
  Vr = new Kt(),
  ll = new se(),
  Cs = new se(),
  vA = new se(),
  bA = new co(),
  Kh = new se(1, 0, 0),
  Xh = new se(0, 1, 0),
  Yh = new se(0, 0, 1),
  yA = { type: "added" },
  xA = { type: "removed" };
class xn extends ho {
  constructor() {
    (super(),
      (this.isObject3D = !0),
      Object.defineProperty(this, "id", { value: gA++ }),
      (this.uuid = Pi()),
      (this.name = ""),
      (this.type = "Object3D"),
      (this.parent = null),
      (this.children = []),
      (this.up = xn.DEFAULT_UP.clone()));
    const e = new se(),
      n = new Tc(),
      r = new co(),
      i = new se(1, 1, 1);
    function o() {
      r.setFromEuler(n, !1);
    }
    function s() {
      n.setFromQuaternion(r, void 0, !1);
    }
    (n._onChange(o),
      r._onChange(s),
      Object.defineProperties(this, {
        position: { configurable: !0, enumerable: !0, value: e },
        rotation: { configurable: !0, enumerable: !0, value: n },
        quaternion: { configurable: !0, enumerable: !0, value: r },
        scale: { configurable: !0, enumerable: !0, value: i },
        modelViewMatrix: { value: new Kt() },
        normalMatrix: { value: new ut() },
      }),
      (this.matrix = new Kt()),
      (this.matrixWorld = new Kt()),
      (this.matrixAutoUpdate = xn.DEFAULT_MATRIX_AUTO_UPDATE),
      (this.matrixWorldNeedsUpdate = !1),
      (this.matrixWorldAutoUpdate = xn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE),
      (this.layers = new kv()),
      (this.visible = !0),
      (this.castShadow = !1),
      (this.receiveShadow = !1),
      (this.frustumCulled = !0),
      (this.renderOrder = 0),
      (this.animations = []),
      (this.userData = {}));
  }
  onBeforeRender() {}
  onAfterRender() {}
  applyMatrix4(e) {
    (this.matrixAutoUpdate && this.updateMatrix(),
      this.matrix.premultiply(e),
      this.matrix.decompose(this.position, this.quaternion, this.scale));
  }
  applyQuaternion(e) {
    return (this.quaternion.premultiply(e), this);
  }
  setRotationFromAxisAngle(e, n) {
    this.quaternion.setFromAxisAngle(e, n);
  }
  setRotationFromEuler(e) {
    this.quaternion.setFromEuler(e, !0);
  }
  setRotationFromMatrix(e) {
    this.quaternion.setFromRotationMatrix(e);
  }
  setRotationFromQuaternion(e) {
    this.quaternion.copy(e);
  }
  rotateOnAxis(e, n) {
    return (So.setFromAxisAngle(e, n), this.quaternion.multiply(So), this);
  }
  rotateOnWorldAxis(e, n) {
    return (So.setFromAxisAngle(e, n), this.quaternion.premultiply(So), this);
  }
  rotateX(e) {
    return this.rotateOnAxis(Kh, e);
  }
  rotateY(e) {
    return this.rotateOnAxis(Xh, e);
  }
  rotateZ(e) {
    return this.rotateOnAxis(Yh, e);
  }
  translateOnAxis(e, n) {
    return (
      Wh.copy(e).applyQuaternion(this.quaternion),
      this.position.add(Wh.multiplyScalar(n)),
      this
    );
  }
  translateX(e) {
    return this.translateOnAxis(Kh, e);
  }
  translateY(e) {
    return this.translateOnAxis(Xh, e);
  }
  translateZ(e) {
    return this.translateOnAxis(Yh, e);
  }
  localToWorld(e) {
    return (this.updateWorldMatrix(!0, !1), e.applyMatrix4(this.matrixWorld));
  }
  worldToLocal(e) {
    return (
      this.updateWorldMatrix(!0, !1),
      e.applyMatrix4(Vr.copy(this.matrixWorld).invert())
    );
  }
  lookAt(e, n, r) {
    e.isVector3 ? ll.copy(e) : ll.set(e, n, r);
    const i = this.parent;
    (this.updateWorldMatrix(!0, !1),
      Cs.setFromMatrixPosition(this.matrixWorld),
      this.isCamera || this.isLight
        ? Vr.lookAt(Cs, ll, this.up)
        : Vr.lookAt(ll, Cs, this.up),
      this.quaternion.setFromRotationMatrix(Vr),
      i &&
        (Vr.extractRotation(i.matrixWorld),
        So.setFromRotationMatrix(Vr),
        this.quaternion.premultiply(So.invert())));
  }
  add(e) {
    if (arguments.length > 1) {
      for (let n = 0; n < arguments.length; n++) this.add(arguments[n]);
      return this;
    }
    return e === this
      ? (console.error(
          "THREE.Object3D.add: object can't be added as a child of itself.",
          e,
        ),
        this)
      : (e && e.isObject3D
          ? (e.parent !== null && e.parent.remove(e),
            (e.parent = this),
            this.children.push(e),
            e.dispatchEvent(yA))
          : console.error(
              "THREE.Object3D.add: object not an instance of THREE.Object3D.",
              e,
            ),
        this);
  }
  remove(e) {
    if (arguments.length > 1) {
      for (let r = 0; r < arguments.length; r++) this.remove(arguments[r]);
      return this;
    }
    const n = this.children.indexOf(e);
    return (
      n !== -1 &&
        ((e.parent = null), this.children.splice(n, 1), e.dispatchEvent(xA)),
      this
    );
  }
  removeFromParent() {
    const e = this.parent;
    return (e !== null && e.remove(this), this);
  }
  clear() {
    return this.remove(...this.children);
  }
  attach(e) {
    return (
      this.updateWorldMatrix(!0, !1),
      Vr.copy(this.matrixWorld).invert(),
      e.parent !== null &&
        (e.parent.updateWorldMatrix(!0, !1), Vr.multiply(e.parent.matrixWorld)),
      e.applyMatrix4(Vr),
      this.add(e),
      e.updateWorldMatrix(!1, !0),
      this
    );
  }
  getObjectById(e) {
    return this.getObjectByProperty("id", e);
  }
  getObjectByName(e) {
    return this.getObjectByProperty("name", e);
  }
  getObjectByProperty(e, n) {
    if (this[e] === n) return this;
    for (let r = 0, i = this.children.length; r < i; r++) {
      const s = this.children[r].getObjectByProperty(e, n);
      if (s !== void 0) return s;
    }
  }
  getObjectsByProperty(e, n) {
    let r = [];
    this[e] === n && r.push(this);
    for (let i = 0, o = this.children.length; i < o; i++) {
      const s = this.children[i].getObjectsByProperty(e, n);
      s.length > 0 && (r = r.concat(s));
    }
    return r;
  }
  getWorldPosition(e) {
    return (
      this.updateWorldMatrix(!0, !1),
      e.setFromMatrixPosition(this.matrixWorld)
    );
  }
  getWorldQuaternion(e) {
    return (
      this.updateWorldMatrix(!0, !1),
      this.matrixWorld.decompose(Cs, e, vA),
      e
    );
  }
  getWorldScale(e) {
    return (
      this.updateWorldMatrix(!0, !1),
      this.matrixWorld.decompose(Cs, bA, e),
      e
    );
  }
  getWorldDirection(e) {
    this.updateWorldMatrix(!0, !1);
    const n = this.matrixWorld.elements;
    return e.set(n[8], n[9], n[10]).normalize();
  }
  raycast() {}
  traverse(e) {
    e(this);
    const n = this.children;
    for (let r = 0, i = n.length; r < i; r++) n[r].traverse(e);
  }
  traverseVisible(e) {
    if (this.visible === !1) return;
    e(this);
    const n = this.children;
    for (let r = 0, i = n.length; r < i; r++) n[r].traverseVisible(e);
  }
  traverseAncestors(e) {
    const n = this.parent;
    n !== null && (e(n), n.traverseAncestors(e));
  }
  updateMatrix() {
    (this.matrix.compose(this.position, this.quaternion, this.scale),
      (this.matrixWorldNeedsUpdate = !0));
  }
  updateMatrixWorld(e) {
    (this.matrixAutoUpdate && this.updateMatrix(),
      (this.matrixWorldNeedsUpdate || e) &&
        (this.parent === null
          ? this.matrixWorld.copy(this.matrix)
          : this.matrixWorld.multiplyMatrices(
              this.parent.matrixWorld,
              this.matrix,
            ),
        (this.matrixWorldNeedsUpdate = !1),
        (e = !0)));
    const n = this.children;
    for (let r = 0, i = n.length; r < i; r++) {
      const o = n[r];
      (o.matrixWorldAutoUpdate === !0 || e === !0) && o.updateMatrixWorld(e);
    }
  }
  updateWorldMatrix(e, n) {
    const r = this.parent;
    if (
      (e === !0 &&
        r !== null &&
        r.matrixWorldAutoUpdate === !0 &&
        r.updateWorldMatrix(!0, !1),
      this.matrixAutoUpdate && this.updateMatrix(),
      this.parent === null
        ? this.matrixWorld.copy(this.matrix)
        : this.matrixWorld.multiplyMatrices(
            this.parent.matrixWorld,
            this.matrix,
          ),
      n === !0)
    ) {
      const i = this.children;
      for (let o = 0, s = i.length; o < s; o++) {
        const a = i[o];
        a.matrixWorldAutoUpdate === !0 && a.updateWorldMatrix(!1, !0);
      }
    }
  }
  toJSON(e) {
    const n = e === void 0 || typeof e == "string",
      r = {};
    n &&
      ((e = {
        geometries: {},
        materials: {},
        textures: {},
        images: {},
        shapes: {},
        skeletons: {},
        animations: {},
        nodes: {},
      }),
      (r.metadata = {
        version: 4.6,
        type: "Object",
        generator: "Object3D.toJSON",
      }));
    const i = {};
    ((i.uuid = this.uuid),
      (i.type = this.type),
      this.name !== "" && (i.name = this.name),
      this.castShadow === !0 && (i.castShadow = !0),
      this.receiveShadow === !0 && (i.receiveShadow = !0),
      this.visible === !1 && (i.visible = !1),
      this.frustumCulled === !1 && (i.frustumCulled = !1),
      this.renderOrder !== 0 && (i.renderOrder = this.renderOrder),
      Object.keys(this.userData).length > 0 && (i.userData = this.userData),
      (i.layers = this.layers.mask),
      (i.matrix = this.matrix.toArray()),
      (i.up = this.up.toArray()),
      this.matrixAutoUpdate === !1 && (i.matrixAutoUpdate = !1),
      this.isInstancedMesh &&
        ((i.type = "InstancedMesh"),
        (i.count = this.count),
        (i.instanceMatrix = this.instanceMatrix.toJSON()),
        this.instanceColor !== null &&
          (i.instanceColor = this.instanceColor.toJSON())));
    function o(a, c) {
      return (a[c.uuid] === void 0 && (a[c.uuid] = c.toJSON(e)), c.uuid);
    }
    if (this.isScene)
      (this.background &&
        (this.background.isColor
          ? (i.background = this.background.toJSON())
          : this.background.isTexture &&
            (i.background = this.background.toJSON(e).uuid)),
        this.environment &&
          this.environment.isTexture &&
          this.environment.isRenderTargetTexture !== !0 &&
          (i.environment = this.environment.toJSON(e).uuid));
    else if (this.isMesh || this.isLine || this.isPoints) {
      i.geometry = o(e.geometries, this.geometry);
      const a = this.geometry.parameters;
      if (a !== void 0 && a.shapes !== void 0) {
        const c = a.shapes;
        if (Array.isArray(c))
          for (let u = 0, d = c.length; u < d; u++) {
            const f = c[u];
            o(e.shapes, f);
          }
        else o(e.shapes, c);
      }
    }
    if (
      (this.isSkinnedMesh &&
        ((i.bindMode = this.bindMode),
        (i.bindMatrix = this.bindMatrix.toArray()),
        this.skeleton !== void 0 &&
          (o(e.skeletons, this.skeleton), (i.skeleton = this.skeleton.uuid))),
      this.material !== void 0)
    )
      if (Array.isArray(this.material)) {
        const a = [];
        for (let c = 0, u = this.material.length; c < u; c++)
          a.push(o(e.materials, this.material[c]));
        i.material = a;
      } else i.material = o(e.materials, this.material);
    if (this.children.length > 0) {
      i.children = [];
      for (let a = 0; a < this.children.length; a++)
        i.children.push(this.children[a].toJSON(e).object);
    }
    if (this.animations.length > 0) {
      i.animations = [];
      for (let a = 0; a < this.animations.length; a++) {
        const c = this.animations[a];
        i.animations.push(o(e.animations, c));
      }
    }
    if (n) {
      const a = s(e.geometries),
        c = s(e.materials),
        u = s(e.textures),
        d = s(e.images),
        f = s(e.shapes),
        p = s(e.skeletons),
        h = s(e.animations),
        v = s(e.nodes);
      (a.length > 0 && (r.geometries = a),
        c.length > 0 && (r.materials = c),
        u.length > 0 && (r.textures = u),
        d.length > 0 && (r.images = d),
        f.length > 0 && (r.shapes = f),
        p.length > 0 && (r.skeletons = p),
        h.length > 0 && (r.animations = h),
        v.length > 0 && (r.nodes = v));
    }
    return ((r.object = i), r);
    function s(a) {
      const c = [];
      for (const u in a) {
        const d = a[u];
        (delete d.metadata, c.push(d));
      }
      return c;
    }
  }
  clone(e) {
    return new this.constructor().copy(this, e);
  }
  copy(e, n = !0) {
    if (
      ((this.name = e.name),
      this.up.copy(e.up),
      this.position.copy(e.position),
      (this.rotation.order = e.rotation.order),
      this.quaternion.copy(e.quaternion),
      this.scale.copy(e.scale),
      this.matrix.copy(e.matrix),
      this.matrixWorld.copy(e.matrixWorld),
      (this.matrixAutoUpdate = e.matrixAutoUpdate),
      (this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate),
      (this.matrixWorldAutoUpdate = e.matrixWorldAutoUpdate),
      (this.layers.mask = e.layers.mask),
      (this.visible = e.visible),
      (this.castShadow = e.castShadow),
      (this.receiveShadow = e.receiveShadow),
      (this.frustumCulled = e.frustumCulled),
      (this.renderOrder = e.renderOrder),
      (this.animations = e.animations.slice()),
      (this.userData = JSON.parse(JSON.stringify(e.userData))),
      n === !0)
    )
      for (let r = 0; r < e.children.length; r++) {
        const i = e.children[r];
        this.add(i.clone());
      }
    return this;
  }
}
xn.DEFAULT_UP = new se(0, 1, 0);
xn.DEFAULT_MATRIX_AUTO_UPDATE = !0;
xn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = !0;
const fr = new se(),
  Hr = new se(),
  bu = new se(),
  jr = new se(),
  Co = new se(),
  Mo = new se(),
  qh = new se(),
  yu = new se(),
  xu = new se(),
  _u = new se();
let cl = !1;
class nr {
  constructor(e = new se(), n = new se(), r = new se()) {
    ((this.a = e), (this.b = n), (this.c = r));
  }
  static getNormal(e, n, r, i) {
    (i.subVectors(r, n), fr.subVectors(e, n), i.cross(fr));
    const o = i.lengthSq();
    return o > 0 ? i.multiplyScalar(1 / Math.sqrt(o)) : i.set(0, 0, 0);
  }
  static getBarycoord(e, n, r, i, o) {
    (fr.subVectors(i, n), Hr.subVectors(r, n), bu.subVectors(e, n));
    const s = fr.dot(fr),
      a = fr.dot(Hr),
      c = fr.dot(bu),
      u = Hr.dot(Hr),
      d = Hr.dot(bu),
      f = s * u - a * a;
    if (f === 0) return o.set(-2, -1, -1);
    const p = 1 / f,
      h = (u * c - a * d) * p,
      v = (s * d - a * c) * p;
    return o.set(1 - h - v, v, h);
  }
  static containsPoint(e, n, r, i) {
    return (
      this.getBarycoord(e, n, r, i, jr),
      jr.x >= 0 && jr.y >= 0 && jr.x + jr.y <= 1
    );
  }
  static getUV(e, n, r, i, o, s, a, c) {
    return (
      cl === !1 &&
        (console.warn(
          "THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().",
        ),
        (cl = !0)),
      this.getInterpolation(e, n, r, i, o, s, a, c)
    );
  }
  static getInterpolation(e, n, r, i, o, s, a, c) {
    return (
      this.getBarycoord(e, n, r, i, jr),
      c.setScalar(0),
      c.addScaledVector(o, jr.x),
      c.addScaledVector(s, jr.y),
      c.addScaledVector(a, jr.z),
      c
    );
  }
  static isFrontFacing(e, n, r, i) {
    return (fr.subVectors(r, n), Hr.subVectors(e, n), fr.cross(Hr).dot(i) < 0);
  }
  set(e, n, r) {
    return (this.a.copy(e), this.b.copy(n), this.c.copy(r), this);
  }
  setFromPointsAndIndices(e, n, r, i) {
    return (this.a.copy(e[n]), this.b.copy(e[r]), this.c.copy(e[i]), this);
  }
  setFromAttributeAndIndices(e, n, r, i) {
    return (
      this.a.fromBufferAttribute(e, n),
      this.b.fromBufferAttribute(e, r),
      this.c.fromBufferAttribute(e, i),
      this
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return (this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this);
  }
  getArea() {
    return (
      fr.subVectors(this.c, this.b),
      Hr.subVectors(this.a, this.b),
      fr.cross(Hr).length() * 0.5
    );
  }
  getMidpoint(e) {
    return e
      .addVectors(this.a, this.b)
      .add(this.c)
      .multiplyScalar(1 / 3);
  }
  getNormal(e) {
    return nr.getNormal(this.a, this.b, this.c, e);
  }
  getPlane(e) {
    return e.setFromCoplanarPoints(this.a, this.b, this.c);
  }
  getBarycoord(e, n) {
    return nr.getBarycoord(e, this.a, this.b, this.c, n);
  }
  getUV(e, n, r, i, o) {
    return (
      cl === !1 &&
        (console.warn(
          "THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().",
        ),
        (cl = !0)),
      nr.getInterpolation(e, this.a, this.b, this.c, n, r, i, o)
    );
  }
  getInterpolation(e, n, r, i, o) {
    return nr.getInterpolation(e, this.a, this.b, this.c, n, r, i, o);
  }
  containsPoint(e) {
    return nr.containsPoint(e, this.a, this.b, this.c);
  }
  isFrontFacing(e) {
    return nr.isFrontFacing(this.a, this.b, this.c, e);
  }
  intersectsBox(e) {
    return e.intersectsTriangle(this);
  }
  closestPointToPoint(e, n) {
    const r = this.a,
      i = this.b,
      o = this.c;
    let s, a;
    (Co.subVectors(i, r), Mo.subVectors(o, r), yu.subVectors(e, r));
    const c = Co.dot(yu),
      u = Mo.dot(yu);
    if (c <= 0 && u <= 0) return n.copy(r);
    xu.subVectors(e, i);
    const d = Co.dot(xu),
      f = Mo.dot(xu);
    if (d >= 0 && f <= d) return n.copy(i);
    const p = c * f - d * u;
    if (p <= 0 && c >= 0 && d <= 0)
      return ((s = c / (c - d)), n.copy(r).addScaledVector(Co, s));
    _u.subVectors(e, o);
    const h = Co.dot(_u),
      v = Mo.dot(_u);
    if (v >= 0 && h <= v) return n.copy(o);
    const b = h * u - c * v;
    if (b <= 0 && u >= 0 && v <= 0)
      return ((a = u / (u - v)), n.copy(r).addScaledVector(Mo, a));
    const g = d * v - h * f;
    if (g <= 0 && f - d >= 0 && h - v >= 0)
      return (
        qh.subVectors(o, i),
        (a = (f - d) / (f - d + (h - v))),
        n.copy(i).addScaledVector(qh, a)
      );
    const m = 1 / (g + b + p);
    return (
      (s = b * m),
      (a = p * m),
      n.copy(r).addScaledVector(Co, s).addScaledVector(Mo, a)
    );
  }
  equals(e) {
    return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
  }
}
let _A = 0;
class fs extends ho {
  constructor() {
    (super(),
      (this.isMaterial = !0),
      Object.defineProperty(this, "id", { value: _A++ }),
      (this.uuid = Pi()),
      (this.name = ""),
      (this.type = "Material"),
      (this.blending = ts),
      (this.side = Dr),
      (this.vertexColors = !1),
      (this.opacity = 1),
      (this.transparent = !1),
      (this.alphaHash = !1),
      (this.blendSrc = sv),
      (this.blendDst = av),
      (this.blendEquation = Ho),
      (this.blendSrcAlpha = null),
      (this.blendDstAlpha = null),
      (this.blendEquationAlpha = null),
      (this.depthFunc = ad),
      (this.depthTest = !0),
      (this.depthWrite = !0),
      (this.stencilWriteMask = 255),
      (this.stencilFunc = G5),
      (this.stencilRef = 0),
      (this.stencilFuncMask = 255),
      (this.stencilFail = au),
      (this.stencilZFail = au),
      (this.stencilZPass = au),
      (this.stencilWrite = !1),
      (this.clippingPlanes = null),
      (this.clipIntersection = !1),
      (this.clipShadows = !1),
      (this.shadowSide = null),
      (this.colorWrite = !0),
      (this.precision = null),
      (this.polygonOffset = !1),
      (this.polygonOffsetFactor = 0),
      (this.polygonOffsetUnits = 0),
      (this.dithering = !1),
      (this.alphaToCoverage = !1),
      (this.premultipliedAlpha = !1),
      (this.forceSinglePass = !1),
      (this.visible = !0),
      (this.toneMapped = !0),
      (this.userData = {}),
      (this.version = 0),
      (this._alphaTest = 0));
  }
  get alphaTest() {
    return this._alphaTest;
  }
  set alphaTest(e) {
    (this._alphaTest > 0 != e > 0 && this.version++, (this._alphaTest = e));
  }
  onBuild() {}
  onBeforeRender() {}
  onBeforeCompile() {}
  customProgramCacheKey() {
    return this.onBeforeCompile.toString();
  }
  setValues(e) {
    if (e !== void 0)
      for (const n in e) {
        const r = e[n];
        if (r === void 0) {
          console.warn(
            `THREE.Material: parameter '${n}' has value of undefined.`,
          );
          continue;
        }
        const i = this[n];
        if (i === void 0) {
          console.warn(
            `THREE.Material: '${n}' is not a property of THREE.${this.type}.`,
          );
          continue;
        }
        i && i.isColor
          ? i.set(r)
          : i && i.isVector3 && r && r.isVector3
            ? i.copy(r)
            : (this[n] = r);
      }
  }
  toJSON(e) {
    const n = e === void 0 || typeof e == "string";
    n && (e = { textures: {}, images: {} });
    const r = {
      metadata: {
        version: 4.6,
        type: "Material",
        generator: "Material.toJSON",
      },
    };
    ((r.uuid = this.uuid),
      (r.type = this.type),
      this.name !== "" && (r.name = this.name),
      this.color && this.color.isColor && (r.color = this.color.getHex()),
      this.roughness !== void 0 && (r.roughness = this.roughness),
      this.metalness !== void 0 && (r.metalness = this.metalness),
      this.sheen !== void 0 && (r.sheen = this.sheen),
      this.sheenColor &&
        this.sheenColor.isColor &&
        (r.sheenColor = this.sheenColor.getHex()),
      this.sheenRoughness !== void 0 &&
        (r.sheenRoughness = this.sheenRoughness),
      this.emissive &&
        this.emissive.isColor &&
        (r.emissive = this.emissive.getHex()),
      this.emissiveIntensity &&
        this.emissiveIntensity !== 1 &&
        (r.emissiveIntensity = this.emissiveIntensity),
      this.specular &&
        this.specular.isColor &&
        (r.specular = this.specular.getHex()),
      this.specularIntensity !== void 0 &&
        (r.specularIntensity = this.specularIntensity),
      this.specularColor &&
        this.specularColor.isColor &&
        (r.specularColor = this.specularColor.getHex()),
      this.shininess !== void 0 && (r.shininess = this.shininess),
      this.clearcoat !== void 0 && (r.clearcoat = this.clearcoat),
      this.clearcoatRoughness !== void 0 &&
        (r.clearcoatRoughness = this.clearcoatRoughness),
      this.clearcoatMap &&
        this.clearcoatMap.isTexture &&
        (r.clearcoatMap = this.clearcoatMap.toJSON(e).uuid),
      this.clearcoatRoughnessMap &&
        this.clearcoatRoughnessMap.isTexture &&
        (r.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid),
      this.clearcoatNormalMap &&
        this.clearcoatNormalMap.isTexture &&
        ((r.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid),
        (r.clearcoatNormalScale = this.clearcoatNormalScale.toArray())),
      this.iridescence !== void 0 && (r.iridescence = this.iridescence),
      this.iridescenceIOR !== void 0 &&
        (r.iridescenceIOR = this.iridescenceIOR),
      this.iridescenceThicknessRange !== void 0 &&
        (r.iridescenceThicknessRange = this.iridescenceThicknessRange),
      this.iridescenceMap &&
        this.iridescenceMap.isTexture &&
        (r.iridescenceMap = this.iridescenceMap.toJSON(e).uuid),
      this.iridescenceThicknessMap &&
        this.iridescenceThicknessMap.isTexture &&
        (r.iridescenceThicknessMap =
          this.iridescenceThicknessMap.toJSON(e).uuid),
      this.anisotropy !== void 0 && (r.anisotropy = this.anisotropy),
      this.anisotropyRotation !== void 0 &&
        (r.anisotropyRotation = this.anisotropyRotation),
      this.anisotropyMap &&
        this.anisotropyMap.isTexture &&
        (r.anisotropyMap = this.anisotropyMap.toJSON(e).uuid),
      this.map && this.map.isTexture && (r.map = this.map.toJSON(e).uuid),
      this.matcap &&
        this.matcap.isTexture &&
        (r.matcap = this.matcap.toJSON(e).uuid),
      this.alphaMap &&
        this.alphaMap.isTexture &&
        (r.alphaMap = this.alphaMap.toJSON(e).uuid),
      this.lightMap &&
        this.lightMap.isTexture &&
        ((r.lightMap = this.lightMap.toJSON(e).uuid),
        (r.lightMapIntensity = this.lightMapIntensity)),
      this.aoMap &&
        this.aoMap.isTexture &&
        ((r.aoMap = this.aoMap.toJSON(e).uuid),
        (r.aoMapIntensity = this.aoMapIntensity)),
      this.bumpMap &&
        this.bumpMap.isTexture &&
        ((r.bumpMap = this.bumpMap.toJSON(e).uuid),
        (r.bumpScale = this.bumpScale)),
      this.normalMap &&
        this.normalMap.isTexture &&
        ((r.normalMap = this.normalMap.toJSON(e).uuid),
        (r.normalMapType = this.normalMapType),
        (r.normalScale = this.normalScale.toArray())),
      this.displacementMap &&
        this.displacementMap.isTexture &&
        ((r.displacementMap = this.displacementMap.toJSON(e).uuid),
        (r.displacementScale = this.displacementScale),
        (r.displacementBias = this.displacementBias)),
      this.roughnessMap &&
        this.roughnessMap.isTexture &&
        (r.roughnessMap = this.roughnessMap.toJSON(e).uuid),
      this.metalnessMap &&
        this.metalnessMap.isTexture &&
        (r.metalnessMap = this.metalnessMap.toJSON(e).uuid),
      this.emissiveMap &&
        this.emissiveMap.isTexture &&
        (r.emissiveMap = this.emissiveMap.toJSON(e).uuid),
      this.specularMap &&
        this.specularMap.isTexture &&
        (r.specularMap = this.specularMap.toJSON(e).uuid),
      this.specularIntensityMap &&
        this.specularIntensityMap.isTexture &&
        (r.specularIntensityMap = this.specularIntensityMap.toJSON(e).uuid),
      this.specularColorMap &&
        this.specularColorMap.isTexture &&
        (r.specularColorMap = this.specularColorMap.toJSON(e).uuid),
      this.envMap &&
        this.envMap.isTexture &&
        ((r.envMap = this.envMap.toJSON(e).uuid),
        this.combine !== void 0 && (r.combine = this.combine)),
      this.envMapIntensity !== void 0 &&
        (r.envMapIntensity = this.envMapIntensity),
      this.reflectivity !== void 0 && (r.reflectivity = this.reflectivity),
      this.refractionRatio !== void 0 &&
        (r.refractionRatio = this.refractionRatio),
      this.gradientMap &&
        this.gradientMap.isTexture &&
        (r.gradientMap = this.gradientMap.toJSON(e).uuid),
      this.transmission !== void 0 && (r.transmission = this.transmission),
      this.transmissionMap &&
        this.transmissionMap.isTexture &&
        (r.transmissionMap = this.transmissionMap.toJSON(e).uuid),
      this.thickness !== void 0 && (r.thickness = this.thickness),
      this.thicknessMap &&
        this.thicknessMap.isTexture &&
        (r.thicknessMap = this.thicknessMap.toJSON(e).uuid),
      this.attenuationDistance !== void 0 &&
        this.attenuationDistance !== 1 / 0 &&
        (r.attenuationDistance = this.attenuationDistance),
      this.attenuationColor !== void 0 &&
        (r.attenuationColor = this.attenuationColor.getHex()),
      this.size !== void 0 && (r.size = this.size),
      this.shadowSide !== null && (r.shadowSide = this.shadowSide),
      this.sizeAttenuation !== void 0 &&
        (r.sizeAttenuation = this.sizeAttenuation),
      this.blending !== ts && (r.blending = this.blending),
      this.side !== Dr && (r.side = this.side),
      this.vertexColors && (r.vertexColors = !0),
      this.opacity < 1 && (r.opacity = this.opacity),
      this.transparent === !0 && (r.transparent = this.transparent),
      (r.depthFunc = this.depthFunc),
      (r.depthTest = this.depthTest),
      (r.depthWrite = this.depthWrite),
      (r.colorWrite = this.colorWrite),
      (r.stencilWrite = this.stencilWrite),
      (r.stencilWriteMask = this.stencilWriteMask),
      (r.stencilFunc = this.stencilFunc),
      (r.stencilRef = this.stencilRef),
      (r.stencilFuncMask = this.stencilFuncMask),
      (r.stencilFail = this.stencilFail),
      (r.stencilZFail = this.stencilZFail),
      (r.stencilZPass = this.stencilZPass),
      this.rotation !== void 0 &&
        this.rotation !== 0 &&
        (r.rotation = this.rotation),
      this.polygonOffset === !0 && (r.polygonOffset = !0),
      this.polygonOffsetFactor !== 0 &&
        (r.polygonOffsetFactor = this.polygonOffsetFactor),
      this.polygonOffsetUnits !== 0 &&
        (r.polygonOffsetUnits = this.polygonOffsetUnits),
      this.linewidth !== void 0 &&
        this.linewidth !== 1 &&
        (r.linewidth = this.linewidth),
      this.dashSize !== void 0 && (r.dashSize = this.dashSize),
      this.gapSize !== void 0 && (r.gapSize = this.gapSize),
      this.scale !== void 0 && (r.scale = this.scale),
      this.dithering === !0 && (r.dithering = !0),
      this.alphaTest > 0 && (r.alphaTest = this.alphaTest),
      this.alphaHash === !0 && (r.alphaHash = this.alphaHash),
      this.alphaToCoverage === !0 && (r.alphaToCoverage = this.alphaToCoverage),
      this.premultipliedAlpha === !0 &&
        (r.premultipliedAlpha = this.premultipliedAlpha),
      this.forceSinglePass === !0 && (r.forceSinglePass = this.forceSinglePass),
      this.wireframe === !0 && (r.wireframe = this.wireframe),
      this.wireframeLinewidth > 1 &&
        (r.wireframeLinewidth = this.wireframeLinewidth),
      this.wireframeLinecap !== "round" &&
        (r.wireframeLinecap = this.wireframeLinecap),
      this.wireframeLinejoin !== "round" &&
        (r.wireframeLinejoin = this.wireframeLinejoin),
      this.flatShading === !0 && (r.flatShading = this.flatShading),
      this.visible === !1 && (r.visible = !1),
      this.toneMapped === !1 && (r.toneMapped = !1),
      this.fog === !1 && (r.fog = !1),
      Object.keys(this.userData).length > 0 && (r.userData = this.userData));
    function i(o) {
      const s = [];
      for (const a in o) {
        const c = o[a];
        (delete c.metadata, s.push(c));
      }
      return s;
    }
    if (n) {
      const o = i(e.textures),
        s = i(e.images);
      (o.length > 0 && (r.textures = o), s.length > 0 && (r.images = s));
    }
    return r;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    ((this.name = e.name),
      (this.blending = e.blending),
      (this.side = e.side),
      (this.vertexColors = e.vertexColors),
      (this.opacity = e.opacity),
      (this.transparent = e.transparent),
      (this.blendSrc = e.blendSrc),
      (this.blendDst = e.blendDst),
      (this.blendEquation = e.blendEquation),
      (this.blendSrcAlpha = e.blendSrcAlpha),
      (this.blendDstAlpha = e.blendDstAlpha),
      (this.blendEquationAlpha = e.blendEquationAlpha),
      (this.depthFunc = e.depthFunc),
      (this.depthTest = e.depthTest),
      (this.depthWrite = e.depthWrite),
      (this.stencilWriteMask = e.stencilWriteMask),
      (this.stencilFunc = e.stencilFunc),
      (this.stencilRef = e.stencilRef),
      (this.stencilFuncMask = e.stencilFuncMask),
      (this.stencilFail = e.stencilFail),
      (this.stencilZFail = e.stencilZFail),
      (this.stencilZPass = e.stencilZPass),
      (this.stencilWrite = e.stencilWrite));
    const n = e.clippingPlanes;
    let r = null;
    if (n !== null) {
      const i = n.length;
      r = new Array(i);
      for (let o = 0; o !== i; ++o) r[o] = n[o].clone();
    }
    return (
      (this.clippingPlanes = r),
      (this.clipIntersection = e.clipIntersection),
      (this.clipShadows = e.clipShadows),
      (this.shadowSide = e.shadowSide),
      (this.colorWrite = e.colorWrite),
      (this.precision = e.precision),
      (this.polygonOffset = e.polygonOffset),
      (this.polygonOffsetFactor = e.polygonOffsetFactor),
      (this.polygonOffsetUnits = e.polygonOffsetUnits),
      (this.dithering = e.dithering),
      (this.alphaTest = e.alphaTest),
      (this.alphaHash = e.alphaHash),
      (this.alphaToCoverage = e.alphaToCoverage),
      (this.premultipliedAlpha = e.premultipliedAlpha),
      (this.forceSinglePass = e.forceSinglePass),
      (this.visible = e.visible),
      (this.toneMapped = e.toneMapped),
      (this.userData = JSON.parse(JSON.stringify(e.userData))),
      this
    );
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
}
const Sv = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074,
  },
  pr = { h: 0, s: 0, l: 0 },
  ul = { h: 0, s: 0, l: 0 };
function wu(t, e, n) {
  return (
    n < 0 && (n += 1),
    n > 1 && (n -= 1),
    n < 1 / 6
      ? t + (e - t) * 6 * n
      : n < 1 / 2
        ? e
        : n < 2 / 3
          ? t + (e - t) * 6 * (2 / 3 - n)
          : t
  );
}
class _t {
  constructor(e, n, r) {
    return (
      (this.isColor = !0),
      (this.r = 1),
      (this.g = 1),
      (this.b = 1),
      this.set(e, n, r)
    );
  }
  set(e, n, r) {
    if (n === void 0 && r === void 0) {
      const i = e;
      i && i.isColor
        ? this.copy(i)
        : typeof i == "number"
          ? this.setHex(i)
          : typeof i == "string" && this.setStyle(i);
    } else this.setRGB(e, n, r);
    return this;
  }
  setScalar(e) {
    return ((this.r = e), (this.g = e), (this.b = e), this);
  }
  setHex(e, n = Bt) {
    return (
      (e = Math.floor(e)),
      (this.r = ((e >> 16) & 255) / 255),
      (this.g = ((e >> 8) & 255) / 255),
      (this.b = (e & 255) / 255),
      er.toWorkingColorSpace(this, n),
      this
    );
  }
  setRGB(e, n, r, i = er.workingColorSpace) {
    return (
      (this.r = e),
      (this.g = n),
      (this.b = r),
      er.toWorkingColorSpace(this, i),
      this
    );
  }
  setHSL(e, n, r, i = er.workingColorSpace) {
    if (((e = eA(e, 1)), (n = An(n, 0, 1)), (r = An(r, 0, 1)), n === 0))
      this.r = this.g = this.b = r;
    else {
      const o = r <= 0.5 ? r * (1 + n) : r + n - r * n,
        s = 2 * r - o;
      ((this.r = wu(s, o, e + 1 / 3)),
        (this.g = wu(s, o, e)),
        (this.b = wu(s, o, e - 1 / 3)));
    }
    return (er.toWorkingColorSpace(this, i), this);
  }
  setStyle(e, n = Bt) {
    function r(o) {
      o !== void 0 &&
        parseFloat(o) < 1 &&
        console.warn(
          "THREE.Color: Alpha component of " + e + " will be ignored.",
        );
    }
    let i;
    if ((i = /^(\w+)\(([^\)]*)\)/.exec(e))) {
      let o;
      const s = i[1],
        a = i[2];
      switch (s) {
        case "rgb":
        case "rgba":
          if (
            (o =
              /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                a,
              ))
          )
            return (
              r(o[4]),
              this.setRGB(
                Math.min(255, parseInt(o[1], 10)) / 255,
                Math.min(255, parseInt(o[2], 10)) / 255,
                Math.min(255, parseInt(o[3], 10)) / 255,
                n,
              )
            );
          if (
            (o =
              /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                a,
              ))
          )
            return (
              r(o[4]),
              this.setRGB(
                Math.min(100, parseInt(o[1], 10)) / 100,
                Math.min(100, parseInt(o[2], 10)) / 100,
                Math.min(100, parseInt(o[3], 10)) / 100,
                n,
              )
            );
          break;
        case "hsl":
        case "hsla":
          if (
            (o =
              /^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                a,
              ))
          )
            return (
              r(o[4]),
              this.setHSL(
                parseFloat(o[1]) / 360,
                parseFloat(o[2]) / 100,
                parseFloat(o[3]) / 100,
                n,
              )
            );
          break;
        default:
          console.warn("THREE.Color: Unknown color model " + e);
      }
    } else if ((i = /^\#([A-Fa-f\d]+)$/.exec(e))) {
      const o = i[1],
        s = o.length;
      if (s === 3)
        return this.setRGB(
          parseInt(o.charAt(0), 16) / 15,
          parseInt(o.charAt(1), 16) / 15,
          parseInt(o.charAt(2), 16) / 15,
          n,
        );
      if (s === 6) return this.setHex(parseInt(o, 16), n);
      console.warn("THREE.Color: Invalid hex color " + e);
    } else if (e && e.length > 0) return this.setColorName(e, n);
    return this;
  }
  setColorName(e, n = Bt) {
    const r = Sv[e.toLowerCase()];
    return (
      r !== void 0
        ? this.setHex(r, n)
        : console.warn("THREE.Color: Unknown color " + e),
      this
    );
  }
  clone() {
    return new this.constructor(this.r, this.g, this.b);
  }
  copy(e) {
    return ((this.r = e.r), (this.g = e.g), (this.b = e.b), this);
  }
  copySRGBToLinear(e) {
    return ((this.r = ns(e.r)), (this.g = ns(e.g)), (this.b = ns(e.b)), this);
  }
  copyLinearToSRGB(e) {
    return ((this.r = uu(e.r)), (this.g = uu(e.g)), (this.b = uu(e.b)), this);
  }
  convertSRGBToLinear() {
    return (this.copySRGBToLinear(this), this);
  }
  convertLinearToSRGB() {
    return (this.copyLinearToSRGB(this), this);
  }
  getHex(e = Bt) {
    return (
      er.fromWorkingColorSpace(pn.copy(this), e),
      Math.round(An(pn.r * 255, 0, 255)) * 65536 +
        Math.round(An(pn.g * 255, 0, 255)) * 256 +
        Math.round(An(pn.b * 255, 0, 255))
    );
  }
  getHexString(e = Bt) {
    return ("000000" + this.getHex(e).toString(16)).slice(-6);
  }
  getHSL(e, n = er.workingColorSpace) {
    er.fromWorkingColorSpace(pn.copy(this), n);
    const r = pn.r,
      i = pn.g,
      o = pn.b,
      s = Math.max(r, i, o),
      a = Math.min(r, i, o);
    let c, u;
    const d = (a + s) / 2;
    if (a === s) ((c = 0), (u = 0));
    else {
      const f = s - a;
      switch (((u = d <= 0.5 ? f / (s + a) : f / (2 - s - a)), s)) {
        case r:
          c = (i - o) / f + (i < o ? 6 : 0);
          break;
        case i:
          c = (o - r) / f + 2;
          break;
        case o:
          c = (r - i) / f + 4;
          break;
      }
      c /= 6;
    }
    return ((e.h = c), (e.s = u), (e.l = d), e);
  }
  getRGB(e, n = er.workingColorSpace) {
    return (
      er.fromWorkingColorSpace(pn.copy(this), n),
      (e.r = pn.r),
      (e.g = pn.g),
      (e.b = pn.b),
      e
    );
  }
  getStyle(e = Bt) {
    er.fromWorkingColorSpace(pn.copy(this), e);
    const n = pn.r,
      r = pn.g,
      i = pn.b;
    return e !== Bt
      ? `color(${e} ${n.toFixed(3)} ${r.toFixed(3)} ${i.toFixed(3)})`
      : `rgb(${Math.round(n * 255)},${Math.round(r * 255)},${Math.round(i * 255)})`;
  }
  offsetHSL(e, n, r) {
    return (
      this.getHSL(pr),
      (pr.h += e),
      (pr.s += n),
      (pr.l += r),
      this.setHSL(pr.h, pr.s, pr.l),
      this
    );
  }
  add(e) {
    return ((this.r += e.r), (this.g += e.g), (this.b += e.b), this);
  }
  addColors(e, n) {
    return (
      (this.r = e.r + n.r),
      (this.g = e.g + n.g),
      (this.b = e.b + n.b),
      this
    );
  }
  addScalar(e) {
    return ((this.r += e), (this.g += e), (this.b += e), this);
  }
  sub(e) {
    return (
      (this.r = Math.max(0, this.r - e.r)),
      (this.g = Math.max(0, this.g - e.g)),
      (this.b = Math.max(0, this.b - e.b)),
      this
    );
  }
  multiply(e) {
    return ((this.r *= e.r), (this.g *= e.g), (this.b *= e.b), this);
  }
  multiplyScalar(e) {
    return ((this.r *= e), (this.g *= e), (this.b *= e), this);
  }
  lerp(e, n) {
    return (
      (this.r += (e.r - this.r) * n),
      (this.g += (e.g - this.g) * n),
      (this.b += (e.b - this.b) * n),
      this
    );
  }
  lerpColors(e, n, r) {
    return (
      (this.r = e.r + (n.r - e.r) * r),
      (this.g = e.g + (n.g - e.g) * r),
      (this.b = e.b + (n.b - e.b) * r),
      this
    );
  }
  lerpHSL(e, n) {
    (this.getHSL(pr), e.getHSL(ul));
    const r = lu(pr.h, ul.h, n),
      i = lu(pr.s, ul.s, n),
      o = lu(pr.l, ul.l, n);
    return (this.setHSL(r, i, o), this);
  }
  setFromVector3(e) {
    return ((this.r = e.x), (this.g = e.y), (this.b = e.z), this);
  }
  applyMatrix3(e) {
    const n = this.r,
      r = this.g,
      i = this.b,
      o = e.elements;
    return (
      (this.r = o[0] * n + o[3] * r + o[6] * i),
      (this.g = o[1] * n + o[4] * r + o[7] * i),
      (this.b = o[2] * n + o[5] * r + o[8] * i),
      this
    );
  }
  equals(e) {
    return e.r === this.r && e.g === this.g && e.b === this.b;
  }
  fromArray(e, n = 0) {
    return ((this.r = e[n]), (this.g = e[n + 1]), (this.b = e[n + 2]), this);
  }
  toArray(e = [], n = 0) {
    return ((e[n] = this.r), (e[n + 1] = this.g), (e[n + 2] = this.b), e);
  }
  fromBufferAttribute(e, n) {
    return (
      (this.r = e.getX(n)),
      (this.g = e.getY(n)),
      (this.b = e.getZ(n)),
      this
    );
  }
  toJSON() {
    return this.getHex();
  }
  *[Symbol.iterator]() {
    (yield this.r, yield this.g, yield this.b);
  }
}
const pn = new _t();
_t.NAMES = Sv;
class Cv extends fs {
  constructor(e) {
    (super(),
      (this.isMeshBasicMaterial = !0),
      (this.type = "MeshBasicMaterial"),
      (this.color = new _t(16777215)),
      (this.map = null),
      (this.lightMap = null),
      (this.lightMapIntensity = 1),
      (this.aoMap = null),
      (this.aoMapIntensity = 1),
      (this.specularMap = null),
      (this.alphaMap = null),
      (this.envMap = null),
      (this.combine = lv),
      (this.reflectivity = 1),
      (this.refractionRatio = 0.98),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      (this.wireframeLinecap = "round"),
      (this.wireframeLinejoin = "round"),
      (this.fog = !0),
      this.setValues(e));
  }
  copy(e) {
    return (
      super.copy(e),
      this.color.copy(e.color),
      (this.map = e.map),
      (this.lightMap = e.lightMap),
      (this.lightMapIntensity = e.lightMapIntensity),
      (this.aoMap = e.aoMap),
      (this.aoMapIntensity = e.aoMapIntensity),
      (this.specularMap = e.specularMap),
      (this.alphaMap = e.alphaMap),
      (this.envMap = e.envMap),
      (this.combine = e.combine),
      (this.reflectivity = e.reflectivity),
      (this.refractionRatio = e.refractionRatio),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      (this.wireframeLinecap = e.wireframeLinecap),
      (this.wireframeLinejoin = e.wireframeLinejoin),
      (this.fog = e.fog),
      this
    );
  }
}
const Zt = new se(),
  dl = new qe();
class yr {
  constructor(e, n, r = !1) {
    if (Array.isArray(e))
      throw new TypeError(
        "THREE.BufferAttribute: array should be a Typed Array.",
      );
    ((this.isBufferAttribute = !0),
      (this.name = ""),
      (this.array = e),
      (this.itemSize = n),
      (this.count = e !== void 0 ? e.length / n : 0),
      (this.normalized = r),
      (this.usage = dd),
      (this.updateRange = { offset: 0, count: -1 }),
      (this.gpuType = Jr),
      (this.version = 0));
  }
  onUploadCallback() {}
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
  setUsage(e) {
    return ((this.usage = e), this);
  }
  copy(e) {
    return (
      (this.name = e.name),
      (this.array = new e.array.constructor(e.array)),
      (this.itemSize = e.itemSize),
      (this.count = e.count),
      (this.normalized = e.normalized),
      (this.usage = e.usage),
      (this.gpuType = e.gpuType),
      this
    );
  }
  copyAt(e, n, r) {
    ((e *= this.itemSize), (r *= n.itemSize));
    for (let i = 0, o = this.itemSize; i < o; i++)
      this.array[e + i] = n.array[r + i];
    return this;
  }
  copyArray(e) {
    return (this.array.set(e), this);
  }
  applyMatrix3(e) {
    if (this.itemSize === 2)
      for (let n = 0, r = this.count; n < r; n++)
        (dl.fromBufferAttribute(this, n),
          dl.applyMatrix3(e),
          this.setXY(n, dl.x, dl.y));
    else if (this.itemSize === 3)
      for (let n = 0, r = this.count; n < r; n++)
        (Zt.fromBufferAttribute(this, n),
          Zt.applyMatrix3(e),
          this.setXYZ(n, Zt.x, Zt.y, Zt.z));
    return this;
  }
  applyMatrix4(e) {
    for (let n = 0, r = this.count; n < r; n++)
      (Zt.fromBufferAttribute(this, n),
        Zt.applyMatrix4(e),
        this.setXYZ(n, Zt.x, Zt.y, Zt.z));
    return this;
  }
  applyNormalMatrix(e) {
    for (let n = 0, r = this.count; n < r; n++)
      (Zt.fromBufferAttribute(this, n),
        Zt.applyNormalMatrix(e),
        this.setXYZ(n, Zt.x, Zt.y, Zt.z));
    return this;
  }
  transformDirection(e) {
    for (let n = 0, r = this.count; n < r; n++)
      (Zt.fromBufferAttribute(this, n),
        Zt.transformDirection(e),
        this.setXYZ(n, Zt.x, Zt.y, Zt.z));
    return this;
  }
  set(e, n = 0) {
    return (this.array.set(e, n), this);
  }
  getComponent(e, n) {
    let r = this.array[e * this.itemSize + n];
    return (this.normalized && (r = Zr(r, this.array)), r);
  }
  setComponent(e, n, r) {
    return (
      this.normalized && (r = Et(r, this.array)),
      (this.array[e * this.itemSize + n] = r),
      this
    );
  }
  getX(e) {
    let n = this.array[e * this.itemSize];
    return (this.normalized && (n = Zr(n, this.array)), n);
  }
  setX(e, n) {
    return (
      this.normalized && (n = Et(n, this.array)),
      (this.array[e * this.itemSize] = n),
      this
    );
  }
  getY(e) {
    let n = this.array[e * this.itemSize + 1];
    return (this.normalized && (n = Zr(n, this.array)), n);
  }
  setY(e, n) {
    return (
      this.normalized && (n = Et(n, this.array)),
      (this.array[e * this.itemSize + 1] = n),
      this
    );
  }
  getZ(e) {
    let n = this.array[e * this.itemSize + 2];
    return (this.normalized && (n = Zr(n, this.array)), n);
  }
  setZ(e, n) {
    return (
      this.normalized && (n = Et(n, this.array)),
      (this.array[e * this.itemSize + 2] = n),
      this
    );
  }
  getW(e) {
    let n = this.array[e * this.itemSize + 3];
    return (this.normalized && (n = Zr(n, this.array)), n);
  }
  setW(e, n) {
    return (
      this.normalized && (n = Et(n, this.array)),
      (this.array[e * this.itemSize + 3] = n),
      this
    );
  }
  setXY(e, n, r) {
    return (
      (e *= this.itemSize),
      this.normalized && ((n = Et(n, this.array)), (r = Et(r, this.array))),
      (this.array[e + 0] = n),
      (this.array[e + 1] = r),
      this
    );
  }
  setXYZ(e, n, r, i) {
    return (
      (e *= this.itemSize),
      this.normalized &&
        ((n = Et(n, this.array)),
        (r = Et(r, this.array)),
        (i = Et(i, this.array))),
      (this.array[e + 0] = n),
      (this.array[e + 1] = r),
      (this.array[e + 2] = i),
      this
    );
  }
  setXYZW(e, n, r, i, o) {
    return (
      (e *= this.itemSize),
      this.normalized &&
        ((n = Et(n, this.array)),
        (r = Et(r, this.array)),
        (i = Et(i, this.array)),
        (o = Et(o, this.array))),
      (this.array[e + 0] = n),
      (this.array[e + 1] = r),
      (this.array[e + 2] = i),
      (this.array[e + 3] = o),
      this
    );
  }
  onUpload(e) {
    return ((this.onUploadCallback = e), this);
  }
  clone() {
    return new this.constructor(this.array, this.itemSize).copy(this);
  }
  toJSON() {
    const e = {
      itemSize: this.itemSize,
      type: this.array.constructor.name,
      array: Array.from(this.array),
      normalized: this.normalized,
    };
    return (
      this.name !== "" && (e.name = this.name),
      this.usage !== dd && (e.usage = this.usage),
      (this.updateRange.offset !== 0 || this.updateRange.count !== -1) &&
        (e.updateRange = this.updateRange),
      e
    );
  }
}
class Mv extends yr {
  constructor(e, n, r) {
    super(new Uint16Array(e), n, r);
  }
}
class Ev extends yr {
  constructor(e, n, r) {
    super(new Uint32Array(e), n, r);
  }
}
class ni extends yr {
  constructor(e, n, r) {
    super(new Float32Array(e), n, r);
  }
}
let wA = 0;
const Jn = new Kt(),
  ku = new xn(),
  Eo = new se(),
  Fn = new Ga(),
  Ms = new Ga(),
  nn = new se();
class ui extends ho {
  constructor() {
    (super(),
      (this.isBufferGeometry = !0),
      Object.defineProperty(this, "id", { value: wA++ }),
      (this.uuid = Pi()),
      (this.name = ""),
      (this.type = "BufferGeometry"),
      (this.index = null),
      (this.attributes = {}),
      (this.morphAttributes = {}),
      (this.morphTargetsRelative = !1),
      (this.groups = []),
      (this.boundingBox = null),
      (this.boundingSphere = null),
      (this.drawRange = { start: 0, count: 1 / 0 }),
      (this.userData = {}));
  }
  getIndex() {
    return this.index;
  }
  setIndex(e) {
    return (
      Array.isArray(e)
        ? (this.index = new (bv(e) ? Ev : Mv)(e, 1))
        : (this.index = e),
      this
    );
  }
  getAttribute(e) {
    return this.attributes[e];
  }
  setAttribute(e, n) {
    return ((this.attributes[e] = n), this);
  }
  deleteAttribute(e) {
    return (delete this.attributes[e], this);
  }
  hasAttribute(e) {
    return this.attributes[e] !== void 0;
  }
  addGroup(e, n, r = 0) {
    this.groups.push({ start: e, count: n, materialIndex: r });
  }
  clearGroups() {
    this.groups = [];
  }
  setDrawRange(e, n) {
    ((this.drawRange.start = e), (this.drawRange.count = n));
  }
  applyMatrix4(e) {
    const n = this.attributes.position;
    n !== void 0 && (n.applyMatrix4(e), (n.needsUpdate = !0));
    const r = this.attributes.normal;
    if (r !== void 0) {
      const o = new ut().getNormalMatrix(e);
      (r.applyNormalMatrix(o), (r.needsUpdate = !0));
    }
    const i = this.attributes.tangent;
    return (
      i !== void 0 && (i.transformDirection(e), (i.needsUpdate = !0)),
      this.boundingBox !== null && this.computeBoundingBox(),
      this.boundingSphere !== null && this.computeBoundingSphere(),
      this
    );
  }
  applyQuaternion(e) {
    return (Jn.makeRotationFromQuaternion(e), this.applyMatrix4(Jn), this);
  }
  rotateX(e) {
    return (Jn.makeRotationX(e), this.applyMatrix4(Jn), this);
  }
  rotateY(e) {
    return (Jn.makeRotationY(e), this.applyMatrix4(Jn), this);
  }
  rotateZ(e) {
    return (Jn.makeRotationZ(e), this.applyMatrix4(Jn), this);
  }
  translate(e, n, r) {
    return (Jn.makeTranslation(e, n, r), this.applyMatrix4(Jn), this);
  }
  scale(e, n, r) {
    return (Jn.makeScale(e, n, r), this.applyMatrix4(Jn), this);
  }
  lookAt(e) {
    return (
      ku.lookAt(e),
      ku.updateMatrix(),
      this.applyMatrix4(ku.matrix),
      this
    );
  }
  center() {
    return (
      this.computeBoundingBox(),
      this.boundingBox.getCenter(Eo).negate(),
      this.translate(Eo.x, Eo.y, Eo.z),
      this
    );
  }
  setFromPoints(e) {
    const n = [];
    for (let r = 0, i = e.length; r < i; r++) {
      const o = e[r];
      n.push(o.x, o.y, o.z || 0);
    }
    return (this.setAttribute("position", new ni(n, 3)), this);
  }
  computeBoundingBox() {
    this.boundingBox === null && (this.boundingBox = new Ga());
    const e = this.attributes.position,
      n = this.morphAttributes.position;
    if (e && e.isGLBufferAttribute) {
      (console.error(
        'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',
        this,
      ),
        this.boundingBox.set(
          new se(-1 / 0, -1 / 0, -1 / 0),
          new se(1 / 0, 1 / 0, 1 / 0),
        ));
      return;
    }
    if (e !== void 0) {
      if ((this.boundingBox.setFromBufferAttribute(e), n))
        for (let r = 0, i = n.length; r < i; r++) {
          const o = n[r];
          (Fn.setFromBufferAttribute(o),
            this.morphTargetsRelative
              ? (nn.addVectors(this.boundingBox.min, Fn.min),
                this.boundingBox.expandByPoint(nn),
                nn.addVectors(this.boundingBox.max, Fn.max),
                this.boundingBox.expandByPoint(nn))
              : (this.boundingBox.expandByPoint(Fn.min),
                this.boundingBox.expandByPoint(Fn.max)));
        }
    } else this.boundingBox.makeEmpty();
    (isNaN(this.boundingBox.min.x) ||
      isNaN(this.boundingBox.min.y) ||
      isNaN(this.boundingBox.min.z)) &&
      console.error(
        'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',
        this,
      );
  }
  computeBoundingSphere() {
    this.boundingSphere === null && (this.boundingSphere = new sf());
    const e = this.attributes.position,
      n = this.morphAttributes.position;
    if (e && e.isGLBufferAttribute) {
      (console.error(
        'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',
        this,
      ),
        this.boundingSphere.set(new se(), 1 / 0));
      return;
    }
    if (e) {
      const r = this.boundingSphere.center;
      if ((Fn.setFromBufferAttribute(e), n))
        for (let o = 0, s = n.length; o < s; o++) {
          const a = n[o];
          (Ms.setFromBufferAttribute(a),
            this.morphTargetsRelative
              ? (nn.addVectors(Fn.min, Ms.min),
                Fn.expandByPoint(nn),
                nn.addVectors(Fn.max, Ms.max),
                Fn.expandByPoint(nn))
              : (Fn.expandByPoint(Ms.min), Fn.expandByPoint(Ms.max)));
        }
      Fn.getCenter(r);
      let i = 0;
      for (let o = 0, s = e.count; o < s; o++)
        (nn.fromBufferAttribute(e, o),
          (i = Math.max(i, r.distanceToSquared(nn))));
      if (n)
        for (let o = 0, s = n.length; o < s; o++) {
          const a = n[o],
            c = this.morphTargetsRelative;
          for (let u = 0, d = a.count; u < d; u++)
            (nn.fromBufferAttribute(a, u),
              c && (Eo.fromBufferAttribute(e, u), nn.add(Eo)),
              (i = Math.max(i, r.distanceToSquared(nn))));
        }
      ((this.boundingSphere.radius = Math.sqrt(i)),
        isNaN(this.boundingSphere.radius) &&
          console.error(
            'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',
            this,
          ));
    }
  }
  computeTangents() {
    const e = this.index,
      n = this.attributes;
    if (
      e === null ||
      n.position === void 0 ||
      n.normal === void 0 ||
      n.uv === void 0
    ) {
      console.error(
        "THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)",
      );
      return;
    }
    const r = e.array,
      i = n.position.array,
      o = n.normal.array,
      s = n.uv.array,
      a = i.length / 3;
    this.hasAttribute("tangent") === !1 &&
      this.setAttribute("tangent", new yr(new Float32Array(4 * a), 4));
    const c = this.getAttribute("tangent").array,
      u = [],
      d = [];
    for (let P = 0; P < a; P++) ((u[P] = new se()), (d[P] = new se()));
    const f = new se(),
      p = new se(),
      h = new se(),
      v = new qe(),
      b = new qe(),
      g = new qe(),
      m = new se(),
      _ = new se();
    function y(P, I, W) {
      (f.fromArray(i, P * 3),
        p.fromArray(i, I * 3),
        h.fromArray(i, W * 3),
        v.fromArray(s, P * 2),
        b.fromArray(s, I * 2),
        g.fromArray(s, W * 2),
        p.sub(f),
        h.sub(f),
        b.sub(v),
        g.sub(v));
      const X = 1 / (b.x * g.y - g.x * b.y);
      isFinite(X) &&
        (m
          .copy(p)
          .multiplyScalar(g.y)
          .addScaledVector(h, -b.y)
          .multiplyScalar(X),
        _.copy(h)
          .multiplyScalar(b.x)
          .addScaledVector(p, -g.x)
          .multiplyScalar(X),
        u[P].add(m),
        u[I].add(m),
        u[W].add(m),
        d[P].add(_),
        d[I].add(_),
        d[W].add(_));
    }
    let x = this.groups;
    x.length === 0 && (x = [{ start: 0, count: r.length }]);
    for (let P = 0, I = x.length; P < I; ++P) {
      const W = x[P],
        X = W.start,
        Z = W.count;
      for (let G = X, $ = X + Z; G < $; G += 3) y(r[G + 0], r[G + 1], r[G + 2]);
    }
    const C = new se(),
      w = new se(),
      S = new se(),
      D = new se();
    function k(P) {
      (S.fromArray(o, P * 3), D.copy(S));
      const I = u[P];
      (C.copy(I),
        C.sub(S.multiplyScalar(S.dot(I))).normalize(),
        w.crossVectors(D, I));
      const X = w.dot(d[P]) < 0 ? -1 : 1;
      ((c[P * 4] = C.x),
        (c[P * 4 + 1] = C.y),
        (c[P * 4 + 2] = C.z),
        (c[P * 4 + 3] = X));
    }
    for (let P = 0, I = x.length; P < I; ++P) {
      const W = x[P],
        X = W.start,
        Z = W.count;
      for (let G = X, $ = X + Z; G < $; G += 3)
        (k(r[G + 0]), k(r[G + 1]), k(r[G + 2]));
    }
  }
  computeVertexNormals() {
    const e = this.index,
      n = this.getAttribute("position");
    if (n !== void 0) {
      let r = this.getAttribute("normal");
      if (r === void 0)
        ((r = new yr(new Float32Array(n.count * 3), 3)),
          this.setAttribute("normal", r));
      else for (let p = 0, h = r.count; p < h; p++) r.setXYZ(p, 0, 0, 0);
      const i = new se(),
        o = new se(),
        s = new se(),
        a = new se(),
        c = new se(),
        u = new se(),
        d = new se(),
        f = new se();
      if (e)
        for (let p = 0, h = e.count; p < h; p += 3) {
          const v = e.getX(p + 0),
            b = e.getX(p + 1),
            g = e.getX(p + 2);
          (i.fromBufferAttribute(n, v),
            o.fromBufferAttribute(n, b),
            s.fromBufferAttribute(n, g),
            d.subVectors(s, o),
            f.subVectors(i, o),
            d.cross(f),
            a.fromBufferAttribute(r, v),
            c.fromBufferAttribute(r, b),
            u.fromBufferAttribute(r, g),
            a.add(d),
            c.add(d),
            u.add(d),
            r.setXYZ(v, a.x, a.y, a.z),
            r.setXYZ(b, c.x, c.y, c.z),
            r.setXYZ(g, u.x, u.y, u.z));
        }
      else
        for (let p = 0, h = n.count; p < h; p += 3)
          (i.fromBufferAttribute(n, p + 0),
            o.fromBufferAttribute(n, p + 1),
            s.fromBufferAttribute(n, p + 2),
            d.subVectors(s, o),
            f.subVectors(i, o),
            d.cross(f),
            r.setXYZ(p + 0, d.x, d.y, d.z),
            r.setXYZ(p + 1, d.x, d.y, d.z),
            r.setXYZ(p + 2, d.x, d.y, d.z));
      (this.normalizeNormals(), (r.needsUpdate = !0));
    }
  }
  normalizeNormals() {
    const e = this.attributes.normal;
    for (let n = 0, r = e.count; n < r; n++)
      (nn.fromBufferAttribute(e, n),
        nn.normalize(),
        e.setXYZ(n, nn.x, nn.y, nn.z));
  }
  toNonIndexed() {
    function e(a, c) {
      const u = a.array,
        d = a.itemSize,
        f = a.normalized,
        p = new u.constructor(c.length * d);
      let h = 0,
        v = 0;
      for (let b = 0, g = c.length; b < g; b++) {
        a.isInterleavedBufferAttribute
          ? (h = c[b] * a.data.stride + a.offset)
          : (h = c[b] * d);
        for (let m = 0; m < d; m++) p[v++] = u[h++];
      }
      return new yr(p, d, f);
    }
    if (this.index === null)
      return (
        console.warn(
          "THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.",
        ),
        this
      );
    const n = new ui(),
      r = this.index.array,
      i = this.attributes;
    for (const a in i) {
      const c = i[a],
        u = e(c, r);
      n.setAttribute(a, u);
    }
    const o = this.morphAttributes;
    for (const a in o) {
      const c = [],
        u = o[a];
      for (let d = 0, f = u.length; d < f; d++) {
        const p = u[d],
          h = e(p, r);
        c.push(h);
      }
      n.morphAttributes[a] = c;
    }
    n.morphTargetsRelative = this.morphTargetsRelative;
    const s = this.groups;
    for (let a = 0, c = s.length; a < c; a++) {
      const u = s[a];
      n.addGroup(u.start, u.count, u.materialIndex);
    }
    return n;
  }
  toJSON() {
    const e = {
      metadata: {
        version: 4.6,
        type: "BufferGeometry",
        generator: "BufferGeometry.toJSON",
      },
    };
    if (
      ((e.uuid = this.uuid),
      (e.type = this.type),
      this.name !== "" && (e.name = this.name),
      Object.keys(this.userData).length > 0 && (e.userData = this.userData),
      this.parameters !== void 0)
    ) {
      const c = this.parameters;
      for (const u in c) c[u] !== void 0 && (e[u] = c[u]);
      return e;
    }
    e.data = { attributes: {} };
    const n = this.index;
    n !== null &&
      (e.data.index = {
        type: n.array.constructor.name,
        array: Array.prototype.slice.call(n.array),
      });
    const r = this.attributes;
    for (const c in r) {
      const u = r[c];
      e.data.attributes[c] = u.toJSON(e.data);
    }
    const i = {};
    let o = !1;
    for (const c in this.morphAttributes) {
      const u = this.morphAttributes[c],
        d = [];
      for (let f = 0, p = u.length; f < p; f++) {
        const h = u[f];
        d.push(h.toJSON(e.data));
      }
      d.length > 0 && ((i[c] = d), (o = !0));
    }
    o &&
      ((e.data.morphAttributes = i),
      (e.data.morphTargetsRelative = this.morphTargetsRelative));
    const s = this.groups;
    s.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(s)));
    const a = this.boundingSphere;
    return (
      a !== null &&
        (e.data.boundingSphere = {
          center: a.center.toArray(),
          radius: a.radius,
        }),
      e
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    ((this.index = null),
      (this.attributes = {}),
      (this.morphAttributes = {}),
      (this.groups = []),
      (this.boundingBox = null),
      (this.boundingSphere = null));
    const n = {};
    this.name = e.name;
    const r = e.index;
    r !== null && this.setIndex(r.clone(n));
    const i = e.attributes;
    for (const u in i) {
      const d = i[u];
      this.setAttribute(u, d.clone(n));
    }
    const o = e.morphAttributes;
    for (const u in o) {
      const d = [],
        f = o[u];
      for (let p = 0, h = f.length; p < h; p++) d.push(f[p].clone(n));
      this.morphAttributes[u] = d;
    }
    this.morphTargetsRelative = e.morphTargetsRelative;
    const s = e.groups;
    for (let u = 0, d = s.length; u < d; u++) {
      const f = s[u];
      this.addGroup(f.start, f.count, f.materialIndex);
    }
    const a = e.boundingBox;
    a !== null && (this.boundingBox = a.clone());
    const c = e.boundingSphere;
    return (
      c !== null && (this.boundingSphere = c.clone()),
      (this.drawRange.start = e.drawRange.start),
      (this.drawRange.count = e.drawRange.count),
      (this.userData = e.userData),
      this
    );
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
}
const Zh = new Kt(),
  ji = new wv(),
  fl = new sf(),
  Jh = new se(),
  To = new se(),
  Ao = new se(),
  Po = new se(),
  Su = new se(),
  pl = new se(),
  hl = new qe(),
  ml = new qe(),
  gl = new qe(),
  Qh = new se(),
  em = new se(),
  tm = new se(),
  vl = new se(),
  bl = new se();
class It extends xn {
  constructor(e = new ui(), n = new Cv()) {
    (super(),
      (this.isMesh = !0),
      (this.type = "Mesh"),
      (this.geometry = e),
      (this.material = n),
      this.updateMorphTargets());
  }
  copy(e, n) {
    return (
      super.copy(e, n),
      e.morphTargetInfluences !== void 0 &&
        (this.morphTargetInfluences = e.morphTargetInfluences.slice()),
      e.morphTargetDictionary !== void 0 &&
        (this.morphTargetDictionary = Object.assign(
          {},
          e.morphTargetDictionary,
        )),
      (this.material = Array.isArray(e.material)
        ? e.material.slice()
        : e.material),
      (this.geometry = e.geometry),
      this
    );
  }
  updateMorphTargets() {
    const n = this.geometry.morphAttributes,
      r = Object.keys(n);
    if (r.length > 0) {
      const i = n[r[0]];
      if (i !== void 0) {
        ((this.morphTargetInfluences = []), (this.morphTargetDictionary = {}));
        for (let o = 0, s = i.length; o < s; o++) {
          const a = i[o].name || String(o);
          (this.morphTargetInfluences.push(0),
            (this.morphTargetDictionary[a] = o));
        }
      }
    }
  }
  getVertexPosition(e, n) {
    const r = this.geometry,
      i = r.attributes.position,
      o = r.morphAttributes.position,
      s = r.morphTargetsRelative;
    n.fromBufferAttribute(i, e);
    const a = this.morphTargetInfluences;
    if (o && a) {
      pl.set(0, 0, 0);
      for (let c = 0, u = o.length; c < u; c++) {
        const d = a[c],
          f = o[c];
        d !== 0 &&
          (Su.fromBufferAttribute(f, e),
          s ? pl.addScaledVector(Su, d) : pl.addScaledVector(Su.sub(n), d));
      }
      n.add(pl);
    }
    return n;
  }
  raycast(e, n) {
    const r = this.geometry,
      i = this.material,
      o = this.matrixWorld;
    i !== void 0 &&
      (r.boundingSphere === null && r.computeBoundingSphere(),
      fl.copy(r.boundingSphere),
      fl.applyMatrix4(o),
      ji.copy(e.ray).recast(e.near),
      !(
        fl.containsPoint(ji.origin) === !1 &&
        (ji.intersectSphere(fl, Jh) === null ||
          ji.origin.distanceToSquared(Jh) > (e.far - e.near) ** 2)
      ) &&
        (Zh.copy(o).invert(),
        ji.copy(e.ray).applyMatrix4(Zh),
        !(r.boundingBox !== null && ji.intersectsBox(r.boundingBox) === !1) &&
          this._computeIntersections(e, n, ji)));
  }
  _computeIntersections(e, n, r) {
    let i;
    const o = this.geometry,
      s = this.material,
      a = o.index,
      c = o.attributes.position,
      u = o.attributes.uv,
      d = o.attributes.uv1,
      f = o.attributes.normal,
      p = o.groups,
      h = o.drawRange;
    if (a !== null)
      if (Array.isArray(s))
        for (let v = 0, b = p.length; v < b; v++) {
          const g = p[v],
            m = s[g.materialIndex],
            _ = Math.max(g.start, h.start),
            y = Math.min(
              a.count,
              Math.min(g.start + g.count, h.start + h.count),
            );
          for (let x = _, C = y; x < C; x += 3) {
            const w = a.getX(x),
              S = a.getX(x + 1),
              D = a.getX(x + 2);
            ((i = yl(this, m, e, r, u, d, f, w, S, D)),
              i &&
                ((i.faceIndex = Math.floor(x / 3)),
                (i.face.materialIndex = g.materialIndex),
                n.push(i)));
          }
        }
      else {
        const v = Math.max(0, h.start),
          b = Math.min(a.count, h.start + h.count);
        for (let g = v, m = b; g < m; g += 3) {
          const _ = a.getX(g),
            y = a.getX(g + 1),
            x = a.getX(g + 2);
          ((i = yl(this, s, e, r, u, d, f, _, y, x)),
            i && ((i.faceIndex = Math.floor(g / 3)), n.push(i)));
        }
      }
    else if (c !== void 0)
      if (Array.isArray(s))
        for (let v = 0, b = p.length; v < b; v++) {
          const g = p[v],
            m = s[g.materialIndex],
            _ = Math.max(g.start, h.start),
            y = Math.min(
              c.count,
              Math.min(g.start + g.count, h.start + h.count),
            );
          for (let x = _, C = y; x < C; x += 3) {
            const w = x,
              S = x + 1,
              D = x + 2;
            ((i = yl(this, m, e, r, u, d, f, w, S, D)),
              i &&
                ((i.faceIndex = Math.floor(x / 3)),
                (i.face.materialIndex = g.materialIndex),
                n.push(i)));
          }
        }
      else {
        const v = Math.max(0, h.start),
          b = Math.min(c.count, h.start + h.count);
        for (let g = v, m = b; g < m; g += 3) {
          const _ = g,
            y = g + 1,
            x = g + 2;
          ((i = yl(this, s, e, r, u, d, f, _, y, x)),
            i && ((i.faceIndex = Math.floor(g / 3)), n.push(i)));
        }
      }
  }
}
function kA(t, e, n, r, i, o, s, a) {
  let c;
  if (
    (e.side === $n
      ? (c = r.intersectTriangle(s, o, i, !0, a))
      : (c = r.intersectTriangle(i, o, s, e.side === Dr, a)),
    c === null)
  )
    return null;
  (bl.copy(a), bl.applyMatrix4(t.matrixWorld));
  const u = n.ray.origin.distanceTo(bl);
  return u < n.near || u > n.far
    ? null
    : { distance: u, point: bl.clone(), object: t };
}
function yl(t, e, n, r, i, o, s, a, c, u) {
  (t.getVertexPosition(a, To),
    t.getVertexPosition(c, Ao),
    t.getVertexPosition(u, Po));
  const d = kA(t, e, n, r, To, Ao, Po, vl);
  if (d) {
    (i &&
      (hl.fromBufferAttribute(i, a),
      ml.fromBufferAttribute(i, c),
      gl.fromBufferAttribute(i, u),
      (d.uv = nr.getInterpolation(vl, To, Ao, Po, hl, ml, gl, new qe()))),
      o &&
        (hl.fromBufferAttribute(o, a),
        ml.fromBufferAttribute(o, c),
        gl.fromBufferAttribute(o, u),
        (d.uv1 = nr.getInterpolation(vl, To, Ao, Po, hl, ml, gl, new qe())),
        (d.uv2 = d.uv1)),
      s &&
        (Qh.fromBufferAttribute(s, a),
        em.fromBufferAttribute(s, c),
        tm.fromBufferAttribute(s, u),
        (d.normal = nr.getInterpolation(vl, To, Ao, Po, Qh, em, tm, new se())),
        d.normal.dot(r.direction) > 0 && d.normal.multiplyScalar(-1)));
    const f = { a, b: c, c: u, normal: new se(), materialIndex: 0 };
    (nr.getNormal(To, Ao, Po, f.normal), (d.face = f));
  }
  return d;
}
class Wt extends ui {
  constructor(e = 1, n = 1, r = 1, i = 1, o = 1, s = 1) {
    (super(),
      (this.type = "BoxGeometry"),
      (this.parameters = {
        width: e,
        height: n,
        depth: r,
        widthSegments: i,
        heightSegments: o,
        depthSegments: s,
      }));
    const a = this;
    ((i = Math.floor(i)), (o = Math.floor(o)), (s = Math.floor(s)));
    const c = [],
      u = [],
      d = [],
      f = [];
    let p = 0,
      h = 0;
    (v("z", "y", "x", -1, -1, r, n, e, s, o, 0),
      v("z", "y", "x", 1, -1, r, n, -e, s, o, 1),
      v("x", "z", "y", 1, 1, e, r, n, i, s, 2),
      v("x", "z", "y", 1, -1, e, r, -n, i, s, 3),
      v("x", "y", "z", 1, -1, e, n, r, i, o, 4),
      v("x", "y", "z", -1, -1, e, n, -r, i, o, 5),
      this.setIndex(c),
      this.setAttribute("position", new ni(u, 3)),
      this.setAttribute("normal", new ni(d, 3)),
      this.setAttribute("uv", new ni(f, 2)));
    function v(b, g, m, _, y, x, C, w, S, D, k) {
      const P = x / S,
        I = C / D,
        W = x / 2,
        X = C / 2,
        Z = w / 2,
        G = S + 1,
        $ = D + 1;
      let ne = 0,
        U = 0;
      const ie = new se();
      for (let J = 0; J < $; J++) {
        const V = J * I - X;
        for (let re = 0; re < G; re++) {
          const Ee = re * P - W;
          ((ie[b] = Ee * _),
            (ie[g] = V * y),
            (ie[m] = Z),
            u.push(ie.x, ie.y, ie.z),
            (ie[b] = 0),
            (ie[g] = 0),
            (ie[m] = w > 0 ? 1 : -1),
            d.push(ie.x, ie.y, ie.z),
            f.push(re / S),
            f.push(1 - J / D),
            (ne += 1));
        }
      }
      for (let J = 0; J < D; J++)
        for (let V = 0; V < S; V++) {
          const re = p + V + G * J,
            Ee = p + V + G * (J + 1),
            Pe = p + (V + 1) + G * (J + 1),
            be = p + (V + 1) + G * J;
          (c.push(re, Ee, be), c.push(Ee, Pe, be), (U += 6));
        }
      (a.addGroup(h, U, k), (h += U), (p += ne));
    }
  }
  copy(e) {
    return (
      super.copy(e),
      (this.parameters = Object.assign({}, e.parameters)),
      this
    );
  }
  static fromJSON(e) {
    return new Wt(
      e.width,
      e.height,
      e.depth,
      e.widthSegments,
      e.heightSegments,
      e.depthSegments,
    );
  }
}
function us(t) {
  const e = {};
  for (const n in t) {
    e[n] = {};
    for (const r in t[n]) {
      const i = t[n][r];
      i &&
      (i.isColor ||
        i.isMatrix3 ||
        i.isMatrix4 ||
        i.isVector2 ||
        i.isVector3 ||
        i.isVector4 ||
        i.isTexture ||
        i.isQuaternion)
        ? i.isRenderTargetTexture
          ? (console.warn(
              "UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().",
            ),
            (e[n][r] = null))
          : (e[n][r] = i.clone())
        : Array.isArray(i)
          ? (e[n][r] = i.slice())
          : (e[n][r] = i);
    }
  }
  return e;
}
function Cn(t) {
  const e = {};
  for (let n = 0; n < t.length; n++) {
    const r = us(t[n]);
    for (const i in r) e[i] = r[i];
  }
  return e;
}
function SA(t) {
  const e = [];
  for (let n = 0; n < t.length; n++) e.push(t[n].clone());
  return e;
}
function Tv(t) {
  return t.getRenderTarget() === null ? t.outputColorSpace : Ir;
}
const Av = { clone: us, merge: Cn };
var CA = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,
  MA = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;
class li extends fs {
  constructor(e) {
    (super(),
      (this.isShaderMaterial = !0),
      (this.type = "ShaderMaterial"),
      (this.defines = {}),
      (this.uniforms = {}),
      (this.uniformsGroups = []),
      (this.vertexShader = CA),
      (this.fragmentShader = MA),
      (this.linewidth = 1),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      (this.fog = !1),
      (this.lights = !1),
      (this.clipping = !1),
      (this.forceSinglePass = !0),
      (this.extensions = {
        derivatives: !1,
        fragDepth: !1,
        drawBuffers: !1,
        shaderTextureLOD: !1,
      }),
      (this.defaultAttributeValues = {
        color: [1, 1, 1],
        uv: [0, 0],
        uv1: [0, 0],
      }),
      (this.index0AttributeName = void 0),
      (this.uniformsNeedUpdate = !1),
      (this.glslVersion = null),
      e !== void 0 && this.setValues(e));
  }
  copy(e) {
    return (
      super.copy(e),
      (this.fragmentShader = e.fragmentShader),
      (this.vertexShader = e.vertexShader),
      (this.uniforms = us(e.uniforms)),
      (this.uniformsGroups = SA(e.uniformsGroups)),
      (this.defines = Object.assign({}, e.defines)),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      (this.fog = e.fog),
      (this.lights = e.lights),
      (this.clipping = e.clipping),
      (this.extensions = Object.assign({}, e.extensions)),
      (this.glslVersion = e.glslVersion),
      this
    );
  }
  toJSON(e) {
    const n = super.toJSON(e);
    ((n.glslVersion = this.glslVersion), (n.uniforms = {}));
    for (const i in this.uniforms) {
      const s = this.uniforms[i].value;
      s && s.isTexture
        ? (n.uniforms[i] = { type: "t", value: s.toJSON(e).uuid })
        : s && s.isColor
          ? (n.uniforms[i] = { type: "c", value: s.getHex() })
          : s && s.isVector2
            ? (n.uniforms[i] = { type: "v2", value: s.toArray() })
            : s && s.isVector3
              ? (n.uniforms[i] = { type: "v3", value: s.toArray() })
              : s && s.isVector4
                ? (n.uniforms[i] = { type: "v4", value: s.toArray() })
                : s && s.isMatrix3
                  ? (n.uniforms[i] = { type: "m3", value: s.toArray() })
                  : s && s.isMatrix4
                    ? (n.uniforms[i] = { type: "m4", value: s.toArray() })
                    : (n.uniforms[i] = { value: s });
    }
    (Object.keys(this.defines).length > 0 && (n.defines = this.defines),
      (n.vertexShader = this.vertexShader),
      (n.fragmentShader = this.fragmentShader),
      (n.lights = this.lights),
      (n.clipping = this.clipping));
    const r = {};
    for (const i in this.extensions) this.extensions[i] === !0 && (r[i] = !0);
    return (Object.keys(r).length > 0 && (n.extensions = r), n);
  }
}
class Pv extends xn {
  constructor() {
    (super(),
      (this.isCamera = !0),
      (this.type = "Camera"),
      (this.matrixWorldInverse = new Kt()),
      (this.projectionMatrix = new Kt()),
      (this.projectionMatrixInverse = new Kt()),
      (this.coordinateSystem = Qr));
  }
  copy(e, n) {
    return (
      super.copy(e, n),
      this.matrixWorldInverse.copy(e.matrixWorldInverse),
      this.projectionMatrix.copy(e.projectionMatrix),
      this.projectionMatrixInverse.copy(e.projectionMatrixInverse),
      (this.coordinateSystem = e.coordinateSystem),
      this
    );
  }
  getWorldDirection(e) {
    this.updateWorldMatrix(!0, !1);
    const n = this.matrixWorld.elements;
    return e.set(-n[8], -n[9], -n[10]).normalize();
  }
  updateMatrixWorld(e) {
    (super.updateMatrixWorld(e),
      this.matrixWorldInverse.copy(this.matrixWorld).invert());
  }
  updateWorldMatrix(e, n) {
    (super.updateWorldMatrix(e, n),
      this.matrixWorldInverse.copy(this.matrixWorld).invert());
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class jn extends Pv {
  constructor(e = 50, n = 1, r = 0.1, i = 2e3) {
    (super(),
      (this.isPerspectiveCamera = !0),
      (this.type = "PerspectiveCamera"),
      (this.fov = e),
      (this.zoom = 1),
      (this.near = r),
      (this.far = i),
      (this.focus = 10),
      (this.aspect = n),
      (this.view = null),
      (this.filmGauge = 35),
      (this.filmOffset = 0),
      this.updateProjectionMatrix());
  }
  copy(e, n) {
    return (
      super.copy(e, n),
      (this.fov = e.fov),
      (this.zoom = e.zoom),
      (this.near = e.near),
      (this.far = e.far),
      (this.focus = e.focus),
      (this.aspect = e.aspect),
      (this.view = e.view === null ? null : Object.assign({}, e.view)),
      (this.filmGauge = e.filmGauge),
      (this.filmOffset = e.filmOffset),
      this
    );
  }
  setFocalLength(e) {
    const n = (0.5 * this.getFilmHeight()) / e;
    ((this.fov = pd * 2 * Math.atan(n)), this.updateProjectionMatrix());
  }
  getFocalLength() {
    const e = Math.tan(Bl * 0.5 * this.fov);
    return (0.5 * this.getFilmHeight()) / e;
  }
  getEffectiveFOV() {
    return pd * 2 * Math.atan(Math.tan(Bl * 0.5 * this.fov) / this.zoom);
  }
  getFilmWidth() {
    return this.filmGauge * Math.min(this.aspect, 1);
  }
  getFilmHeight() {
    return this.filmGauge / Math.max(this.aspect, 1);
  }
  setViewOffset(e, n, r, i, o, s) {
    ((this.aspect = e / n),
      this.view === null &&
        (this.view = {
          enabled: !0,
          fullWidth: 1,
          fullHeight: 1,
          offsetX: 0,
          offsetY: 0,
          width: 1,
          height: 1,
        }),
      (this.view.enabled = !0),
      (this.view.fullWidth = e),
      (this.view.fullHeight = n),
      (this.view.offsetX = r),
      (this.view.offsetY = i),
      (this.view.width = o),
      (this.view.height = s),
      this.updateProjectionMatrix());
  }
  clearViewOffset() {
    (this.view !== null && (this.view.enabled = !1),
      this.updateProjectionMatrix());
  }
  updateProjectionMatrix() {
    const e = this.near;
    let n = (e * Math.tan(Bl * 0.5 * this.fov)) / this.zoom,
      r = 2 * n,
      i = this.aspect * r,
      o = -0.5 * i;
    const s = this.view;
    if (this.view !== null && this.view.enabled) {
      const c = s.fullWidth,
        u = s.fullHeight;
      ((o += (s.offsetX * i) / c),
        (n -= (s.offsetY * r) / u),
        (i *= s.width / c),
        (r *= s.height / u));
    }
    const a = this.filmOffset;
    (a !== 0 && (o += (e * a) / this.getFilmWidth()),
      this.projectionMatrix.makePerspective(
        o,
        o + i,
        n,
        n - r,
        e,
        this.far,
        this.coordinateSystem,
      ),
      this.projectionMatrixInverse.copy(this.projectionMatrix).invert());
  }
  toJSON(e) {
    const n = super.toJSON(e);
    return (
      (n.object.fov = this.fov),
      (n.object.zoom = this.zoom),
      (n.object.near = this.near),
      (n.object.far = this.far),
      (n.object.focus = this.focus),
      (n.object.aspect = this.aspect),
      this.view !== null && (n.object.view = Object.assign({}, this.view)),
      (n.object.filmGauge = this.filmGauge),
      (n.object.filmOffset = this.filmOffset),
      n
    );
  }
}
const Ro = -90,
  Lo = 1;
class EA extends xn {
  constructor(e, n, r) {
    (super(),
      (this.type = "CubeCamera"),
      (this.renderTarget = r),
      (this.coordinateSystem = null));
    const i = new jn(Ro, Lo, e, n);
    ((i.layers = this.layers), this.add(i));
    const o = new jn(Ro, Lo, e, n);
    ((o.layers = this.layers), this.add(o));
    const s = new jn(Ro, Lo, e, n);
    ((s.layers = this.layers), this.add(s));
    const a = new jn(Ro, Lo, e, n);
    ((a.layers = this.layers), this.add(a));
    const c = new jn(Ro, Lo, e, n);
    ((c.layers = this.layers), this.add(c));
    const u = new jn(Ro, Lo, e, n);
    ((u.layers = this.layers), this.add(u));
  }
  updateCoordinateSystem() {
    const e = this.coordinateSystem,
      n = this.children.concat(),
      [r, i, o, s, a, c] = n;
    for (const u of n) this.remove(u);
    if (e === Qr)
      (r.up.set(0, 1, 0),
        r.lookAt(1, 0, 0),
        i.up.set(0, 1, 0),
        i.lookAt(-1, 0, 0),
        o.up.set(0, 0, -1),
        o.lookAt(0, 1, 0),
        s.up.set(0, 0, 1),
        s.lookAt(0, -1, 0),
        a.up.set(0, 1, 0),
        a.lookAt(0, 0, 1),
        c.up.set(0, 1, 0),
        c.lookAt(0, 0, -1));
    else if (e === tc)
      (r.up.set(0, -1, 0),
        r.lookAt(-1, 0, 0),
        i.up.set(0, -1, 0),
        i.lookAt(1, 0, 0),
        o.up.set(0, 0, 1),
        o.lookAt(0, 1, 0),
        s.up.set(0, 0, -1),
        s.lookAt(0, -1, 0),
        a.up.set(0, -1, 0),
        a.lookAt(0, 0, 1),
        c.up.set(0, -1, 0),
        c.lookAt(0, 0, -1));
    else
      throw new Error(
        "THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: " +
          e,
      );
    for (const u of n) (this.add(u), u.updateMatrixWorld());
  }
  update(e, n) {
    this.parent === null && this.updateMatrixWorld();
    const r = this.renderTarget;
    this.coordinateSystem !== e.coordinateSystem &&
      ((this.coordinateSystem = e.coordinateSystem),
      this.updateCoordinateSystem());
    const [i, o, s, a, c, u] = this.children,
      d = e.getRenderTarget(),
      f = e.xr.enabled;
    e.xr.enabled = !1;
    const p = r.texture.generateMipmaps;
    ((r.texture.generateMipmaps = !1),
      e.setRenderTarget(r, 0),
      e.render(n, i),
      e.setRenderTarget(r, 1),
      e.render(n, o),
      e.setRenderTarget(r, 2),
      e.render(n, s),
      e.setRenderTarget(r, 3),
      e.render(n, a),
      e.setRenderTarget(r, 4),
      e.render(n, c),
      (r.texture.generateMipmaps = p),
      e.setRenderTarget(r, 5),
      e.render(n, u),
      e.setRenderTarget(d),
      (e.xr.enabled = f),
      (r.texture.needsPMREMUpdate = !0));
  }
}
class Rv extends yn {
  constructor(e, n, r, i, o, s, a, c, u, d) {
    ((e = e !== void 0 ? e : []),
      (n = n !== void 0 ? n : ss),
      super(e, n, r, i, o, s, a, c, u, d),
      (this.isCubeTexture = !0),
      (this.flipY = !1));
  }
  get images() {
    return this.image;
  }
  set images(e) {
    this.image = e;
  }
}
class TA extends ai {
  constructor(e = 1, n = {}) {
    (super(e, e, n), (this.isWebGLCubeRenderTarget = !0));
    const r = { width: e, height: e, depth: 1 },
      i = [r, r, r, r, r, r];
    (n.encoding !== void 0 &&
      (Xs(
        "THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace.",
      ),
      (n.colorSpace = n.encoding === oo ? Bt : so)),
      (this.texture = new Rv(
        i,
        n.mapping,
        n.wrapS,
        n.wrapT,
        n.magFilter,
        n.minFilter,
        n.format,
        n.type,
        n.anisotropy,
        n.colorSpace,
      )),
      (this.texture.isRenderTargetTexture = !0),
      (this.texture.generateMipmaps =
        n.generateMipmaps !== void 0 ? n.generateMipmaps : !1),
      (this.texture.minFilter = n.minFilter !== void 0 ? n.minFilter : tr));
  }
  fromEquirectangularTexture(e, n) {
    ((this.texture.type = n.type),
      (this.texture.colorSpace = n.colorSpace),
      (this.texture.generateMipmaps = n.generateMipmaps),
      (this.texture.minFilter = n.minFilter),
      (this.texture.magFilter = n.magFilter));
    const r = {
        uniforms: { tEquirect: { value: null } },
        vertexShader: `

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,
        fragmentShader: `

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`,
      },
      i = new Wt(5, 5, 5),
      o = new li({
        name: "CubemapFromEquirect",
        uniforms: us(r.uniforms),
        vertexShader: r.vertexShader,
        fragmentShader: r.fragmentShader,
        side: $n,
        blending: ti,
      });
    o.uniforms.tEquirect.value = n;
    const s = new It(i, o),
      a = n.minFilter;
    return (
      n.minFilter === wa && (n.minFilter = tr),
      new EA(1, 10, this).update(e, s),
      (n.minFilter = a),
      s.geometry.dispose(),
      s.material.dispose(),
      this
    );
  }
  clear(e, n, r, i) {
    const o = e.getRenderTarget();
    for (let s = 0; s < 6; s++) (e.setRenderTarget(this, s), e.clear(n, r, i));
    e.setRenderTarget(o);
  }
}
const Cu = new se(),
  AA = new se(),
  PA = new ut();
class ki {
  constructor(e = new se(1, 0, 0), n = 0) {
    ((this.isPlane = !0), (this.normal = e), (this.constant = n));
  }
  set(e, n) {
    return (this.normal.copy(e), (this.constant = n), this);
  }
  setComponents(e, n, r, i) {
    return (this.normal.set(e, n, r), (this.constant = i), this);
  }
  setFromNormalAndCoplanarPoint(e, n) {
    return (this.normal.copy(e), (this.constant = -n.dot(this.normal)), this);
  }
  setFromCoplanarPoints(e, n, r) {
    const i = Cu.subVectors(r, n).cross(AA.subVectors(e, n)).normalize();
    return (this.setFromNormalAndCoplanarPoint(i, e), this);
  }
  copy(e) {
    return (this.normal.copy(e.normal), (this.constant = e.constant), this);
  }
  normalize() {
    const e = 1 / this.normal.length();
    return (this.normal.multiplyScalar(e), (this.constant *= e), this);
  }
  negate() {
    return ((this.constant *= -1), this.normal.negate(), this);
  }
  distanceToPoint(e) {
    return this.normal.dot(e) + this.constant;
  }
  distanceToSphere(e) {
    return this.distanceToPoint(e.center) - e.radius;
  }
  projectPoint(e, n) {
    return n.copy(e).addScaledVector(this.normal, -this.distanceToPoint(e));
  }
  intersectLine(e, n) {
    const r = e.delta(Cu),
      i = this.normal.dot(r);
    if (i === 0)
      return this.distanceToPoint(e.start) === 0 ? n.copy(e.start) : null;
    const o = -(e.start.dot(this.normal) + this.constant) / i;
    return o < 0 || o > 1 ? null : n.copy(e.start).addScaledVector(r, o);
  }
  intersectsLine(e) {
    const n = this.distanceToPoint(e.start),
      r = this.distanceToPoint(e.end);
    return (n < 0 && r > 0) || (r < 0 && n > 0);
  }
  intersectsBox(e) {
    return e.intersectsPlane(this);
  }
  intersectsSphere(e) {
    return e.intersectsPlane(this);
  }
  coplanarPoint(e) {
    return e.copy(this.normal).multiplyScalar(-this.constant);
  }
  applyMatrix4(e, n) {
    const r = n || PA.getNormalMatrix(e),
      i = this.coplanarPoint(Cu).applyMatrix4(e),
      o = this.normal.applyMatrix3(r).normalize();
    return ((this.constant = -i.dot(o)), this);
  }
  translate(e) {
    return ((this.constant -= e.dot(this.normal)), this);
  }
  equals(e) {
    return e.normal.equals(this.normal) && e.constant === this.constant;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const Gi = new sf(),
  xl = new se();
class af {
  constructor(
    e = new ki(),
    n = new ki(),
    r = new ki(),
    i = new ki(),
    o = new ki(),
    s = new ki(),
  ) {
    this.planes = [e, n, r, i, o, s];
  }
  set(e, n, r, i, o, s) {
    const a = this.planes;
    return (
      a[0].copy(e),
      a[1].copy(n),
      a[2].copy(r),
      a[3].copy(i),
      a[4].copy(o),
      a[5].copy(s),
      this
    );
  }
  copy(e) {
    const n = this.planes;
    for (let r = 0; r < 6; r++) n[r].copy(e.planes[r]);
    return this;
  }
  setFromProjectionMatrix(e, n = Qr) {
    const r = this.planes,
      i = e.elements,
      o = i[0],
      s = i[1],
      a = i[2],
      c = i[3],
      u = i[4],
      d = i[5],
      f = i[6],
      p = i[7],
      h = i[8],
      v = i[9],
      b = i[10],
      g = i[11],
      m = i[12],
      _ = i[13],
      y = i[14],
      x = i[15];
    if (
      (r[0].setComponents(c - o, p - u, g - h, x - m).normalize(),
      r[1].setComponents(c + o, p + u, g + h, x + m).normalize(),
      r[2].setComponents(c + s, p + d, g + v, x + _).normalize(),
      r[3].setComponents(c - s, p - d, g - v, x - _).normalize(),
      r[4].setComponents(c - a, p - f, g - b, x - y).normalize(),
      n === Qr)
    )
      r[5].setComponents(c + a, p + f, g + b, x + y).normalize();
    else if (n === tc) r[5].setComponents(a, f, b, y).normalize();
    else
      throw new Error(
        "THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: " +
          n,
      );
    return this;
  }
  intersectsObject(e) {
    if (e.boundingSphere !== void 0)
      (e.boundingSphere === null && e.computeBoundingSphere(),
        Gi.copy(e.boundingSphere).applyMatrix4(e.matrixWorld));
    else {
      const n = e.geometry;
      (n.boundingSphere === null && n.computeBoundingSphere(),
        Gi.copy(n.boundingSphere).applyMatrix4(e.matrixWorld));
    }
    return this.intersectsSphere(Gi);
  }
  intersectsSprite(e) {
    return (
      Gi.center.set(0, 0, 0),
      (Gi.radius = 0.7071067811865476),
      Gi.applyMatrix4(e.matrixWorld),
      this.intersectsSphere(Gi)
    );
  }
  intersectsSphere(e) {
    const n = this.planes,
      r = e.center,
      i = -e.radius;
    for (let o = 0; o < 6; o++) if (n[o].distanceToPoint(r) < i) return !1;
    return !0;
  }
  intersectsBox(e) {
    const n = this.planes;
    for (let r = 0; r < 6; r++) {
      const i = n[r];
      if (
        ((xl.x = i.normal.x > 0 ? e.max.x : e.min.x),
        (xl.y = i.normal.y > 0 ? e.max.y : e.min.y),
        (xl.z = i.normal.z > 0 ? e.max.z : e.min.z),
        i.distanceToPoint(xl) < 0)
      )
        return !1;
    }
    return !0;
  }
  containsPoint(e) {
    const n = this.planes;
    for (let r = 0; r < 6; r++) if (n[r].distanceToPoint(e) < 0) return !1;
    return !0;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
function Lv() {
  let t = null,
    e = !1,
    n = null,
    r = null;
  function i(o, s) {
    (n(o, s), (r = t.requestAnimationFrame(i)));
  }
  return {
    start: function () {
      e !== !0 && n !== null && ((r = t.requestAnimationFrame(i)), (e = !0));
    },
    stop: function () {
      (t.cancelAnimationFrame(r), (e = !1));
    },
    setAnimationLoop: function (o) {
      n = o;
    },
    setContext: function (o) {
      t = o;
    },
  };
}
function RA(t, e) {
  const n = e.isWebGL2,
    r = new WeakMap();
  function i(u, d) {
    const f = u.array,
      p = u.usage,
      h = t.createBuffer();
    (t.bindBuffer(d, h), t.bufferData(d, f, p), u.onUploadCallback());
    let v;
    if (f instanceof Float32Array) v = t.FLOAT;
    else if (f instanceof Uint16Array)
      if (u.isFloat16BufferAttribute)
        if (n) v = t.HALF_FLOAT;
        else
          throw new Error(
            "THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.",
          );
      else v = t.UNSIGNED_SHORT;
    else if (f instanceof Int16Array) v = t.SHORT;
    else if (f instanceof Uint32Array) v = t.UNSIGNED_INT;
    else if (f instanceof Int32Array) v = t.INT;
    else if (f instanceof Int8Array) v = t.BYTE;
    else if (f instanceof Uint8Array) v = t.UNSIGNED_BYTE;
    else if (f instanceof Uint8ClampedArray) v = t.UNSIGNED_BYTE;
    else
      throw new Error(
        "THREE.WebGLAttributes: Unsupported buffer data format: " + f,
      );
    return {
      buffer: h,
      type: v,
      bytesPerElement: f.BYTES_PER_ELEMENT,
      version: u.version,
    };
  }
  function o(u, d, f) {
    const p = d.array,
      h = d.updateRange;
    (t.bindBuffer(f, u),
      h.count === -1
        ? t.bufferSubData(f, 0, p)
        : (n
            ? t.bufferSubData(
                f,
                h.offset * p.BYTES_PER_ELEMENT,
                p,
                h.offset,
                h.count,
              )
            : t.bufferSubData(
                f,
                h.offset * p.BYTES_PER_ELEMENT,
                p.subarray(h.offset, h.offset + h.count),
              ),
          (h.count = -1)),
      d.onUploadCallback());
  }
  function s(u) {
    return (u.isInterleavedBufferAttribute && (u = u.data), r.get(u));
  }
  function a(u) {
    u.isInterleavedBufferAttribute && (u = u.data);
    const d = r.get(u);
    d && (t.deleteBuffer(d.buffer), r.delete(u));
  }
  function c(u, d) {
    if (u.isGLBufferAttribute) {
      const p = r.get(u);
      (!p || p.version < u.version) &&
        r.set(u, {
          buffer: u.buffer,
          type: u.type,
          bytesPerElement: u.elementSize,
          version: u.version,
        });
      return;
    }
    u.isInterleavedBufferAttribute && (u = u.data);
    const f = r.get(u);
    f === void 0
      ? r.set(u, i(u, d))
      : f.version < u.version && (o(f.buffer, u, d), (f.version = u.version));
  }
  return { get: s, remove: a, update: c };
}
class lf extends ui {
  constructor(e = 1, n = 1, r = 1, i = 1) {
    (super(),
      (this.type = "PlaneGeometry"),
      (this.parameters = {
        width: e,
        height: n,
        widthSegments: r,
        heightSegments: i,
      }));
    const o = e / 2,
      s = n / 2,
      a = Math.floor(r),
      c = Math.floor(i),
      u = a + 1,
      d = c + 1,
      f = e / a,
      p = n / c,
      h = [],
      v = [],
      b = [],
      g = [];
    for (let m = 0; m < d; m++) {
      const _ = m * p - s;
      for (let y = 0; y < u; y++) {
        const x = y * f - o;
        (v.push(x, -_, 0), b.push(0, 0, 1), g.push(y / a), g.push(1 - m / c));
      }
    }
    for (let m = 0; m < c; m++)
      for (let _ = 0; _ < a; _++) {
        const y = _ + u * m,
          x = _ + u * (m + 1),
          C = _ + 1 + u * (m + 1),
          w = _ + 1 + u * m;
        (h.push(y, x, w), h.push(x, C, w));
      }
    (this.setIndex(h),
      this.setAttribute("position", new ni(v, 3)),
      this.setAttribute("normal", new ni(b, 3)),
      this.setAttribute("uv", new ni(g, 2)));
  }
  copy(e) {
    return (
      super.copy(e),
      (this.parameters = Object.assign({}, e.parameters)),
      this
    );
  }
  static fromJSON(e) {
    return new lf(e.width, e.height, e.widthSegments, e.heightSegments);
  }
}
var LA = `#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,
  DA = `#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,
  IA = `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,
  OA = `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,
  $A = `#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,
  zA = `#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,
  BA = `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,
  UA = `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,
  FA = `vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,
  NA = `vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,
  VA = `float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,
  HA = `#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,
  jA = `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,
  GA = `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,
  WA = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,
  KA = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,
  XA = `#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,
  YA = `#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,
  qA = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,
  ZA = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,
  JA = `#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,
  QA = `#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,
  e4 = `#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,
  t4 = `vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,
  n4 = `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,
  r4 = `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,
  i4 = `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,
  o4 = `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,
  s4 = "gl_FragColor = linearToOutputTexel( gl_FragColor );",
  a4 = `vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,
  l4 = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,
  c4 = `#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif

#endif`,
  u4 = `#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,
  d4 = `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS

		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,
  f4 = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,
  p4 = `#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,
  h4 = `#ifdef USE_FOG
	varying float vFogDepth;
#endif`,
  m4 = `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,
  g4 = `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,
  v4 = `#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,
  b4 = `#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,
  y4 = `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,
  x4 = `LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,
  _4 = `varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,
  w4 = `uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,
  k4 = `#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,
  S4 = `ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,
  C4 = `varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,
  M4 = `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,
  E4 = `varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,
  T4 = `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,
  A4 = `struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,
  P4 = `
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,
  R4 = `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,
  L4 = `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,
  D4 = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,
  I4 = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,
  O4 = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,
  $4 = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,
  z4 = `#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );

	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,
  B4 = `#ifdef USE_MAP
	uniform sampler2D map;
#endif`,
  U4 = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,
  F4 = `#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,
  N4 = `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,
  V4 = `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,
  H4 = `#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,
  j4 = `#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,
  G4 = `#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,
  W4 = `#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,
  K4 = `float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,
  X4 = `#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,
  Y4 = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,
  q4 = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,
  Z4 = `#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,
  J4 = `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,
  Q4 = `#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,
  eP = `#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,
  tP = `#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,
  nP = `#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,
  rP = `#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,
  iP = `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,
  oP = `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,
  sP = `vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,
  aP = `#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,
  lP = `#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,
  cP = `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,
  uP = `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,
  dP = `#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,
  fP = `#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,
  pP = `#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,
  hP = `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,
  mP = `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,
  gP = `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,
  vP = `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,
  bP = `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,
  yP = `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,
  xP = `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,
  _P = `#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,
  wP = `#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,
  kP = `#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,
  SP = `#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,
  CP = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,
  MP = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,
  EP = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,
  TP = `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;
const AP = `varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,
  PP = `uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,
  RP = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,
  LP = `#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,
  DP = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,
  IP = `uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,
  OP = `#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,
  $P = `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,
  zP = `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,
  BP = `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,
  UP = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,
  FP = `uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,
  NP = `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,
  VP = `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,
  HP = `#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,
  jP = `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  GP = `#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
  WP = `#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  KP = `#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,
  XP = `#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  YP = `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,
  qP = `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,
  ZP = `#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
  JP = `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  QP = `#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,
  eR = `#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  tR = `#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
  nR = `#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  rR = `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,
  iR = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,
  oR = `#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
  sR = `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,
  aR = `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,
  lR = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,
  lt = {
    alphahash_fragment: LA,
    alphahash_pars_fragment: DA,
    alphamap_fragment: IA,
    alphamap_pars_fragment: OA,
    alphatest_fragment: $A,
    alphatest_pars_fragment: zA,
    aomap_fragment: BA,
    aomap_pars_fragment: UA,
    begin_vertex: FA,
    beginnormal_vertex: NA,
    bsdfs: VA,
    iridescence_fragment: HA,
    bumpmap_pars_fragment: jA,
    clipping_planes_fragment: GA,
    clipping_planes_pars_fragment: WA,
    clipping_planes_pars_vertex: KA,
    clipping_planes_vertex: XA,
    color_fragment: YA,
    color_pars_fragment: qA,
    color_pars_vertex: ZA,
    color_vertex: JA,
    common: QA,
    cube_uv_reflection_fragment: e4,
    defaultnormal_vertex: t4,
    displacementmap_pars_vertex: n4,
    displacementmap_vertex: r4,
    emissivemap_fragment: i4,
    emissivemap_pars_fragment: o4,
    colorspace_fragment: s4,
    colorspace_pars_fragment: a4,
    envmap_fragment: l4,
    envmap_common_pars_fragment: c4,
    envmap_pars_fragment: u4,
    envmap_pars_vertex: d4,
    envmap_physical_pars_fragment: k4,
    envmap_vertex: f4,
    fog_vertex: p4,
    fog_pars_vertex: h4,
    fog_fragment: m4,
    fog_pars_fragment: g4,
    gradientmap_pars_fragment: v4,
    lightmap_fragment: b4,
    lightmap_pars_fragment: y4,
    lights_lambert_fragment: x4,
    lights_lambert_pars_fragment: _4,
    lights_pars_begin: w4,
    lights_toon_fragment: S4,
    lights_toon_pars_fragment: C4,
    lights_phong_fragment: M4,
    lights_phong_pars_fragment: E4,
    lights_physical_fragment: T4,
    lights_physical_pars_fragment: A4,
    lights_fragment_begin: P4,
    lights_fragment_maps: R4,
    lights_fragment_end: L4,
    logdepthbuf_fragment: D4,
    logdepthbuf_pars_fragment: I4,
    logdepthbuf_pars_vertex: O4,
    logdepthbuf_vertex: $4,
    map_fragment: z4,
    map_pars_fragment: B4,
    map_particle_fragment: U4,
    map_particle_pars_fragment: F4,
    metalnessmap_fragment: N4,
    metalnessmap_pars_fragment: V4,
    morphcolor_vertex: H4,
    morphnormal_vertex: j4,
    morphtarget_pars_vertex: G4,
    morphtarget_vertex: W4,
    normal_fragment_begin: K4,
    normal_fragment_maps: X4,
    normal_pars_fragment: Y4,
    normal_pars_vertex: q4,
    normal_vertex: Z4,
    normalmap_pars_fragment: J4,
    clearcoat_normal_fragment_begin: Q4,
    clearcoat_normal_fragment_maps: eP,
    clearcoat_pars_fragment: tP,
    iridescence_pars_fragment: nP,
    opaque_fragment: rP,
    packing: iP,
    premultiplied_alpha_fragment: oP,
    project_vertex: sP,
    dithering_fragment: aP,
    dithering_pars_fragment: lP,
    roughnessmap_fragment: cP,
    roughnessmap_pars_fragment: uP,
    shadowmap_pars_fragment: dP,
    shadowmap_pars_vertex: fP,
    shadowmap_vertex: pP,
    shadowmask_pars_fragment: hP,
    skinbase_vertex: mP,
    skinning_pars_vertex: gP,
    skinning_vertex: vP,
    skinnormal_vertex: bP,
    specularmap_fragment: yP,
    specularmap_pars_fragment: xP,
    tonemapping_fragment: _P,
    tonemapping_pars_fragment: wP,
    transmission_fragment: kP,
    transmission_pars_fragment: SP,
    uv_pars_fragment: CP,
    uv_pars_vertex: MP,
    uv_vertex: EP,
    worldpos_vertex: TP,
    background_vert: AP,
    background_frag: PP,
    backgroundCube_vert: RP,
    backgroundCube_frag: LP,
    cube_vert: DP,
    cube_frag: IP,
    depth_vert: OP,
    depth_frag: $P,
    distanceRGBA_vert: zP,
    distanceRGBA_frag: BP,
    equirect_vert: UP,
    equirect_frag: FP,
    linedashed_vert: NP,
    linedashed_frag: VP,
    meshbasic_vert: HP,
    meshbasic_frag: jP,
    meshlambert_vert: GP,
    meshlambert_frag: WP,
    meshmatcap_vert: KP,
    meshmatcap_frag: XP,
    meshnormal_vert: YP,
    meshnormal_frag: qP,
    meshphong_vert: ZP,
    meshphong_frag: JP,
    meshphysical_vert: QP,
    meshphysical_frag: eR,
    meshtoon_vert: tR,
    meshtoon_frag: nR,
    points_vert: rR,
    points_frag: iR,
    shadow_vert: oR,
    shadow_frag: sR,
    sprite_vert: aR,
    sprite_frag: lR,
  },
  Ue = {
    common: {
      diffuse: { value: new _t(16777215) },
      opacity: { value: 1 },
      map: { value: null },
      mapTransform: { value: new ut() },
      alphaMap: { value: null },
      alphaMapTransform: { value: new ut() },
      alphaTest: { value: 0 },
    },
    specularmap: {
      specularMap: { value: null },
      specularMapTransform: { value: new ut() },
    },
    envmap: {
      envMap: { value: null },
      flipEnvMap: { value: -1 },
      reflectivity: { value: 1 },
      ior: { value: 1.5 },
      refractionRatio: { value: 0.98 },
    },
    aomap: {
      aoMap: { value: null },
      aoMapIntensity: { value: 1 },
      aoMapTransform: { value: new ut() },
    },
    lightmap: {
      lightMap: { value: null },
      lightMapIntensity: { value: 1 },
      lightMapTransform: { value: new ut() },
    },
    bumpmap: {
      bumpMap: { value: null },
      bumpMapTransform: { value: new ut() },
      bumpScale: { value: 1 },
    },
    normalmap: {
      normalMap: { value: null },
      normalMapTransform: { value: new ut() },
      normalScale: { value: new qe(1, 1) },
    },
    displacementmap: {
      displacementMap: { value: null },
      displacementMapTransform: { value: new ut() },
      displacementScale: { value: 1 },
      displacementBias: { value: 0 },
    },
    emissivemap: {
      emissiveMap: { value: null },
      emissiveMapTransform: { value: new ut() },
    },
    metalnessmap: {
      metalnessMap: { value: null },
      metalnessMapTransform: { value: new ut() },
    },
    roughnessmap: {
      roughnessMap: { value: null },
      roughnessMapTransform: { value: new ut() },
    },
    gradientmap: { gradientMap: { value: null } },
    fog: {
      fogDensity: { value: 25e-5 },
      fogNear: { value: 1 },
      fogFar: { value: 2e3 },
      fogColor: { value: new _t(16777215) },
    },
    lights: {
      ambientLightColor: { value: [] },
      lightProbe: { value: [] },
      directionalLights: {
        value: [],
        properties: { direction: {}, color: {} },
      },
      directionalLightShadows: {
        value: [],
        properties: {
          shadowBias: {},
          shadowNormalBias: {},
          shadowRadius: {},
          shadowMapSize: {},
        },
      },
      directionalShadowMap: { value: [] },
      directionalShadowMatrix: { value: [] },
      spotLights: {
        value: [],
        properties: {
          color: {},
          position: {},
          direction: {},
          distance: {},
          coneCos: {},
          penumbraCos: {},
          decay: {},
        },
      },
      spotLightShadows: {
        value: [],
        properties: {
          shadowBias: {},
          shadowNormalBias: {},
          shadowRadius: {},
          shadowMapSize: {},
        },
      },
      spotLightMap: { value: [] },
      spotShadowMap: { value: [] },
      spotLightMatrix: { value: [] },
      pointLights: {
        value: [],
        properties: { color: {}, position: {}, decay: {}, distance: {} },
      },
      pointLightShadows: {
        value: [],
        properties: {
          shadowBias: {},
          shadowNormalBias: {},
          shadowRadius: {},
          shadowMapSize: {},
          shadowCameraNear: {},
          shadowCameraFar: {},
        },
      },
      pointShadowMap: { value: [] },
      pointShadowMatrix: { value: [] },
      hemisphereLights: {
        value: [],
        properties: { direction: {}, skyColor: {}, groundColor: {} },
      },
      rectAreaLights: {
        value: [],
        properties: { color: {}, position: {}, width: {}, height: {} },
      },
      ltc_1: { value: null },
      ltc_2: { value: null },
    },
    points: {
      diffuse: { value: new _t(16777215) },
      opacity: { value: 1 },
      size: { value: 1 },
      scale: { value: 1 },
      map: { value: null },
      alphaMap: { value: null },
      alphaMapTransform: { value: new ut() },
      alphaTest: { value: 0 },
      uvTransform: { value: new ut() },
    },
    sprite: {
      diffuse: { value: new _t(16777215) },
      opacity: { value: 1 },
      center: { value: new qe(0.5, 0.5) },
      rotation: { value: 0 },
      map: { value: null },
      mapTransform: { value: new ut() },
      alphaMap: { value: null },
      alphaMapTransform: { value: new ut() },
      alphaTest: { value: 0 },
    },
  },
  Ar = {
    basic: {
      uniforms: Cn([
        Ue.common,
        Ue.specularmap,
        Ue.envmap,
        Ue.aomap,
        Ue.lightmap,
        Ue.fog,
      ]),
      vertexShader: lt.meshbasic_vert,
      fragmentShader: lt.meshbasic_frag,
    },
    lambert: {
      uniforms: Cn([
        Ue.common,
        Ue.specularmap,
        Ue.envmap,
        Ue.aomap,
        Ue.lightmap,
        Ue.emissivemap,
        Ue.bumpmap,
        Ue.normalmap,
        Ue.displacementmap,
        Ue.fog,
        Ue.lights,
        { emissive: { value: new _t(0) } },
      ]),
      vertexShader: lt.meshlambert_vert,
      fragmentShader: lt.meshlambert_frag,
    },
    phong: {
      uniforms: Cn([
        Ue.common,
        Ue.specularmap,
        Ue.envmap,
        Ue.aomap,
        Ue.lightmap,
        Ue.emissivemap,
        Ue.bumpmap,
        Ue.normalmap,
        Ue.displacementmap,
        Ue.fog,
        Ue.lights,
        {
          emissive: { value: new _t(0) },
          specular: { value: new _t(1118481) },
          shininess: { value: 30 },
        },
      ]),
      vertexShader: lt.meshphong_vert,
      fragmentShader: lt.meshphong_frag,
    },
    standard: {
      uniforms: Cn([
        Ue.common,
        Ue.envmap,
        Ue.aomap,
        Ue.lightmap,
        Ue.emissivemap,
        Ue.bumpmap,
        Ue.normalmap,
        Ue.displacementmap,
        Ue.roughnessmap,
        Ue.metalnessmap,
        Ue.fog,
        Ue.lights,
        {
          emissive: { value: new _t(0) },
          roughness: { value: 1 },
          metalness: { value: 0 },
          envMapIntensity: { value: 1 },
        },
      ]),
      vertexShader: lt.meshphysical_vert,
      fragmentShader: lt.meshphysical_frag,
    },
    toon: {
      uniforms: Cn([
        Ue.common,
        Ue.aomap,
        Ue.lightmap,
        Ue.emissivemap,
        Ue.bumpmap,
        Ue.normalmap,
        Ue.displacementmap,
        Ue.gradientmap,
        Ue.fog,
        Ue.lights,
        { emissive: { value: new _t(0) } },
      ]),
      vertexShader: lt.meshtoon_vert,
      fragmentShader: lt.meshtoon_frag,
    },
    matcap: {
      uniforms: Cn([
        Ue.common,
        Ue.bumpmap,
        Ue.normalmap,
        Ue.displacementmap,
        Ue.fog,
        { matcap: { value: null } },
      ]),
      vertexShader: lt.meshmatcap_vert,
      fragmentShader: lt.meshmatcap_frag,
    },
    points: {
      uniforms: Cn([Ue.points, Ue.fog]),
      vertexShader: lt.points_vert,
      fragmentShader: lt.points_frag,
    },
    dashed: {
      uniforms: Cn([
        Ue.common,
        Ue.fog,
        {
          scale: { value: 1 },
          dashSize: { value: 1 },
          totalSize: { value: 2 },
        },
      ]),
      vertexShader: lt.linedashed_vert,
      fragmentShader: lt.linedashed_frag,
    },
    depth: {
      uniforms: Cn([Ue.common, Ue.displacementmap]),
      vertexShader: lt.depth_vert,
      fragmentShader: lt.depth_frag,
    },
    normal: {
      uniforms: Cn([
        Ue.common,
        Ue.bumpmap,
        Ue.normalmap,
        Ue.displacementmap,
        { opacity: { value: 1 } },
      ]),
      vertexShader: lt.meshnormal_vert,
      fragmentShader: lt.meshnormal_frag,
    },
    sprite: {
      uniforms: Cn([Ue.sprite, Ue.fog]),
      vertexShader: lt.sprite_vert,
      fragmentShader: lt.sprite_frag,
    },
    background: {
      uniforms: {
        uvTransform: { value: new ut() },
        t2D: { value: null },
        backgroundIntensity: { value: 1 },
      },
      vertexShader: lt.background_vert,
      fragmentShader: lt.background_frag,
    },
    backgroundCube: {
      uniforms: {
        envMap: { value: null },
        flipEnvMap: { value: -1 },
        backgroundBlurriness: { value: 0 },
        backgroundIntensity: { value: 1 },
      },
      vertexShader: lt.backgroundCube_vert,
      fragmentShader: lt.backgroundCube_frag,
    },
    cube: {
      uniforms: {
        tCube: { value: null },
        tFlip: { value: -1 },
        opacity: { value: 1 },
      },
      vertexShader: lt.cube_vert,
      fragmentShader: lt.cube_frag,
    },
    equirect: {
      uniforms: { tEquirect: { value: null } },
      vertexShader: lt.equirect_vert,
      fragmentShader: lt.equirect_frag,
    },
    distanceRGBA: {
      uniforms: Cn([
        Ue.common,
        Ue.displacementmap,
        {
          referencePosition: { value: new se() },
          nearDistance: { value: 1 },
          farDistance: { value: 1e3 },
        },
      ]),
      vertexShader: lt.distanceRGBA_vert,
      fragmentShader: lt.distanceRGBA_frag,
    },
    shadow: {
      uniforms: Cn([
        Ue.lights,
        Ue.fog,
        { color: { value: new _t(0) }, opacity: { value: 1 } },
      ]),
      vertexShader: lt.shadow_vert,
      fragmentShader: lt.shadow_frag,
    },
  };
Ar.physical = {
  uniforms: Cn([
    Ar.standard.uniforms,
    {
      clearcoat: { value: 0 },
      clearcoatMap: { value: null },
      clearcoatMapTransform: { value: new ut() },
      clearcoatNormalMap: { value: null },
      clearcoatNormalMapTransform: { value: new ut() },
      clearcoatNormalScale: { value: new qe(1, 1) },
      clearcoatRoughness: { value: 0 },
      clearcoatRoughnessMap: { value: null },
      clearcoatRoughnessMapTransform: { value: new ut() },
      iridescence: { value: 0 },
      iridescenceMap: { value: null },
      iridescenceMapTransform: { value: new ut() },
      iridescenceIOR: { value: 1.3 },
      iridescenceThicknessMinimum: { value: 100 },
      iridescenceThicknessMaximum: { value: 400 },
      iridescenceThicknessMap: { value: null },
      iridescenceThicknessMapTransform: { value: new ut() },
      sheen: { value: 0 },
      sheenColor: { value: new _t(0) },
      sheenColorMap: { value: null },
      sheenColorMapTransform: { value: new ut() },
      sheenRoughness: { value: 1 },
      sheenRoughnessMap: { value: null },
      sheenRoughnessMapTransform: { value: new ut() },
      transmission: { value: 0 },
      transmissionMap: { value: null },
      transmissionMapTransform: { value: new ut() },
      transmissionSamplerSize: { value: new qe() },
      transmissionSamplerMap: { value: null },
      thickness: { value: 0 },
      thicknessMap: { value: null },
      thicknessMapTransform: { value: new ut() },
      attenuationDistance: { value: 0 },
      attenuationColor: { value: new _t(0) },
      specularColor: { value: new _t(1, 1, 1) },
      specularColorMap: { value: null },
      specularColorMapTransform: { value: new ut() },
      specularIntensity: { value: 1 },
      specularIntensityMap: { value: null },
      specularIntensityMapTransform: { value: new ut() },
      anisotropyVector: { value: new qe() },
      anisotropyMap: { value: null },
      anisotropyMapTransform: { value: new ut() },
    },
  ]),
  vertexShader: lt.meshphysical_vert,
  fragmentShader: lt.meshphysical_frag,
};
const _l = { r: 0, b: 0, g: 0 };
function cR(t, e, n, r, i, o, s) {
  const a = new _t(0);
  let c = o === !0 ? 0 : 1,
    u,
    d,
    f = null,
    p = 0,
    h = null;
  function v(g, m) {
    let _ = !1,
      y = m.isScene === !0 ? m.background : null;
    (y && y.isTexture && (y = (m.backgroundBlurriness > 0 ? n : e).get(y)),
      y === null ? b(a, c) : y && y.isColor && (b(y, 1), (_ = !0)));
    const x = t.xr.getEnvironmentBlendMode();
    (x === "additive"
      ? r.buffers.color.setClear(0, 0, 0, 1, s)
      : x === "alpha-blend" && r.buffers.color.setClear(0, 0, 0, 0, s),
      (t.autoClear || _) &&
        t.clear(t.autoClearColor, t.autoClearDepth, t.autoClearStencil),
      y && (y.isCubeTexture || y.mapping === Mc)
        ? (d === void 0 &&
            ((d = new It(
              new Wt(1, 1, 1),
              new li({
                name: "BackgroundCubeMaterial",
                uniforms: us(Ar.backgroundCube.uniforms),
                vertexShader: Ar.backgroundCube.vertexShader,
                fragmentShader: Ar.backgroundCube.fragmentShader,
                side: $n,
                depthTest: !1,
                depthWrite: !1,
                fog: !1,
              }),
            )),
            d.geometry.deleteAttribute("normal"),
            d.geometry.deleteAttribute("uv"),
            (d.onBeforeRender = function (C, w, S) {
              this.matrixWorld.copyPosition(S.matrixWorld);
            }),
            Object.defineProperty(d.material, "envMap", {
              get: function () {
                return this.uniforms.envMap.value;
              },
            }),
            i.update(d)),
          (d.material.uniforms.envMap.value = y),
          (d.material.uniforms.flipEnvMap.value =
            y.isCubeTexture && y.isRenderTargetTexture === !1 ? -1 : 1),
          (d.material.uniforms.backgroundBlurriness.value =
            m.backgroundBlurriness),
          (d.material.uniforms.backgroundIntensity.value =
            m.backgroundIntensity),
          (d.material.toneMapped = y.colorSpace !== Bt),
          (f !== y || p !== y.version || h !== t.toneMapping) &&
            ((d.material.needsUpdate = !0),
            (f = y),
            (p = y.version),
            (h = t.toneMapping)),
          d.layers.enableAll(),
          g.unshift(d, d.geometry, d.material, 0, 0, null))
        : y &&
          y.isTexture &&
          (u === void 0 &&
            ((u = new It(
              new lf(2, 2),
              new li({
                name: "BackgroundMaterial",
                uniforms: us(Ar.background.uniforms),
                vertexShader: Ar.background.vertexShader,
                fragmentShader: Ar.background.fragmentShader,
                side: Dr,
                depthTest: !1,
                depthWrite: !1,
                fog: !1,
              }),
            )),
            u.geometry.deleteAttribute("normal"),
            Object.defineProperty(u.material, "map", {
              get: function () {
                return this.uniforms.t2D.value;
              },
            }),
            i.update(u)),
          (u.material.uniforms.t2D.value = y),
          (u.material.uniforms.backgroundIntensity.value =
            m.backgroundIntensity),
          (u.material.toneMapped = y.colorSpace !== Bt),
          y.matrixAutoUpdate === !0 && y.updateMatrix(),
          u.material.uniforms.uvTransform.value.copy(y.matrix),
          (f !== y || p !== y.version || h !== t.toneMapping) &&
            ((u.material.needsUpdate = !0),
            (f = y),
            (p = y.version),
            (h = t.toneMapping)),
          u.layers.enableAll(),
          g.unshift(u, u.geometry, u.material, 0, 0, null)));
  }
  function b(g, m) {
    (g.getRGB(_l, Tv(t)), r.buffers.color.setClear(_l.r, _l.g, _l.b, m, s));
  }
  return {
    getClearColor: function () {
      return a;
    },
    setClearColor: function (g, m = 1) {
      (a.set(g), (c = m), b(a, c));
    },
    getClearAlpha: function () {
      return c;
    },
    setClearAlpha: function (g) {
      ((c = g), b(a, c));
    },
    render: v,
  };
}
function uR(t, e, n, r) {
  const i = t.getParameter(t.MAX_VERTEX_ATTRIBS),
    o = r.isWebGL2 ? null : e.get("OES_vertex_array_object"),
    s = r.isWebGL2 || o !== null,
    a = {},
    c = g(null);
  let u = c,
    d = !1;
  function f(Z, G, $, ne, U) {
    let ie = !1;
    if (s) {
      const J = b(ne, $, G);
      (u !== J && ((u = J), h(u.object)),
        (ie = m(Z, ne, $, U)),
        ie && _(Z, ne, $, U));
    } else {
      const J = G.wireframe === !0;
      (u.geometry !== ne.id || u.program !== $.id || u.wireframe !== J) &&
        ((u.geometry = ne.id),
        (u.program = $.id),
        (u.wireframe = J),
        (ie = !0));
    }
    (U !== null && n.update(U, t.ELEMENT_ARRAY_BUFFER),
      (ie || d) &&
        ((d = !1),
        D(Z, G, $, ne),
        U !== null && t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, n.get(U).buffer)));
  }
  function p() {
    return r.isWebGL2 ? t.createVertexArray() : o.createVertexArrayOES();
  }
  function h(Z) {
    return r.isWebGL2 ? t.bindVertexArray(Z) : o.bindVertexArrayOES(Z);
  }
  function v(Z) {
    return r.isWebGL2 ? t.deleteVertexArray(Z) : o.deleteVertexArrayOES(Z);
  }
  function b(Z, G, $) {
    const ne = $.wireframe === !0;
    let U = a[Z.id];
    U === void 0 && ((U = {}), (a[Z.id] = U));
    let ie = U[G.id];
    ie === void 0 && ((ie = {}), (U[G.id] = ie));
    let J = ie[ne];
    return (J === void 0 && ((J = g(p())), (ie[ne] = J)), J);
  }
  function g(Z) {
    const G = [],
      $ = [],
      ne = [];
    for (let U = 0; U < i; U++) ((G[U] = 0), ($[U] = 0), (ne[U] = 0));
    return {
      geometry: null,
      program: null,
      wireframe: !1,
      newAttributes: G,
      enabledAttributes: $,
      attributeDivisors: ne,
      object: Z,
      attributes: {},
      index: null,
    };
  }
  function m(Z, G, $, ne) {
    const U = u.attributes,
      ie = G.attributes;
    let J = 0;
    const V = $.getAttributes();
    for (const re in V)
      if (V[re].location >= 0) {
        const Pe = U[re];
        let be = ie[re];
        if (
          (be === void 0 &&
            (re === "instanceMatrix" &&
              Z.instanceMatrix &&
              (be = Z.instanceMatrix),
            re === "instanceColor" &&
              Z.instanceColor &&
              (be = Z.instanceColor)),
          Pe === void 0 || Pe.attribute !== be || (be && Pe.data !== be.data))
        )
          return !0;
        J++;
      }
    return u.attributesNum !== J || u.index !== ne;
  }
  function _(Z, G, $, ne) {
    const U = {},
      ie = G.attributes;
    let J = 0;
    const V = $.getAttributes();
    for (const re in V)
      if (V[re].location >= 0) {
        let Pe = ie[re];
        Pe === void 0 &&
          (re === "instanceMatrix" &&
            Z.instanceMatrix &&
            (Pe = Z.instanceMatrix),
          re === "instanceColor" && Z.instanceColor && (Pe = Z.instanceColor));
        const be = {};
        ((be.attribute = Pe),
          Pe && Pe.data && (be.data = Pe.data),
          (U[re] = be),
          J++);
      }
    ((u.attributes = U), (u.attributesNum = J), (u.index = ne));
  }
  function y() {
    const Z = u.newAttributes;
    for (let G = 0, $ = Z.length; G < $; G++) Z[G] = 0;
  }
  function x(Z) {
    C(Z, 0);
  }
  function C(Z, G) {
    const $ = u.newAttributes,
      ne = u.enabledAttributes,
      U = u.attributeDivisors;
    (($[Z] = 1),
      ne[Z] === 0 && (t.enableVertexAttribArray(Z), (ne[Z] = 1)),
      U[Z] !== G &&
        ((r.isWebGL2 ? t : e.get("ANGLE_instanced_arrays"))[
          r.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"
        ](Z, G),
        (U[Z] = G)));
  }
  function w() {
    const Z = u.newAttributes,
      G = u.enabledAttributes;
    for (let $ = 0, ne = G.length; $ < ne; $++)
      G[$] !== Z[$] && (t.disableVertexAttribArray($), (G[$] = 0));
  }
  function S(Z, G, $, ne, U, ie, J) {
    J === !0
      ? t.vertexAttribIPointer(Z, G, $, U, ie)
      : t.vertexAttribPointer(Z, G, $, ne, U, ie);
  }
  function D(Z, G, $, ne) {
    if (
      r.isWebGL2 === !1 &&
      (Z.isInstancedMesh || ne.isInstancedBufferGeometry) &&
      e.get("ANGLE_instanced_arrays") === null
    )
      return;
    y();
    const U = ne.attributes,
      ie = $.getAttributes(),
      J = G.defaultAttributeValues;
    for (const V in ie) {
      const re = ie[V];
      if (re.location >= 0) {
        let Ee = U[V];
        if (
          (Ee === void 0 &&
            (V === "instanceMatrix" &&
              Z.instanceMatrix &&
              (Ee = Z.instanceMatrix),
            V === "instanceColor" && Z.instanceColor && (Ee = Z.instanceColor)),
          Ee !== void 0)
        ) {
          const Pe = Ee.normalized,
            be = Ee.itemSize,
            ce = n.get(Ee);
          if (ce === void 0) continue;
          const oe = ce.buffer,
            me = ce.type,
            ge = ce.bytesPerElement,
            Oe =
              r.isWebGL2 === !0 &&
              (me === t.INT || me === t.UNSIGNED_INT || Ee.gpuType === uv);
          if (Ee.isInterleavedBufferAttribute) {
            const He = Ee.data,
              A = He.stride,
              j = Ee.offset;
            if (He.isInstancedInterleavedBuffer) {
              for (let L = 0; L < re.locationSize; L++)
                C(re.location + L, He.meshPerAttribute);
              Z.isInstancedMesh !== !0 &&
                ne._maxInstanceCount === void 0 &&
                (ne._maxInstanceCount = He.meshPerAttribute * He.count);
            } else for (let L = 0; L < re.locationSize; L++) x(re.location + L);
            t.bindBuffer(t.ARRAY_BUFFER, oe);
            for (let L = 0; L < re.locationSize; L++)
              S(
                re.location + L,
                be / re.locationSize,
                me,
                Pe,
                A * ge,
                (j + (be / re.locationSize) * L) * ge,
                Oe,
              );
          } else {
            if (Ee.isInstancedBufferAttribute) {
              for (let He = 0; He < re.locationSize; He++)
                C(re.location + He, Ee.meshPerAttribute);
              Z.isInstancedMesh !== !0 &&
                ne._maxInstanceCount === void 0 &&
                (ne._maxInstanceCount = Ee.meshPerAttribute * Ee.count);
            } else
              for (let He = 0; He < re.locationSize; He++) x(re.location + He);
            t.bindBuffer(t.ARRAY_BUFFER, oe);
            for (let He = 0; He < re.locationSize; He++)
              S(
                re.location + He,
                be / re.locationSize,
                me,
                Pe,
                be * ge,
                (be / re.locationSize) * He * ge,
                Oe,
              );
          }
        } else if (J !== void 0) {
          const Pe = J[V];
          if (Pe !== void 0)
            switch (Pe.length) {
              case 2:
                t.vertexAttrib2fv(re.location, Pe);
                break;
              case 3:
                t.vertexAttrib3fv(re.location, Pe);
                break;
              case 4:
                t.vertexAttrib4fv(re.location, Pe);
                break;
              default:
                t.vertexAttrib1fv(re.location, Pe);
            }
        }
      }
    }
    w();
  }
  function k() {
    W();
    for (const Z in a) {
      const G = a[Z];
      for (const $ in G) {
        const ne = G[$];
        for (const U in ne) (v(ne[U].object), delete ne[U]);
        delete G[$];
      }
      delete a[Z];
    }
  }
  function P(Z) {
    if (a[Z.id] === void 0) return;
    const G = a[Z.id];
    for (const $ in G) {
      const ne = G[$];
      for (const U in ne) (v(ne[U].object), delete ne[U]);
      delete G[$];
    }
    delete a[Z.id];
  }
  function I(Z) {
    for (const G in a) {
      const $ = a[G];
      if ($[Z.id] === void 0) continue;
      const ne = $[Z.id];
      for (const U in ne) (v(ne[U].object), delete ne[U]);
      delete $[Z.id];
    }
  }
  function W() {
    (X(), (d = !0), u !== c && ((u = c), h(u.object)));
  }
  function X() {
    ((c.geometry = null), (c.program = null), (c.wireframe = !1));
  }
  return {
    setup: f,
    reset: W,
    resetDefaultState: X,
    dispose: k,
    releaseStatesOfGeometry: P,
    releaseStatesOfProgram: I,
    initAttributes: y,
    enableAttribute: x,
    disableUnusedAttributes: w,
  };
}
function dR(t, e, n, r) {
  const i = r.isWebGL2;
  let o;
  function s(u) {
    o = u;
  }
  function a(u, d) {
    (t.drawArrays(o, u, d), n.update(d, o, 1));
  }
  function c(u, d, f) {
    if (f === 0) return;
    let p, h;
    if (i) ((p = t), (h = "drawArraysInstanced"));
    else if (
      ((p = e.get("ANGLE_instanced_arrays")),
      (h = "drawArraysInstancedANGLE"),
      p === null)
    ) {
      console.error(
        "THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.",
      );
      return;
    }
    (p[h](o, u, d, f), n.update(d, o, f));
  }
  ((this.setMode = s), (this.render = a), (this.renderInstances = c));
}
function fR(t, e, n) {
  let r;
  function i() {
    if (r !== void 0) return r;
    if (e.has("EXT_texture_filter_anisotropic") === !0) {
      const S = e.get("EXT_texture_filter_anisotropic");
      r = t.getParameter(S.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
    } else r = 0;
    return r;
  }
  function o(S) {
    if (S === "highp") {
      if (
        t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.HIGH_FLOAT).precision >
          0 &&
        t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.HIGH_FLOAT).precision >
          0
      )
        return "highp";
      S = "mediump";
    }
    return S === "mediump" &&
      t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.MEDIUM_FLOAT).precision >
        0 &&
      t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.MEDIUM_FLOAT).precision >
        0
      ? "mediump"
      : "lowp";
  }
  const s =
    typeof WebGL2RenderingContext < "u" &&
    t.constructor.name === "WebGL2RenderingContext";
  let a = n.precision !== void 0 ? n.precision : "highp";
  const c = o(a);
  c !== a &&
    (console.warn(
      "THREE.WebGLRenderer:",
      a,
      "not supported, using",
      c,
      "instead.",
    ),
    (a = c));
  const u = s || e.has("WEBGL_draw_buffers"),
    d = n.logarithmicDepthBuffer === !0,
    f = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),
    p = t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),
    h = t.getParameter(t.MAX_TEXTURE_SIZE),
    v = t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),
    b = t.getParameter(t.MAX_VERTEX_ATTRIBS),
    g = t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),
    m = t.getParameter(t.MAX_VARYING_VECTORS),
    _ = t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),
    y = p > 0,
    x = s || e.has("OES_texture_float"),
    C = y && x,
    w = s ? t.getParameter(t.MAX_SAMPLES) : 0;
  return {
    isWebGL2: s,
    drawBuffers: u,
    getMaxAnisotropy: i,
    getMaxPrecision: o,
    precision: a,
    logarithmicDepthBuffer: d,
    maxTextures: f,
    maxVertexTextures: p,
    maxTextureSize: h,
    maxCubemapSize: v,
    maxAttributes: b,
    maxVertexUniforms: g,
    maxVaryings: m,
    maxFragmentUniforms: _,
    vertexTextures: y,
    floatFragmentTextures: x,
    floatVertexTextures: C,
    maxSamples: w,
  };
}
function pR(t) {
  const e = this;
  let n = null,
    r = 0,
    i = !1,
    o = !1;
  const s = new ki(),
    a = new ut(),
    c = { value: null, needsUpdate: !1 };
  ((this.uniform = c),
    (this.numPlanes = 0),
    (this.numIntersection = 0),
    (this.init = function (f, p) {
      const h = f.length !== 0 || p || r !== 0 || i;
      return ((i = p), (r = f.length), h);
    }),
    (this.beginShadows = function () {
      ((o = !0), d(null));
    }),
    (this.endShadows = function () {
      o = !1;
    }),
    (this.setGlobalState = function (f, p) {
      n = d(f, p, 0);
    }),
    (this.setState = function (f, p, h) {
      const v = f.clippingPlanes,
        b = f.clipIntersection,
        g = f.clipShadows,
        m = t.get(f);
      if (!i || v === null || v.length === 0 || (o && !g)) o ? d(null) : u();
      else {
        const _ = o ? 0 : r,
          y = _ * 4;
        let x = m.clippingState || null;
        ((c.value = x), (x = d(v, p, y, h)));
        for (let C = 0; C !== y; ++C) x[C] = n[C];
        ((m.clippingState = x),
          (this.numIntersection = b ? this.numPlanes : 0),
          (this.numPlanes += _));
      }
    }));
  function u() {
    (c.value !== n && ((c.value = n), (c.needsUpdate = r > 0)),
      (e.numPlanes = r),
      (e.numIntersection = 0));
  }
  function d(f, p, h, v) {
    const b = f !== null ? f.length : 0;
    let g = null;
    if (b !== 0) {
      if (((g = c.value), v !== !0 || g === null)) {
        const m = h + b * 4,
          _ = p.matrixWorldInverse;
        (a.getNormalMatrix(_),
          (g === null || g.length < m) && (g = new Float32Array(m)));
        for (let y = 0, x = h; y !== b; ++y, x += 4)
          (s.copy(f[y]).applyMatrix4(_, a),
            s.normal.toArray(g, x),
            (g[x + 3] = s.constant));
      }
      ((c.value = g), (c.needsUpdate = !0));
    }
    return ((e.numPlanes = b), (e.numIntersection = 0), g);
  }
}
function hR(t) {
  let e = new WeakMap();
  function n(s, a) {
    return (a === ec ? (s.mapping = ss) : a === ld && (s.mapping = as), s);
  }
  function r(s) {
    if (s && s.isTexture && s.isRenderTargetTexture === !1) {
      const a = s.mapping;
      if (a === ec || a === ld)
        if (e.has(s)) {
          const c = e.get(s).texture;
          return n(c, s.mapping);
        } else {
          const c = s.image;
          if (c && c.height > 0) {
            const u = new TA(c.height / 2);
            return (
              u.fromEquirectangularTexture(t, s),
              e.set(s, u),
              s.addEventListener("dispose", i),
              n(u.texture, s.mapping)
            );
          } else return null;
        }
    }
    return s;
  }
  function i(s) {
    const a = s.target;
    a.removeEventListener("dispose", i);
    const c = e.get(a);
    c !== void 0 && (e.delete(a), c.dispose());
  }
  function o() {
    e = new WeakMap();
  }
  return { get: r, dispose: o };
}
class Dv extends Pv {
  constructor(e = -1, n = 1, r = 1, i = -1, o = 0.1, s = 2e3) {
    (super(),
      (this.isOrthographicCamera = !0),
      (this.type = "OrthographicCamera"),
      (this.zoom = 1),
      (this.view = null),
      (this.left = e),
      (this.right = n),
      (this.top = r),
      (this.bottom = i),
      (this.near = o),
      (this.far = s),
      this.updateProjectionMatrix());
  }
  copy(e, n) {
    return (
      super.copy(e, n),
      (this.left = e.left),
      (this.right = e.right),
      (this.top = e.top),
      (this.bottom = e.bottom),
      (this.near = e.near),
      (this.far = e.far),
      (this.zoom = e.zoom),
      (this.view = e.view === null ? null : Object.assign({}, e.view)),
      this
    );
  }
  setViewOffset(e, n, r, i, o, s) {
    (this.view === null &&
      (this.view = {
        enabled: !0,
        fullWidth: 1,
        fullHeight: 1,
        offsetX: 0,
        offsetY: 0,
        width: 1,
        height: 1,
      }),
      (this.view.enabled = !0),
      (this.view.fullWidth = e),
      (this.view.fullHeight = n),
      (this.view.offsetX = r),
      (this.view.offsetY = i),
      (this.view.width = o),
      (this.view.height = s),
      this.updateProjectionMatrix());
  }
  clearViewOffset() {
    (this.view !== null && (this.view.enabled = !1),
      this.updateProjectionMatrix());
  }
  updateProjectionMatrix() {
    const e = (this.right - this.left) / (2 * this.zoom),
      n = (this.top - this.bottom) / (2 * this.zoom),
      r = (this.right + this.left) / 2,
      i = (this.top + this.bottom) / 2;
    let o = r - e,
      s = r + e,
      a = i + n,
      c = i - n;
    if (this.view !== null && this.view.enabled) {
      const u = (this.right - this.left) / this.view.fullWidth / this.zoom,
        d = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
      ((o += u * this.view.offsetX),
        (s = o + u * this.view.width),
        (a -= d * this.view.offsetY),
        (c = a - d * this.view.height));
    }
    (this.projectionMatrix.makeOrthographic(
      o,
      s,
      a,
      c,
      this.near,
      this.far,
      this.coordinateSystem,
    ),
      this.projectionMatrixInverse.copy(this.projectionMatrix).invert());
  }
  toJSON(e) {
    const n = super.toJSON(e);
    return (
      (n.object.zoom = this.zoom),
      (n.object.left = this.left),
      (n.object.right = this.right),
      (n.object.top = this.top),
      (n.object.bottom = this.bottom),
      (n.object.near = this.near),
      (n.object.far = this.far),
      this.view !== null && (n.object.view = Object.assign({}, this.view)),
      n
    );
  }
}
const jo = 4,
  nm = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582],
  Qi = 20,
  Mu = new Dv(),
  rm = new _t();
let Eu = null;
const Xi = (1 + Math.sqrt(5)) / 2,
  Do = 1 / Xi,
  im = [
    new se(1, 1, 1),
    new se(-1, 1, 1),
    new se(1, 1, -1),
    new se(-1, 1, -1),
    new se(0, Xi, Do),
    new se(0, Xi, -Do),
    new se(Do, 0, Xi),
    new se(-Do, 0, Xi),
    new se(Xi, Do, 0),
    new se(-Xi, Do, 0),
  ];
class om {
  constructor(e) {
    ((this._renderer = e),
      (this._pingPongRenderTarget = null),
      (this._lodMax = 0),
      (this._cubeSize = 0),
      (this._lodPlanes = []),
      (this._sizeLods = []),
      (this._sigmas = []),
      (this._blurMaterial = null),
      (this._cubemapMaterial = null),
      (this._equirectMaterial = null),
      this._compileMaterial(this._blurMaterial));
  }
  fromScene(e, n = 0, r = 0.1, i = 100) {
    ((Eu = this._renderer.getRenderTarget()), this._setSize(256));
    const o = this._allocateTargets();
    return (
      (o.depthBuffer = !0),
      this._sceneToCubeUV(e, r, i, o),
      n > 0 && this._blur(o, 0, 0, n),
      this._applyPMREM(o),
      this._cleanup(o),
      o
    );
  }
  fromEquirectangular(e, n = null) {
    return this._fromTexture(e, n);
  }
  fromCubemap(e, n = null) {
    return this._fromTexture(e, n);
  }
  compileCubemapShader() {
    this._cubemapMaterial === null &&
      ((this._cubemapMaterial = lm()),
      this._compileMaterial(this._cubemapMaterial));
  }
  compileEquirectangularShader() {
    this._equirectMaterial === null &&
      ((this._equirectMaterial = am()),
      this._compileMaterial(this._equirectMaterial));
  }
  dispose() {
    (this._dispose(),
      this._cubemapMaterial !== null && this._cubemapMaterial.dispose(),
      this._equirectMaterial !== null && this._equirectMaterial.dispose());
  }
  _setSize(e) {
    ((this._lodMax = Math.floor(Math.log2(e))),
      (this._cubeSize = Math.pow(2, this._lodMax)));
  }
  _dispose() {
    (this._blurMaterial !== null && this._blurMaterial.dispose(),
      this._pingPongRenderTarget !== null &&
        this._pingPongRenderTarget.dispose());
    for (let e = 0; e < this._lodPlanes.length; e++)
      this._lodPlanes[e].dispose();
  }
  _cleanup(e) {
    (this._renderer.setRenderTarget(Eu),
      (e.scissorTest = !1),
      wl(e, 0, 0, e.width, e.height));
  }
  _fromTexture(e, n) {
    (e.mapping === ss || e.mapping === as
      ? this._setSize(
          e.image.length === 0
            ? 16
            : e.image[0].width || e.image[0].image.width,
        )
      : this._setSize(e.image.width / 4),
      (Eu = this._renderer.getRenderTarget()));
    const r = n || this._allocateTargets();
    return (
      this._textureToCubeUV(e, r),
      this._applyPMREM(r),
      this._cleanup(r),
      r
    );
  }
  _allocateTargets() {
    const e = 3 * Math.max(this._cubeSize, 112),
      n = 4 * this._cubeSize,
      r = {
        magFilter: tr,
        minFilter: tr,
        generateMipmaps: !1,
        type: ls,
        format: gr,
        colorSpace: Ir,
        depthBuffer: !1,
      },
      i = sm(e, n, r);
    if (
      this._pingPongRenderTarget === null ||
      this._pingPongRenderTarget.width !== e ||
      this._pingPongRenderTarget.height !== n
    ) {
      (this._pingPongRenderTarget !== null && this._dispose(),
        (this._pingPongRenderTarget = sm(e, n, r)));
      const { _lodMax: o } = this;
      (({
        sizeLods: this._sizeLods,
        lodPlanes: this._lodPlanes,
        sigmas: this._sigmas,
      } = mR(o)),
        (this._blurMaterial = gR(o, e, n)));
    }
    return i;
  }
  _compileMaterial(e) {
    const n = new It(this._lodPlanes[0], e);
    this._renderer.compile(n, Mu);
  }
  _sceneToCubeUV(e, n, r, i) {
    const a = new jn(90, 1, n, r),
      c = [1, -1, 1, 1, 1, 1],
      u = [1, 1, 1, -1, -1, -1],
      d = this._renderer,
      f = d.autoClear,
      p = d.toneMapping;
    (d.getClearColor(rm), (d.toneMapping = Ti), (d.autoClear = !1));
    const h = new Cv({
        name: "PMREM.Background",
        side: $n,
        depthWrite: !1,
        depthTest: !1,
      }),
      v = new It(new Wt(), h);
    let b = !1;
    const g = e.background;
    g
      ? g.isColor && (h.color.copy(g), (e.background = null), (b = !0))
      : (h.color.copy(rm), (b = !0));
    for (let m = 0; m < 6; m++) {
      const _ = m % 3;
      _ === 0
        ? (a.up.set(0, c[m], 0), a.lookAt(u[m], 0, 0))
        : _ === 1
          ? (a.up.set(0, 0, c[m]), a.lookAt(0, u[m], 0))
          : (a.up.set(0, c[m], 0), a.lookAt(0, 0, u[m]));
      const y = this._cubeSize;
      (wl(i, _ * y, m > 2 ? y : 0, y, y),
        d.setRenderTarget(i),
        b && d.render(v, a),
        d.render(e, a));
    }
    (v.geometry.dispose(),
      v.material.dispose(),
      (d.toneMapping = p),
      (d.autoClear = f),
      (e.background = g));
  }
  _textureToCubeUV(e, n) {
    const r = this._renderer,
      i = e.mapping === ss || e.mapping === as;
    i
      ? (this._cubemapMaterial === null && (this._cubemapMaterial = lm()),
        (this._cubemapMaterial.uniforms.flipEnvMap.value =
          e.isRenderTargetTexture === !1 ? -1 : 1))
      : this._equirectMaterial === null && (this._equirectMaterial = am());
    const o = i ? this._cubemapMaterial : this._equirectMaterial,
      s = new It(this._lodPlanes[0], o),
      a = o.uniforms;
    a.envMap.value = e;
    const c = this._cubeSize;
    (wl(n, 0, 0, 3 * c, 2 * c), r.setRenderTarget(n), r.render(s, Mu));
  }
  _applyPMREM(e) {
    const n = this._renderer,
      r = n.autoClear;
    n.autoClear = !1;
    for (let i = 1; i < this._lodPlanes.length; i++) {
      const o = Math.sqrt(
          this._sigmas[i] * this._sigmas[i] -
            this._sigmas[i - 1] * this._sigmas[i - 1],
        ),
        s = im[(i - 1) % im.length];
      this._blur(e, i - 1, i, o, s);
    }
    n.autoClear = r;
  }
  _blur(e, n, r, i, o) {
    const s = this._pingPongRenderTarget;
    (this._halfBlur(e, s, n, r, i, "latitudinal", o),
      this._halfBlur(s, e, r, r, i, "longitudinal", o));
  }
  _halfBlur(e, n, r, i, o, s, a) {
    const c = this._renderer,
      u = this._blurMaterial;
    s !== "latitudinal" &&
      s !== "longitudinal" &&
      console.error(
        "blur direction must be either latitudinal or longitudinal!",
      );
    const d = 3,
      f = new It(this._lodPlanes[i], u),
      p = u.uniforms,
      h = this._sizeLods[r] - 1,
      v = isFinite(o) ? Math.PI / (2 * h) : (2 * Math.PI) / (2 * Qi - 1),
      b = o / v,
      g = isFinite(o) ? 1 + Math.floor(d * b) : Qi;
    g > Qi &&
      console.warn(
        `sigmaRadians, ${o}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Qi}`,
      );
    const m = [];
    let _ = 0;
    for (let S = 0; S < Qi; ++S) {
      const D = S / b,
        k = Math.exp((-D * D) / 2);
      (m.push(k), S === 0 ? (_ += k) : S < g && (_ += 2 * k));
    }
    for (let S = 0; S < m.length; S++) m[S] = m[S] / _;
    ((p.envMap.value = e.texture),
      (p.samples.value = g),
      (p.weights.value = m),
      (p.latitudinal.value = s === "latitudinal"),
      a && (p.poleAxis.value = a));
    const { _lodMax: y } = this;
    ((p.dTheta.value = v), (p.mipInt.value = y - r));
    const x = this._sizeLods[i],
      C = 3 * x * (i > y - jo ? i - y + jo : 0),
      w = 4 * (this._cubeSize - x);
    (wl(n, C, w, 3 * x, 2 * x), c.setRenderTarget(n), c.render(f, Mu));
  }
}
function mR(t) {
  const e = [],
    n = [],
    r = [];
  let i = t;
  const o = t - jo + 1 + nm.length;
  for (let s = 0; s < o; s++) {
    const a = Math.pow(2, i);
    n.push(a);
    let c = 1 / a;
    (s > t - jo ? (c = nm[s - t + jo - 1]) : s === 0 && (c = 0), r.push(c));
    const u = 1 / (a - 2),
      d = -u,
      f = 1 + u,
      p = [d, d, f, d, f, f, d, d, f, f, d, f],
      h = 6,
      v = 6,
      b = 3,
      g = 2,
      m = 1,
      _ = new Float32Array(b * v * h),
      y = new Float32Array(g * v * h),
      x = new Float32Array(m * v * h);
    for (let w = 0; w < h; w++) {
      const S = ((w % 3) * 2) / 3 - 1,
        D = w > 2 ? 0 : -1,
        k = [
          S,
          D,
          0,
          S + 2 / 3,
          D,
          0,
          S + 2 / 3,
          D + 1,
          0,
          S,
          D,
          0,
          S + 2 / 3,
          D + 1,
          0,
          S,
          D + 1,
          0,
        ];
      (_.set(k, b * v * w), y.set(p, g * v * w));
      const P = [w, w, w, w, w, w];
      x.set(P, m * v * w);
    }
    const C = new ui();
    (C.setAttribute("position", new yr(_, b)),
      C.setAttribute("uv", new yr(y, g)),
      C.setAttribute("faceIndex", new yr(x, m)),
      e.push(C),
      i > jo && i--);
  }
  return { lodPlanes: e, sizeLods: n, sigmas: r };
}
function sm(t, e, n) {
  const r = new ai(t, e, n);
  return (
    (r.texture.mapping = Mc),
    (r.texture.name = "PMREM.cubeUv"),
    (r.scissorTest = !0),
    r
  );
}
function wl(t, e, n, r, i) {
  (t.viewport.set(e, n, r, i), t.scissor.set(e, n, r, i));
}
function gR(t, e, n) {
  const r = new Float32Array(Qi),
    i = new se(0, 1, 0);
  return new li({
    name: "SphericalGaussianBlur",
    defines: {
      n: Qi,
      CUBEUV_TEXEL_WIDTH: 1 / e,
      CUBEUV_TEXEL_HEIGHT: 1 / n,
      CUBEUV_MAX_MIP: `${t}.0`,
    },
    uniforms: {
      envMap: { value: null },
      samples: { value: 1 },
      weights: { value: r },
      latitudinal: { value: !1 },
      dTheta: { value: 0 },
      mipInt: { value: 0 },
      poleAxis: { value: i },
    },
    vertexShader: cf(),
    fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,
    blending: ti,
    depthTest: !1,
    depthWrite: !1,
  });
}
function am() {
  return new li({
    name: "EquirectangularToCubeUV",
    uniforms: { envMap: { value: null } },
    vertexShader: cf(),
    fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,
    blending: ti,
    depthTest: !1,
    depthWrite: !1,
  });
}
function lm() {
  return new li({
    name: "CubemapToCubeUV",
    uniforms: { envMap: { value: null }, flipEnvMap: { value: -1 } },
    vertexShader: cf(),
    fragmentShader: `

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,
    blending: ti,
    depthTest: !1,
    depthWrite: !1,
  });
}
function cf() {
  return `

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`;
}
function vR(t) {
  let e = new WeakMap(),
    n = null;
  function r(a) {
    if (a && a.isTexture) {
      const c = a.mapping,
        u = c === ec || c === ld,
        d = c === ss || c === as;
      if (u || d)
        if (a.isRenderTargetTexture && a.needsPMREMUpdate === !0) {
          a.needsPMREMUpdate = !1;
          let f = e.get(a);
          return (
            n === null && (n = new om(t)),
            (f = u ? n.fromEquirectangular(a, f) : n.fromCubemap(a, f)),
            e.set(a, f),
            f.texture
          );
        } else {
          if (e.has(a)) return e.get(a).texture;
          {
            const f = a.image;
            if ((u && f && f.height > 0) || (d && f && i(f))) {
              n === null && (n = new om(t));
              const p = u ? n.fromEquirectangular(a) : n.fromCubemap(a);
              return (e.set(a, p), a.addEventListener("dispose", o), p.texture);
            } else return null;
          }
        }
    }
    return a;
  }
  function i(a) {
    let c = 0;
    const u = 6;
    for (let d = 0; d < u; d++) a[d] !== void 0 && c++;
    return c === u;
  }
  function o(a) {
    const c = a.target;
    c.removeEventListener("dispose", o);
    const u = e.get(c);
    u !== void 0 && (e.delete(c), u.dispose());
  }
  function s() {
    ((e = new WeakMap()), n !== null && (n.dispose(), (n = null)));
  }
  return { get: r, dispose: s };
}
function bR(t) {
  const e = {};
  function n(r) {
    if (e[r] !== void 0) return e[r];
    let i;
    switch (r) {
      case "WEBGL_depth_texture":
        i =
          t.getExtension("WEBGL_depth_texture") ||
          t.getExtension("MOZ_WEBGL_depth_texture") ||
          t.getExtension("WEBKIT_WEBGL_depth_texture");
        break;
      case "EXT_texture_filter_anisotropic":
        i =
          t.getExtension("EXT_texture_filter_anisotropic") ||
          t.getExtension("MOZ_EXT_texture_filter_anisotropic") ||
          t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
        break;
      case "WEBGL_compressed_texture_s3tc":
        i =
          t.getExtension("WEBGL_compressed_texture_s3tc") ||
          t.getExtension("MOZ_WEBGL_compressed_texture_s3tc") ||
          t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
        break;
      case "WEBGL_compressed_texture_pvrtc":
        i =
          t.getExtension("WEBGL_compressed_texture_pvrtc") ||
          t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
        break;
      default:
        i = t.getExtension(r);
    }
    return ((e[r] = i), i);
  }
  return {
    has: function (r) {
      return n(r) !== null;
    },
    init: function (r) {
      (r.isWebGL2
        ? n("EXT_color_buffer_float")
        : (n("WEBGL_depth_texture"),
          n("OES_texture_float"),
          n("OES_texture_half_float"),
          n("OES_texture_half_float_linear"),
          n("OES_standard_derivatives"),
          n("OES_element_index_uint"),
          n("OES_vertex_array_object"),
          n("ANGLE_instanced_arrays")),
        n("OES_texture_float_linear"),
        n("EXT_color_buffer_half_float"),
        n("WEBGL_multisampled_render_to_texture"));
    },
    get: function (r) {
      const i = n(r);
      return (
        i === null &&
          console.warn(
            "THREE.WebGLRenderer: " + r + " extension not supported.",
          ),
        i
      );
    },
  };
}
function yR(t, e, n, r) {
  const i = {},
    o = new WeakMap();
  function s(f) {
    const p = f.target;
    p.index !== null && e.remove(p.index);
    for (const v in p.attributes) e.remove(p.attributes[v]);
    for (const v in p.morphAttributes) {
      const b = p.morphAttributes[v];
      for (let g = 0, m = b.length; g < m; g++) e.remove(b[g]);
    }
    (p.removeEventListener("dispose", s), delete i[p.id]);
    const h = o.get(p);
    (h && (e.remove(h), o.delete(p)),
      r.releaseStatesOfGeometry(p),
      p.isInstancedBufferGeometry === !0 && delete p._maxInstanceCount,
      n.memory.geometries--);
  }
  function a(f, p) {
    return (
      i[p.id] === !0 ||
        (p.addEventListener("dispose", s),
        (i[p.id] = !0),
        n.memory.geometries++),
      p
    );
  }
  function c(f) {
    const p = f.attributes;
    for (const v in p) e.update(p[v], t.ARRAY_BUFFER);
    const h = f.morphAttributes;
    for (const v in h) {
      const b = h[v];
      for (let g = 0, m = b.length; g < m; g++) e.update(b[g], t.ARRAY_BUFFER);
    }
  }
  function u(f) {
    const p = [],
      h = f.index,
      v = f.attributes.position;
    let b = 0;
    if (h !== null) {
      const _ = h.array;
      b = h.version;
      for (let y = 0, x = _.length; y < x; y += 3) {
        const C = _[y + 0],
          w = _[y + 1],
          S = _[y + 2];
        p.push(C, w, w, S, S, C);
      }
    } else if (v !== void 0) {
      const _ = v.array;
      b = v.version;
      for (let y = 0, x = _.length / 3 - 1; y < x; y += 3) {
        const C = y + 0,
          w = y + 1,
          S = y + 2;
        p.push(C, w, w, S, S, C);
      }
    } else return;
    const g = new (bv(p) ? Ev : Mv)(p, 1);
    g.version = b;
    const m = o.get(f);
    (m && e.remove(m), o.set(f, g));
  }
  function d(f) {
    const p = o.get(f);
    if (p) {
      const h = f.index;
      h !== null && p.version < h.version && u(f);
    } else u(f);
    return o.get(f);
  }
  return { get: a, update: c, getWireframeAttribute: d };
}
function xR(t, e, n, r) {
  const i = r.isWebGL2;
  let o;
  function s(p) {
    o = p;
  }
  let a, c;
  function u(p) {
    ((a = p.type), (c = p.bytesPerElement));
  }
  function d(p, h) {
    (t.drawElements(o, h, a, p * c), n.update(h, o, 1));
  }
  function f(p, h, v) {
    if (v === 0) return;
    let b, g;
    if (i) ((b = t), (g = "drawElementsInstanced"));
    else if (
      ((b = e.get("ANGLE_instanced_arrays")),
      (g = "drawElementsInstancedANGLE"),
      b === null)
    ) {
      console.error(
        "THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.",
      );
      return;
    }
    (b[g](o, h, a, p * c, v), n.update(h, o, v));
  }
  ((this.setMode = s),
    (this.setIndex = u),
    (this.render = d),
    (this.renderInstances = f));
}
function _R(t) {
  const e = { geometries: 0, textures: 0 },
    n = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
  function r(o, s, a) {
    switch ((n.calls++, s)) {
      case t.TRIANGLES:
        n.triangles += a * (o / 3);
        break;
      case t.LINES:
        n.lines += a * (o / 2);
        break;
      case t.LINE_STRIP:
        n.lines += a * (o - 1);
        break;
      case t.LINE_LOOP:
        n.lines += a * o;
        break;
      case t.POINTS:
        n.points += a * o;
        break;
      default:
        console.error("THREE.WebGLInfo: Unknown draw mode:", s);
        break;
    }
  }
  function i() {
    ((n.calls = 0), (n.triangles = 0), (n.points = 0), (n.lines = 0));
  }
  return {
    memory: e,
    render: n,
    programs: null,
    autoReset: !0,
    reset: i,
    update: r,
  };
}
function wR(t, e) {
  return t[0] - e[0];
}
function kR(t, e) {
  return Math.abs(e[1]) - Math.abs(t[1]);
}
function SR(t, e, n) {
  const r = {},
    i = new Float32Array(8),
    o = new WeakMap(),
    s = new Ut(),
    a = [];
  for (let u = 0; u < 8; u++) a[u] = [u, 0];
  function c(u, d, f) {
    const p = u.morphTargetInfluences;
    if (e.isWebGL2 === !0) {
      const h =
          d.morphAttributes.position ||
          d.morphAttributes.normal ||
          d.morphAttributes.color,
        v = h !== void 0 ? h.length : 0;
      let b = o.get(d);
      if (b === void 0 || b.count !== v) {
        let Z = function () {
          (W.dispose(), o.delete(d), d.removeEventListener("dispose", Z));
        };
        b !== void 0 && b.texture.dispose();
        const _ = d.morphAttributes.position !== void 0,
          y = d.morphAttributes.normal !== void 0,
          x = d.morphAttributes.color !== void 0,
          C = d.morphAttributes.position || [],
          w = d.morphAttributes.normal || [],
          S = d.morphAttributes.color || [];
        let D = 0;
        (_ === !0 && (D = 1), y === !0 && (D = 2), x === !0 && (D = 3));
        let k = d.attributes.position.count * D,
          P = 1;
        k > e.maxTextureSize &&
          ((P = Math.ceil(k / e.maxTextureSize)), (k = e.maxTextureSize));
        const I = new Float32Array(k * P * 4 * v),
          W = new _v(I, k, P, v);
        ((W.type = Jr), (W.needsUpdate = !0));
        const X = D * 4;
        for (let G = 0; G < v; G++) {
          const $ = C[G],
            ne = w[G],
            U = S[G],
            ie = k * P * 4 * G;
          for (let J = 0; J < $.count; J++) {
            const V = J * X;
            (_ === !0 &&
              (s.fromBufferAttribute($, J),
              (I[ie + V + 0] = s.x),
              (I[ie + V + 1] = s.y),
              (I[ie + V + 2] = s.z),
              (I[ie + V + 3] = 0)),
              y === !0 &&
                (s.fromBufferAttribute(ne, J),
                (I[ie + V + 4] = s.x),
                (I[ie + V + 5] = s.y),
                (I[ie + V + 6] = s.z),
                (I[ie + V + 7] = 0)),
              x === !0 &&
                (s.fromBufferAttribute(U, J),
                (I[ie + V + 8] = s.x),
                (I[ie + V + 9] = s.y),
                (I[ie + V + 10] = s.z),
                (I[ie + V + 11] = U.itemSize === 4 ? s.w : 1)));
          }
        }
        ((b = { count: v, texture: W, size: new qe(k, P) }),
          o.set(d, b),
          d.addEventListener("dispose", Z));
      }
      let g = 0;
      for (let _ = 0; _ < p.length; _++) g += p[_];
      const m = d.morphTargetsRelative ? 1 : 1 - g;
      (f.getUniforms().setValue(t, "morphTargetBaseInfluence", m),
        f.getUniforms().setValue(t, "morphTargetInfluences", p),
        f.getUniforms().setValue(t, "morphTargetsTexture", b.texture, n),
        f.getUniforms().setValue(t, "morphTargetsTextureSize", b.size));
    } else {
      const h = p === void 0 ? 0 : p.length;
      let v = r[d.id];
      if (v === void 0 || v.length !== h) {
        v = [];
        for (let y = 0; y < h; y++) v[y] = [y, 0];
        r[d.id] = v;
      }
      for (let y = 0; y < h; y++) {
        const x = v[y];
        ((x[0] = y), (x[1] = p[y]));
      }
      v.sort(kR);
      for (let y = 0; y < 8; y++)
        y < h && v[y][1]
          ? ((a[y][0] = v[y][0]), (a[y][1] = v[y][1]))
          : ((a[y][0] = Number.MAX_SAFE_INTEGER), (a[y][1] = 0));
      a.sort(wR);
      const b = d.morphAttributes.position,
        g = d.morphAttributes.normal;
      let m = 0;
      for (let y = 0; y < 8; y++) {
        const x = a[y],
          C = x[0],
          w = x[1];
        C !== Number.MAX_SAFE_INTEGER && w
          ? (b &&
              d.getAttribute("morphTarget" + y) !== b[C] &&
              d.setAttribute("morphTarget" + y, b[C]),
            g &&
              d.getAttribute("morphNormal" + y) !== g[C] &&
              d.setAttribute("morphNormal" + y, g[C]),
            (i[y] = w),
            (m += w))
          : (b &&
              d.hasAttribute("morphTarget" + y) === !0 &&
              d.deleteAttribute("morphTarget" + y),
            g &&
              d.hasAttribute("morphNormal" + y) === !0 &&
              d.deleteAttribute("morphNormal" + y),
            (i[y] = 0));
      }
      const _ = d.morphTargetsRelative ? 1 : 1 - m;
      (f.getUniforms().setValue(t, "morphTargetBaseInfluence", _),
        f.getUniforms().setValue(t, "morphTargetInfluences", i));
    }
  }
  return { update: c };
}
function CR(t, e, n, r) {
  let i = new WeakMap();
  function o(c) {
    const u = r.render.frame,
      d = c.geometry,
      f = e.get(c, d);
    if (
      (i.get(f) !== u && (e.update(f), i.set(f, u)),
      c.isInstancedMesh &&
        (c.hasEventListener("dispose", a) === !1 &&
          c.addEventListener("dispose", a),
        i.get(c) !== u &&
          (n.update(c.instanceMatrix, t.ARRAY_BUFFER),
          c.instanceColor !== null && n.update(c.instanceColor, t.ARRAY_BUFFER),
          i.set(c, u))),
      c.isSkinnedMesh)
    ) {
      const p = c.skeleton;
      i.get(p) !== u && (p.update(), i.set(p, u));
    }
    return f;
  }
  function s() {
    i = new WeakMap();
  }
  function a(c) {
    const u = c.target;
    (u.removeEventListener("dispose", a),
      n.remove(u.instanceMatrix),
      u.instanceColor !== null && n.remove(u.instanceColor));
  }
  return { update: o, dispose: s };
}
const Iv = new yn(),
  Ov = new _v(),
  $v = new fA(),
  zv = new Rv(),
  cm = [],
  um = [],
  dm = new Float32Array(16),
  fm = new Float32Array(9),
  pm = new Float32Array(4);
function ps(t, e, n) {
  const r = t[0];
  if (r <= 0 || r > 0) return t;
  const i = e * n;
  let o = cm[i];
  if ((o === void 0 && ((o = new Float32Array(i)), (cm[i] = o)), e !== 0)) {
    r.toArray(o, 0);
    for (let s = 1, a = 0; s !== e; ++s) ((a += n), t[s].toArray(o, a));
  }
  return o;
}
function en(t, e) {
  if (t.length !== e.length) return !1;
  for (let n = 0, r = t.length; n < r; n++) if (t[n] !== e[n]) return !1;
  return !0;
}
function tn(t, e) {
  for (let n = 0, r = e.length; n < r; n++) t[n] = e[n];
}
function Ac(t, e) {
  let n = um[e];
  n === void 0 && ((n = new Int32Array(e)), (um[e] = n));
  for (let r = 0; r !== e; ++r) n[r] = t.allocateTextureUnit();
  return n;
}
function MR(t, e) {
  const n = this.cache;
  n[0] !== e && (t.uniform1f(this.addr, e), (n[0] = e));
}
function ER(t, e) {
  const n = this.cache;
  if (e.x !== void 0)
    (n[0] !== e.x || n[1] !== e.y) &&
      (t.uniform2f(this.addr, e.x, e.y), (n[0] = e.x), (n[1] = e.y));
  else {
    if (en(n, e)) return;
    (t.uniform2fv(this.addr, e), tn(n, e));
  }
}
function TR(t, e) {
  const n = this.cache;
  if (e.x !== void 0)
    (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z) &&
      (t.uniform3f(this.addr, e.x, e.y, e.z),
      (n[0] = e.x),
      (n[1] = e.y),
      (n[2] = e.z));
  else if (e.r !== void 0)
    (n[0] !== e.r || n[1] !== e.g || n[2] !== e.b) &&
      (t.uniform3f(this.addr, e.r, e.g, e.b),
      (n[0] = e.r),
      (n[1] = e.g),
      (n[2] = e.b));
  else {
    if (en(n, e)) return;
    (t.uniform3fv(this.addr, e), tn(n, e));
  }
}
function AR(t, e) {
  const n = this.cache;
  if (e.x !== void 0)
    (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z || n[3] !== e.w) &&
      (t.uniform4f(this.addr, e.x, e.y, e.z, e.w),
      (n[0] = e.x),
      (n[1] = e.y),
      (n[2] = e.z),
      (n[3] = e.w));
  else {
    if (en(n, e)) return;
    (t.uniform4fv(this.addr, e), tn(n, e));
  }
}
function PR(t, e) {
  const n = this.cache,
    r = e.elements;
  if (r === void 0) {
    if (en(n, e)) return;
    (t.uniformMatrix2fv(this.addr, !1, e), tn(n, e));
  } else {
    if (en(n, r)) return;
    (pm.set(r), t.uniformMatrix2fv(this.addr, !1, pm), tn(n, r));
  }
}
function RR(t, e) {
  const n = this.cache,
    r = e.elements;
  if (r === void 0) {
    if (en(n, e)) return;
    (t.uniformMatrix3fv(this.addr, !1, e), tn(n, e));
  } else {
    if (en(n, r)) return;
    (fm.set(r), t.uniformMatrix3fv(this.addr, !1, fm), tn(n, r));
  }
}
function LR(t, e) {
  const n = this.cache,
    r = e.elements;
  if (r === void 0) {
    if (en(n, e)) return;
    (t.uniformMatrix4fv(this.addr, !1, e), tn(n, e));
  } else {
    if (en(n, r)) return;
    (dm.set(r), t.uniformMatrix4fv(this.addr, !1, dm), tn(n, r));
  }
}
function DR(t, e) {
  const n = this.cache;
  n[0] !== e && (t.uniform1i(this.addr, e), (n[0] = e));
}
function IR(t, e) {
  const n = this.cache;
  if (e.x !== void 0)
    (n[0] !== e.x || n[1] !== e.y) &&
      (t.uniform2i(this.addr, e.x, e.y), (n[0] = e.x), (n[1] = e.y));
  else {
    if (en(n, e)) return;
    (t.uniform2iv(this.addr, e), tn(n, e));
  }
}
function OR(t, e) {
  const n = this.cache;
  if (e.x !== void 0)
    (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z) &&
      (t.uniform3i(this.addr, e.x, e.y, e.z),
      (n[0] = e.x),
      (n[1] = e.y),
      (n[2] = e.z));
  else {
    if (en(n, e)) return;
    (t.uniform3iv(this.addr, e), tn(n, e));
  }
}
function $R(t, e) {
  const n = this.cache;
  if (e.x !== void 0)
    (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z || n[3] !== e.w) &&
      (t.uniform4i(this.addr, e.x, e.y, e.z, e.w),
      (n[0] = e.x),
      (n[1] = e.y),
      (n[2] = e.z),
      (n[3] = e.w));
  else {
    if (en(n, e)) return;
    (t.uniform4iv(this.addr, e), tn(n, e));
  }
}
function zR(t, e) {
  const n = this.cache;
  n[0] !== e && (t.uniform1ui(this.addr, e), (n[0] = e));
}
function BR(t, e) {
  const n = this.cache;
  if (e.x !== void 0)
    (n[0] !== e.x || n[1] !== e.y) &&
      (t.uniform2ui(this.addr, e.x, e.y), (n[0] = e.x), (n[1] = e.y));
  else {
    if (en(n, e)) return;
    (t.uniform2uiv(this.addr, e), tn(n, e));
  }
}
function UR(t, e) {
  const n = this.cache;
  if (e.x !== void 0)
    (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z) &&
      (t.uniform3ui(this.addr, e.x, e.y, e.z),
      (n[0] = e.x),
      (n[1] = e.y),
      (n[2] = e.z));
  else {
    if (en(n, e)) return;
    (t.uniform3uiv(this.addr, e), tn(n, e));
  }
}
function FR(t, e) {
  const n = this.cache;
  if (e.x !== void 0)
    (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z || n[3] !== e.w) &&
      (t.uniform4ui(this.addr, e.x, e.y, e.z, e.w),
      (n[0] = e.x),
      (n[1] = e.y),
      (n[2] = e.z),
      (n[3] = e.w));
  else {
    if (en(n, e)) return;
    (t.uniform4uiv(this.addr, e), tn(n, e));
  }
}
function NR(t, e, n) {
  const r = this.cache,
    i = n.allocateTextureUnit();
  (r[0] !== i && (t.uniform1i(this.addr, i), (r[0] = i)),
    n.setTexture2D(e || Iv, i));
}
function VR(t, e, n) {
  const r = this.cache,
    i = n.allocateTextureUnit();
  (r[0] !== i && (t.uniform1i(this.addr, i), (r[0] = i)),
    n.setTexture3D(e || $v, i));
}
function HR(t, e, n) {
  const r = this.cache,
    i = n.allocateTextureUnit();
  (r[0] !== i && (t.uniform1i(this.addr, i), (r[0] = i)),
    n.setTextureCube(e || zv, i));
}
function jR(t, e, n) {
  const r = this.cache,
    i = n.allocateTextureUnit();
  (r[0] !== i && (t.uniform1i(this.addr, i), (r[0] = i)),
    n.setTexture2DArray(e || Ov, i));
}
function GR(t) {
  switch (t) {
    case 5126:
      return MR;
    case 35664:
      return ER;
    case 35665:
      return TR;
    case 35666:
      return AR;
    case 35674:
      return PR;
    case 35675:
      return RR;
    case 35676:
      return LR;
    case 5124:
    case 35670:
      return DR;
    case 35667:
    case 35671:
      return IR;
    case 35668:
    case 35672:
      return OR;
    case 35669:
    case 35673:
      return $R;
    case 5125:
      return zR;
    case 36294:
      return BR;
    case 36295:
      return UR;
    case 36296:
      return FR;
    case 35678:
    case 36198:
    case 36298:
    case 36306:
    case 35682:
      return NR;
    case 35679:
    case 36299:
    case 36307:
      return VR;
    case 35680:
    case 36300:
    case 36308:
    case 36293:
      return HR;
    case 36289:
    case 36303:
    case 36311:
    case 36292:
      return jR;
  }
}
function WR(t, e) {
  t.uniform1fv(this.addr, e);
}
function KR(t, e) {
  const n = ps(e, this.size, 2);
  t.uniform2fv(this.addr, n);
}
function XR(t, e) {
  const n = ps(e, this.size, 3);
  t.uniform3fv(this.addr, n);
}
function YR(t, e) {
  const n = ps(e, this.size, 4);
  t.uniform4fv(this.addr, n);
}
function qR(t, e) {
  const n = ps(e, this.size, 4);
  t.uniformMatrix2fv(this.addr, !1, n);
}
function ZR(t, e) {
  const n = ps(e, this.size, 9);
  t.uniformMatrix3fv(this.addr, !1, n);
}
function JR(t, e) {
  const n = ps(e, this.size, 16);
  t.uniformMatrix4fv(this.addr, !1, n);
}
function QR(t, e) {
  t.uniform1iv(this.addr, e);
}
function eL(t, e) {
  t.uniform2iv(this.addr, e);
}
function tL(t, e) {
  t.uniform3iv(this.addr, e);
}
function nL(t, e) {
  t.uniform4iv(this.addr, e);
}
function rL(t, e) {
  t.uniform1uiv(this.addr, e);
}
function iL(t, e) {
  t.uniform2uiv(this.addr, e);
}
function oL(t, e) {
  t.uniform3uiv(this.addr, e);
}
function sL(t, e) {
  t.uniform4uiv(this.addr, e);
}
function aL(t, e, n) {
  const r = this.cache,
    i = e.length,
    o = Ac(n, i);
  en(r, o) || (t.uniform1iv(this.addr, o), tn(r, o));
  for (let s = 0; s !== i; ++s) n.setTexture2D(e[s] || Iv, o[s]);
}
function lL(t, e, n) {
  const r = this.cache,
    i = e.length,
    o = Ac(n, i);
  en(r, o) || (t.uniform1iv(this.addr, o), tn(r, o));
  for (let s = 0; s !== i; ++s) n.setTexture3D(e[s] || $v, o[s]);
}
function cL(t, e, n) {
  const r = this.cache,
    i = e.length,
    o = Ac(n, i);
  en(r, o) || (t.uniform1iv(this.addr, o), tn(r, o));
  for (let s = 0; s !== i; ++s) n.setTextureCube(e[s] || zv, o[s]);
}
function uL(t, e, n) {
  const r = this.cache,
    i = e.length,
    o = Ac(n, i);
  en(r, o) || (t.uniform1iv(this.addr, o), tn(r, o));
  for (let s = 0; s !== i; ++s) n.setTexture2DArray(e[s] || Ov, o[s]);
}
function dL(t) {
  switch (t) {
    case 5126:
      return WR;
    case 35664:
      return KR;
    case 35665:
      return XR;
    case 35666:
      return YR;
    case 35674:
      return qR;
    case 35675:
      return ZR;
    case 35676:
      return JR;
    case 5124:
    case 35670:
      return QR;
    case 35667:
    case 35671:
      return eL;
    case 35668:
    case 35672:
      return tL;
    case 35669:
    case 35673:
      return nL;
    case 5125:
      return rL;
    case 36294:
      return iL;
    case 36295:
      return oL;
    case 36296:
      return sL;
    case 35678:
    case 36198:
    case 36298:
    case 36306:
    case 35682:
      return aL;
    case 35679:
    case 36299:
    case 36307:
      return lL;
    case 35680:
    case 36300:
    case 36308:
    case 36293:
      return cL;
    case 36289:
    case 36303:
    case 36311:
    case 36292:
      return uL;
  }
}
class fL {
  constructor(e, n, r) {
    ((this.id = e),
      (this.addr = r),
      (this.cache = []),
      (this.setValue = GR(n.type)));
  }
}
class pL {
  constructor(e, n, r) {
    ((this.id = e),
      (this.addr = r),
      (this.cache = []),
      (this.size = n.size),
      (this.setValue = dL(n.type)));
  }
}
class hL {
  constructor(e) {
    ((this.id = e), (this.seq = []), (this.map = {}));
  }
  setValue(e, n, r) {
    const i = this.seq;
    for (let o = 0, s = i.length; o !== s; ++o) {
      const a = i[o];
      a.setValue(e, n[a.id], r);
    }
  }
}
const Tu = /(\w+)(\])?(\[|\.)?/g;
function hm(t, e) {
  (t.seq.push(e), (t.map[e.id] = e));
}
function mL(t, e, n) {
  const r = t.name,
    i = r.length;
  for (Tu.lastIndex = 0; ; ) {
    const o = Tu.exec(r),
      s = Tu.lastIndex;
    let a = o[1];
    const c = o[2] === "]",
      u = o[3];
    if ((c && (a = a | 0), u === void 0 || (u === "[" && s + 2 === i))) {
      hm(n, u === void 0 ? new fL(a, t, e) : new pL(a, t, e));
      break;
    } else {
      let f = n.map[a];
      (f === void 0 && ((f = new hL(a)), hm(n, f)), (n = f));
    }
  }
}
class Ul {
  constructor(e, n) {
    ((this.seq = []), (this.map = {}));
    const r = e.getProgramParameter(n, e.ACTIVE_UNIFORMS);
    for (let i = 0; i < r; ++i) {
      const o = e.getActiveUniform(n, i),
        s = e.getUniformLocation(n, o.name);
      mL(o, s, this);
    }
  }
  setValue(e, n, r, i) {
    const o = this.map[n];
    o !== void 0 && o.setValue(e, r, i);
  }
  setOptional(e, n, r) {
    const i = n[r];
    i !== void 0 && this.setValue(e, r, i);
  }
  static upload(e, n, r, i) {
    for (let o = 0, s = n.length; o !== s; ++o) {
      const a = n[o],
        c = r[a.id];
      c.needsUpdate !== !1 && a.setValue(e, c.value, i);
    }
  }
  static seqWithValue(e, n) {
    const r = [];
    for (let i = 0, o = e.length; i !== o; ++i) {
      const s = e[i];
      s.id in n && r.push(s);
    }
    return r;
  }
}
function mm(t, e, n) {
  const r = t.createShader(e);
  return (t.shaderSource(r, n), t.compileShader(r), r);
}
let gL = 0;
function vL(t, e) {
  const n = t.split(`
`),
    r = [],
    i = Math.max(e - 6, 0),
    o = Math.min(e + 6, n.length);
  for (let s = i; s < o; s++) {
    const a = s + 1;
    r.push(`${a === e ? ">" : " "} ${a}: ${n[s]}`);
  }
  return r.join(`
`);
}
function bL(t) {
  switch (t) {
    case Ir:
      return ["Linear", "( value )"];
    case Bt:
      return ["sRGB", "( value )"];
    default:
      return (
        console.warn("THREE.WebGLProgram: Unsupported color space:", t),
        ["Linear", "( value )"]
      );
  }
}
function gm(t, e, n) {
  const r = t.getShaderParameter(e, t.COMPILE_STATUS),
    i = t.getShaderInfoLog(e).trim();
  if (r && i === "") return "";
  const o = /ERROR: 0:(\d+)/.exec(i);
  if (o) {
    const s = parseInt(o[1]);
    return (
      n.toUpperCase() +
      `

` +
      i +
      `

` +
      vL(t.getShaderSource(e), s)
    );
  } else return i;
}
function yL(t, e) {
  const n = bL(e);
  return "vec4 " + t + "( vec4 value ) { return LinearTo" + n[0] + n[1] + "; }";
}
function xL(t, e) {
  let n;
  switch (e) {
    case E5:
      n = "Linear";
      break;
    case T5:
      n = "Reinhard";
      break;
    case A5:
      n = "OptimizedCineon";
      break;
    case P5:
      n = "ACESFilmic";
      break;
    case R5:
      n = "Custom";
      break;
    default:
      (console.warn("THREE.WebGLProgram: Unsupported toneMapping:", e),
        (n = "Linear"));
  }
  return (
    "vec3 " + t + "( vec3 color ) { return " + n + "ToneMapping( color ); }"
  );
}
function _L(t) {
  return [
    t.extensionDerivatives ||
    t.envMapCubeUVHeight ||
    t.bumpMap ||
    t.normalMapTangentSpace ||
    t.clearcoatNormalMap ||
    t.flatShading ||
    t.shaderID === "physical"
      ? "#extension GL_OES_standard_derivatives : enable"
      : "",
    (t.extensionFragDepth || t.logarithmicDepthBuffer) &&
    t.rendererExtensionFragDepth
      ? "#extension GL_EXT_frag_depth : enable"
      : "",
    t.extensionDrawBuffers && t.rendererExtensionDrawBuffers
      ? "#extension GL_EXT_draw_buffers : require"
      : "",
    (t.extensionShaderTextureLOD || t.envMap || t.transmission) &&
    t.rendererExtensionShaderTextureLod
      ? "#extension GL_EXT_shader_texture_lod : enable"
      : "",
  ].filter(Os).join(`
`);
}
function wL(t) {
  const e = [];
  for (const n in t) {
    const r = t[n];
    r !== !1 && e.push("#define " + n + " " + r);
  }
  return e.join(`
`);
}
function kL(t, e) {
  const n = {},
    r = t.getProgramParameter(e, t.ACTIVE_ATTRIBUTES);
  for (let i = 0; i < r; i++) {
    const o = t.getActiveAttrib(e, i),
      s = o.name;
    let a = 1;
    (o.type === t.FLOAT_MAT2 && (a = 2),
      o.type === t.FLOAT_MAT3 && (a = 3),
      o.type === t.FLOAT_MAT4 && (a = 4),
      (n[s] = {
        type: o.type,
        location: t.getAttribLocation(e, s),
        locationSize: a,
      }));
  }
  return n;
}
function Os(t) {
  return t !== "";
}
function vm(t, e) {
  const n =
    e.numSpotLightShadows + e.numSpotLightMaps - e.numSpotLightShadowsWithMaps;
  return t
    .replace(/NUM_DIR_LIGHTS/g, e.numDirLights)
    .replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights)
    .replace(/NUM_SPOT_LIGHT_MAPS/g, e.numSpotLightMaps)
    .replace(/NUM_SPOT_LIGHT_COORDS/g, n)
    .replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights)
    .replace(/NUM_POINT_LIGHTS/g, e.numPointLights)
    .replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights)
    .replace(/NUM_DIR_LIGHT_SHADOWS/g, e.numDirLightShadows)
    .replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, e.numSpotLightShadowsWithMaps)
    .replace(/NUM_SPOT_LIGHT_SHADOWS/g, e.numSpotLightShadows)
    .replace(/NUM_POINT_LIGHT_SHADOWS/g, e.numPointLightShadows);
}
function bm(t, e) {
  return t
    .replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes)
    .replace(
      /UNION_CLIPPING_PLANES/g,
      e.numClippingPlanes - e.numClipIntersection,
    );
}
const SL = /^[ \t]*#include +<([\w\d./]+)>/gm;
function md(t) {
  return t.replace(SL, ML);
}
const CL = new Map([
  ["encodings_fragment", "colorspace_fragment"],
  ["encodings_pars_fragment", "colorspace_pars_fragment"],
  ["output_fragment", "opaque_fragment"],
]);
function ML(t, e) {
  let n = lt[e];
  if (n === void 0) {
    const r = CL.get(e);
    if (r !== void 0)
      ((n = lt[r]),
        console.warn(
          'THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',
          e,
          r,
        ));
    else throw new Error("Can not resolve #include <" + e + ">");
  }
  return md(n);
}
const EL =
  /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
function ym(t) {
  return t.replace(EL, TL);
}
function TL(t, e, n, r) {
  let i = "";
  for (let o = parseInt(e); o < parseInt(n); o++)
    i += r
      .replace(/\[\s*i\s*\]/g, "[ " + o + " ]")
      .replace(/UNROLLED_LOOP_INDEX/g, o);
  return i;
}
function xm(t) {
  let e =
    "precision " +
    t.precision +
    ` float;
precision ` +
    t.precision +
    " int;";
  return (
    t.precision === "highp"
      ? (e += `
#define HIGH_PRECISION`)
      : t.precision === "mediump"
        ? (e += `
#define MEDIUM_PRECISION`)
        : t.precision === "lowp" &&
          (e += `
#define LOW_PRECISION`),
    e
  );
}
function AL(t) {
  let e = "SHADOWMAP_TYPE_BASIC";
  return (
    t.shadowMapType === ov
      ? (e = "SHADOWMAP_TYPE_PCF")
      : t.shadowMapType === o5
        ? (e = "SHADOWMAP_TYPE_PCF_SOFT")
        : t.shadowMapType === Gr && (e = "SHADOWMAP_TYPE_VSM"),
    e
  );
}
function PL(t) {
  let e = "ENVMAP_TYPE_CUBE";
  if (t.envMap)
    switch (t.envMapMode) {
      case ss:
      case as:
        e = "ENVMAP_TYPE_CUBE";
        break;
      case Mc:
        e = "ENVMAP_TYPE_CUBE_UV";
        break;
    }
  return e;
}
function RL(t) {
  let e = "ENVMAP_MODE_REFLECTION";
  if (t.envMap)
    switch (t.envMapMode) {
      case as:
        e = "ENVMAP_MODE_REFRACTION";
        break;
    }
  return e;
}
function LL(t) {
  let e = "ENVMAP_BLENDING_NONE";
  if (t.envMap)
    switch (t.combine) {
      case lv:
        e = "ENVMAP_BLENDING_MULTIPLY";
        break;
      case C5:
        e = "ENVMAP_BLENDING_MIX";
        break;
      case M5:
        e = "ENVMAP_BLENDING_ADD";
        break;
    }
  return e;
}
function DL(t) {
  const e = t.envMapCubeUVHeight;
  if (e === null) return null;
  const n = Math.log2(e) - 2,
    r = 1 / e;
  return {
    texelWidth: 1 / (3 * Math.max(Math.pow(2, n), 7 * 16)),
    texelHeight: r,
    maxMip: n,
  };
}
function IL(t, e, n, r) {
  const i = t.getContext(),
    o = n.defines;
  let s = n.vertexShader,
    a = n.fragmentShader;
  const c = AL(n),
    u = PL(n),
    d = RL(n),
    f = LL(n),
    p = DL(n),
    h = n.isWebGL2 ? "" : _L(n),
    v = wL(o),
    b = i.createProgram();
  let g,
    m,
    _ = n.glslVersion
      ? "#version " +
        n.glslVersion +
        `
`
      : "";
  (n.isRawShaderMaterial
    ? ((g = [
        "#define SHADER_TYPE " + n.shaderType,
        "#define SHADER_NAME " + n.shaderName,
        v,
      ].filter(Os).join(`
`)),
      g.length > 0 &&
        (g += `
`),
      (m = [
        h,
        "#define SHADER_TYPE " + n.shaderType,
        "#define SHADER_NAME " + n.shaderName,
        v,
      ].filter(Os).join(`
`)),
      m.length > 0 &&
        (m += `
`))
    : ((g = [
        xm(n),
        "#define SHADER_TYPE " + n.shaderType,
        "#define SHADER_NAME " + n.shaderName,
        v,
        n.instancing ? "#define USE_INSTANCING" : "",
        n.instancingColor ? "#define USE_INSTANCING_COLOR" : "",
        n.useFog && n.fog ? "#define USE_FOG" : "",
        n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "",
        n.map ? "#define USE_MAP" : "",
        n.envMap ? "#define USE_ENVMAP" : "",
        n.envMap ? "#define " + d : "",
        n.lightMap ? "#define USE_LIGHTMAP" : "",
        n.aoMap ? "#define USE_AOMAP" : "",
        n.bumpMap ? "#define USE_BUMPMAP" : "",
        n.normalMap ? "#define USE_NORMALMAP" : "",
        n.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
        n.normalMapTangentSpace ? "#define USE_NORMALMAP_TANGENTSPACE" : "",
        n.displacementMap ? "#define USE_DISPLACEMENTMAP" : "",
        n.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
        n.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "",
        n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
        n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
        n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
        n.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
        n.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "",
        n.specularMap ? "#define USE_SPECULARMAP" : "",
        n.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
        n.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
        n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
        n.metalnessMap ? "#define USE_METALNESSMAP" : "",
        n.alphaMap ? "#define USE_ALPHAMAP" : "",
        n.alphaHash ? "#define USE_ALPHAHASH" : "",
        n.transmission ? "#define USE_TRANSMISSION" : "",
        n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
        n.thicknessMap ? "#define USE_THICKNESSMAP" : "",
        n.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
        n.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
        n.mapUv ? "#define MAP_UV " + n.mapUv : "",
        n.alphaMapUv ? "#define ALPHAMAP_UV " + n.alphaMapUv : "",
        n.lightMapUv ? "#define LIGHTMAP_UV " + n.lightMapUv : "",
        n.aoMapUv ? "#define AOMAP_UV " + n.aoMapUv : "",
        n.emissiveMapUv ? "#define EMISSIVEMAP_UV " + n.emissiveMapUv : "",
        n.bumpMapUv ? "#define BUMPMAP_UV " + n.bumpMapUv : "",
        n.normalMapUv ? "#define NORMALMAP_UV " + n.normalMapUv : "",
        n.displacementMapUv
          ? "#define DISPLACEMENTMAP_UV " + n.displacementMapUv
          : "",
        n.metalnessMapUv ? "#define METALNESSMAP_UV " + n.metalnessMapUv : "",
        n.roughnessMapUv ? "#define ROUGHNESSMAP_UV " + n.roughnessMapUv : "",
        n.anisotropyMapUv
          ? "#define ANISOTROPYMAP_UV " + n.anisotropyMapUv
          : "",
        n.clearcoatMapUv ? "#define CLEARCOATMAP_UV " + n.clearcoatMapUv : "",
        n.clearcoatNormalMapUv
          ? "#define CLEARCOAT_NORMALMAP_UV " + n.clearcoatNormalMapUv
          : "",
        n.clearcoatRoughnessMapUv
          ? "#define CLEARCOAT_ROUGHNESSMAP_UV " + n.clearcoatRoughnessMapUv
          : "",
        n.iridescenceMapUv
          ? "#define IRIDESCENCEMAP_UV " + n.iridescenceMapUv
          : "",
        n.iridescenceThicknessMapUv
          ? "#define IRIDESCENCE_THICKNESSMAP_UV " + n.iridescenceThicknessMapUv
          : "",
        n.sheenColorMapUv
          ? "#define SHEEN_COLORMAP_UV " + n.sheenColorMapUv
          : "",
        n.sheenRoughnessMapUv
          ? "#define SHEEN_ROUGHNESSMAP_UV " + n.sheenRoughnessMapUv
          : "",
        n.specularMapUv ? "#define SPECULARMAP_UV " + n.specularMapUv : "",
        n.specularColorMapUv
          ? "#define SPECULAR_COLORMAP_UV " + n.specularColorMapUv
          : "",
        n.specularIntensityMapUv
          ? "#define SPECULAR_INTENSITYMAP_UV " + n.specularIntensityMapUv
          : "",
        n.transmissionMapUv
          ? "#define TRANSMISSIONMAP_UV " + n.transmissionMapUv
          : "",
        n.thicknessMapUv ? "#define THICKNESSMAP_UV " + n.thicknessMapUv : "",
        n.vertexTangents && n.flatShading === !1 ? "#define USE_TANGENT" : "",
        n.vertexColors ? "#define USE_COLOR" : "",
        n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
        n.vertexUv1s ? "#define USE_UV1" : "",
        n.vertexUv2s ? "#define USE_UV2" : "",
        n.vertexUv3s ? "#define USE_UV3" : "",
        n.pointsUvs ? "#define USE_POINTS_UV" : "",
        n.flatShading ? "#define FLAT_SHADED" : "",
        n.skinning ? "#define USE_SKINNING" : "",
        n.morphTargets ? "#define USE_MORPHTARGETS" : "",
        n.morphNormals && n.flatShading === !1
          ? "#define USE_MORPHNORMALS"
          : "",
        n.morphColors && n.isWebGL2 ? "#define USE_MORPHCOLORS" : "",
        n.morphTargetsCount > 0 && n.isWebGL2
          ? "#define MORPHTARGETS_TEXTURE"
          : "",
        n.morphTargetsCount > 0 && n.isWebGL2
          ? "#define MORPHTARGETS_TEXTURE_STRIDE " + n.morphTextureStride
          : "",
        n.morphTargetsCount > 0 && n.isWebGL2
          ? "#define MORPHTARGETS_COUNT " + n.morphTargetsCount
          : "",
        n.doubleSided ? "#define DOUBLE_SIDED" : "",
        n.flipSided ? "#define FLIP_SIDED" : "",
        n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
        n.shadowMapEnabled ? "#define " + c : "",
        n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
        n.useLegacyLights ? "#define LEGACY_LIGHTS" : "",
        n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
        n.logarithmicDepthBuffer && n.rendererExtensionFragDepth
          ? "#define USE_LOGDEPTHBUF_EXT"
          : "",
        "uniform mat4 modelMatrix;",
        "uniform mat4 modelViewMatrix;",
        "uniform mat4 projectionMatrix;",
        "uniform mat4 viewMatrix;",
        "uniform mat3 normalMatrix;",
        "uniform vec3 cameraPosition;",
        "uniform bool isOrthographic;",
        "#ifdef USE_INSTANCING",
        "	attribute mat4 instanceMatrix;",
        "#endif",
        "#ifdef USE_INSTANCING_COLOR",
        "	attribute vec3 instanceColor;",
        "#endif",
        "attribute vec3 position;",
        "attribute vec3 normal;",
        "attribute vec2 uv;",
        "#ifdef USE_UV1",
        "	attribute vec2 uv1;",
        "#endif",
        "#ifdef USE_UV2",
        "	attribute vec2 uv2;",
        "#endif",
        "#ifdef USE_UV3",
        "	attribute vec2 uv3;",
        "#endif",
        "#ifdef USE_TANGENT",
        "	attribute vec4 tangent;",
        "#endif",
        "#if defined( USE_COLOR_ALPHA )",
        "	attribute vec4 color;",
        "#elif defined( USE_COLOR )",
        "	attribute vec3 color;",
        "#endif",
        "#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )",
        "	attribute vec3 morphTarget0;",
        "	attribute vec3 morphTarget1;",
        "	attribute vec3 morphTarget2;",
        "	attribute vec3 morphTarget3;",
        "	#ifdef USE_MORPHNORMALS",
        "		attribute vec3 morphNormal0;",
        "		attribute vec3 morphNormal1;",
        "		attribute vec3 morphNormal2;",
        "		attribute vec3 morphNormal3;",
        "	#else",
        "		attribute vec3 morphTarget4;",
        "		attribute vec3 morphTarget5;",
        "		attribute vec3 morphTarget6;",
        "		attribute vec3 morphTarget7;",
        "	#endif",
        "#endif",
        "#ifdef USE_SKINNING",
        "	attribute vec4 skinIndex;",
        "	attribute vec4 skinWeight;",
        "#endif",
        `
`,
      ].filter(Os).join(`
`)),
      (m = [
        h,
        xm(n),
        "#define SHADER_TYPE " + n.shaderType,
        "#define SHADER_NAME " + n.shaderName,
        v,
        n.useFog && n.fog ? "#define USE_FOG" : "",
        n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "",
        n.map ? "#define USE_MAP" : "",
        n.matcap ? "#define USE_MATCAP" : "",
        n.envMap ? "#define USE_ENVMAP" : "",
        n.envMap ? "#define " + u : "",
        n.envMap ? "#define " + d : "",
        n.envMap ? "#define " + f : "",
        p ? "#define CUBEUV_TEXEL_WIDTH " + p.texelWidth : "",
        p ? "#define CUBEUV_TEXEL_HEIGHT " + p.texelHeight : "",
        p ? "#define CUBEUV_MAX_MIP " + p.maxMip + ".0" : "",
        n.lightMap ? "#define USE_LIGHTMAP" : "",
        n.aoMap ? "#define USE_AOMAP" : "",
        n.bumpMap ? "#define USE_BUMPMAP" : "",
        n.normalMap ? "#define USE_NORMALMAP" : "",
        n.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
        n.normalMapTangentSpace ? "#define USE_NORMALMAP_TANGENTSPACE" : "",
        n.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
        n.anisotropy ? "#define USE_ANISOTROPY" : "",
        n.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "",
        n.clearcoat ? "#define USE_CLEARCOAT" : "",
        n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
        n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
        n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
        n.iridescence ? "#define USE_IRIDESCENCE" : "",
        n.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
        n.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "",
        n.specularMap ? "#define USE_SPECULARMAP" : "",
        n.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
        n.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
        n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
        n.metalnessMap ? "#define USE_METALNESSMAP" : "",
        n.alphaMap ? "#define USE_ALPHAMAP" : "",
        n.alphaTest ? "#define USE_ALPHATEST" : "",
        n.alphaHash ? "#define USE_ALPHAHASH" : "",
        n.sheen ? "#define USE_SHEEN" : "",
        n.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
        n.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
        n.transmission ? "#define USE_TRANSMISSION" : "",
        n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
        n.thicknessMap ? "#define USE_THICKNESSMAP" : "",
        n.vertexTangents && n.flatShading === !1 ? "#define USE_TANGENT" : "",
        n.vertexColors || n.instancingColor ? "#define USE_COLOR" : "",
        n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
        n.vertexUv1s ? "#define USE_UV1" : "",
        n.vertexUv2s ? "#define USE_UV2" : "",
        n.vertexUv3s ? "#define USE_UV3" : "",
        n.pointsUvs ? "#define USE_POINTS_UV" : "",
        n.gradientMap ? "#define USE_GRADIENTMAP" : "",
        n.flatShading ? "#define FLAT_SHADED" : "",
        n.doubleSided ? "#define DOUBLE_SIDED" : "",
        n.flipSided ? "#define FLIP_SIDED" : "",
        n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
        n.shadowMapEnabled ? "#define " + c : "",
        n.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
        n.useLegacyLights ? "#define LEGACY_LIGHTS" : "",
        n.decodeVideoTexture ? "#define DECODE_VIDEO_TEXTURE" : "",
        n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
        n.logarithmicDepthBuffer && n.rendererExtensionFragDepth
          ? "#define USE_LOGDEPTHBUF_EXT"
          : "",
        "uniform mat4 viewMatrix;",
        "uniform vec3 cameraPosition;",
        "uniform bool isOrthographic;",
        n.toneMapping !== Ti ? "#define TONE_MAPPING" : "",
        n.toneMapping !== Ti ? lt.tonemapping_pars_fragment : "",
        n.toneMapping !== Ti ? xL("toneMapping", n.toneMapping) : "",
        n.dithering ? "#define DITHERING" : "",
        n.opaque ? "#define OPAQUE" : "",
        lt.colorspace_pars_fragment,
        yL("linearToOutputTexel", n.outputColorSpace),
        n.useDepthPacking ? "#define DEPTH_PACKING " + n.depthPacking : "",
        `
`,
      ].filter(Os).join(`
`))),
    (s = md(s)),
    (s = vm(s, n)),
    (s = bm(s, n)),
    (a = md(a)),
    (a = vm(a, n)),
    (a = bm(a, n)),
    (s = ym(s)),
    (a = ym(a)),
    n.isWebGL2 &&
      n.isRawShaderMaterial !== !0 &&
      ((_ = `#version 300 es
`),
      (g =
        [
          "precision mediump sampler2DArray;",
          "#define attribute in",
          "#define varying out",
          "#define texture2D texture",
        ].join(`
`) +
        `
` +
        g),
      (m =
        [
          "#define varying in",
          n.glslVersion === Fh
            ? ""
            : "layout(location = 0) out highp vec4 pc_fragColor;",
          n.glslVersion === Fh ? "" : "#define gl_FragColor pc_fragColor",
          "#define gl_FragDepthEXT gl_FragDepth",
          "#define texture2D texture",
          "#define textureCube texture",
          "#define texture2DProj textureProj",
          "#define texture2DLodEXT textureLod",
          "#define texture2DProjLodEXT textureProjLod",
          "#define textureCubeLodEXT textureLod",
          "#define texture2DGradEXT textureGrad",
          "#define texture2DProjGradEXT textureProjGrad",
          "#define textureCubeGradEXT textureGrad",
        ].join(`
`) +
        `
` +
        m)));
  const y = _ + g + s,
    x = _ + m + a,
    C = mm(i, i.VERTEX_SHADER, y),
    w = mm(i, i.FRAGMENT_SHADER, x);
  if (
    (i.attachShader(b, C),
    i.attachShader(b, w),
    n.index0AttributeName !== void 0
      ? i.bindAttribLocation(b, 0, n.index0AttributeName)
      : n.morphTargets === !0 && i.bindAttribLocation(b, 0, "position"),
    i.linkProgram(b),
    t.debug.checkShaderErrors)
  ) {
    const k = i.getProgramInfoLog(b).trim(),
      P = i.getShaderInfoLog(C).trim(),
      I = i.getShaderInfoLog(w).trim();
    let W = !0,
      X = !0;
    if (i.getProgramParameter(b, i.LINK_STATUS) === !1)
      if (((W = !1), typeof t.debug.onShaderError == "function"))
        t.debug.onShaderError(i, b, C, w);
      else {
        const Z = gm(i, C, "vertex"),
          G = gm(i, w, "fragment");
        console.error(
          "THREE.WebGLProgram: Shader Error " +
            i.getError() +
            " - VALIDATE_STATUS " +
            i.getProgramParameter(b, i.VALIDATE_STATUS) +
            `

Program Info Log: ` +
            k +
            `
` +
            Z +
            `
` +
            G,
        );
      }
    else
      k !== ""
        ? console.warn("THREE.WebGLProgram: Program Info Log:", k)
        : (P === "" || I === "") && (X = !1);
    X &&
      (this.diagnostics = {
        runnable: W,
        programLog: k,
        vertexShader: { log: P, prefix: g },
        fragmentShader: { log: I, prefix: m },
      });
  }
  (i.deleteShader(C), i.deleteShader(w));
  let S;
  this.getUniforms = function () {
    return (S === void 0 && (S = new Ul(i, b)), S);
  };
  let D;
  return (
    (this.getAttributes = function () {
      return (D === void 0 && (D = kL(i, b)), D);
    }),
    (this.destroy = function () {
      (r.releaseStatesOfProgram(this),
        i.deleteProgram(b),
        (this.program = void 0));
    }),
    (this.type = n.shaderType),
    (this.name = n.shaderName),
    (this.id = gL++),
    (this.cacheKey = e),
    (this.usedTimes = 1),
    (this.program = b),
    (this.vertexShader = C),
    (this.fragmentShader = w),
    this
  );
}
let OL = 0;
class $L {
  constructor() {
    ((this.shaderCache = new Map()), (this.materialCache = new Map()));
  }
  update(e) {
    const n = e.vertexShader,
      r = e.fragmentShader,
      i = this._getShaderStage(n),
      o = this._getShaderStage(r),
      s = this._getShaderCacheForMaterial(e);
    return (
      s.has(i) === !1 && (s.add(i), i.usedTimes++),
      s.has(o) === !1 && (s.add(o), o.usedTimes++),
      this
    );
  }
  remove(e) {
    const n = this.materialCache.get(e);
    for (const r of n)
      (r.usedTimes--, r.usedTimes === 0 && this.shaderCache.delete(r.code));
    return (this.materialCache.delete(e), this);
  }
  getVertexShaderID(e) {
    return this._getShaderStage(e.vertexShader).id;
  }
  getFragmentShaderID(e) {
    return this._getShaderStage(e.fragmentShader).id;
  }
  dispose() {
    (this.shaderCache.clear(), this.materialCache.clear());
  }
  _getShaderCacheForMaterial(e) {
    const n = this.materialCache;
    let r = n.get(e);
    return (r === void 0 && ((r = new Set()), n.set(e, r)), r);
  }
  _getShaderStage(e) {
    const n = this.shaderCache;
    let r = n.get(e);
    return (r === void 0 && ((r = new zL(e)), n.set(e, r)), r);
  }
}
class zL {
  constructor(e) {
    ((this.id = OL++), (this.code = e), (this.usedTimes = 0));
  }
}
function BL(t, e, n, r, i, o, s) {
  const a = new kv(),
    c = new $L(),
    u = [],
    d = i.isWebGL2,
    f = i.logarithmicDepthBuffer,
    p = i.vertexTextures;
  let h = i.precision;
  const v = {
    MeshDepthMaterial: "depth",
    MeshDistanceMaterial: "distanceRGBA",
    MeshNormalMaterial: "normal",
    MeshBasicMaterial: "basic",
    MeshLambertMaterial: "lambert",
    MeshPhongMaterial: "phong",
    MeshToonMaterial: "toon",
    MeshStandardMaterial: "physical",
    MeshPhysicalMaterial: "physical",
    MeshMatcapMaterial: "matcap",
    LineBasicMaterial: "basic",
    LineDashedMaterial: "dashed",
    PointsMaterial: "points",
    ShadowMaterial: "shadow",
    SpriteMaterial: "sprite",
  };
  function b(k) {
    return k === 0 ? "uv" : `uv${k}`;
  }
  function g(k, P, I, W, X) {
    const Z = W.fog,
      G = X.geometry,
      $ = k.isMeshStandardMaterial ? W.environment : null,
      ne = (k.isMeshStandardMaterial ? n : e).get(k.envMap || $),
      U = ne && ne.mapping === Mc ? ne.image.height : null,
      ie = v[k.type];
    k.precision !== null &&
      ((h = i.getMaxPrecision(k.precision)),
      h !== k.precision &&
        console.warn(
          "THREE.WebGLProgram.getParameters:",
          k.precision,
          "not supported, using",
          h,
          "instead.",
        ));
    const J =
        G.morphAttributes.position ||
        G.morphAttributes.normal ||
        G.morphAttributes.color,
      V = J !== void 0 ? J.length : 0;
    let re = 0;
    (G.morphAttributes.position !== void 0 && (re = 1),
      G.morphAttributes.normal !== void 0 && (re = 2),
      G.morphAttributes.color !== void 0 && (re = 3));
    let Ee, Pe, be, ce;
    if (ie) {
      const Ot = Ar[ie];
      ((Ee = Ot.vertexShader), (Pe = Ot.fragmentShader));
    } else
      ((Ee = k.vertexShader),
        (Pe = k.fragmentShader),
        c.update(k),
        (be = c.getVertexShaderID(k)),
        (ce = c.getFragmentShaderID(k)));
    const oe = t.getRenderTarget(),
      me = X.isInstancedMesh === !0,
      ge = !!k.map,
      Oe = !!k.matcap,
      He = !!ne,
      A = !!k.aoMap,
      j = !!k.lightMap,
      L = !!k.bumpMap,
      F = !!k.normalMap,
      te = !!k.displacementMap,
      q = !!k.emissiveMap,
      ye = !!k.metalnessMap,
      xe = !!k.roughnessMap,
      Se = k.anisotropy > 0,
      Me = k.clearcoat > 0,
      ae = k.iridescence > 0,
      M = k.sheen > 0,
      T = k.transmission > 0,
      K = Se && !!k.anisotropyMap,
      ue = Me && !!k.clearcoatMap,
      he = Me && !!k.clearcoatNormalMap,
      _e = Me && !!k.clearcoatRoughnessMap,
      je = ae && !!k.iridescenceMap,
      Ae = ae && !!k.iridescenceThicknessMap,
      de = M && !!k.sheenColorMap,
      Y = M && !!k.sheenRoughnessMap,
      Te = !!k.specularMap,
      Fe = !!k.specularColorMap,
      Re = !!k.specularIntensityMap,
      $e = T && !!k.transmissionMap,
      Qe = T && !!k.thicknessMap,
      gt = !!k.gradientMap,
      ee = !!k.alphaMap,
      Ne = k.alphaTest > 0,
      ve = !!k.alphaHash,
      Le = !!k.extensions,
      ze = !!G.attributes.uv1,
      dt = !!G.attributes.uv2,
      St = !!G.attributes.uv3;
    let Rt = Ti;
    return (
      k.toneMapped &&
        (oe === null || oe.isXRRenderTarget === !0) &&
        (Rt = t.toneMapping),
      {
        isWebGL2: d,
        shaderID: ie,
        shaderType: k.type,
        shaderName: k.name,
        vertexShader: Ee,
        fragmentShader: Pe,
        defines: k.defines,
        customVertexShaderID: be,
        customFragmentShaderID: ce,
        isRawShaderMaterial: k.isRawShaderMaterial === !0,
        glslVersion: k.glslVersion,
        precision: h,
        instancing: me,
        instancingColor: me && X.instanceColor !== null,
        supportsVertexTextures: p,
        outputColorSpace:
          oe === null
            ? t.outputColorSpace
            : oe.isXRRenderTarget === !0
              ? oe.texture.colorSpace
              : Ir,
        map: ge,
        matcap: Oe,
        envMap: He,
        envMapMode: He && ne.mapping,
        envMapCubeUVHeight: U,
        aoMap: A,
        lightMap: j,
        bumpMap: L,
        normalMap: F,
        displacementMap: p && te,
        emissiveMap: q,
        normalMapObjectSpace: F && k.normalMapType === j5,
        normalMapTangentSpace: F && k.normalMapType === vv,
        metalnessMap: ye,
        roughnessMap: xe,
        anisotropy: Se,
        anisotropyMap: K,
        clearcoat: Me,
        clearcoatMap: ue,
        clearcoatNormalMap: he,
        clearcoatRoughnessMap: _e,
        iridescence: ae,
        iridescenceMap: je,
        iridescenceThicknessMap: Ae,
        sheen: M,
        sheenColorMap: de,
        sheenRoughnessMap: Y,
        specularMap: Te,
        specularColorMap: Fe,
        specularIntensityMap: Re,
        transmission: T,
        transmissionMap: $e,
        thicknessMap: Qe,
        gradientMap: gt,
        opaque: k.transparent === !1 && k.blending === ts,
        alphaMap: ee,
        alphaTest: Ne,
        alphaHash: ve,
        combine: k.combine,
        mapUv: ge && b(k.map.channel),
        aoMapUv: A && b(k.aoMap.channel),
        lightMapUv: j && b(k.lightMap.channel),
        bumpMapUv: L && b(k.bumpMap.channel),
        normalMapUv: F && b(k.normalMap.channel),
        displacementMapUv: te && b(k.displacementMap.channel),
        emissiveMapUv: q && b(k.emissiveMap.channel),
        metalnessMapUv: ye && b(k.metalnessMap.channel),
        roughnessMapUv: xe && b(k.roughnessMap.channel),
        anisotropyMapUv: K && b(k.anisotropyMap.channel),
        clearcoatMapUv: ue && b(k.clearcoatMap.channel),
        clearcoatNormalMapUv: he && b(k.clearcoatNormalMap.channel),
        clearcoatRoughnessMapUv: _e && b(k.clearcoatRoughnessMap.channel),
        iridescenceMapUv: je && b(k.iridescenceMap.channel),
        iridescenceThicknessMapUv: Ae && b(k.iridescenceThicknessMap.channel),
        sheenColorMapUv: de && b(k.sheenColorMap.channel),
        sheenRoughnessMapUv: Y && b(k.sheenRoughnessMap.channel),
        specularMapUv: Te && b(k.specularMap.channel),
        specularColorMapUv: Fe && b(k.specularColorMap.channel),
        specularIntensityMapUv: Re && b(k.specularIntensityMap.channel),
        transmissionMapUv: $e && b(k.transmissionMap.channel),
        thicknessMapUv: Qe && b(k.thicknessMap.channel),
        alphaMapUv: ee && b(k.alphaMap.channel),
        vertexTangents: !!G.attributes.tangent && (F || Se),
        vertexColors: k.vertexColors,
        vertexAlphas:
          k.vertexColors === !0 &&
          !!G.attributes.color &&
          G.attributes.color.itemSize === 4,
        vertexUv1s: ze,
        vertexUv2s: dt,
        vertexUv3s: St,
        pointsUvs: X.isPoints === !0 && !!G.attributes.uv && (ge || ee),
        fog: !!Z,
        useFog: k.fog === !0,
        fogExp2: Z && Z.isFogExp2,
        flatShading: k.flatShading === !0,
        sizeAttenuation: k.sizeAttenuation === !0,
        logarithmicDepthBuffer: f,
        skinning: X.isSkinnedMesh === !0,
        morphTargets: G.morphAttributes.position !== void 0,
        morphNormals: G.morphAttributes.normal !== void 0,
        morphColors: G.morphAttributes.color !== void 0,
        morphTargetsCount: V,
        morphTextureStride: re,
        numDirLights: P.directional.length,
        numPointLights: P.point.length,
        numSpotLights: P.spot.length,
        numSpotLightMaps: P.spotLightMap.length,
        numRectAreaLights: P.rectArea.length,
        numHemiLights: P.hemi.length,
        numDirLightShadows: P.directionalShadowMap.length,
        numPointLightShadows: P.pointShadowMap.length,
        numSpotLightShadows: P.spotShadowMap.length,
        numSpotLightShadowsWithMaps: P.numSpotLightShadowsWithMaps,
        numClippingPlanes: s.numPlanes,
        numClipIntersection: s.numIntersection,
        dithering: k.dithering,
        shadowMapEnabled: t.shadowMap.enabled && I.length > 0,
        shadowMapType: t.shadowMap.type,
        toneMapping: Rt,
        useLegacyLights: t._useLegacyLights,
        decodeVideoTexture:
          ge && k.map.isVideoTexture === !0 && k.map.colorSpace === Bt,
        premultipliedAlpha: k.premultipliedAlpha,
        doubleSided: k.side === rr,
        flipSided: k.side === $n,
        useDepthPacking: k.depthPacking >= 0,
        depthPacking: k.depthPacking || 0,
        index0AttributeName: k.index0AttributeName,
        extensionDerivatives: Le && k.extensions.derivatives === !0,
        extensionFragDepth: Le && k.extensions.fragDepth === !0,
        extensionDrawBuffers: Le && k.extensions.drawBuffers === !0,
        extensionShaderTextureLOD: Le && k.extensions.shaderTextureLOD === !0,
        rendererExtensionFragDepth: d || r.has("EXT_frag_depth"),
        rendererExtensionDrawBuffers: d || r.has("WEBGL_draw_buffers"),
        rendererExtensionShaderTextureLod: d || r.has("EXT_shader_texture_lod"),
        customProgramCacheKey: k.customProgramCacheKey(),
      }
    );
  }
  function m(k) {
    const P = [];
    if (
      (k.shaderID
        ? P.push(k.shaderID)
        : (P.push(k.customVertexShaderID), P.push(k.customFragmentShaderID)),
      k.defines !== void 0)
    )
      for (const I in k.defines) (P.push(I), P.push(k.defines[I]));
    return (
      k.isRawShaderMaterial === !1 &&
        (_(P, k), y(P, k), P.push(t.outputColorSpace)),
      P.push(k.customProgramCacheKey),
      P.join()
    );
  }
  function _(k, P) {
    (k.push(P.precision),
      k.push(P.outputColorSpace),
      k.push(P.envMapMode),
      k.push(P.envMapCubeUVHeight),
      k.push(P.mapUv),
      k.push(P.alphaMapUv),
      k.push(P.lightMapUv),
      k.push(P.aoMapUv),
      k.push(P.bumpMapUv),
      k.push(P.normalMapUv),
      k.push(P.displacementMapUv),
      k.push(P.emissiveMapUv),
      k.push(P.metalnessMapUv),
      k.push(P.roughnessMapUv),
      k.push(P.anisotropyMapUv),
      k.push(P.clearcoatMapUv),
      k.push(P.clearcoatNormalMapUv),
      k.push(P.clearcoatRoughnessMapUv),
      k.push(P.iridescenceMapUv),
      k.push(P.iridescenceThicknessMapUv),
      k.push(P.sheenColorMapUv),
      k.push(P.sheenRoughnessMapUv),
      k.push(P.specularMapUv),
      k.push(P.specularColorMapUv),
      k.push(P.specularIntensityMapUv),
      k.push(P.transmissionMapUv),
      k.push(P.thicknessMapUv),
      k.push(P.combine),
      k.push(P.fogExp2),
      k.push(P.sizeAttenuation),
      k.push(P.morphTargetsCount),
      k.push(P.morphAttributeCount),
      k.push(P.numDirLights),
      k.push(P.numPointLights),
      k.push(P.numSpotLights),
      k.push(P.numSpotLightMaps),
      k.push(P.numHemiLights),
      k.push(P.numRectAreaLights),
      k.push(P.numDirLightShadows),
      k.push(P.numPointLightShadows),
      k.push(P.numSpotLightShadows),
      k.push(P.numSpotLightShadowsWithMaps),
      k.push(P.shadowMapType),
      k.push(P.toneMapping),
      k.push(P.numClippingPlanes),
      k.push(P.numClipIntersection),
      k.push(P.depthPacking));
  }
  function y(k, P) {
    (a.disableAll(),
      P.isWebGL2 && a.enable(0),
      P.supportsVertexTextures && a.enable(1),
      P.instancing && a.enable(2),
      P.instancingColor && a.enable(3),
      P.matcap && a.enable(4),
      P.envMap && a.enable(5),
      P.normalMapObjectSpace && a.enable(6),
      P.normalMapTangentSpace && a.enable(7),
      P.clearcoat && a.enable(8),
      P.iridescence && a.enable(9),
      P.alphaTest && a.enable(10),
      P.vertexColors && a.enable(11),
      P.vertexAlphas && a.enable(12),
      P.vertexUv1s && a.enable(13),
      P.vertexUv2s && a.enable(14),
      P.vertexUv3s && a.enable(15),
      P.vertexTangents && a.enable(16),
      P.anisotropy && a.enable(17),
      k.push(a.mask),
      a.disableAll(),
      P.fog && a.enable(0),
      P.useFog && a.enable(1),
      P.flatShading && a.enable(2),
      P.logarithmicDepthBuffer && a.enable(3),
      P.skinning && a.enable(4),
      P.morphTargets && a.enable(5),
      P.morphNormals && a.enable(6),
      P.morphColors && a.enable(7),
      P.premultipliedAlpha && a.enable(8),
      P.shadowMapEnabled && a.enable(9),
      P.useLegacyLights && a.enable(10),
      P.doubleSided && a.enable(11),
      P.flipSided && a.enable(12),
      P.useDepthPacking && a.enable(13),
      P.dithering && a.enable(14),
      P.transmission && a.enable(15),
      P.sheen && a.enable(16),
      P.opaque && a.enable(17),
      P.pointsUvs && a.enable(18),
      P.decodeVideoTexture && a.enable(19),
      k.push(a.mask));
  }
  function x(k) {
    const P = v[k.type];
    let I;
    if (P) {
      const W = Ar[P];
      I = Av.clone(W.uniforms);
    } else I = k.uniforms;
    return I;
  }
  function C(k, P) {
    let I;
    for (let W = 0, X = u.length; W < X; W++) {
      const Z = u[W];
      if (Z.cacheKey === P) {
        ((I = Z), ++I.usedTimes);
        break;
      }
    }
    return (I === void 0 && ((I = new IL(t, P, k, o)), u.push(I)), I);
  }
  function w(k) {
    if (--k.usedTimes === 0) {
      const P = u.indexOf(k);
      ((u[P] = u[u.length - 1]), u.pop(), k.destroy());
    }
  }
  function S(k) {
    c.remove(k);
  }
  function D() {
    c.dispose();
  }
  return {
    getParameters: g,
    getProgramCacheKey: m,
    getUniforms: x,
    acquireProgram: C,
    releaseProgram: w,
    releaseShaderCache: S,
    programs: u,
    dispose: D,
  };
}
function UL() {
  let t = new WeakMap();
  function e(o) {
    let s = t.get(o);
    return (s === void 0 && ((s = {}), t.set(o, s)), s);
  }
  function n(o) {
    t.delete(o);
  }
  function r(o, s, a) {
    t.get(o)[s] = a;
  }
  function i() {
    t = new WeakMap();
  }
  return { get: e, remove: n, update: r, dispose: i };
}
function FL(t, e) {
  return t.groupOrder !== e.groupOrder
    ? t.groupOrder - e.groupOrder
    : t.renderOrder !== e.renderOrder
      ? t.renderOrder - e.renderOrder
      : t.material.id !== e.material.id
        ? t.material.id - e.material.id
        : t.z !== e.z
          ? t.z - e.z
          : t.id - e.id;
}
function _m(t, e) {
  return t.groupOrder !== e.groupOrder
    ? t.groupOrder - e.groupOrder
    : t.renderOrder !== e.renderOrder
      ? t.renderOrder - e.renderOrder
      : t.z !== e.z
        ? e.z - t.z
        : t.id - e.id;
}
function wm() {
  const t = [];
  let e = 0;
  const n = [],
    r = [],
    i = [];
  function o() {
    ((e = 0), (n.length = 0), (r.length = 0), (i.length = 0));
  }
  function s(f, p, h, v, b, g) {
    let m = t[e];
    return (
      m === void 0
        ? ((m = {
            id: f.id,
            object: f,
            geometry: p,
            material: h,
            groupOrder: v,
            renderOrder: f.renderOrder,
            z: b,
            group: g,
          }),
          (t[e] = m))
        : ((m.id = f.id),
          (m.object = f),
          (m.geometry = p),
          (m.material = h),
          (m.groupOrder = v),
          (m.renderOrder = f.renderOrder),
          (m.z = b),
          (m.group = g)),
      e++,
      m
    );
  }
  function a(f, p, h, v, b, g) {
    const m = s(f, p, h, v, b, g);
    h.transmission > 0
      ? r.push(m)
      : h.transparent === !0
        ? i.push(m)
        : n.push(m);
  }
  function c(f, p, h, v, b, g) {
    const m = s(f, p, h, v, b, g);
    h.transmission > 0
      ? r.unshift(m)
      : h.transparent === !0
        ? i.unshift(m)
        : n.unshift(m);
  }
  function u(f, p) {
    (n.length > 1 && n.sort(f || FL),
      r.length > 1 && r.sort(p || _m),
      i.length > 1 && i.sort(p || _m));
  }
  function d() {
    for (let f = e, p = t.length; f < p; f++) {
      const h = t[f];
      if (h.id === null) break;
      ((h.id = null),
        (h.object = null),
        (h.geometry = null),
        (h.material = null),
        (h.group = null));
    }
  }
  return {
    opaque: n,
    transmissive: r,
    transparent: i,
    init: o,
    push: a,
    unshift: c,
    finish: d,
    sort: u,
  };
}
function NL() {
  let t = new WeakMap();
  function e(r, i) {
    const o = t.get(r);
    let s;
    return (
      o === void 0
        ? ((s = new wm()), t.set(r, [s]))
        : i >= o.length
          ? ((s = new wm()), o.push(s))
          : (s = o[i]),
      s
    );
  }
  function n() {
    t = new WeakMap();
  }
  return { get: e, dispose: n };
}
function VL() {
  const t = {};
  return {
    get: function (e) {
      if (t[e.id] !== void 0) return t[e.id];
      let n;
      switch (e.type) {
        case "DirectionalLight":
          n = { direction: new se(), color: new _t() };
          break;
        case "SpotLight":
          n = {
            position: new se(),
            direction: new se(),
            color: new _t(),
            distance: 0,
            coneCos: 0,
            penumbraCos: 0,
            decay: 0,
          };
          break;
        case "PointLight":
          n = { position: new se(), color: new _t(), distance: 0, decay: 0 };
          break;
        case "HemisphereLight":
          n = {
            direction: new se(),
            skyColor: new _t(),
            groundColor: new _t(),
          };
          break;
        case "RectAreaLight":
          n = {
            color: new _t(),
            position: new se(),
            halfWidth: new se(),
            halfHeight: new se(),
          };
          break;
      }
      return ((t[e.id] = n), n);
    },
  };
}
function HL() {
  const t = {};
  return {
    get: function (e) {
      if (t[e.id] !== void 0) return t[e.id];
      let n;
      switch (e.type) {
        case "DirectionalLight":
          n = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new qe(),
          };
          break;
        case "SpotLight":
          n = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new qe(),
          };
          break;
        case "PointLight":
          n = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new qe(),
            shadowCameraNear: 1,
            shadowCameraFar: 1e3,
          };
          break;
      }
      return ((t[e.id] = n), n);
    },
  };
}
let jL = 0;
function GL(t, e) {
  return (
    (e.castShadow ? 2 : 0) -
    (t.castShadow ? 2 : 0) +
    (e.map ? 1 : 0) -
    (t.map ? 1 : 0)
  );
}
function WL(t, e) {
  const n = new VL(),
    r = HL(),
    i = {
      version: 0,
      hash: {
        directionalLength: -1,
        pointLength: -1,
        spotLength: -1,
        rectAreaLength: -1,
        hemiLength: -1,
        numDirectionalShadows: -1,
        numPointShadows: -1,
        numSpotShadows: -1,
        numSpotMaps: -1,
      },
      ambient: [0, 0, 0],
      probe: [],
      directional: [],
      directionalShadow: [],
      directionalShadowMap: [],
      directionalShadowMatrix: [],
      spot: [],
      spotLightMap: [],
      spotShadow: [],
      spotShadowMap: [],
      spotLightMatrix: [],
      rectArea: [],
      rectAreaLTC1: null,
      rectAreaLTC2: null,
      point: [],
      pointShadow: [],
      pointShadowMap: [],
      pointShadowMatrix: [],
      hemi: [],
      numSpotLightShadowsWithMaps: 0,
    };
  for (let d = 0; d < 9; d++) i.probe.push(new se());
  const o = new se(),
    s = new Kt(),
    a = new Kt();
  function c(d, f) {
    let p = 0,
      h = 0,
      v = 0;
    for (let I = 0; I < 9; I++) i.probe[I].set(0, 0, 0);
    let b = 0,
      g = 0,
      m = 0,
      _ = 0,
      y = 0,
      x = 0,
      C = 0,
      w = 0,
      S = 0,
      D = 0;
    d.sort(GL);
    const k = f === !0 ? Math.PI : 1;
    for (let I = 0, W = d.length; I < W; I++) {
      const X = d[I],
        Z = X.color,
        G = X.intensity,
        $ = X.distance,
        ne = X.shadow && X.shadow.map ? X.shadow.map.texture : null;
      if (X.isAmbientLight)
        ((p += Z.r * G * k), (h += Z.g * G * k), (v += Z.b * G * k));
      else if (X.isLightProbe)
        for (let U = 0; U < 9; U++)
          i.probe[U].addScaledVector(X.sh.coefficients[U], G);
      else if (X.isDirectionalLight) {
        const U = n.get(X);
        if (
          (U.color.copy(X.color).multiplyScalar(X.intensity * k), X.castShadow)
        ) {
          const ie = X.shadow,
            J = r.get(X);
          ((J.shadowBias = ie.bias),
            (J.shadowNormalBias = ie.normalBias),
            (J.shadowRadius = ie.radius),
            (J.shadowMapSize = ie.mapSize),
            (i.directionalShadow[b] = J),
            (i.directionalShadowMap[b] = ne),
            (i.directionalShadowMatrix[b] = X.shadow.matrix),
            x++);
        }
        ((i.directional[b] = U), b++);
      } else if (X.isSpotLight) {
        const U = n.get(X);
        (U.position.setFromMatrixPosition(X.matrixWorld),
          U.color.copy(Z).multiplyScalar(G * k),
          (U.distance = $),
          (U.coneCos = Math.cos(X.angle)),
          (U.penumbraCos = Math.cos(X.angle * (1 - X.penumbra))),
          (U.decay = X.decay),
          (i.spot[m] = U));
        const ie = X.shadow;
        if (
          (X.map &&
            ((i.spotLightMap[S] = X.map),
            S++,
            ie.updateMatrices(X),
            X.castShadow && D++),
          (i.spotLightMatrix[m] = ie.matrix),
          X.castShadow)
        ) {
          const J = r.get(X);
          ((J.shadowBias = ie.bias),
            (J.shadowNormalBias = ie.normalBias),
            (J.shadowRadius = ie.radius),
            (J.shadowMapSize = ie.mapSize),
            (i.spotShadow[m] = J),
            (i.spotShadowMap[m] = ne),
            w++);
        }
        m++;
      } else if (X.isRectAreaLight) {
        const U = n.get(X);
        (U.color.copy(Z).multiplyScalar(G),
          U.halfWidth.set(X.width * 0.5, 0, 0),
          U.halfHeight.set(0, X.height * 0.5, 0),
          (i.rectArea[_] = U),
          _++);
      } else if (X.isPointLight) {
        const U = n.get(X);
        if (
          (U.color.copy(X.color).multiplyScalar(X.intensity * k),
          (U.distance = X.distance),
          (U.decay = X.decay),
          X.castShadow)
        ) {
          const ie = X.shadow,
            J = r.get(X);
          ((J.shadowBias = ie.bias),
            (J.shadowNormalBias = ie.normalBias),
            (J.shadowRadius = ie.radius),
            (J.shadowMapSize = ie.mapSize),
            (J.shadowCameraNear = ie.camera.near),
            (J.shadowCameraFar = ie.camera.far),
            (i.pointShadow[g] = J),
            (i.pointShadowMap[g] = ne),
            (i.pointShadowMatrix[g] = X.shadow.matrix),
            C++);
        }
        ((i.point[g] = U), g++);
      } else if (X.isHemisphereLight) {
        const U = n.get(X);
        (U.skyColor.copy(X.color).multiplyScalar(G * k),
          U.groundColor.copy(X.groundColor).multiplyScalar(G * k),
          (i.hemi[y] = U),
          y++);
      }
    }
    (_ > 0 &&
      (e.isWebGL2 || t.has("OES_texture_float_linear") === !0
        ? ((i.rectAreaLTC1 = Ue.LTC_FLOAT_1), (i.rectAreaLTC2 = Ue.LTC_FLOAT_2))
        : t.has("OES_texture_half_float_linear") === !0
          ? ((i.rectAreaLTC1 = Ue.LTC_HALF_1), (i.rectAreaLTC2 = Ue.LTC_HALF_2))
          : console.error(
              "THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.",
            )),
      (i.ambient[0] = p),
      (i.ambient[1] = h),
      (i.ambient[2] = v));
    const P = i.hash;
    (P.directionalLength !== b ||
      P.pointLength !== g ||
      P.spotLength !== m ||
      P.rectAreaLength !== _ ||
      P.hemiLength !== y ||
      P.numDirectionalShadows !== x ||
      P.numPointShadows !== C ||
      P.numSpotShadows !== w ||
      P.numSpotMaps !== S) &&
      ((i.directional.length = b),
      (i.spot.length = m),
      (i.rectArea.length = _),
      (i.point.length = g),
      (i.hemi.length = y),
      (i.directionalShadow.length = x),
      (i.directionalShadowMap.length = x),
      (i.pointShadow.length = C),
      (i.pointShadowMap.length = C),
      (i.spotShadow.length = w),
      (i.spotShadowMap.length = w),
      (i.directionalShadowMatrix.length = x),
      (i.pointShadowMatrix.length = C),
      (i.spotLightMatrix.length = w + S - D),
      (i.spotLightMap.length = S),
      (i.numSpotLightShadowsWithMaps = D),
      (P.directionalLength = b),
      (P.pointLength = g),
      (P.spotLength = m),
      (P.rectAreaLength = _),
      (P.hemiLength = y),
      (P.numDirectionalShadows = x),
      (P.numPointShadows = C),
      (P.numSpotShadows = w),
      (P.numSpotMaps = S),
      (i.version = jL++));
  }
  function u(d, f) {
    let p = 0,
      h = 0,
      v = 0,
      b = 0,
      g = 0;
    const m = f.matrixWorldInverse;
    for (let _ = 0, y = d.length; _ < y; _++) {
      const x = d[_];
      if (x.isDirectionalLight) {
        const C = i.directional[p];
        (C.direction.setFromMatrixPosition(x.matrixWorld),
          o.setFromMatrixPosition(x.target.matrixWorld),
          C.direction.sub(o),
          C.direction.transformDirection(m),
          p++);
      } else if (x.isSpotLight) {
        const C = i.spot[v];
        (C.position.setFromMatrixPosition(x.matrixWorld),
          C.position.applyMatrix4(m),
          C.direction.setFromMatrixPosition(x.matrixWorld),
          o.setFromMatrixPosition(x.target.matrixWorld),
          C.direction.sub(o),
          C.direction.transformDirection(m),
          v++);
      } else if (x.isRectAreaLight) {
        const C = i.rectArea[b];
        (C.position.setFromMatrixPosition(x.matrixWorld),
          C.position.applyMatrix4(m),
          a.identity(),
          s.copy(x.matrixWorld),
          s.premultiply(m),
          a.extractRotation(s),
          C.halfWidth.set(x.width * 0.5, 0, 0),
          C.halfHeight.set(0, x.height * 0.5, 0),
          C.halfWidth.applyMatrix4(a),
          C.halfHeight.applyMatrix4(a),
          b++);
      } else if (x.isPointLight) {
        const C = i.point[h];
        (C.position.setFromMatrixPosition(x.matrixWorld),
          C.position.applyMatrix4(m),
          h++);
      } else if (x.isHemisphereLight) {
        const C = i.hemi[g];
        (C.direction.setFromMatrixPosition(x.matrixWorld),
          C.direction.transformDirection(m),
          g++);
      }
    }
  }
  return { setup: c, setupView: u, state: i };
}
function km(t, e) {
  const n = new WL(t, e),
    r = [],
    i = [];
  function o() {
    ((r.length = 0), (i.length = 0));
  }
  function s(f) {
    r.push(f);
  }
  function a(f) {
    i.push(f);
  }
  function c(f) {
    n.setup(r, f);
  }
  function u(f) {
    n.setupView(r, f);
  }
  return {
    init: o,
    state: { lightsArray: r, shadowsArray: i, lights: n },
    setupLights: c,
    setupLightsView: u,
    pushLight: s,
    pushShadow: a,
  };
}
function KL(t, e) {
  let n = new WeakMap();
  function r(o, s = 0) {
    const a = n.get(o);
    let c;
    return (
      a === void 0
        ? ((c = new km(t, e)), n.set(o, [c]))
        : s >= a.length
          ? ((c = new km(t, e)), a.push(c))
          : (c = a[s]),
      c
    );
  }
  function i() {
    n = new WeakMap();
  }
  return { get: r, dispose: i };
}
class XL extends fs {
  constructor(e) {
    (super(),
      (this.isMeshDepthMaterial = !0),
      (this.type = "MeshDepthMaterial"),
      (this.depthPacking = V5),
      (this.map = null),
      (this.alphaMap = null),
      (this.displacementMap = null),
      (this.displacementScale = 1),
      (this.displacementBias = 0),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      this.setValues(e));
  }
  copy(e) {
    return (
      super.copy(e),
      (this.depthPacking = e.depthPacking),
      (this.map = e.map),
      (this.alphaMap = e.alphaMap),
      (this.displacementMap = e.displacementMap),
      (this.displacementScale = e.displacementScale),
      (this.displacementBias = e.displacementBias),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      this
    );
  }
}
class YL extends fs {
  constructor(e) {
    (super(),
      (this.isMeshDistanceMaterial = !0),
      (this.type = "MeshDistanceMaterial"),
      (this.map = null),
      (this.alphaMap = null),
      (this.displacementMap = null),
      (this.displacementScale = 1),
      (this.displacementBias = 0),
      this.setValues(e));
  }
  copy(e) {
    return (
      super.copy(e),
      (this.map = e.map),
      (this.alphaMap = e.alphaMap),
      (this.displacementMap = e.displacementMap),
      (this.displacementScale = e.displacementScale),
      (this.displacementBias = e.displacementBias),
      this
    );
  }
}
const qL = `void main() {
	gl_Position = vec4( position, 1.0 );
}`,
  ZL = `uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;
function JL(t, e, n) {
  let r = new af();
  const i = new qe(),
    o = new qe(),
    s = new Ut(),
    a = new XL({ depthPacking: H5 }),
    c = new YL(),
    u = {},
    d = n.maxTextureSize,
    f = { [Dr]: $n, [$n]: Dr, [rr]: rr },
    p = new li({
      defines: { VSM_SAMPLES: 8 },
      uniforms: {
        shadow_pass: { value: null },
        resolution: { value: new qe() },
        radius: { value: 4 },
      },
      vertexShader: qL,
      fragmentShader: ZL,
    }),
    h = p.clone();
  h.defines.HORIZONTAL_PASS = 1;
  const v = new ui();
  v.setAttribute(
    "position",
    new yr(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3),
  );
  const b = new It(v, p),
    g = this;
  ((this.enabled = !1),
    (this.autoUpdate = !0),
    (this.needsUpdate = !1),
    (this.type = ov));
  let m = this.type;
  this.render = function (C, w, S) {
    if (
      g.enabled === !1 ||
      (g.autoUpdate === !1 && g.needsUpdate === !1) ||
      C.length === 0
    )
      return;
    const D = t.getRenderTarget(),
      k = t.getActiveCubeFace(),
      P = t.getActiveMipmapLevel(),
      I = t.state;
    (I.setBlending(ti),
      I.buffers.color.setClear(1, 1, 1, 1),
      I.buffers.depth.setTest(!0),
      I.setScissorTest(!1));
    const W = m !== Gr && this.type === Gr,
      X = m === Gr && this.type !== Gr;
    for (let Z = 0, G = C.length; Z < G; Z++) {
      const $ = C[Z],
        ne = $.shadow;
      if (ne === void 0) {
        console.warn("THREE.WebGLShadowMap:", $, "has no shadow.");
        continue;
      }
      if (ne.autoUpdate === !1 && ne.needsUpdate === !1) continue;
      i.copy(ne.mapSize);
      const U = ne.getFrameExtents();
      if (
        (i.multiply(U),
        o.copy(ne.mapSize),
        (i.x > d || i.y > d) &&
          (i.x > d &&
            ((o.x = Math.floor(d / U.x)),
            (i.x = o.x * U.x),
            (ne.mapSize.x = o.x)),
          i.y > d &&
            ((o.y = Math.floor(d / U.y)),
            (i.y = o.y * U.y),
            (ne.mapSize.y = o.y))),
        ne.map === null || W === !0 || X === !0)
      ) {
        const J = this.type !== Gr ? { minFilter: Ht, magFilter: Ht } : {};
        (ne.map !== null && ne.map.dispose(),
          (ne.map = new ai(i.x, i.y, J)),
          (ne.map.texture.name = $.name + ".shadowMap"),
          ne.camera.updateProjectionMatrix());
      }
      (t.setRenderTarget(ne.map), t.clear());
      const ie = ne.getViewportCount();
      for (let J = 0; J < ie; J++) {
        const V = ne.getViewport(J);
        (s.set(o.x * V.x, o.y * V.y, o.x * V.z, o.y * V.w),
          I.viewport(s),
          ne.updateMatrices($, J),
          (r = ne.getFrustum()),
          x(w, S, ne.camera, $, this.type));
      }
      (ne.isPointLightShadow !== !0 && this.type === Gr && _(ne, S),
        (ne.needsUpdate = !1));
    }
    ((m = this.type), (g.needsUpdate = !1), t.setRenderTarget(D, k, P));
  };
  function _(C, w) {
    const S = e.update(b);
    (p.defines.VSM_SAMPLES !== C.blurSamples &&
      ((p.defines.VSM_SAMPLES = C.blurSamples),
      (h.defines.VSM_SAMPLES = C.blurSamples),
      (p.needsUpdate = !0),
      (h.needsUpdate = !0)),
      C.mapPass === null && (C.mapPass = new ai(i.x, i.y)),
      (p.uniforms.shadow_pass.value = C.map.texture),
      (p.uniforms.resolution.value = C.mapSize),
      (p.uniforms.radius.value = C.radius),
      t.setRenderTarget(C.mapPass),
      t.clear(),
      t.renderBufferDirect(w, null, S, p, b, null),
      (h.uniforms.shadow_pass.value = C.mapPass.texture),
      (h.uniforms.resolution.value = C.mapSize),
      (h.uniforms.radius.value = C.radius),
      t.setRenderTarget(C.map),
      t.clear(),
      t.renderBufferDirect(w, null, S, h, b, null));
  }
  function y(C, w, S, D) {
    let k = null;
    const P =
      S.isPointLight === !0 ? C.customDistanceMaterial : C.customDepthMaterial;
    if (P !== void 0) k = P;
    else if (
      ((k = S.isPointLight === !0 ? c : a),
      (t.localClippingEnabled &&
        w.clipShadows === !0 &&
        Array.isArray(w.clippingPlanes) &&
        w.clippingPlanes.length !== 0) ||
        (w.displacementMap && w.displacementScale !== 0) ||
        (w.alphaMap && w.alphaTest > 0) ||
        (w.map && w.alphaTest > 0))
    ) {
      const I = k.uuid,
        W = w.uuid;
      let X = u[I];
      X === void 0 && ((X = {}), (u[I] = X));
      let Z = X[W];
      (Z === void 0 && ((Z = k.clone()), (X[W] = Z)), (k = Z));
    }
    if (
      ((k.visible = w.visible),
      (k.wireframe = w.wireframe),
      D === Gr
        ? (k.side = w.shadowSide !== null ? w.shadowSide : w.side)
        : (k.side = w.shadowSide !== null ? w.shadowSide : f[w.side]),
      (k.alphaMap = w.alphaMap),
      (k.alphaTest = w.alphaTest),
      (k.map = w.map),
      (k.clipShadows = w.clipShadows),
      (k.clippingPlanes = w.clippingPlanes),
      (k.clipIntersection = w.clipIntersection),
      (k.displacementMap = w.displacementMap),
      (k.displacementScale = w.displacementScale),
      (k.displacementBias = w.displacementBias),
      (k.wireframeLinewidth = w.wireframeLinewidth),
      (k.linewidth = w.linewidth),
      S.isPointLight === !0 && k.isMeshDistanceMaterial === !0)
    ) {
      const I = t.properties.get(k);
      I.light = S;
    }
    return k;
  }
  function x(C, w, S, D, k) {
    if (C.visible === !1) return;
    if (
      C.layers.test(w.layers) &&
      (C.isMesh || C.isLine || C.isPoints) &&
      (C.castShadow || (C.receiveShadow && k === Gr)) &&
      (!C.frustumCulled || r.intersectsObject(C))
    ) {
      C.modelViewMatrix.multiplyMatrices(S.matrixWorldInverse, C.matrixWorld);
      const W = e.update(C),
        X = C.material;
      if (Array.isArray(X)) {
        const Z = W.groups;
        for (let G = 0, $ = Z.length; G < $; G++) {
          const ne = Z[G],
            U = X[ne.materialIndex];
          if (U && U.visible) {
            const ie = y(C, U, D, k);
            t.renderBufferDirect(S, null, W, ie, C, ne);
          }
        }
      } else if (X.visible) {
        const Z = y(C, X, D, k);
        t.renderBufferDirect(S, null, W, Z, C, null);
      }
    }
    const I = C.children;
    for (let W = 0, X = I.length; W < X; W++) x(I[W], w, S, D, k);
  }
}
function QL(t, e, n) {
  const r = n.isWebGL2;
  function i() {
    let ee = !1;
    const Ne = new Ut();
    let ve = null;
    const Le = new Ut(0, 0, 0, 0);
    return {
      setMask: function (ze) {
        ve !== ze && !ee && (t.colorMask(ze, ze, ze, ze), (ve = ze));
      },
      setLocked: function (ze) {
        ee = ze;
      },
      setClear: function (ze, dt, St, Rt, zn) {
        (zn === !0 && ((ze *= Rt), (dt *= Rt), (St *= Rt)),
          Ne.set(ze, dt, St, Rt),
          Le.equals(Ne) === !1 && (t.clearColor(ze, dt, St, Rt), Le.copy(Ne)));
      },
      reset: function () {
        ((ee = !1), (ve = null), Le.set(-1, 0, 0, 0));
      },
    };
  }
  function o() {
    let ee = !1,
      Ne = null,
      ve = null,
      Le = null;
    return {
      setTest: function (ze) {
        ze ? oe(t.DEPTH_TEST) : me(t.DEPTH_TEST);
      },
      setMask: function (ze) {
        Ne !== ze && !ee && (t.depthMask(ze), (Ne = ze));
      },
      setFunc: function (ze) {
        if (ve !== ze) {
          switch (ze) {
            case b5:
              t.depthFunc(t.NEVER);
              break;
            case y5:
              t.depthFunc(t.ALWAYS);
              break;
            case x5:
              t.depthFunc(t.LESS);
              break;
            case ad:
              t.depthFunc(t.LEQUAL);
              break;
            case _5:
              t.depthFunc(t.EQUAL);
              break;
            case w5:
              t.depthFunc(t.GEQUAL);
              break;
            case k5:
              t.depthFunc(t.GREATER);
              break;
            case S5:
              t.depthFunc(t.NOTEQUAL);
              break;
            default:
              t.depthFunc(t.LEQUAL);
          }
          ve = ze;
        }
      },
      setLocked: function (ze) {
        ee = ze;
      },
      setClear: function (ze) {
        Le !== ze && (t.clearDepth(ze), (Le = ze));
      },
      reset: function () {
        ((ee = !1), (Ne = null), (ve = null), (Le = null));
      },
    };
  }
  function s() {
    let ee = !1,
      Ne = null,
      ve = null,
      Le = null,
      ze = null,
      dt = null,
      St = null,
      Rt = null,
      zn = null;
    return {
      setTest: function (Ot) {
        ee || (Ot ? oe(t.STENCIL_TEST) : me(t.STENCIL_TEST));
      },
      setMask: function (Ot) {
        Ne !== Ot && !ee && (t.stencilMask(Ot), (Ne = Ot));
      },
      setFunc: function (Ot, kr, _n) {
        (ve !== Ot || Le !== kr || ze !== _n) &&
          (t.stencilFunc(Ot, kr, _n), (ve = Ot), (Le = kr), (ze = _n));
      },
      setOp: function (Ot, kr, _n) {
        (dt !== Ot || St !== kr || Rt !== _n) &&
          (t.stencilOp(Ot, kr, _n), (dt = Ot), (St = kr), (Rt = _n));
      },
      setLocked: function (Ot) {
        ee = Ot;
      },
      setClear: function (Ot) {
        zn !== Ot && (t.clearStencil(Ot), (zn = Ot));
      },
      reset: function () {
        ((ee = !1),
          (Ne = null),
          (ve = null),
          (Le = null),
          (ze = null),
          (dt = null),
          (St = null),
          (Rt = null),
          (zn = null));
      },
    };
  }
  const a = new i(),
    c = new o(),
    u = new s(),
    d = new WeakMap(),
    f = new WeakMap();
  let p = {},
    h = {},
    v = new WeakMap(),
    b = [],
    g = null,
    m = !1,
    _ = null,
    y = null,
    x = null,
    C = null,
    w = null,
    S = null,
    D = null,
    k = !1,
    P = null,
    I = null,
    W = null,
    X = null,
    Z = null;
  const G = t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);
  let $ = !1,
    ne = 0;
  const U = t.getParameter(t.VERSION);
  U.indexOf("WebGL") !== -1
    ? ((ne = parseFloat(/^WebGL (\d)/.exec(U)[1])), ($ = ne >= 1))
    : U.indexOf("OpenGL ES") !== -1 &&
      ((ne = parseFloat(/^OpenGL ES (\d)/.exec(U)[1])), ($ = ne >= 2));
  let ie = null,
    J = {};
  const V = t.getParameter(t.SCISSOR_BOX),
    re = t.getParameter(t.VIEWPORT),
    Ee = new Ut().fromArray(V),
    Pe = new Ut().fromArray(re);
  function be(ee, Ne, ve, Le) {
    const ze = new Uint8Array(4),
      dt = t.createTexture();
    (t.bindTexture(ee, dt),
      t.texParameteri(ee, t.TEXTURE_MIN_FILTER, t.NEAREST),
      t.texParameteri(ee, t.TEXTURE_MAG_FILTER, t.NEAREST));
    for (let St = 0; St < ve; St++)
      r && (ee === t.TEXTURE_3D || ee === t.TEXTURE_2D_ARRAY)
        ? t.texImage3D(Ne, 0, t.RGBA, 1, 1, Le, 0, t.RGBA, t.UNSIGNED_BYTE, ze)
        : t.texImage2D(
            Ne + St,
            0,
            t.RGBA,
            1,
            1,
            0,
            t.RGBA,
            t.UNSIGNED_BYTE,
            ze,
          );
    return dt;
  }
  const ce = {};
  ((ce[t.TEXTURE_2D] = be(t.TEXTURE_2D, t.TEXTURE_2D, 1)),
    (ce[t.TEXTURE_CUBE_MAP] = be(
      t.TEXTURE_CUBE_MAP,
      t.TEXTURE_CUBE_MAP_POSITIVE_X,
      6,
    )),
    r &&
      ((ce[t.TEXTURE_2D_ARRAY] = be(
        t.TEXTURE_2D_ARRAY,
        t.TEXTURE_2D_ARRAY,
        1,
        1,
      )),
      (ce[t.TEXTURE_3D] = be(t.TEXTURE_3D, t.TEXTURE_3D, 1, 1))),
    a.setClear(0, 0, 0, 1),
    c.setClear(1),
    u.setClear(0),
    oe(t.DEPTH_TEST),
    c.setFunc(ad),
    te(!1),
    q(lh),
    oe(t.CULL_FACE),
    L(ti));
  function oe(ee) {
    p[ee] !== !0 && (t.enable(ee), (p[ee] = !0));
  }
  function me(ee) {
    p[ee] !== !1 && (t.disable(ee), (p[ee] = !1));
  }
  function ge(ee, Ne) {
    return h[ee] !== Ne
      ? (t.bindFramebuffer(ee, Ne),
        (h[ee] = Ne),
        r &&
          (ee === t.DRAW_FRAMEBUFFER && (h[t.FRAMEBUFFER] = Ne),
          ee === t.FRAMEBUFFER && (h[t.DRAW_FRAMEBUFFER] = Ne)),
        !0)
      : !1;
  }
  function Oe(ee, Ne) {
    let ve = b,
      Le = !1;
    if (ee)
      if (
        ((ve = v.get(Ne)),
        ve === void 0 && ((ve = []), v.set(Ne, ve)),
        ee.isWebGLMultipleRenderTargets)
      ) {
        const ze = ee.texture;
        if (ve.length !== ze.length || ve[0] !== t.COLOR_ATTACHMENT0) {
          for (let dt = 0, St = ze.length; dt < St; dt++)
            ve[dt] = t.COLOR_ATTACHMENT0 + dt;
          ((ve.length = ze.length), (Le = !0));
        }
      } else
        ve[0] !== t.COLOR_ATTACHMENT0 &&
          ((ve[0] = t.COLOR_ATTACHMENT0), (Le = !0));
    else ve[0] !== t.BACK && ((ve[0] = t.BACK), (Le = !0));
    Le &&
      (n.isWebGL2
        ? t.drawBuffers(ve)
        : e.get("WEBGL_draw_buffers").drawBuffersWEBGL(ve));
  }
  function He(ee) {
    return g !== ee ? (t.useProgram(ee), (g = ee), !0) : !1;
  }
  const A = {
    [Ho]: t.FUNC_ADD,
    [a5]: t.FUNC_SUBTRACT,
    [l5]: t.FUNC_REVERSE_SUBTRACT,
  };
  if (r) ((A[fh] = t.MIN), (A[ph] = t.MAX));
  else {
    const ee = e.get("EXT_blend_minmax");
    ee !== null && ((A[fh] = ee.MIN_EXT), (A[ph] = ee.MAX_EXT));
  }
  const j = {
    [c5]: t.ZERO,
    [u5]: t.ONE,
    [d5]: t.SRC_COLOR,
    [sv]: t.SRC_ALPHA,
    [v5]: t.SRC_ALPHA_SATURATE,
    [m5]: t.DST_COLOR,
    [p5]: t.DST_ALPHA,
    [f5]: t.ONE_MINUS_SRC_COLOR,
    [av]: t.ONE_MINUS_SRC_ALPHA,
    [g5]: t.ONE_MINUS_DST_COLOR,
    [h5]: t.ONE_MINUS_DST_ALPHA,
  };
  function L(ee, Ne, ve, Le, ze, dt, St, Rt) {
    if (ee === ti) {
      m === !0 && (me(t.BLEND), (m = !1));
      return;
    }
    if ((m === !1 && (oe(t.BLEND), (m = !0)), ee !== s5)) {
      if (ee !== _ || Rt !== k) {
        if (
          ((y !== Ho || w !== Ho) &&
            (t.blendEquation(t.FUNC_ADD), (y = Ho), (w = Ho)),
          Rt)
        )
          switch (ee) {
            case ts:
              t.blendFuncSeparate(
                t.ONE,
                t.ONE_MINUS_SRC_ALPHA,
                t.ONE,
                t.ONE_MINUS_SRC_ALPHA,
              );
              break;
            case ch:
              t.blendFunc(t.ONE, t.ONE);
              break;
            case uh:
              t.blendFuncSeparate(t.ZERO, t.ONE_MINUS_SRC_COLOR, t.ZERO, t.ONE);
              break;
            case dh:
              t.blendFuncSeparate(t.ZERO, t.SRC_COLOR, t.ZERO, t.SRC_ALPHA);
              break;
            default:
              console.error("THREE.WebGLState: Invalid blending: ", ee);
              break;
          }
        else
          switch (ee) {
            case ts:
              t.blendFuncSeparate(
                t.SRC_ALPHA,
                t.ONE_MINUS_SRC_ALPHA,
                t.ONE,
                t.ONE_MINUS_SRC_ALPHA,
              );
              break;
            case ch:
              t.blendFunc(t.SRC_ALPHA, t.ONE);
              break;
            case uh:
              t.blendFuncSeparate(t.ZERO, t.ONE_MINUS_SRC_COLOR, t.ZERO, t.ONE);
              break;
            case dh:
              t.blendFunc(t.ZERO, t.SRC_COLOR);
              break;
            default:
              console.error("THREE.WebGLState: Invalid blending: ", ee);
              break;
          }
        ((x = null), (C = null), (S = null), (D = null), (_ = ee), (k = Rt));
      }
      return;
    }
    ((ze = ze || Ne),
      (dt = dt || ve),
      (St = St || Le),
      (Ne !== y || ze !== w) &&
        (t.blendEquationSeparate(A[Ne], A[ze]), (y = Ne), (w = ze)),
      (ve !== x || Le !== C || dt !== S || St !== D) &&
        (t.blendFuncSeparate(j[ve], j[Le], j[dt], j[St]),
        (x = ve),
        (C = Le),
        (S = dt),
        (D = St)),
      (_ = ee),
      (k = !1));
  }
  function F(ee, Ne) {
    ee.side === rr ? me(t.CULL_FACE) : oe(t.CULL_FACE);
    let ve = ee.side === $n;
    (Ne && (ve = !ve),
      te(ve),
      ee.blending === ts && ee.transparent === !1
        ? L(ti)
        : L(
            ee.blending,
            ee.blendEquation,
            ee.blendSrc,
            ee.blendDst,
            ee.blendEquationAlpha,
            ee.blendSrcAlpha,
            ee.blendDstAlpha,
            ee.premultipliedAlpha,
          ),
      c.setFunc(ee.depthFunc),
      c.setTest(ee.depthTest),
      c.setMask(ee.depthWrite),
      a.setMask(ee.colorWrite));
    const Le = ee.stencilWrite;
    (u.setTest(Le),
      Le &&
        (u.setMask(ee.stencilWriteMask),
        u.setFunc(ee.stencilFunc, ee.stencilRef, ee.stencilFuncMask),
        u.setOp(ee.stencilFail, ee.stencilZFail, ee.stencilZPass)),
      xe(ee.polygonOffset, ee.polygonOffsetFactor, ee.polygonOffsetUnits),
      ee.alphaToCoverage === !0
        ? oe(t.SAMPLE_ALPHA_TO_COVERAGE)
        : me(t.SAMPLE_ALPHA_TO_COVERAGE));
  }
  function te(ee) {
    P !== ee && (ee ? t.frontFace(t.CW) : t.frontFace(t.CCW), (P = ee));
  }
  function q(ee) {
    (ee !== r5
      ? (oe(t.CULL_FACE),
        ee !== I &&
          (ee === lh
            ? t.cullFace(t.BACK)
            : ee === i5
              ? t.cullFace(t.FRONT)
              : t.cullFace(t.FRONT_AND_BACK)))
      : me(t.CULL_FACE),
      (I = ee));
  }
  function ye(ee) {
    ee !== W && ($ && t.lineWidth(ee), (W = ee));
  }
  function xe(ee, Ne, ve) {
    ee
      ? (oe(t.POLYGON_OFFSET_FILL),
        (X !== Ne || Z !== ve) && (t.polygonOffset(Ne, ve), (X = Ne), (Z = ve)))
      : me(t.POLYGON_OFFSET_FILL);
  }
  function Se(ee) {
    ee ? oe(t.SCISSOR_TEST) : me(t.SCISSOR_TEST);
  }
  function Me(ee) {
    (ee === void 0 && (ee = t.TEXTURE0 + G - 1),
      ie !== ee && (t.activeTexture(ee), (ie = ee)));
  }
  function ae(ee, Ne, ve) {
    ve === void 0 && (ie === null ? (ve = t.TEXTURE0 + G - 1) : (ve = ie));
    let Le = J[ve];
    (Le === void 0 && ((Le = { type: void 0, texture: void 0 }), (J[ve] = Le)),
      (Le.type !== ee || Le.texture !== Ne) &&
        (ie !== ve && (t.activeTexture(ve), (ie = ve)),
        t.bindTexture(ee, Ne || ce[ee]),
        (Le.type = ee),
        (Le.texture = Ne)));
  }
  function M() {
    const ee = J[ie];
    ee !== void 0 &&
      ee.type !== void 0 &&
      (t.bindTexture(ee.type, null), (ee.type = void 0), (ee.texture = void 0));
  }
  function T() {
    try {
      t.compressedTexImage2D.apply(t, arguments);
    } catch (ee) {
      console.error("THREE.WebGLState:", ee);
    }
  }
  function K() {
    try {
      t.compressedTexImage3D.apply(t, arguments);
    } catch (ee) {
      console.error("THREE.WebGLState:", ee);
    }
  }
  function ue() {
    try {
      t.texSubImage2D.apply(t, arguments);
    } catch (ee) {
      console.error("THREE.WebGLState:", ee);
    }
  }
  function he() {
    try {
      t.texSubImage3D.apply(t, arguments);
    } catch (ee) {
      console.error("THREE.WebGLState:", ee);
    }
  }
  function _e() {
    try {
      t.compressedTexSubImage2D.apply(t, arguments);
    } catch (ee) {
      console.error("THREE.WebGLState:", ee);
    }
  }
  function je() {
    try {
      t.compressedTexSubImage3D.apply(t, arguments);
    } catch (ee) {
      console.error("THREE.WebGLState:", ee);
    }
  }
  function Ae() {
    try {
      t.texStorage2D.apply(t, arguments);
    } catch (ee) {
      console.error("THREE.WebGLState:", ee);
    }
  }
  function de() {
    try {
      t.texStorage3D.apply(t, arguments);
    } catch (ee) {
      console.error("THREE.WebGLState:", ee);
    }
  }
  function Y() {
    try {
      t.texImage2D.apply(t, arguments);
    } catch (ee) {
      console.error("THREE.WebGLState:", ee);
    }
  }
  function Te() {
    try {
      t.texImage3D.apply(t, arguments);
    } catch (ee) {
      console.error("THREE.WebGLState:", ee);
    }
  }
  function Fe(ee) {
    Ee.equals(ee) === !1 && (t.scissor(ee.x, ee.y, ee.z, ee.w), Ee.copy(ee));
  }
  function Re(ee) {
    Pe.equals(ee) === !1 && (t.viewport(ee.x, ee.y, ee.z, ee.w), Pe.copy(ee));
  }
  function $e(ee, Ne) {
    let ve = f.get(Ne);
    ve === void 0 && ((ve = new WeakMap()), f.set(Ne, ve));
    let Le = ve.get(ee);
    Le === void 0 &&
      ((Le = t.getUniformBlockIndex(Ne, ee.name)), ve.set(ee, Le));
  }
  function Qe(ee, Ne) {
    const Le = f.get(Ne).get(ee);
    d.get(Ne) !== Le &&
      (t.uniformBlockBinding(Ne, Le, ee.__bindingPointIndex), d.set(Ne, Le));
  }
  function gt() {
    (t.disable(t.BLEND),
      t.disable(t.CULL_FACE),
      t.disable(t.DEPTH_TEST),
      t.disable(t.POLYGON_OFFSET_FILL),
      t.disable(t.SCISSOR_TEST),
      t.disable(t.STENCIL_TEST),
      t.disable(t.SAMPLE_ALPHA_TO_COVERAGE),
      t.blendEquation(t.FUNC_ADD),
      t.blendFunc(t.ONE, t.ZERO),
      t.blendFuncSeparate(t.ONE, t.ZERO, t.ONE, t.ZERO),
      t.colorMask(!0, !0, !0, !0),
      t.clearColor(0, 0, 0, 0),
      t.depthMask(!0),
      t.depthFunc(t.LESS),
      t.clearDepth(1),
      t.stencilMask(4294967295),
      t.stencilFunc(t.ALWAYS, 0, 4294967295),
      t.stencilOp(t.KEEP, t.KEEP, t.KEEP),
      t.clearStencil(0),
      t.cullFace(t.BACK),
      t.frontFace(t.CCW),
      t.polygonOffset(0, 0),
      t.activeTexture(t.TEXTURE0),
      t.bindFramebuffer(t.FRAMEBUFFER, null),
      r === !0 &&
        (t.bindFramebuffer(t.DRAW_FRAMEBUFFER, null),
        t.bindFramebuffer(t.READ_FRAMEBUFFER, null)),
      t.useProgram(null),
      t.lineWidth(1),
      t.scissor(0, 0, t.canvas.width, t.canvas.height),
      t.viewport(0, 0, t.canvas.width, t.canvas.height),
      (p = {}),
      (ie = null),
      (J = {}),
      (h = {}),
      (v = new WeakMap()),
      (b = []),
      (g = null),
      (m = !1),
      (_ = null),
      (y = null),
      (x = null),
      (C = null),
      (w = null),
      (S = null),
      (D = null),
      (k = !1),
      (P = null),
      (I = null),
      (W = null),
      (X = null),
      (Z = null),
      Ee.set(0, 0, t.canvas.width, t.canvas.height),
      Pe.set(0, 0, t.canvas.width, t.canvas.height),
      a.reset(),
      c.reset(),
      u.reset());
  }
  return {
    buffers: { color: a, depth: c, stencil: u },
    enable: oe,
    disable: me,
    bindFramebuffer: ge,
    drawBuffers: Oe,
    useProgram: He,
    setBlending: L,
    setMaterial: F,
    setFlipSided: te,
    setCullFace: q,
    setLineWidth: ye,
    setPolygonOffset: xe,
    setScissorTest: Se,
    activeTexture: Me,
    bindTexture: ae,
    unbindTexture: M,
    compressedTexImage2D: T,
    compressedTexImage3D: K,
    texImage2D: Y,
    texImage3D: Te,
    updateUBOMapping: $e,
    uniformBlockBinding: Qe,
    texStorage2D: Ae,
    texStorage3D: de,
    texSubImage2D: ue,
    texSubImage3D: he,
    compressedTexSubImage2D: _e,
    compressedTexSubImage3D: je,
    scissor: Fe,
    viewport: Re,
    reset: gt,
  };
}
function eD(t, e, n, r, i, o, s) {
  const a = i.isWebGL2,
    c = i.maxTextures,
    u = i.maxCubemapSize,
    d = i.maxTextureSize,
    f = i.maxSamples,
    p = e.has("WEBGL_multisampled_render_to_texture")
      ? e.get("WEBGL_multisampled_render_to_texture")
      : null,
    h =
      typeof navigator > "u" ? !1 : /OculusBrowser/g.test(navigator.userAgent),
    v = new WeakMap();
  let b;
  const g = new WeakMap();
  let m = !1;
  try {
    m =
      typeof OffscreenCanvas < "u" &&
      new OffscreenCanvas(1, 1).getContext("2d") !== null;
  } catch {}
  function _(M, T) {
    return m ? new OffscreenCanvas(M, T) : nc("canvas");
  }
  function y(M, T, K, ue) {
    let he = 1;
    if (
      ((M.width > ue || M.height > ue) &&
        (he = ue / Math.max(M.width, M.height)),
      he < 1 || T === !0)
    )
      if (
        (typeof HTMLImageElement < "u" && M instanceof HTMLImageElement) ||
        (typeof HTMLCanvasElement < "u" && M instanceof HTMLCanvasElement) ||
        (typeof ImageBitmap < "u" && M instanceof ImageBitmap)
      ) {
        const _e = T ? hd : Math.floor,
          je = _e(he * M.width),
          Ae = _e(he * M.height);
        b === void 0 && (b = _(je, Ae));
        const de = K ? _(je, Ae) : b;
        return (
          (de.width = je),
          (de.height = Ae),
          de.getContext("2d").drawImage(M, 0, 0, je, Ae),
          console.warn(
            "THREE.WebGLRenderer: Texture has been resized from (" +
              M.width +
              "x" +
              M.height +
              ") to (" +
              je +
              "x" +
              Ae +
              ").",
          ),
          de
        );
      } else
        return (
          "data" in M &&
            console.warn(
              "THREE.WebGLRenderer: Image in DataTexture is too big (" +
                M.width +
                "x" +
                M.height +
                ").",
            ),
          M
        );
    return M;
  }
  function x(M) {
    return Nh(M.width) && Nh(M.height);
  }
  function C(M) {
    return a
      ? !1
      : M.wrapS !== mr ||
          M.wrapT !== mr ||
          (M.minFilter !== Ht && M.minFilter !== tr);
  }
  function w(M, T) {
    return M.generateMipmaps && T && M.minFilter !== Ht && M.minFilter !== tr;
  }
  function S(M) {
    t.generateMipmap(M);
  }
  function D(M, T, K, ue, he = !1) {
    if (a === !1) return T;
    if (M !== null) {
      if (t[M] !== void 0) return t[M];
      console.warn(
        "THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" +
          M +
          "'",
      );
    }
    let _e = T;
    return (
      T === t.RED &&
        (K === t.FLOAT && (_e = t.R32F),
        K === t.HALF_FLOAT && (_e = t.R16F),
        K === t.UNSIGNED_BYTE && (_e = t.R8)),
      T === t.RED_INTEGER &&
        (K === t.UNSIGNED_BYTE && (_e = t.R8UI),
        K === t.UNSIGNED_SHORT && (_e = t.R16UI),
        K === t.UNSIGNED_INT && (_e = t.R32UI),
        K === t.BYTE && (_e = t.R8I),
        K === t.SHORT && (_e = t.R16I),
        K === t.INT && (_e = t.R32I)),
      T === t.RG &&
        (K === t.FLOAT && (_e = t.RG32F),
        K === t.HALF_FLOAT && (_e = t.RG16F),
        K === t.UNSIGNED_BYTE && (_e = t.RG8)),
      T === t.RGBA &&
        (K === t.FLOAT && (_e = t.RGBA32F),
        K === t.HALF_FLOAT && (_e = t.RGBA16F),
        K === t.UNSIGNED_BYTE &&
          (_e = ue === Bt && he === !1 ? t.SRGB8_ALPHA8 : t.RGBA8),
        K === t.UNSIGNED_SHORT_4_4_4_4 && (_e = t.RGBA4),
        K === t.UNSIGNED_SHORT_5_5_5_1 && (_e = t.RGB5_A1)),
      (_e === t.R16F ||
        _e === t.R32F ||
        _e === t.RG16F ||
        _e === t.RG32F ||
        _e === t.RGBA16F ||
        _e === t.RGBA32F) &&
        e.get("EXT_color_buffer_float"),
      _e
    );
  }
  function k(M, T, K) {
    return w(M, K) === !0 ||
      (M.isFramebufferTexture && M.minFilter !== Ht && M.minFilter !== tr)
      ? Math.log2(Math.max(T.width, T.height)) + 1
      : M.mipmaps !== void 0 && M.mipmaps.length > 0
        ? M.mipmaps.length
        : M.isCompressedTexture && Array.isArray(M.image)
          ? T.mipmaps.length
          : 1;
  }
  function P(M) {
    return M === Ht || M === hh || M === tu ? t.NEAREST : t.LINEAR;
  }
  function I(M) {
    const T = M.target;
    (T.removeEventListener("dispose", I),
      X(T),
      T.isVideoTexture && v.delete(T));
  }
  function W(M) {
    const T = M.target;
    (T.removeEventListener("dispose", W), G(T));
  }
  function X(M) {
    const T = r.get(M);
    if (T.__webglInit === void 0) return;
    const K = M.source,
      ue = g.get(K);
    if (ue) {
      const he = ue[T.__cacheKey];
      (he.usedTimes--,
        he.usedTimes === 0 && Z(M),
        Object.keys(ue).length === 0 && g.delete(K));
    }
    r.remove(M);
  }
  function Z(M) {
    const T = r.get(M);
    t.deleteTexture(T.__webglTexture);
    const K = M.source,
      ue = g.get(K);
    (delete ue[T.__cacheKey], s.memory.textures--);
  }
  function G(M) {
    const T = M.texture,
      K = r.get(M),
      ue = r.get(T);
    if (
      (ue.__webglTexture !== void 0 &&
        (t.deleteTexture(ue.__webglTexture), s.memory.textures--),
      M.depthTexture && M.depthTexture.dispose(),
      M.isWebGLCubeRenderTarget)
    )
      for (let he = 0; he < 6; he++) {
        if (Array.isArray(K.__webglFramebuffer[he]))
          for (let _e = 0; _e < K.__webglFramebuffer[he].length; _e++)
            t.deleteFramebuffer(K.__webglFramebuffer[he][_e]);
        else t.deleteFramebuffer(K.__webglFramebuffer[he]);
        K.__webglDepthbuffer && t.deleteRenderbuffer(K.__webglDepthbuffer[he]);
      }
    else {
      if (Array.isArray(K.__webglFramebuffer))
        for (let he = 0; he < K.__webglFramebuffer.length; he++)
          t.deleteFramebuffer(K.__webglFramebuffer[he]);
      else t.deleteFramebuffer(K.__webglFramebuffer);
      if (
        (K.__webglDepthbuffer && t.deleteRenderbuffer(K.__webglDepthbuffer),
        K.__webglMultisampledFramebuffer &&
          t.deleteFramebuffer(K.__webglMultisampledFramebuffer),
        K.__webglColorRenderbuffer)
      )
        for (let he = 0; he < K.__webglColorRenderbuffer.length; he++)
          K.__webglColorRenderbuffer[he] &&
            t.deleteRenderbuffer(K.__webglColorRenderbuffer[he]);
      K.__webglDepthRenderbuffer &&
        t.deleteRenderbuffer(K.__webglDepthRenderbuffer);
    }
    if (M.isWebGLMultipleRenderTargets)
      for (let he = 0, _e = T.length; he < _e; he++) {
        const je = r.get(T[he]);
        (je.__webglTexture &&
          (t.deleteTexture(je.__webglTexture), s.memory.textures--),
          r.remove(T[he]));
      }
    (r.remove(T), r.remove(M));
  }
  let $ = 0;
  function ne() {
    $ = 0;
  }
  function U() {
    const M = $;
    return (
      M >= c &&
        console.warn(
          "THREE.WebGLTextures: Trying to use " +
            M +
            " texture units while this GPU supports only " +
            c,
        ),
      ($ += 1),
      M
    );
  }
  function ie(M) {
    const T = [];
    return (
      T.push(M.wrapS),
      T.push(M.wrapT),
      T.push(M.wrapR || 0),
      T.push(M.magFilter),
      T.push(M.minFilter),
      T.push(M.anisotropy),
      T.push(M.internalFormat),
      T.push(M.format),
      T.push(M.type),
      T.push(M.generateMipmaps),
      T.push(M.premultiplyAlpha),
      T.push(M.flipY),
      T.push(M.unpackAlignment),
      T.push(M.colorSpace),
      T.join()
    );
  }
  function J(M, T) {
    const K = r.get(M);
    if (
      (M.isVideoTexture && Me(M),
      M.isRenderTargetTexture === !1 &&
        M.version > 0 &&
        K.__version !== M.version)
    ) {
      const ue = M.image;
      if (ue === null)
        console.warn(
          "THREE.WebGLRenderer: Texture marked for update but no image data found.",
        );
      else if (ue.complete === !1)
        console.warn(
          "THREE.WebGLRenderer: Texture marked for update but image is incomplete",
        );
      else {
        ge(K, M, T);
        return;
      }
    }
    n.bindTexture(t.TEXTURE_2D, K.__webglTexture, t.TEXTURE0 + T);
  }
  function V(M, T) {
    const K = r.get(M);
    if (M.version > 0 && K.__version !== M.version) {
      ge(K, M, T);
      return;
    }
    n.bindTexture(t.TEXTURE_2D_ARRAY, K.__webglTexture, t.TEXTURE0 + T);
  }
  function re(M, T) {
    const K = r.get(M);
    if (M.version > 0 && K.__version !== M.version) {
      ge(K, M, T);
      return;
    }
    n.bindTexture(t.TEXTURE_3D, K.__webglTexture, t.TEXTURE0 + T);
  }
  function Ee(M, T) {
    const K = r.get(M);
    if (M.version > 0 && K.__version !== M.version) {
      Oe(K, M, T);
      return;
    }
    n.bindTexture(t.TEXTURE_CUBE_MAP, K.__webglTexture, t.TEXTURE0 + T);
  }
  const Pe = { [cd]: t.REPEAT, [mr]: t.CLAMP_TO_EDGE, [ud]: t.MIRRORED_REPEAT },
    be = {
      [Ht]: t.NEAREST,
      [hh]: t.NEAREST_MIPMAP_NEAREST,
      [tu]: t.NEAREST_MIPMAP_LINEAR,
      [tr]: t.LINEAR,
      [L5]: t.LINEAR_MIPMAP_NEAREST,
      [wa]: t.LINEAR_MIPMAP_LINEAR,
    },
    ce = {
      [W5]: t.NEVER,
      [Q5]: t.ALWAYS,
      [K5]: t.LESS,
      [Y5]: t.LEQUAL,
      [X5]: t.EQUAL,
      [J5]: t.GEQUAL,
      [q5]: t.GREATER,
      [Z5]: t.NOTEQUAL,
    };
  function oe(M, T, K) {
    if (
      (K
        ? (t.texParameteri(M, t.TEXTURE_WRAP_S, Pe[T.wrapS]),
          t.texParameteri(M, t.TEXTURE_WRAP_T, Pe[T.wrapT]),
          (M === t.TEXTURE_3D || M === t.TEXTURE_2D_ARRAY) &&
            t.texParameteri(M, t.TEXTURE_WRAP_R, Pe[T.wrapR]),
          t.texParameteri(M, t.TEXTURE_MAG_FILTER, be[T.magFilter]),
          t.texParameteri(M, t.TEXTURE_MIN_FILTER, be[T.minFilter]))
        : (t.texParameteri(M, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE),
          t.texParameteri(M, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE),
          (M === t.TEXTURE_3D || M === t.TEXTURE_2D_ARRAY) &&
            t.texParameteri(M, t.TEXTURE_WRAP_R, t.CLAMP_TO_EDGE),
          (T.wrapS !== mr || T.wrapT !== mr) &&
            console.warn(
              "THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",
            ),
          t.texParameteri(M, t.TEXTURE_MAG_FILTER, P(T.magFilter)),
          t.texParameteri(M, t.TEXTURE_MIN_FILTER, P(T.minFilter)),
          T.minFilter !== Ht &&
            T.minFilter !== tr &&
            console.warn(
              "THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",
            )),
      T.compareFunction &&
        (t.texParameteri(M, t.TEXTURE_COMPARE_MODE, t.COMPARE_REF_TO_TEXTURE),
        t.texParameteri(M, t.TEXTURE_COMPARE_FUNC, ce[T.compareFunction])),
      e.has("EXT_texture_filter_anisotropic") === !0)
    ) {
      const ue = e.get("EXT_texture_filter_anisotropic");
      if (
        T.magFilter === Ht ||
        (T.minFilter !== tu && T.minFilter !== wa) ||
        (T.type === Jr && e.has("OES_texture_float_linear") === !1) ||
        (a === !1 &&
          T.type === ls &&
          e.has("OES_texture_half_float_linear") === !1)
      )
        return;
      (T.anisotropy > 1 || r.get(T).__currentAnisotropy) &&
        (t.texParameterf(
          M,
          ue.TEXTURE_MAX_ANISOTROPY_EXT,
          Math.min(T.anisotropy, i.getMaxAnisotropy()),
        ),
        (r.get(T).__currentAnisotropy = T.anisotropy));
    }
  }
  function me(M, T) {
    let K = !1;
    M.__webglInit === void 0 &&
      ((M.__webglInit = !0), T.addEventListener("dispose", I));
    const ue = T.source;
    let he = g.get(ue);
    he === void 0 && ((he = {}), g.set(ue, he));
    const _e = ie(T);
    if (_e !== M.__cacheKey) {
      (he[_e] === void 0 &&
        ((he[_e] = { texture: t.createTexture(), usedTimes: 0 }),
        s.memory.textures++,
        (K = !0)),
        he[_e].usedTimes++);
      const je = he[M.__cacheKey];
      (je !== void 0 &&
        (he[M.__cacheKey].usedTimes--, je.usedTimes === 0 && Z(T)),
        (M.__cacheKey = _e),
        (M.__webglTexture = he[_e].texture));
    }
    return K;
  }
  function ge(M, T, K) {
    let ue = t.TEXTURE_2D;
    ((T.isDataArrayTexture || T.isCompressedArrayTexture) &&
      (ue = t.TEXTURE_2D_ARRAY),
      T.isData3DTexture && (ue = t.TEXTURE_3D));
    const he = me(M, T),
      _e = T.source;
    n.bindTexture(ue, M.__webglTexture, t.TEXTURE0 + K);
    const je = r.get(_e);
    if (_e.version !== je.__version || he === !0) {
      (n.activeTexture(t.TEXTURE0 + K),
        t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, T.flipY),
        t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, T.premultiplyAlpha),
        t.pixelStorei(t.UNPACK_ALIGNMENT, T.unpackAlignment),
        t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL, t.NONE));
      const Ae = C(T) && x(T.image) === !1;
      let de = y(T.image, Ae, !1, d);
      de = ae(T, de);
      const Y = x(de) || a,
        Te = o.convert(T.format, T.colorSpace);
      let Fe = o.convert(T.type),
        Re = D(T.internalFormat, Te, Fe, T.colorSpace, T.isVideoTexture);
      oe(ue, T, Y);
      let $e;
      const Qe = T.mipmaps,
        gt = a && T.isVideoTexture !== !0,
        ee = je.__version === void 0 || he === !0,
        Ne = k(T, de, Y);
      if (T.isDepthTexture)
        ((Re = t.DEPTH_COMPONENT),
          a
            ? T.type === Jr
              ? (Re = t.DEPTH_COMPONENT32F)
              : T.type === Mi
                ? (Re = t.DEPTH_COMPONENT24)
                : T.type === ro
                  ? (Re = t.DEPTH24_STENCIL8)
                  : (Re = t.DEPTH_COMPONENT16)
            : T.type === Jr &&
              console.error(
                "WebGLRenderer: Floating point depth texture requires WebGL2.",
              ),
          T.format === io &&
            Re === t.DEPTH_COMPONENT &&
            T.type !== of &&
            T.type !== Mi &&
            (console.warn(
              "THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.",
            ),
            (T.type = Mi),
            (Fe = o.convert(T.type))),
          T.format === cs &&
            Re === t.DEPTH_COMPONENT &&
            ((Re = t.DEPTH_STENCIL),
            T.type !== ro &&
              (console.warn(
                "THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.",
              ),
              (T.type = ro),
              (Fe = o.convert(T.type)))),
          ee &&
            (gt
              ? n.texStorage2D(t.TEXTURE_2D, 1, Re, de.width, de.height)
              : n.texImage2D(
                  t.TEXTURE_2D,
                  0,
                  Re,
                  de.width,
                  de.height,
                  0,
                  Te,
                  Fe,
                  null,
                )));
      else if (T.isDataTexture)
        if (Qe.length > 0 && Y) {
          gt &&
            ee &&
            n.texStorage2D(t.TEXTURE_2D, Ne, Re, Qe[0].width, Qe[0].height);
          for (let ve = 0, Le = Qe.length; ve < Le; ve++)
            (($e = Qe[ve]),
              gt
                ? n.texSubImage2D(
                    t.TEXTURE_2D,
                    ve,
                    0,
                    0,
                    $e.width,
                    $e.height,
                    Te,
                    Fe,
                    $e.data,
                  )
                : n.texImage2D(
                    t.TEXTURE_2D,
                    ve,
                    Re,
                    $e.width,
                    $e.height,
                    0,
                    Te,
                    Fe,
                    $e.data,
                  ));
          T.generateMipmaps = !1;
        } else
          gt
            ? (ee && n.texStorage2D(t.TEXTURE_2D, Ne, Re, de.width, de.height),
              n.texSubImage2D(
                t.TEXTURE_2D,
                0,
                0,
                0,
                de.width,
                de.height,
                Te,
                Fe,
                de.data,
              ))
            : n.texImage2D(
                t.TEXTURE_2D,
                0,
                Re,
                de.width,
                de.height,
                0,
                Te,
                Fe,
                de.data,
              );
      else if (T.isCompressedTexture)
        if (T.isCompressedArrayTexture) {
          gt &&
            ee &&
            n.texStorage3D(
              t.TEXTURE_2D_ARRAY,
              Ne,
              Re,
              Qe[0].width,
              Qe[0].height,
              de.depth,
            );
          for (let ve = 0, Le = Qe.length; ve < Le; ve++)
            (($e = Qe[ve]),
              T.format !== gr
                ? Te !== null
                  ? gt
                    ? n.compressedTexSubImage3D(
                        t.TEXTURE_2D_ARRAY,
                        ve,
                        0,
                        0,
                        0,
                        $e.width,
                        $e.height,
                        de.depth,
                        Te,
                        $e.data,
                        0,
                        0,
                      )
                    : n.compressedTexImage3D(
                        t.TEXTURE_2D_ARRAY,
                        ve,
                        Re,
                        $e.width,
                        $e.height,
                        de.depth,
                        0,
                        $e.data,
                        0,
                        0,
                      )
                  : console.warn(
                      "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()",
                    )
                : gt
                  ? n.texSubImage3D(
                      t.TEXTURE_2D_ARRAY,
                      ve,
                      0,
                      0,
                      0,
                      $e.width,
                      $e.height,
                      de.depth,
                      Te,
                      Fe,
                      $e.data,
                    )
                  : n.texImage3D(
                      t.TEXTURE_2D_ARRAY,
                      ve,
                      Re,
                      $e.width,
                      $e.height,
                      de.depth,
                      0,
                      Te,
                      Fe,
                      $e.data,
                    ));
        } else {
          gt &&
            ee &&
            n.texStorage2D(t.TEXTURE_2D, Ne, Re, Qe[0].width, Qe[0].height);
          for (let ve = 0, Le = Qe.length; ve < Le; ve++)
            (($e = Qe[ve]),
              T.format !== gr
                ? Te !== null
                  ? gt
                    ? n.compressedTexSubImage2D(
                        t.TEXTURE_2D,
                        ve,
                        0,
                        0,
                        $e.width,
                        $e.height,
                        Te,
                        $e.data,
                      )
                    : n.compressedTexImage2D(
                        t.TEXTURE_2D,
                        ve,
                        Re,
                        $e.width,
                        $e.height,
                        0,
                        $e.data,
                      )
                  : console.warn(
                      "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()",
                    )
                : gt
                  ? n.texSubImage2D(
                      t.TEXTURE_2D,
                      ve,
                      0,
                      0,
                      $e.width,
                      $e.height,
                      Te,
                      Fe,
                      $e.data,
                    )
                  : n.texImage2D(
                      t.TEXTURE_2D,
                      ve,
                      Re,
                      $e.width,
                      $e.height,
                      0,
                      Te,
                      Fe,
                      $e.data,
                    ));
        }
      else if (T.isDataArrayTexture)
        gt
          ? (ee &&
              n.texStorage3D(
                t.TEXTURE_2D_ARRAY,
                Ne,
                Re,
                de.width,
                de.height,
                de.depth,
              ),
            n.texSubImage3D(
              t.TEXTURE_2D_ARRAY,
              0,
              0,
              0,
              0,
              de.width,
              de.height,
              de.depth,
              Te,
              Fe,
              de.data,
            ))
          : n.texImage3D(
              t.TEXTURE_2D_ARRAY,
              0,
              Re,
              de.width,
              de.height,
              de.depth,
              0,
              Te,
              Fe,
              de.data,
            );
      else if (T.isData3DTexture)
        gt
          ? (ee &&
              n.texStorage3D(
                t.TEXTURE_3D,
                Ne,
                Re,
                de.width,
                de.height,
                de.depth,
              ),
            n.texSubImage3D(
              t.TEXTURE_3D,
              0,
              0,
              0,
              0,
              de.width,
              de.height,
              de.depth,
              Te,
              Fe,
              de.data,
            ))
          : n.texImage3D(
              t.TEXTURE_3D,
              0,
              Re,
              de.width,
              de.height,
              de.depth,
              0,
              Te,
              Fe,
              de.data,
            );
      else if (T.isFramebufferTexture) {
        if (ee)
          if (gt) n.texStorage2D(t.TEXTURE_2D, Ne, Re, de.width, de.height);
          else {
            let ve = de.width,
              Le = de.height;
            for (let ze = 0; ze < Ne; ze++)
              (n.texImage2D(t.TEXTURE_2D, ze, Re, ve, Le, 0, Te, Fe, null),
                (ve >>= 1),
                (Le >>= 1));
          }
      } else if (Qe.length > 0 && Y) {
        gt &&
          ee &&
          n.texStorage2D(t.TEXTURE_2D, Ne, Re, Qe[0].width, Qe[0].height);
        for (let ve = 0, Le = Qe.length; ve < Le; ve++)
          (($e = Qe[ve]),
            gt
              ? n.texSubImage2D(t.TEXTURE_2D, ve, 0, 0, Te, Fe, $e)
              : n.texImage2D(t.TEXTURE_2D, ve, Re, Te, Fe, $e));
        T.generateMipmaps = !1;
      } else
        gt
          ? (ee && n.texStorage2D(t.TEXTURE_2D, Ne, Re, de.width, de.height),
            n.texSubImage2D(t.TEXTURE_2D, 0, 0, 0, Te, Fe, de))
          : n.texImage2D(t.TEXTURE_2D, 0, Re, Te, Fe, de);
      (w(T, Y) && S(ue),
        (je.__version = _e.version),
        T.onUpdate && T.onUpdate(T));
    }
    M.__version = T.version;
  }
  function Oe(M, T, K) {
    if (T.image.length !== 6) return;
    const ue = me(M, T),
      he = T.source;
    n.bindTexture(t.TEXTURE_CUBE_MAP, M.__webglTexture, t.TEXTURE0 + K);
    const _e = r.get(he);
    if (he.version !== _e.__version || ue === !0) {
      (n.activeTexture(t.TEXTURE0 + K),
        t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, T.flipY),
        t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, T.premultiplyAlpha),
        t.pixelStorei(t.UNPACK_ALIGNMENT, T.unpackAlignment),
        t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL, t.NONE));
      const je = T.isCompressedTexture || T.image[0].isCompressedTexture,
        Ae = T.image[0] && T.image[0].isDataTexture,
        de = [];
      for (let ve = 0; ve < 6; ve++)
        (!je && !Ae
          ? (de[ve] = y(T.image[ve], !1, !0, u))
          : (de[ve] = Ae ? T.image[ve].image : T.image[ve]),
          (de[ve] = ae(T, de[ve])));
      const Y = de[0],
        Te = x(Y) || a,
        Fe = o.convert(T.format, T.colorSpace),
        Re = o.convert(T.type),
        $e = D(T.internalFormat, Fe, Re, T.colorSpace),
        Qe = a && T.isVideoTexture !== !0,
        gt = _e.__version === void 0 || ue === !0;
      let ee = k(T, Y, Te);
      oe(t.TEXTURE_CUBE_MAP, T, Te);
      let Ne;
      if (je) {
        Qe &&
          gt &&
          n.texStorage2D(t.TEXTURE_CUBE_MAP, ee, $e, Y.width, Y.height);
        for (let ve = 0; ve < 6; ve++) {
          Ne = de[ve].mipmaps;
          for (let Le = 0; Le < Ne.length; Le++) {
            const ze = Ne[Le];
            T.format !== gr
              ? Fe !== null
                ? Qe
                  ? n.compressedTexSubImage2D(
                      t.TEXTURE_CUBE_MAP_POSITIVE_X + ve,
                      Le,
                      0,
                      0,
                      ze.width,
                      ze.height,
                      Fe,
                      ze.data,
                    )
                  : n.compressedTexImage2D(
                      t.TEXTURE_CUBE_MAP_POSITIVE_X + ve,
                      Le,
                      $e,
                      ze.width,
                      ze.height,
                      0,
                      ze.data,
                    )
                : console.warn(
                    "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()",
                  )
              : Qe
                ? n.texSubImage2D(
                    t.TEXTURE_CUBE_MAP_POSITIVE_X + ve,
                    Le,
                    0,
                    0,
                    ze.width,
                    ze.height,
                    Fe,
                    Re,
                    ze.data,
                  )
                : n.texImage2D(
                    t.TEXTURE_CUBE_MAP_POSITIVE_X + ve,
                    Le,
                    $e,
                    ze.width,
                    ze.height,
                    0,
                    Fe,
                    Re,
                    ze.data,
                  );
          }
        }
      } else {
        ((Ne = T.mipmaps),
          Qe &&
            gt &&
            (Ne.length > 0 && ee++,
            n.texStorage2D(
              t.TEXTURE_CUBE_MAP,
              ee,
              $e,
              de[0].width,
              de[0].height,
            )));
        for (let ve = 0; ve < 6; ve++)
          if (Ae) {
            Qe
              ? n.texSubImage2D(
                  t.TEXTURE_CUBE_MAP_POSITIVE_X + ve,
                  0,
                  0,
                  0,
                  de[ve].width,
                  de[ve].height,
                  Fe,
                  Re,
                  de[ve].data,
                )
              : n.texImage2D(
                  t.TEXTURE_CUBE_MAP_POSITIVE_X + ve,
                  0,
                  $e,
                  de[ve].width,
                  de[ve].height,
                  0,
                  Fe,
                  Re,
                  de[ve].data,
                );
            for (let Le = 0; Le < Ne.length; Le++) {
              const dt = Ne[Le].image[ve].image;
              Qe
                ? n.texSubImage2D(
                    t.TEXTURE_CUBE_MAP_POSITIVE_X + ve,
                    Le + 1,
                    0,
                    0,
                    dt.width,
                    dt.height,
                    Fe,
                    Re,
                    dt.data,
                  )
                : n.texImage2D(
                    t.TEXTURE_CUBE_MAP_POSITIVE_X + ve,
                    Le + 1,
                    $e,
                    dt.width,
                    dt.height,
                    0,
                    Fe,
                    Re,
                    dt.data,
                  );
            }
          } else {
            Qe
              ? n.texSubImage2D(
                  t.TEXTURE_CUBE_MAP_POSITIVE_X + ve,
                  0,
                  0,
                  0,
                  Fe,
                  Re,
                  de[ve],
                )
              : n.texImage2D(
                  t.TEXTURE_CUBE_MAP_POSITIVE_X + ve,
                  0,
                  $e,
                  Fe,
                  Re,
                  de[ve],
                );
            for (let Le = 0; Le < Ne.length; Le++) {
              const ze = Ne[Le];
              Qe
                ? n.texSubImage2D(
                    t.TEXTURE_CUBE_MAP_POSITIVE_X + ve,
                    Le + 1,
                    0,
                    0,
                    Fe,
                    Re,
                    ze.image[ve],
                  )
                : n.texImage2D(
                    t.TEXTURE_CUBE_MAP_POSITIVE_X + ve,
                    Le + 1,
                    $e,
                    Fe,
                    Re,
                    ze.image[ve],
                  );
            }
          }
      }
      (w(T, Te) && S(t.TEXTURE_CUBE_MAP),
        (_e.__version = he.version),
        T.onUpdate && T.onUpdate(T));
    }
    M.__version = T.version;
  }
  function He(M, T, K, ue, he, _e) {
    const je = o.convert(K.format, K.colorSpace),
      Ae = o.convert(K.type),
      de = D(K.internalFormat, je, Ae, K.colorSpace);
    if (!r.get(T).__hasExternalTextures) {
      const Te = Math.max(1, T.width >> _e),
        Fe = Math.max(1, T.height >> _e);
      he === t.TEXTURE_3D || he === t.TEXTURE_2D_ARRAY
        ? n.texImage3D(he, _e, de, Te, Fe, T.depth, 0, je, Ae, null)
        : n.texImage2D(he, _e, de, Te, Fe, 0, je, Ae, null);
    }
    (n.bindFramebuffer(t.FRAMEBUFFER, M),
      Se(T)
        ? p.framebufferTexture2DMultisampleEXT(
            t.FRAMEBUFFER,
            ue,
            he,
            r.get(K).__webglTexture,
            0,
            xe(T),
          )
        : (he === t.TEXTURE_2D ||
            (he >= t.TEXTURE_CUBE_MAP_POSITIVE_X &&
              he <= t.TEXTURE_CUBE_MAP_NEGATIVE_Z)) &&
          t.framebufferTexture2D(
            t.FRAMEBUFFER,
            ue,
            he,
            r.get(K).__webglTexture,
            _e,
          ),
      n.bindFramebuffer(t.FRAMEBUFFER, null));
  }
  function A(M, T, K) {
    if (
      (t.bindRenderbuffer(t.RENDERBUFFER, M), T.depthBuffer && !T.stencilBuffer)
    ) {
      let ue = t.DEPTH_COMPONENT16;
      if (K || Se(T)) {
        const he = T.depthTexture;
        he &&
          he.isDepthTexture &&
          (he.type === Jr
            ? (ue = t.DEPTH_COMPONENT32F)
            : he.type === Mi && (ue = t.DEPTH_COMPONENT24));
        const _e = xe(T);
        Se(T)
          ? p.renderbufferStorageMultisampleEXT(
              t.RENDERBUFFER,
              _e,
              ue,
              T.width,
              T.height,
            )
          : t.renderbufferStorageMultisample(
              t.RENDERBUFFER,
              _e,
              ue,
              T.width,
              T.height,
            );
      } else t.renderbufferStorage(t.RENDERBUFFER, ue, T.width, T.height);
      t.framebufferRenderbuffer(
        t.FRAMEBUFFER,
        t.DEPTH_ATTACHMENT,
        t.RENDERBUFFER,
        M,
      );
    } else if (T.depthBuffer && T.stencilBuffer) {
      const ue = xe(T);
      (K && Se(T) === !1
        ? t.renderbufferStorageMultisample(
            t.RENDERBUFFER,
            ue,
            t.DEPTH24_STENCIL8,
            T.width,
            T.height,
          )
        : Se(T)
          ? p.renderbufferStorageMultisampleEXT(
              t.RENDERBUFFER,
              ue,
              t.DEPTH24_STENCIL8,
              T.width,
              T.height,
            )
          : t.renderbufferStorage(
              t.RENDERBUFFER,
              t.DEPTH_STENCIL,
              T.width,
              T.height,
            ),
        t.framebufferRenderbuffer(
          t.FRAMEBUFFER,
          t.DEPTH_STENCIL_ATTACHMENT,
          t.RENDERBUFFER,
          M,
        ));
    } else {
      const ue =
        T.isWebGLMultipleRenderTargets === !0 ? T.texture : [T.texture];
      for (let he = 0; he < ue.length; he++) {
        const _e = ue[he],
          je = o.convert(_e.format, _e.colorSpace),
          Ae = o.convert(_e.type),
          de = D(_e.internalFormat, je, Ae, _e.colorSpace),
          Y = xe(T);
        K && Se(T) === !1
          ? t.renderbufferStorageMultisample(
              t.RENDERBUFFER,
              Y,
              de,
              T.width,
              T.height,
            )
          : Se(T)
            ? p.renderbufferStorageMultisampleEXT(
                t.RENDERBUFFER,
                Y,
                de,
                T.width,
                T.height,
              )
            : t.renderbufferStorage(t.RENDERBUFFER, de, T.width, T.height);
      }
    }
    t.bindRenderbuffer(t.RENDERBUFFER, null);
  }
  function j(M, T) {
    if (T && T.isWebGLCubeRenderTarget)
      throw new Error(
        "Depth Texture with cube render targets is not supported",
      );
    if (
      (n.bindFramebuffer(t.FRAMEBUFFER, M),
      !(T.depthTexture && T.depthTexture.isDepthTexture))
    )
      throw new Error(
        "renderTarget.depthTexture must be an instance of THREE.DepthTexture",
      );
    ((!r.get(T.depthTexture).__webglTexture ||
      T.depthTexture.image.width !== T.width ||
      T.depthTexture.image.height !== T.height) &&
      ((T.depthTexture.image.width = T.width),
      (T.depthTexture.image.height = T.height),
      (T.depthTexture.needsUpdate = !0)),
      J(T.depthTexture, 0));
    const ue = r.get(T.depthTexture).__webglTexture,
      he = xe(T);
    if (T.depthTexture.format === io)
      Se(T)
        ? p.framebufferTexture2DMultisampleEXT(
            t.FRAMEBUFFER,
            t.DEPTH_ATTACHMENT,
            t.TEXTURE_2D,
            ue,
            0,
            he,
          )
        : t.framebufferTexture2D(
            t.FRAMEBUFFER,
            t.DEPTH_ATTACHMENT,
            t.TEXTURE_2D,
            ue,
            0,
          );
    else if (T.depthTexture.format === cs)
      Se(T)
        ? p.framebufferTexture2DMultisampleEXT(
            t.FRAMEBUFFER,
            t.DEPTH_STENCIL_ATTACHMENT,
            t.TEXTURE_2D,
            ue,
            0,
            he,
          )
        : t.framebufferTexture2D(
            t.FRAMEBUFFER,
            t.DEPTH_STENCIL_ATTACHMENT,
            t.TEXTURE_2D,
            ue,
            0,
          );
    else throw new Error("Unknown depthTexture format");
  }
  function L(M) {
    const T = r.get(M),
      K = M.isWebGLCubeRenderTarget === !0;
    if (M.depthTexture && !T.__autoAllocateDepthBuffer) {
      if (K)
        throw new Error(
          "target.depthTexture not supported in Cube render targets",
        );
      j(T.__webglFramebuffer, M);
    } else if (K) {
      T.__webglDepthbuffer = [];
      for (let ue = 0; ue < 6; ue++)
        (n.bindFramebuffer(t.FRAMEBUFFER, T.__webglFramebuffer[ue]),
          (T.__webglDepthbuffer[ue] = t.createRenderbuffer()),
          A(T.__webglDepthbuffer[ue], M, !1));
    } else
      (n.bindFramebuffer(t.FRAMEBUFFER, T.__webglFramebuffer),
        (T.__webglDepthbuffer = t.createRenderbuffer()),
        A(T.__webglDepthbuffer, M, !1));
    n.bindFramebuffer(t.FRAMEBUFFER, null);
  }
  function F(M, T, K) {
    const ue = r.get(M);
    (T !== void 0 &&
      He(
        ue.__webglFramebuffer,
        M,
        M.texture,
        t.COLOR_ATTACHMENT0,
        t.TEXTURE_2D,
        0,
      ),
      K !== void 0 && L(M));
  }
  function te(M) {
    const T = M.texture,
      K = r.get(M),
      ue = r.get(T);
    (M.addEventListener("dispose", W),
      M.isWebGLMultipleRenderTargets !== !0 &&
        (ue.__webglTexture === void 0 &&
          (ue.__webglTexture = t.createTexture()),
        (ue.__version = T.version),
        s.memory.textures++));
    const he = M.isWebGLCubeRenderTarget === !0,
      _e = M.isWebGLMultipleRenderTargets === !0,
      je = x(M) || a;
    if (he) {
      K.__webglFramebuffer = [];
      for (let Ae = 0; Ae < 6; Ae++)
        if (a && T.mipmaps && T.mipmaps.length > 0) {
          K.__webglFramebuffer[Ae] = [];
          for (let de = 0; de < T.mipmaps.length; de++)
            K.__webglFramebuffer[Ae][de] = t.createFramebuffer();
        } else K.__webglFramebuffer[Ae] = t.createFramebuffer();
    } else {
      if (a && T.mipmaps && T.mipmaps.length > 0) {
        K.__webglFramebuffer = [];
        for (let Ae = 0; Ae < T.mipmaps.length; Ae++)
          K.__webglFramebuffer[Ae] = t.createFramebuffer();
      } else K.__webglFramebuffer = t.createFramebuffer();
      if (_e)
        if (i.drawBuffers) {
          const Ae = M.texture;
          for (let de = 0, Y = Ae.length; de < Y; de++) {
            const Te = r.get(Ae[de]);
            Te.__webglTexture === void 0 &&
              ((Te.__webglTexture = t.createTexture()), s.memory.textures++);
          }
        } else
          console.warn(
            "THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.",
          );
      if (a && M.samples > 0 && Se(M) === !1) {
        const Ae = _e ? T : [T];
        ((K.__webglMultisampledFramebuffer = t.createFramebuffer()),
          (K.__webglColorRenderbuffer = []),
          n.bindFramebuffer(t.FRAMEBUFFER, K.__webglMultisampledFramebuffer));
        for (let de = 0; de < Ae.length; de++) {
          const Y = Ae[de];
          ((K.__webglColorRenderbuffer[de] = t.createRenderbuffer()),
            t.bindRenderbuffer(t.RENDERBUFFER, K.__webglColorRenderbuffer[de]));
          const Te = o.convert(Y.format, Y.colorSpace),
            Fe = o.convert(Y.type),
            Re = D(
              Y.internalFormat,
              Te,
              Fe,
              Y.colorSpace,
              M.isXRRenderTarget === !0,
            ),
            $e = xe(M);
          (t.renderbufferStorageMultisample(
            t.RENDERBUFFER,
            $e,
            Re,
            M.width,
            M.height,
          ),
            t.framebufferRenderbuffer(
              t.FRAMEBUFFER,
              t.COLOR_ATTACHMENT0 + de,
              t.RENDERBUFFER,
              K.__webglColorRenderbuffer[de],
            ));
        }
        (t.bindRenderbuffer(t.RENDERBUFFER, null),
          M.depthBuffer &&
            ((K.__webglDepthRenderbuffer = t.createRenderbuffer()),
            A(K.__webglDepthRenderbuffer, M, !0)),
          n.bindFramebuffer(t.FRAMEBUFFER, null));
      }
    }
    if (he) {
      (n.bindTexture(t.TEXTURE_CUBE_MAP, ue.__webglTexture),
        oe(t.TEXTURE_CUBE_MAP, T, je));
      for (let Ae = 0; Ae < 6; Ae++)
        if (a && T.mipmaps && T.mipmaps.length > 0)
          for (let de = 0; de < T.mipmaps.length; de++)
            He(
              K.__webglFramebuffer[Ae][de],
              M,
              T,
              t.COLOR_ATTACHMENT0,
              t.TEXTURE_CUBE_MAP_POSITIVE_X + Ae,
              de,
            );
        else
          He(
            K.__webglFramebuffer[Ae],
            M,
            T,
            t.COLOR_ATTACHMENT0,
            t.TEXTURE_CUBE_MAP_POSITIVE_X + Ae,
            0,
          );
      (w(T, je) && S(t.TEXTURE_CUBE_MAP), n.unbindTexture());
    } else if (_e) {
      const Ae = M.texture;
      for (let de = 0, Y = Ae.length; de < Y; de++) {
        const Te = Ae[de],
          Fe = r.get(Te);
        (n.bindTexture(t.TEXTURE_2D, Fe.__webglTexture),
          oe(t.TEXTURE_2D, Te, je),
          He(
            K.__webglFramebuffer,
            M,
            Te,
            t.COLOR_ATTACHMENT0 + de,
            t.TEXTURE_2D,
            0,
          ),
          w(Te, je) && S(t.TEXTURE_2D));
      }
      n.unbindTexture();
    } else {
      let Ae = t.TEXTURE_2D;
      if (
        ((M.isWebGL3DRenderTarget || M.isWebGLArrayRenderTarget) &&
          (a
            ? (Ae = M.isWebGL3DRenderTarget ? t.TEXTURE_3D : t.TEXTURE_2D_ARRAY)
            : console.error(
                "THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.",
              )),
        n.bindTexture(Ae, ue.__webglTexture),
        oe(Ae, T, je),
        a && T.mipmaps && T.mipmaps.length > 0)
      )
        for (let de = 0; de < T.mipmaps.length; de++)
          He(K.__webglFramebuffer[de], M, T, t.COLOR_ATTACHMENT0, Ae, de);
      else He(K.__webglFramebuffer, M, T, t.COLOR_ATTACHMENT0, Ae, 0);
      (w(T, je) && S(Ae), n.unbindTexture());
    }
    M.depthBuffer && L(M);
  }
  function q(M) {
    const T = x(M) || a,
      K = M.isWebGLMultipleRenderTargets === !0 ? M.texture : [M.texture];
    for (let ue = 0, he = K.length; ue < he; ue++) {
      const _e = K[ue];
      if (w(_e, T)) {
        const je = M.isWebGLCubeRenderTarget
            ? t.TEXTURE_CUBE_MAP
            : t.TEXTURE_2D,
          Ae = r.get(_e).__webglTexture;
        (n.bindTexture(je, Ae), S(je), n.unbindTexture());
      }
    }
  }
  function ye(M) {
    if (a && M.samples > 0 && Se(M) === !1) {
      const T = M.isWebGLMultipleRenderTargets ? M.texture : [M.texture],
        K = M.width,
        ue = M.height;
      let he = t.COLOR_BUFFER_BIT;
      const _e = [],
        je = M.stencilBuffer ? t.DEPTH_STENCIL_ATTACHMENT : t.DEPTH_ATTACHMENT,
        Ae = r.get(M),
        de = M.isWebGLMultipleRenderTargets === !0;
      if (de)
        for (let Y = 0; Y < T.length; Y++)
          (n.bindFramebuffer(t.FRAMEBUFFER, Ae.__webglMultisampledFramebuffer),
            t.framebufferRenderbuffer(
              t.FRAMEBUFFER,
              t.COLOR_ATTACHMENT0 + Y,
              t.RENDERBUFFER,
              null,
            ),
            n.bindFramebuffer(t.FRAMEBUFFER, Ae.__webglFramebuffer),
            t.framebufferTexture2D(
              t.DRAW_FRAMEBUFFER,
              t.COLOR_ATTACHMENT0 + Y,
              t.TEXTURE_2D,
              null,
              0,
            ));
      (n.bindFramebuffer(t.READ_FRAMEBUFFER, Ae.__webglMultisampledFramebuffer),
        n.bindFramebuffer(t.DRAW_FRAMEBUFFER, Ae.__webglFramebuffer));
      for (let Y = 0; Y < T.length; Y++) {
        (_e.push(t.COLOR_ATTACHMENT0 + Y), M.depthBuffer && _e.push(je));
        const Te =
          Ae.__ignoreDepthValues !== void 0 ? Ae.__ignoreDepthValues : !1;
        if (
          (Te === !1 &&
            (M.depthBuffer && (he |= t.DEPTH_BUFFER_BIT),
            M.stencilBuffer && (he |= t.STENCIL_BUFFER_BIT)),
          de &&
            t.framebufferRenderbuffer(
              t.READ_FRAMEBUFFER,
              t.COLOR_ATTACHMENT0,
              t.RENDERBUFFER,
              Ae.__webglColorRenderbuffer[Y],
            ),
          Te === !0 &&
            (t.invalidateFramebuffer(t.READ_FRAMEBUFFER, [je]),
            t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER, [je])),
          de)
        ) {
          const Fe = r.get(T[Y]).__webglTexture;
          t.framebufferTexture2D(
            t.DRAW_FRAMEBUFFER,
            t.COLOR_ATTACHMENT0,
            t.TEXTURE_2D,
            Fe,
            0,
          );
        }
        (t.blitFramebuffer(0, 0, K, ue, 0, 0, K, ue, he, t.NEAREST),
          h && t.invalidateFramebuffer(t.READ_FRAMEBUFFER, _e));
      }
      if (
        (n.bindFramebuffer(t.READ_FRAMEBUFFER, null),
        n.bindFramebuffer(t.DRAW_FRAMEBUFFER, null),
        de)
      )
        for (let Y = 0; Y < T.length; Y++) {
          (n.bindFramebuffer(t.FRAMEBUFFER, Ae.__webglMultisampledFramebuffer),
            t.framebufferRenderbuffer(
              t.FRAMEBUFFER,
              t.COLOR_ATTACHMENT0 + Y,
              t.RENDERBUFFER,
              Ae.__webglColorRenderbuffer[Y],
            ));
          const Te = r.get(T[Y]).__webglTexture;
          (n.bindFramebuffer(t.FRAMEBUFFER, Ae.__webglFramebuffer),
            t.framebufferTexture2D(
              t.DRAW_FRAMEBUFFER,
              t.COLOR_ATTACHMENT0 + Y,
              t.TEXTURE_2D,
              Te,
              0,
            ));
        }
      n.bindFramebuffer(t.DRAW_FRAMEBUFFER, Ae.__webglMultisampledFramebuffer);
    }
  }
  function xe(M) {
    return Math.min(f, M.samples);
  }
  function Se(M) {
    const T = r.get(M);
    return (
      a &&
      M.samples > 0 &&
      e.has("WEBGL_multisampled_render_to_texture") === !0 &&
      T.__useRenderToTexture !== !1
    );
  }
  function Me(M) {
    const T = s.render.frame;
    v.get(M) !== T && (v.set(M, T), M.update());
  }
  function ae(M, T) {
    const K = M.colorSpace,
      ue = M.format,
      he = M.type;
    return (
      M.isCompressedTexture === !0 ||
        M.isVideoTexture === !0 ||
        M.format === fd ||
        (K !== Ir &&
          K !== so &&
          (K === Bt || K === Ec
            ? a === !1
              ? e.has("EXT_sRGB") === !0 && ue === gr
                ? ((M.format = fd),
                  (M.minFilter = tr),
                  (M.generateMipmaps = !1))
                : (T = yv.sRGBToLinear(T))
              : (ue !== gr || he !== Ai) &&
                console.warn(
                  "THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.",
                )
            : console.error(
                "THREE.WebGLTextures: Unsupported texture color space:",
                K,
              ))),
      T
    );
  }
  ((this.allocateTextureUnit = U),
    (this.resetTextureUnits = ne),
    (this.setTexture2D = J),
    (this.setTexture2DArray = V),
    (this.setTexture3D = re),
    (this.setTextureCube = Ee),
    (this.rebindTextures = F),
    (this.setupRenderTarget = te),
    (this.updateRenderTargetMipmap = q),
    (this.updateMultisampleRenderTarget = ye),
    (this.setupDepthRenderbuffer = L),
    (this.setupFrameBufferTexture = He),
    (this.useMultisampledRTT = Se));
}
const tD = 0,
  Jt = 1;
function nD(t, e, n) {
  const r = n.isWebGL2;
  function i(o, s = so) {
    let a;
    const c = s === Bt || s === Ec ? Jt : tD;
    if (o === Ai) return t.UNSIGNED_BYTE;
    if (o === dv) return t.UNSIGNED_SHORT_4_4_4_4;
    if (o === fv) return t.UNSIGNED_SHORT_5_5_5_1;
    if (o === D5) return t.BYTE;
    if (o === I5) return t.SHORT;
    if (o === of) return t.UNSIGNED_SHORT;
    if (o === uv) return t.INT;
    if (o === Mi) return t.UNSIGNED_INT;
    if (o === Jr) return t.FLOAT;
    if (o === ls)
      return r
        ? t.HALF_FLOAT
        : ((a = e.get("OES_texture_half_float")),
          a !== null ? a.HALF_FLOAT_OES : null);
    if (o === O5) return t.ALPHA;
    if (o === gr) return t.RGBA;
    if (o === $5) return t.LUMINANCE;
    if (o === z5) return t.LUMINANCE_ALPHA;
    if (o === io) return t.DEPTH_COMPONENT;
    if (o === cs) return t.DEPTH_STENCIL;
    if (o === fd)
      return ((a = e.get("EXT_sRGB")), a !== null ? a.SRGB_ALPHA_EXT : null);
    if (o === B5) return t.RED;
    if (o === pv) return t.RED_INTEGER;
    if (o === U5) return t.RG;
    if (o === hv) return t.RG_INTEGER;
    if (o === mv) return t.RGBA_INTEGER;
    if (o === nu || o === ru || o === iu || o === ou)
      if (c === Jt)
        if (((a = e.get("WEBGL_compressed_texture_s3tc_srgb")), a !== null)) {
          if (o === nu) return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;
          if (o === ru) return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
          if (o === iu) return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
          if (o === ou) return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;
        } else return null;
      else if (((a = e.get("WEBGL_compressed_texture_s3tc")), a !== null)) {
        if (o === nu) return a.COMPRESSED_RGB_S3TC_DXT1_EXT;
        if (o === ru) return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;
        if (o === iu) return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;
        if (o === ou) return a.COMPRESSED_RGBA_S3TC_DXT5_EXT;
      } else return null;
    if (o === mh || o === gh || o === vh || o === bh)
      if (((a = e.get("WEBGL_compressed_texture_pvrtc")), a !== null)) {
        if (o === mh) return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
        if (o === gh) return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
        if (o === vh) return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
        if (o === bh) return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
      } else return null;
    if (o === F5)
      return (
        (a = e.get("WEBGL_compressed_texture_etc1")),
        a !== null ? a.COMPRESSED_RGB_ETC1_WEBGL : null
      );
    if (o === yh || o === xh)
      if (((a = e.get("WEBGL_compressed_texture_etc")), a !== null)) {
        if (o === yh)
          return c === Jt ? a.COMPRESSED_SRGB8_ETC2 : a.COMPRESSED_RGB8_ETC2;
        if (o === xh)
          return c === Jt
            ? a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
            : a.COMPRESSED_RGBA8_ETC2_EAC;
      } else return null;
    if (
      o === _h ||
      o === wh ||
      o === kh ||
      o === Sh ||
      o === Ch ||
      o === Mh ||
      o === Eh ||
      o === Th ||
      o === Ah ||
      o === Ph ||
      o === Rh ||
      o === Lh ||
      o === Dh ||
      o === Ih
    )
      if (((a = e.get("WEBGL_compressed_texture_astc")), a !== null)) {
        if (o === _h)
          return c === Jt
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
            : a.COMPRESSED_RGBA_ASTC_4x4_KHR;
        if (o === wh)
          return c === Jt
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
            : a.COMPRESSED_RGBA_ASTC_5x4_KHR;
        if (o === kh)
          return c === Jt
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
            : a.COMPRESSED_RGBA_ASTC_5x5_KHR;
        if (o === Sh)
          return c === Jt
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
            : a.COMPRESSED_RGBA_ASTC_6x5_KHR;
        if (o === Ch)
          return c === Jt
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
            : a.COMPRESSED_RGBA_ASTC_6x6_KHR;
        if (o === Mh)
          return c === Jt
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
            : a.COMPRESSED_RGBA_ASTC_8x5_KHR;
        if (o === Eh)
          return c === Jt
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
            : a.COMPRESSED_RGBA_ASTC_8x6_KHR;
        if (o === Th)
          return c === Jt
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
            : a.COMPRESSED_RGBA_ASTC_8x8_KHR;
        if (o === Ah)
          return c === Jt
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
            : a.COMPRESSED_RGBA_ASTC_10x5_KHR;
        if (o === Ph)
          return c === Jt
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
            : a.COMPRESSED_RGBA_ASTC_10x6_KHR;
        if (o === Rh)
          return c === Jt
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
            : a.COMPRESSED_RGBA_ASTC_10x8_KHR;
        if (o === Lh)
          return c === Jt
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
            : a.COMPRESSED_RGBA_ASTC_10x10_KHR;
        if (o === Dh)
          return c === Jt
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
            : a.COMPRESSED_RGBA_ASTC_12x10_KHR;
        if (o === Ih)
          return c === Jt
            ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR
            : a.COMPRESSED_RGBA_ASTC_12x12_KHR;
      } else return null;
    if (o === su || o === Oh || o === $h)
      if (((a = e.get("EXT_texture_compression_bptc")), a !== null)) {
        if (o === su)
          return c === Jt
            ? a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT
            : a.COMPRESSED_RGBA_BPTC_UNORM_EXT;
        if (o === Oh) return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;
        if (o === $h) return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;
      } else return null;
    if (o === N5 || o === zh || o === Bh || o === Uh)
      if (((a = e.get("EXT_texture_compression_rgtc")), a !== null)) {
        if (o === su) return a.COMPRESSED_RED_RGTC1_EXT;
        if (o === zh) return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;
        if (o === Bh) return a.COMPRESSED_RED_GREEN_RGTC2_EXT;
        if (o === Uh) return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;
      } else return null;
    return o === ro
      ? r
        ? t.UNSIGNED_INT_24_8
        : ((a = e.get("WEBGL_depth_texture")),
          a !== null ? a.UNSIGNED_INT_24_8_WEBGL : null)
      : t[o] !== void 0
        ? t[o]
        : null;
  }
  return { convert: i };
}
class rD extends jn {
  constructor(e = []) {
    (super(), (this.isArrayCamera = !0), (this.cameras = e));
  }
}
class un extends xn {
  constructor() {
    (super(), (this.isGroup = !0), (this.type = "Group"));
  }
}
const iD = { type: "move" };
class Au {
  constructor() {
    ((this._targetRay = null), (this._grip = null), (this._hand = null));
  }
  getHandSpace() {
    return (
      this._hand === null &&
        ((this._hand = new un()),
        (this._hand.matrixAutoUpdate = !1),
        (this._hand.visible = !1),
        (this._hand.joints = {}),
        (this._hand.inputState = { pinching: !1 })),
      this._hand
    );
  }
  getTargetRaySpace() {
    return (
      this._targetRay === null &&
        ((this._targetRay = new un()),
        (this._targetRay.matrixAutoUpdate = !1),
        (this._targetRay.visible = !1),
        (this._targetRay.hasLinearVelocity = !1),
        (this._targetRay.linearVelocity = new se()),
        (this._targetRay.hasAngularVelocity = !1),
        (this._targetRay.angularVelocity = new se())),
      this._targetRay
    );
  }
  getGripSpace() {
    return (
      this._grip === null &&
        ((this._grip = new un()),
        (this._grip.matrixAutoUpdate = !1),
        (this._grip.visible = !1),
        (this._grip.hasLinearVelocity = !1),
        (this._grip.linearVelocity = new se()),
        (this._grip.hasAngularVelocity = !1),
        (this._grip.angularVelocity = new se())),
      this._grip
    );
  }
  dispatchEvent(e) {
    return (
      this._targetRay !== null && this._targetRay.dispatchEvent(e),
      this._grip !== null && this._grip.dispatchEvent(e),
      this._hand !== null && this._hand.dispatchEvent(e),
      this
    );
  }
  connect(e) {
    if (e && e.hand) {
      const n = this._hand;
      if (n) for (const r of e.hand.values()) this._getHandJoint(n, r);
    }
    return (this.dispatchEvent({ type: "connected", data: e }), this);
  }
  disconnect(e) {
    return (
      this.dispatchEvent({ type: "disconnected", data: e }),
      this._targetRay !== null && (this._targetRay.visible = !1),
      this._grip !== null && (this._grip.visible = !1),
      this._hand !== null && (this._hand.visible = !1),
      this
    );
  }
  update(e, n, r) {
    let i = null,
      o = null,
      s = null;
    const a = this._targetRay,
      c = this._grip,
      u = this._hand;
    if (e && n.session.visibilityState !== "visible-blurred") {
      if (u && e.hand) {
        s = !0;
        for (const b of e.hand.values()) {
          const g = n.getJointPose(b, r),
            m = this._getHandJoint(u, b);
          (g !== null &&
            (m.matrix.fromArray(g.transform.matrix),
            m.matrix.decompose(m.position, m.rotation, m.scale),
            (m.matrixWorldNeedsUpdate = !0),
            (m.jointRadius = g.radius)),
            (m.visible = g !== null));
        }
        const d = u.joints["index-finger-tip"],
          f = u.joints["thumb-tip"],
          p = d.position.distanceTo(f.position),
          h = 0.02,
          v = 0.005;
        u.inputState.pinching && p > h + v
          ? ((u.inputState.pinching = !1),
            this.dispatchEvent({
              type: "pinchend",
              handedness: e.handedness,
              target: this,
            }))
          : !u.inputState.pinching &&
            p <= h - v &&
            ((u.inputState.pinching = !0),
            this.dispatchEvent({
              type: "pinchstart",
              handedness: e.handedness,
              target: this,
            }));
      } else
        c !== null &&
          e.gripSpace &&
          ((o = n.getPose(e.gripSpace, r)),
          o !== null &&
            (c.matrix.fromArray(o.transform.matrix),
            c.matrix.decompose(c.position, c.rotation, c.scale),
            (c.matrixWorldNeedsUpdate = !0),
            o.linearVelocity
              ? ((c.hasLinearVelocity = !0),
                c.linearVelocity.copy(o.linearVelocity))
              : (c.hasLinearVelocity = !1),
            o.angularVelocity
              ? ((c.hasAngularVelocity = !0),
                c.angularVelocity.copy(o.angularVelocity))
              : (c.hasAngularVelocity = !1)));
      a !== null &&
        ((i = n.getPose(e.targetRaySpace, r)),
        i === null && o !== null && (i = o),
        i !== null &&
          (a.matrix.fromArray(i.transform.matrix),
          a.matrix.decompose(a.position, a.rotation, a.scale),
          (a.matrixWorldNeedsUpdate = !0),
          i.linearVelocity
            ? ((a.hasLinearVelocity = !0),
              a.linearVelocity.copy(i.linearVelocity))
            : (a.hasLinearVelocity = !1),
          i.angularVelocity
            ? ((a.hasAngularVelocity = !0),
              a.angularVelocity.copy(i.angularVelocity))
            : (a.hasAngularVelocity = !1),
          this.dispatchEvent(iD)));
    }
    return (
      a !== null && (a.visible = i !== null),
      c !== null && (c.visible = o !== null),
      u !== null && (u.visible = s !== null),
      this
    );
  }
  _getHandJoint(e, n) {
    if (e.joints[n.jointName] === void 0) {
      const r = new un();
      ((r.matrixAutoUpdate = !1),
        (r.visible = !1),
        (e.joints[n.jointName] = r),
        e.add(r));
    }
    return e.joints[n.jointName];
  }
}
class Bv extends yn {
  constructor(e, n, r, i, o, s, a, c, u, d) {
    if (((d = d !== void 0 ? d : io), d !== io && d !== cs))
      throw new Error(
        "DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat",
      );
    (r === void 0 && d === io && (r = Mi),
      r === void 0 && d === cs && (r = ro),
      super(null, i, o, s, a, c, d, r, u),
      (this.isDepthTexture = !0),
      (this.image = { width: e, height: n }),
      (this.magFilter = a !== void 0 ? a : Ht),
      (this.minFilter = c !== void 0 ? c : Ht),
      (this.flipY = !1),
      (this.generateMipmaps = !1),
      (this.compareFunction = null));
  }
  copy(e) {
    return (super.copy(e), (this.compareFunction = e.compareFunction), this);
  }
  toJSON(e) {
    const n = super.toJSON(e);
    return (
      this.compareFunction !== null &&
        (n.compareFunction = this.compareFunction),
      n
    );
  }
}
class oD extends ho {
  constructor(e, n) {
    super();
    const r = this;
    let i = null,
      o = 1,
      s = null,
      a = "local-floor",
      c = 1,
      u = null,
      d = null,
      f = null,
      p = null,
      h = null,
      v = null;
    const b = n.getContextAttributes();
    let g = null,
      m = null;
    const _ = [],
      y = [],
      x = new jn();
    (x.layers.enable(1), (x.viewport = new Ut()));
    const C = new jn();
    (C.layers.enable(2), (C.viewport = new Ut()));
    const w = [x, C],
      S = new rD();
    (S.layers.enable(1), S.layers.enable(2));
    let D = null,
      k = null;
    ((this.cameraAutoUpdate = !0),
      (this.enabled = !1),
      (this.isPresenting = !1),
      (this.getController = function (V) {
        let re = _[V];
        return (
          re === void 0 && ((re = new Au()), (_[V] = re)),
          re.getTargetRaySpace()
        );
      }),
      (this.getControllerGrip = function (V) {
        let re = _[V];
        return (
          re === void 0 && ((re = new Au()), (_[V] = re)),
          re.getGripSpace()
        );
      }),
      (this.getHand = function (V) {
        let re = _[V];
        return (
          re === void 0 && ((re = new Au()), (_[V] = re)),
          re.getHandSpace()
        );
      }));
    function P(V) {
      const re = y.indexOf(V.inputSource);
      if (re === -1) return;
      const Ee = _[re];
      Ee !== void 0 &&
        (Ee.update(V.inputSource, V.frame, u || s),
        Ee.dispatchEvent({ type: V.type, data: V.inputSource }));
    }
    function I() {
      (i.removeEventListener("select", P),
        i.removeEventListener("selectstart", P),
        i.removeEventListener("selectend", P),
        i.removeEventListener("squeeze", P),
        i.removeEventListener("squeezestart", P),
        i.removeEventListener("squeezeend", P),
        i.removeEventListener("end", I),
        i.removeEventListener("inputsourceschange", W));
      for (let V = 0; V < _.length; V++) {
        const re = y[V];
        re !== null && ((y[V] = null), _[V].disconnect(re));
      }
      ((D = null),
        (k = null),
        e.setRenderTarget(g),
        (h = null),
        (p = null),
        (f = null),
        (i = null),
        (m = null),
        J.stop(),
        (r.isPresenting = !1),
        r.dispatchEvent({ type: "sessionend" }));
    }
    ((this.setFramebufferScaleFactor = function (V) {
      ((o = V),
        r.isPresenting === !0 &&
          console.warn(
            "THREE.WebXRManager: Cannot change framebuffer scale while presenting.",
          ));
    }),
      (this.setReferenceSpaceType = function (V) {
        ((a = V),
          r.isPresenting === !0 &&
            console.warn(
              "THREE.WebXRManager: Cannot change reference space type while presenting.",
            ));
      }),
      (this.getReferenceSpace = function () {
        return u || s;
      }),
      (this.setReferenceSpace = function (V) {
        u = V;
      }),
      (this.getBaseLayer = function () {
        return p !== null ? p : h;
      }),
      (this.getBinding = function () {
        return f;
      }),
      (this.getFrame = function () {
        return v;
      }),
      (this.getSession = function () {
        return i;
      }),
      (this.setSession = async function (V) {
        if (((i = V), i !== null)) {
          if (
            ((g = e.getRenderTarget()),
            i.addEventListener("select", P),
            i.addEventListener("selectstart", P),
            i.addEventListener("selectend", P),
            i.addEventListener("squeeze", P),
            i.addEventListener("squeezestart", P),
            i.addEventListener("squeezeend", P),
            i.addEventListener("end", I),
            i.addEventListener("inputsourceschange", W),
            b.xrCompatible !== !0 && (await n.makeXRCompatible()),
            i.renderState.layers === void 0 || e.capabilities.isWebGL2 === !1)
          ) {
            const re = {
              antialias: i.renderState.layers === void 0 ? b.antialias : !0,
              alpha: !0,
              depth: b.depth,
              stencil: b.stencil,
              framebufferScaleFactor: o,
            };
            ((h = new XRWebGLLayer(i, n, re)),
              i.updateRenderState({ baseLayer: h }),
              (m = new ai(h.framebufferWidth, h.framebufferHeight, {
                format: gr,
                type: Ai,
                colorSpace: e.outputColorSpace,
                stencilBuffer: b.stencil,
              })));
          } else {
            let re = null,
              Ee = null,
              Pe = null;
            b.depth &&
              ((Pe = b.stencil ? n.DEPTH24_STENCIL8 : n.DEPTH_COMPONENT24),
              (re = b.stencil ? cs : io),
              (Ee = b.stencil ? ro : Mi));
            const be = {
              colorFormat: n.RGBA8,
              depthFormat: Pe,
              scaleFactor: o,
            };
            ((f = new XRWebGLBinding(i, n)),
              (p = f.createProjectionLayer(be)),
              i.updateRenderState({ layers: [p] }),
              (m = new ai(p.textureWidth, p.textureHeight, {
                format: gr,
                type: Ai,
                depthTexture: new Bv(
                  p.textureWidth,
                  p.textureHeight,
                  Ee,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  re,
                ),
                stencilBuffer: b.stencil,
                colorSpace: e.outputColorSpace,
                samples: b.antialias ? 4 : 0,
              })));
            const ce = e.properties.get(m);
            ce.__ignoreDepthValues = p.ignoreDepthValues;
          }
          ((m.isXRRenderTarget = !0),
            this.setFoveation(c),
            (u = null),
            (s = await i.requestReferenceSpace(a)),
            J.setContext(i),
            J.start(),
            (r.isPresenting = !0),
            r.dispatchEvent({ type: "sessionstart" }));
        }
      }),
      (this.getEnvironmentBlendMode = function () {
        if (i !== null) return i.environmentBlendMode;
      }));
    function W(V) {
      for (let re = 0; re < V.removed.length; re++) {
        const Ee = V.removed[re],
          Pe = y.indexOf(Ee);
        Pe >= 0 && ((y[Pe] = null), _[Pe].disconnect(Ee));
      }
      for (let re = 0; re < V.added.length; re++) {
        const Ee = V.added[re];
        let Pe = y.indexOf(Ee);
        if (Pe === -1) {
          for (let ce = 0; ce < _.length; ce++)
            if (ce >= y.length) {
              (y.push(Ee), (Pe = ce));
              break;
            } else if (y[ce] === null) {
              ((y[ce] = Ee), (Pe = ce));
              break;
            }
          if (Pe === -1) break;
        }
        const be = _[Pe];
        be && be.connect(Ee);
      }
    }
    const X = new se(),
      Z = new se();
    function G(V, re, Ee) {
      (X.setFromMatrixPosition(re.matrixWorld),
        Z.setFromMatrixPosition(Ee.matrixWorld));
      const Pe = X.distanceTo(Z),
        be = re.projectionMatrix.elements,
        ce = Ee.projectionMatrix.elements,
        oe = be[14] / (be[10] - 1),
        me = be[14] / (be[10] + 1),
        ge = (be[9] + 1) / be[5],
        Oe = (be[9] - 1) / be[5],
        He = (be[8] - 1) / be[0],
        A = (ce[8] + 1) / ce[0],
        j = oe * He,
        L = oe * A,
        F = Pe / (-He + A),
        te = F * -He;
      (re.matrixWorld.decompose(V.position, V.quaternion, V.scale),
        V.translateX(te),
        V.translateZ(F),
        V.matrixWorld.compose(V.position, V.quaternion, V.scale),
        V.matrixWorldInverse.copy(V.matrixWorld).invert());
      const q = oe + F,
        ye = me + F,
        xe = j - te,
        Se = L + (Pe - te),
        Me = ((ge * me) / ye) * q,
        ae = ((Oe * me) / ye) * q;
      (V.projectionMatrix.makePerspective(xe, Se, Me, ae, q, ye),
        V.projectionMatrixInverse.copy(V.projectionMatrix).invert());
    }
    function $(V, re) {
      (re === null
        ? V.matrixWorld.copy(V.matrix)
        : V.matrixWorld.multiplyMatrices(re.matrixWorld, V.matrix),
        V.matrixWorldInverse.copy(V.matrixWorld).invert());
    }
    this.updateCamera = function (V) {
      if (i === null) return;
      ((S.near = C.near = x.near = V.near),
        (S.far = C.far = x.far = V.far),
        (D !== S.near || k !== S.far) &&
          (i.updateRenderState({ depthNear: S.near, depthFar: S.far }),
          (D = S.near),
          (k = S.far)));
      const re = V.parent,
        Ee = S.cameras;
      $(S, re);
      for (let Pe = 0; Pe < Ee.length; Pe++) $(Ee[Pe], re);
      (Ee.length === 2
        ? G(S, x, C)
        : S.projectionMatrix.copy(x.projectionMatrix),
        ne(V, S, re));
    };
    function ne(V, re, Ee) {
      (Ee === null
        ? V.matrix.copy(re.matrixWorld)
        : (V.matrix.copy(Ee.matrixWorld),
          V.matrix.invert(),
          V.matrix.multiply(re.matrixWorld)),
        V.matrix.decompose(V.position, V.quaternion, V.scale),
        V.updateMatrixWorld(!0),
        V.projectionMatrix.copy(re.projectionMatrix),
        V.projectionMatrixInverse.copy(re.projectionMatrixInverse),
        V.isPerspectiveCamera &&
          ((V.fov = pd * 2 * Math.atan(1 / V.projectionMatrix.elements[5])),
          (V.zoom = 1)));
    }
    ((this.getCamera = function () {
      return S;
    }),
      (this.getFoveation = function () {
        if (!(p === null && h === null)) return c;
      }),
      (this.setFoveation = function (V) {
        ((c = V),
          p !== null && (p.fixedFoveation = V),
          h !== null && h.fixedFoveation !== void 0 && (h.fixedFoveation = V));
      }));
    let U = null;
    function ie(V, re) {
      if (((d = re.getViewerPose(u || s)), (v = re), d !== null)) {
        const Ee = d.views;
        h !== null &&
          (e.setRenderTargetFramebuffer(m, h.framebuffer),
          e.setRenderTarget(m));
        let Pe = !1;
        Ee.length !== S.cameras.length && ((S.cameras.length = 0), (Pe = !0));
        for (let be = 0; be < Ee.length; be++) {
          const ce = Ee[be];
          let oe = null;
          if (h !== null) oe = h.getViewport(ce);
          else {
            const ge = f.getViewSubImage(p, ce);
            ((oe = ge.viewport),
              be === 0 &&
                (e.setRenderTargetTextures(
                  m,
                  ge.colorTexture,
                  p.ignoreDepthValues ? void 0 : ge.depthStencilTexture,
                ),
                e.setRenderTarget(m)));
          }
          let me = w[be];
          (me === void 0 &&
            ((me = new jn()),
            me.layers.enable(be),
            (me.viewport = new Ut()),
            (w[be] = me)),
            me.matrix.fromArray(ce.transform.matrix),
            me.matrix.decompose(me.position, me.quaternion, me.scale),
            me.projectionMatrix.fromArray(ce.projectionMatrix),
            me.projectionMatrixInverse.copy(me.projectionMatrix).invert(),
            me.viewport.set(oe.x, oe.y, oe.width, oe.height),
            be === 0 &&
              (S.matrix.copy(me.matrix),
              S.matrix.decompose(S.position, S.quaternion, S.scale)),
            Pe === !0 && S.cameras.push(me));
        }
      }
      for (let Ee = 0; Ee < _.length; Ee++) {
        const Pe = y[Ee],
          be = _[Ee];
        Pe !== null && be !== void 0 && be.update(Pe, re, u || s);
      }
      (U && U(V, re),
        re.detectedPlanes &&
          r.dispatchEvent({ type: "planesdetected", data: re }),
        (v = null));
    }
    const J = new Lv();
    (J.setAnimationLoop(ie),
      (this.setAnimationLoop = function (V) {
        U = V;
      }),
      (this.dispose = function () {}));
  }
}
function sD(t, e) {
  function n(g, m) {
    (g.matrixAutoUpdate === !0 && g.updateMatrix(), m.value.copy(g.matrix));
  }
  function r(g, m) {
    (m.color.getRGB(g.fogColor.value, Tv(t)),
      m.isFog
        ? ((g.fogNear.value = m.near), (g.fogFar.value = m.far))
        : m.isFogExp2 && (g.fogDensity.value = m.density));
  }
  function i(g, m, _, y, x) {
    m.isMeshBasicMaterial || m.isMeshLambertMaterial
      ? o(g, m)
      : m.isMeshToonMaterial
        ? (o(g, m), f(g, m))
        : m.isMeshPhongMaterial
          ? (o(g, m), d(g, m))
          : m.isMeshStandardMaterial
            ? (o(g, m), p(g, m), m.isMeshPhysicalMaterial && h(g, m, x))
            : m.isMeshMatcapMaterial
              ? (o(g, m), v(g, m))
              : m.isMeshDepthMaterial
                ? o(g, m)
                : m.isMeshDistanceMaterial
                  ? (o(g, m), b(g, m))
                  : m.isMeshNormalMaterial
                    ? o(g, m)
                    : m.isLineBasicMaterial
                      ? (s(g, m), m.isLineDashedMaterial && a(g, m))
                      : m.isPointsMaterial
                        ? c(g, m, _, y)
                        : m.isSpriteMaterial
                          ? u(g, m)
                          : m.isShadowMaterial
                            ? (g.color.value.copy(m.color),
                              (g.opacity.value = m.opacity))
                            : m.isShaderMaterial && (m.uniformsNeedUpdate = !1);
  }
  function o(g, m) {
    ((g.opacity.value = m.opacity),
      m.color && g.diffuse.value.copy(m.color),
      m.emissive &&
        g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),
      m.map && ((g.map.value = m.map), n(m.map, g.mapTransform)),
      m.alphaMap &&
        ((g.alphaMap.value = m.alphaMap), n(m.alphaMap, g.alphaMapTransform)),
      m.bumpMap &&
        ((g.bumpMap.value = m.bumpMap),
        n(m.bumpMap, g.bumpMapTransform),
        (g.bumpScale.value = m.bumpScale),
        m.side === $n && (g.bumpScale.value *= -1)),
      m.normalMap &&
        ((g.normalMap.value = m.normalMap),
        n(m.normalMap, g.normalMapTransform),
        g.normalScale.value.copy(m.normalScale),
        m.side === $n && g.normalScale.value.negate()),
      m.displacementMap &&
        ((g.displacementMap.value = m.displacementMap),
        n(m.displacementMap, g.displacementMapTransform),
        (g.displacementScale.value = m.displacementScale),
        (g.displacementBias.value = m.displacementBias)),
      m.emissiveMap &&
        ((g.emissiveMap.value = m.emissiveMap),
        n(m.emissiveMap, g.emissiveMapTransform)),
      m.specularMap &&
        ((g.specularMap.value = m.specularMap),
        n(m.specularMap, g.specularMapTransform)),
      m.alphaTest > 0 && (g.alphaTest.value = m.alphaTest));
    const _ = e.get(m).envMap;
    if (
      (_ &&
        ((g.envMap.value = _),
        (g.flipEnvMap.value =
          _.isCubeTexture && _.isRenderTargetTexture === !1 ? -1 : 1),
        (g.reflectivity.value = m.reflectivity),
        (g.ior.value = m.ior),
        (g.refractionRatio.value = m.refractionRatio)),
      m.lightMap)
    ) {
      g.lightMap.value = m.lightMap;
      const y = t._useLegacyLights === !0 ? Math.PI : 1;
      ((g.lightMapIntensity.value = m.lightMapIntensity * y),
        n(m.lightMap, g.lightMapTransform));
    }
    m.aoMap &&
      ((g.aoMap.value = m.aoMap),
      (g.aoMapIntensity.value = m.aoMapIntensity),
      n(m.aoMap, g.aoMapTransform));
  }
  function s(g, m) {
    (g.diffuse.value.copy(m.color),
      (g.opacity.value = m.opacity),
      m.map && ((g.map.value = m.map), n(m.map, g.mapTransform)));
  }
  function a(g, m) {
    ((g.dashSize.value = m.dashSize),
      (g.totalSize.value = m.dashSize + m.gapSize),
      (g.scale.value = m.scale));
  }
  function c(g, m, _, y) {
    (g.diffuse.value.copy(m.color),
      (g.opacity.value = m.opacity),
      (g.size.value = m.size * _),
      (g.scale.value = y * 0.5),
      m.map && ((g.map.value = m.map), n(m.map, g.uvTransform)),
      m.alphaMap &&
        ((g.alphaMap.value = m.alphaMap), n(m.alphaMap, g.alphaMapTransform)),
      m.alphaTest > 0 && (g.alphaTest.value = m.alphaTest));
  }
  function u(g, m) {
    (g.diffuse.value.copy(m.color),
      (g.opacity.value = m.opacity),
      (g.rotation.value = m.rotation),
      m.map && ((g.map.value = m.map), n(m.map, g.mapTransform)),
      m.alphaMap &&
        ((g.alphaMap.value = m.alphaMap), n(m.alphaMap, g.alphaMapTransform)),
      m.alphaTest > 0 && (g.alphaTest.value = m.alphaTest));
  }
  function d(g, m) {
    (g.specular.value.copy(m.specular),
      (g.shininess.value = Math.max(m.shininess, 1e-4)));
  }
  function f(g, m) {
    m.gradientMap && (g.gradientMap.value = m.gradientMap);
  }
  function p(g, m) {
    ((g.metalness.value = m.metalness),
      m.metalnessMap &&
        ((g.metalnessMap.value = m.metalnessMap),
        n(m.metalnessMap, g.metalnessMapTransform)),
      (g.roughness.value = m.roughness),
      m.roughnessMap &&
        ((g.roughnessMap.value = m.roughnessMap),
        n(m.roughnessMap, g.roughnessMapTransform)),
      e.get(m).envMap && (g.envMapIntensity.value = m.envMapIntensity));
  }
  function h(g, m, _) {
    ((g.ior.value = m.ior),
      m.sheen > 0 &&
        (g.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),
        (g.sheenRoughness.value = m.sheenRoughness),
        m.sheenColorMap &&
          ((g.sheenColorMap.value = m.sheenColorMap),
          n(m.sheenColorMap, g.sheenColorMapTransform)),
        m.sheenRoughnessMap &&
          ((g.sheenRoughnessMap.value = m.sheenRoughnessMap),
          n(m.sheenRoughnessMap, g.sheenRoughnessMapTransform))),
      m.clearcoat > 0 &&
        ((g.clearcoat.value = m.clearcoat),
        (g.clearcoatRoughness.value = m.clearcoatRoughness),
        m.clearcoatMap &&
          ((g.clearcoatMap.value = m.clearcoatMap),
          n(m.clearcoatMap, g.clearcoatMapTransform)),
        m.clearcoatRoughnessMap &&
          ((g.clearcoatRoughnessMap.value = m.clearcoatRoughnessMap),
          n(m.clearcoatRoughnessMap, g.clearcoatRoughnessMapTransform)),
        m.clearcoatNormalMap &&
          ((g.clearcoatNormalMap.value = m.clearcoatNormalMap),
          n(m.clearcoatNormalMap, g.clearcoatNormalMapTransform),
          g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),
          m.side === $n && g.clearcoatNormalScale.value.negate())),
      m.iridescence > 0 &&
        ((g.iridescence.value = m.iridescence),
        (g.iridescenceIOR.value = m.iridescenceIOR),
        (g.iridescenceThicknessMinimum.value = m.iridescenceThicknessRange[0]),
        (g.iridescenceThicknessMaximum.value = m.iridescenceThicknessRange[1]),
        m.iridescenceMap &&
          ((g.iridescenceMap.value = m.iridescenceMap),
          n(m.iridescenceMap, g.iridescenceMapTransform)),
        m.iridescenceThicknessMap &&
          ((g.iridescenceThicknessMap.value = m.iridescenceThicknessMap),
          n(m.iridescenceThicknessMap, g.iridescenceThicknessMapTransform))),
      m.transmission > 0 &&
        ((g.transmission.value = m.transmission),
        (g.transmissionSamplerMap.value = _.texture),
        g.transmissionSamplerSize.value.set(_.width, _.height),
        m.transmissionMap &&
          ((g.transmissionMap.value = m.transmissionMap),
          n(m.transmissionMap, g.transmissionMapTransform)),
        (g.thickness.value = m.thickness),
        m.thicknessMap &&
          ((g.thicknessMap.value = m.thicknessMap),
          n(m.thicknessMap, g.thicknessMapTransform)),
        (g.attenuationDistance.value = m.attenuationDistance),
        g.attenuationColor.value.copy(m.attenuationColor)),
      m.anisotropy > 0 &&
        (g.anisotropyVector.value.set(
          m.anisotropy * Math.cos(m.anisotropyRotation),
          m.anisotropy * Math.sin(m.anisotropyRotation),
        ),
        m.anisotropyMap &&
          ((g.anisotropyMap.value = m.anisotropyMap),
          n(m.anisotropyMap, g.anisotropyMapTransform))),
      (g.specularIntensity.value = m.specularIntensity),
      g.specularColor.value.copy(m.specularColor),
      m.specularColorMap &&
        ((g.specularColorMap.value = m.specularColorMap),
        n(m.specularColorMap, g.specularColorMapTransform)),
      m.specularIntensityMap &&
        ((g.specularIntensityMap.value = m.specularIntensityMap),
        n(m.specularIntensityMap, g.specularIntensityMapTransform)));
  }
  function v(g, m) {
    m.matcap && (g.matcap.value = m.matcap);
  }
  function b(g, m) {
    const _ = e.get(m).light;
    (g.referencePosition.value.setFromMatrixPosition(_.matrixWorld),
      (g.nearDistance.value = _.shadow.camera.near),
      (g.farDistance.value = _.shadow.camera.far));
  }
  return { refreshFogUniforms: r, refreshMaterialUniforms: i };
}
function aD(t, e, n, r) {
  let i = {},
    o = {},
    s = [];
  const a = n.isWebGL2 ? t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS) : 0;
  function c(_, y) {
    const x = y.program;
    r.uniformBlockBinding(_, x);
  }
  function u(_, y) {
    let x = i[_.id];
    x === void 0 &&
      (v(_), (x = d(_)), (i[_.id] = x), _.addEventListener("dispose", g));
    const C = y.program;
    r.updateUBOMapping(_, C);
    const w = e.render.frame;
    o[_.id] !== w && (p(_), (o[_.id] = w));
  }
  function d(_) {
    const y = f();
    _.__bindingPointIndex = y;
    const x = t.createBuffer(),
      C = _.__size,
      w = _.usage;
    return (
      t.bindBuffer(t.UNIFORM_BUFFER, x),
      t.bufferData(t.UNIFORM_BUFFER, C, w),
      t.bindBuffer(t.UNIFORM_BUFFER, null),
      t.bindBufferBase(t.UNIFORM_BUFFER, y, x),
      x
    );
  }
  function f() {
    for (let _ = 0; _ < a; _++) if (s.indexOf(_) === -1) return (s.push(_), _);
    return (
      console.error(
        "THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.",
      ),
      0
    );
  }
  function p(_) {
    const y = i[_.id],
      x = _.uniforms,
      C = _.__cache;
    t.bindBuffer(t.UNIFORM_BUFFER, y);
    for (let w = 0, S = x.length; w < S; w++) {
      const D = x[w];
      if (h(D, w, C) === !0) {
        const k = D.__offset,
          P = Array.isArray(D.value) ? D.value : [D.value];
        let I = 0;
        for (let W = 0; W < P.length; W++) {
          const X = P[W],
            Z = b(X);
          typeof X == "number"
            ? ((D.__data[0] = X),
              t.bufferSubData(t.UNIFORM_BUFFER, k + I, D.__data))
            : X.isMatrix3
              ? ((D.__data[0] = X.elements[0]),
                (D.__data[1] = X.elements[1]),
                (D.__data[2] = X.elements[2]),
                (D.__data[3] = X.elements[0]),
                (D.__data[4] = X.elements[3]),
                (D.__data[5] = X.elements[4]),
                (D.__data[6] = X.elements[5]),
                (D.__data[7] = X.elements[0]),
                (D.__data[8] = X.elements[6]),
                (D.__data[9] = X.elements[7]),
                (D.__data[10] = X.elements[8]),
                (D.__data[11] = X.elements[0]))
              : (X.toArray(D.__data, I),
                (I += Z.storage / Float32Array.BYTES_PER_ELEMENT));
        }
        t.bufferSubData(t.UNIFORM_BUFFER, k, D.__data);
      }
    }
    t.bindBuffer(t.UNIFORM_BUFFER, null);
  }
  function h(_, y, x) {
    const C = _.value;
    if (x[y] === void 0) {
      if (typeof C == "number") x[y] = C;
      else {
        const w = Array.isArray(C) ? C : [C],
          S = [];
        for (let D = 0; D < w.length; D++) S.push(w[D].clone());
        x[y] = S;
      }
      return !0;
    } else if (typeof C == "number") {
      if (x[y] !== C) return ((x[y] = C), !0);
    } else {
      const w = Array.isArray(x[y]) ? x[y] : [x[y]],
        S = Array.isArray(C) ? C : [C];
      for (let D = 0; D < w.length; D++) {
        const k = w[D];
        if (k.equals(S[D]) === !1) return (k.copy(S[D]), !0);
      }
    }
    return !1;
  }
  function v(_) {
    const y = _.uniforms;
    let x = 0;
    const C = 16;
    let w = 0;
    for (let S = 0, D = y.length; S < D; S++) {
      const k = y[S],
        P = { boundary: 0, storage: 0 },
        I = Array.isArray(k.value) ? k.value : [k.value];
      for (let W = 0, X = I.length; W < X; W++) {
        const Z = I[W],
          G = b(Z);
        ((P.boundary += G.boundary), (P.storage += G.storage));
      }
      if (
        ((k.__data = new Float32Array(
          P.storage / Float32Array.BYTES_PER_ELEMENT,
        )),
        (k.__offset = x),
        S > 0)
      ) {
        w = x % C;
        const W = C - w;
        w !== 0 && W - P.boundary < 0 && ((x += C - w), (k.__offset = x));
      }
      x += P.storage;
    }
    return (
      (w = x % C),
      w > 0 && (x += C - w),
      (_.__size = x),
      (_.__cache = {}),
      this
    );
  }
  function b(_) {
    const y = { boundary: 0, storage: 0 };
    return (
      typeof _ == "number"
        ? ((y.boundary = 4), (y.storage = 4))
        : _.isVector2
          ? ((y.boundary = 8), (y.storage = 8))
          : _.isVector3 || _.isColor
            ? ((y.boundary = 16), (y.storage = 12))
            : _.isVector4
              ? ((y.boundary = 16), (y.storage = 16))
              : _.isMatrix3
                ? ((y.boundary = 48), (y.storage = 48))
                : _.isMatrix4
                  ? ((y.boundary = 64), (y.storage = 64))
                  : _.isTexture
                    ? console.warn(
                        "THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.",
                      )
                    : console.warn(
                        "THREE.WebGLRenderer: Unsupported uniform value type.",
                        _,
                      ),
      y
    );
  }
  function g(_) {
    const y = _.target;
    y.removeEventListener("dispose", g);
    const x = s.indexOf(y.__bindingPointIndex);
    (s.splice(x, 1), t.deleteBuffer(i[y.id]), delete i[y.id], delete o[y.id]);
  }
  function m() {
    for (const _ in i) t.deleteBuffer(i[_]);
    ((s = []), (i = {}), (o = {}));
  }
  return { bind: c, update: u, dispose: m };
}
class Uv {
  constructor(e = {}) {
    const {
      canvas: n = nA(),
      context: r = null,
      depth: i = !0,
      stencil: o = !0,
      alpha: s = !1,
      antialias: a = !1,
      premultipliedAlpha: c = !0,
      preserveDrawingBuffer: u = !1,
      powerPreference: d = "default",
      failIfMajorPerformanceCaveat: f = !1,
    } = e;
    this.isWebGLRenderer = !0;
    let p;
    r !== null ? (p = r.getContextAttributes().alpha) : (p = s);
    const h = new Uint32Array(4),
      v = new Int32Array(4);
    let b = null,
      g = null;
    const m = [],
      _ = [];
    ((this.domElement = n),
      (this.debug = { checkShaderErrors: !0, onShaderError: null }),
      (this.autoClear = !0),
      (this.autoClearColor = !0),
      (this.autoClearDepth = !0),
      (this.autoClearStencil = !0),
      (this.sortObjects = !0),
      (this.clippingPlanes = []),
      (this.localClippingEnabled = !1),
      (this.outputColorSpace = Bt),
      (this._useLegacyLights = !1),
      (this.toneMapping = Ti),
      (this.toneMappingExposure = 1));
    const y = this;
    let x = !1,
      C = 0,
      w = 0,
      S = null,
      D = -1,
      k = null;
    const P = new Ut(),
      I = new Ut();
    let W = null;
    const X = new _t(0);
    let Z = 0,
      G = n.width,
      $ = n.height,
      ne = 1,
      U = null,
      ie = null;
    const J = new Ut(0, 0, G, $),
      V = new Ut(0, 0, G, $);
    let re = !1;
    const Ee = new af();
    let Pe = !1,
      be = !1,
      ce = null;
    const oe = new Kt(),
      me = new qe(),
      ge = new se(),
      Oe = {
        background: null,
        fog: null,
        environment: null,
        overrideMaterial: null,
        isScene: !0,
      };
    function He() {
      return S === null ? ne : 1;
    }
    let A = r;
    function j(B, fe) {
      for (let we = 0; we < B.length; we++) {
        const pe = B[we],
          ke = n.getContext(pe, fe);
        if (ke !== null) return ke;
      }
      return null;
    }
    try {
      const B = {
        alpha: !0,
        depth: i,
        stencil: o,
        antialias: a,
        premultipliedAlpha: c,
        preserveDrawingBuffer: u,
        powerPreference: d,
        failIfMajorPerformanceCaveat: f,
      };
      if (
        ("setAttribute" in n &&
          n.setAttribute("data-engine", `three.js r${rf}`),
        n.addEventListener("webglcontextlost", Ne, !1),
        n.addEventListener("webglcontextrestored", ve, !1),
        n.addEventListener("webglcontextcreationerror", Le, !1),
        A === null)
      ) {
        const fe = ["webgl2", "webgl", "experimental-webgl"];
        if (
          (y.isWebGL1Renderer === !0 && fe.shift(), (A = j(fe, B)), A === null)
        )
          throw j(fe)
            ? new Error(
                "Error creating WebGL context with your selected attributes.",
              )
            : new Error("Error creating WebGL context.");
      }
      (typeof WebGLRenderingContext < "u" &&
        A instanceof WebGLRenderingContext &&
        console.warn(
          "THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163.",
        ),
        A.getShaderPrecisionFormat === void 0 &&
          (A.getShaderPrecisionFormat = function () {
            return { rangeMin: 1, rangeMax: 1, precision: 1 };
          }));
    } catch (B) {
      throw (console.error("THREE.WebGLRenderer: " + B.message), B);
    }
    let L,
      F,
      te,
      q,
      ye,
      xe,
      Se,
      Me,
      ae,
      M,
      T,
      K,
      ue,
      he,
      _e,
      je,
      Ae,
      de,
      Y,
      Te,
      Fe,
      Re,
      $e,
      Qe;
    function gt() {
      ((L = new bR(A)),
        (F = new fR(A, L, e)),
        L.init(F),
        (Re = new nD(A, L, F)),
        (te = new QL(A, L, F)),
        (q = new _R(A)),
        (ye = new UL()),
        (xe = new eD(A, L, te, ye, F, Re, q)),
        (Se = new hR(y)),
        (Me = new vR(y)),
        (ae = new RA(A, F)),
        ($e = new uR(A, L, ae, F)),
        (M = new yR(A, ae, q, $e)),
        (T = new CR(A, M, ae, q)),
        (Y = new SR(A, F, xe)),
        (je = new pR(ye)),
        (K = new BL(y, Se, Me, L, F, $e, je)),
        (ue = new sD(y, ye)),
        (he = new NL()),
        (_e = new KL(L, F)),
        (de = new cR(y, Se, Me, te, T, p, c)),
        (Ae = new JL(y, T, F)),
        (Qe = new aD(A, q, F, te)),
        (Te = new dR(A, L, q, F)),
        (Fe = new xR(A, L, q, F)),
        (q.programs = K.programs),
        (y.capabilities = F),
        (y.extensions = L),
        (y.properties = ye),
        (y.renderLists = he),
        (y.shadowMap = Ae),
        (y.state = te),
        (y.info = q));
    }
    gt();
    const ee = new oD(y, A);
    ((this.xr = ee),
      (this.getContext = function () {
        return A;
      }),
      (this.getContextAttributes = function () {
        return A.getContextAttributes();
      }),
      (this.forceContextLoss = function () {
        const B = L.get("WEBGL_lose_context");
        B && B.loseContext();
      }),
      (this.forceContextRestore = function () {
        const B = L.get("WEBGL_lose_context");
        B && B.restoreContext();
      }),
      (this.getPixelRatio = function () {
        return ne;
      }),
      (this.setPixelRatio = function (B) {
        B !== void 0 && ((ne = B), this.setSize(G, $, !1));
      }),
      (this.getSize = function (B) {
        return B.set(G, $);
      }),
      (this.setSize = function (B, fe, we = !0) {
        if (ee.isPresenting) {
          console.warn(
            "THREE.WebGLRenderer: Can't change size while VR device is presenting.",
          );
          return;
        }
        ((G = B),
          ($ = fe),
          (n.width = Math.floor(B * ne)),
          (n.height = Math.floor(fe * ne)),
          we === !0 &&
            ((n.style.width = B + "px"), (n.style.height = fe + "px")),
          this.setViewport(0, 0, B, fe));
      }),
      (this.getDrawingBufferSize = function (B) {
        return B.set(G * ne, $ * ne).floor();
      }),
      (this.setDrawingBufferSize = function (B, fe, we) {
        ((G = B),
          ($ = fe),
          (ne = we),
          (n.width = Math.floor(B * we)),
          (n.height = Math.floor(fe * we)),
          this.setViewport(0, 0, B, fe));
      }),
      (this.getCurrentViewport = function (B) {
        return B.copy(P);
      }),
      (this.getViewport = function (B) {
        return B.copy(J);
      }),
      (this.setViewport = function (B, fe, we, pe) {
        (B.isVector4 ? J.set(B.x, B.y, B.z, B.w) : J.set(B, fe, we, pe),
          te.viewport(P.copy(J).multiplyScalar(ne).floor()));
      }),
      (this.getScissor = function (B) {
        return B.copy(V);
      }),
      (this.setScissor = function (B, fe, we, pe) {
        (B.isVector4 ? V.set(B.x, B.y, B.z, B.w) : V.set(B, fe, we, pe),
          te.scissor(I.copy(V).multiplyScalar(ne).floor()));
      }),
      (this.getScissorTest = function () {
        return re;
      }),
      (this.setScissorTest = function (B) {
        te.setScissorTest((re = B));
      }),
      (this.setOpaqueSort = function (B) {
        U = B;
      }),
      (this.setTransparentSort = function (B) {
        ie = B;
      }),
      (this.getClearColor = function (B) {
        return B.copy(de.getClearColor());
      }),
      (this.setClearColor = function () {
        de.setClearColor.apply(de, arguments);
      }),
      (this.getClearAlpha = function () {
        return de.getClearAlpha();
      }),
      (this.setClearAlpha = function () {
        de.setClearAlpha.apply(de, arguments);
      }),
      (this.clear = function (B = !0, fe = !0, we = !0) {
        let pe = 0;
        if (B) {
          let ke = !1;
          if (S !== null) {
            const Ge = S.texture.format;
            ke = Ge === mv || Ge === hv || Ge === pv;
          }
          if (ke) {
            const Ge = S.texture.type,
              Je =
                Ge === Ai ||
                Ge === Mi ||
                Ge === of ||
                Ge === ro ||
                Ge === dv ||
                Ge === fv,
              tt = de.getClearColor(),
              nt = de.getClearAlpha(),
              ft = tt.r,
              et = tt.g,
              at = tt.b;
            Je
              ? ((h[0] = ft),
                (h[1] = et),
                (h[2] = at),
                (h[3] = nt),
                A.clearBufferuiv(A.COLOR, 0, h))
              : ((v[0] = ft),
                (v[1] = et),
                (v[2] = at),
                (v[3] = nt),
                A.clearBufferiv(A.COLOR, 0, v));
          } else pe |= A.COLOR_BUFFER_BIT;
        }
        (fe && (pe |= A.DEPTH_BUFFER_BIT),
          we && (pe |= A.STENCIL_BUFFER_BIT),
          A.clear(pe));
      }),
      (this.clearColor = function () {
        this.clear(!0, !1, !1);
      }),
      (this.clearDepth = function () {
        this.clear(!1, !0, !1);
      }),
      (this.clearStencil = function () {
        this.clear(!1, !1, !0);
      }),
      (this.dispose = function () {
        (n.removeEventListener("webglcontextlost", Ne, !1),
          n.removeEventListener("webglcontextrestored", ve, !1),
          n.removeEventListener("webglcontextcreationerror", Le, !1),
          he.dispose(),
          _e.dispose(),
          ye.dispose(),
          Se.dispose(),
          Me.dispose(),
          T.dispose(),
          $e.dispose(),
          Qe.dispose(),
          K.dispose(),
          ee.dispose(),
          ee.removeEventListener("sessionstart", Ot),
          ee.removeEventListener("sessionend", kr),
          ce && (ce.dispose(), (ce = null)),
          _n.stop());
      }));
    function Ne(B) {
      (B.preventDefault(),
        console.log("THREE.WebGLRenderer: Context Lost."),
        (x = !0));
    }
    function ve() {
      (console.log("THREE.WebGLRenderer: Context Restored."), (x = !1));
      const B = q.autoReset,
        fe = Ae.enabled,
        we = Ae.autoUpdate,
        pe = Ae.needsUpdate,
        ke = Ae.type;
      (gt(),
        (q.autoReset = B),
        (Ae.enabled = fe),
        (Ae.autoUpdate = we),
        (Ae.needsUpdate = pe),
        (Ae.type = ke));
    }
    function Le(B) {
      console.error(
        "THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",
        B.statusMessage,
      );
    }
    function ze(B) {
      const fe = B.target;
      (fe.removeEventListener("dispose", ze), dt(fe));
    }
    function dt(B) {
      (St(B), ye.remove(B));
    }
    function St(B) {
      const fe = ye.get(B).programs;
      fe !== void 0 &&
        (fe.forEach(function (we) {
          K.releaseProgram(we);
        }),
        B.isShaderMaterial && K.releaseShaderCache(B));
    }
    ((this.renderBufferDirect = function (B, fe, we, pe, ke, Ge) {
      fe === null && (fe = Oe);
      const Je = ke.isMesh && ke.matrixWorld.determinant() < 0,
        tt = ub(B, fe, we, pe, ke);
      te.setMaterial(pe, Je);
      let nt = we.index,
        ft = 1;
      if (pe.wireframe === !0) {
        if (((nt = M.getWireframeAttribute(we)), nt === void 0)) return;
        ft = 2;
      }
      const et = we.drawRange,
        at = we.attributes.position;
      let jt = et.start * ft,
        Gt = (et.start + et.count) * ft;
      (Ge !== null &&
        ((jt = Math.max(jt, Ge.start * ft)),
        (Gt = Math.min(Gt, (Ge.start + Ge.count) * ft))),
        nt !== null
          ? ((jt = Math.max(jt, 0)), (Gt = Math.min(Gt, nt.count)))
          : at != null &&
            ((jt = Math.max(jt, 0)), (Gt = Math.min(Gt, at.count))));
      const Yn = Gt - jt;
      if (Yn < 0 || Yn === 1 / 0) return;
      $e.setup(ke, pe, tt, we, nt);
      let Or,
        Xt = Te;
      if (
        (nt !== null && ((Or = ae.get(nt)), (Xt = Fe), Xt.setIndex(Or)),
        ke.isMesh)
      )
        pe.wireframe === !0
          ? (te.setLineWidth(pe.wireframeLinewidth * He()), Xt.setMode(A.LINES))
          : Xt.setMode(A.TRIANGLES);
      else if (ke.isLine) {
        let pt = pe.linewidth;
        (pt === void 0 && (pt = 1),
          te.setLineWidth(pt * He()),
          ke.isLineSegments
            ? Xt.setMode(A.LINES)
            : ke.isLineLoop
              ? Xt.setMode(A.LINE_LOOP)
              : Xt.setMode(A.LINE_STRIP));
      } else
        ke.isPoints
          ? Xt.setMode(A.POINTS)
          : ke.isSprite && Xt.setMode(A.TRIANGLES);
      if (ke.isInstancedMesh) Xt.renderInstances(jt, Yn, ke.count);
      else if (we.isInstancedBufferGeometry) {
        const pt =
            we._maxInstanceCount !== void 0 ? we._maxInstanceCount : 1 / 0,
          Ic = Math.min(we.instanceCount, pt);
        Xt.renderInstances(jt, Yn, Ic);
      } else Xt.render(jt, Yn);
    }),
      (this.compile = function (B, fe) {
        function we(pe, ke, Ge) {
          pe.transparent === !0 && pe.side === rr && pe.forceSinglePass === !1
            ? ((pe.side = $n),
              (pe.needsUpdate = !0),
              Ka(pe, ke, Ge),
              (pe.side = Dr),
              (pe.needsUpdate = !0),
              Ka(pe, ke, Ge),
              (pe.side = rr))
            : Ka(pe, ke, Ge);
        }
        ((g = _e.get(B)),
          g.init(),
          _.push(g),
          B.traverseVisible(function (pe) {
            pe.isLight &&
              pe.layers.test(fe.layers) &&
              (g.pushLight(pe), pe.castShadow && g.pushShadow(pe));
          }),
          g.setupLights(y._useLegacyLights),
          B.traverse(function (pe) {
            const ke = pe.material;
            if (ke)
              if (Array.isArray(ke))
                for (let Ge = 0; Ge < ke.length; Ge++) {
                  const Je = ke[Ge];
                  we(Je, B, pe);
                }
              else we(ke, B, pe);
          }),
          _.pop(),
          (g = null));
      }));
    let Rt = null;
    function zn(B) {
      Rt && Rt(B);
    }
    function Ot() {
      _n.stop();
    }
    function kr() {
      _n.start();
    }
    const _n = new Lv();
    (_n.setAnimationLoop(zn),
      typeof self < "u" && _n.setContext(self),
      (this.setAnimationLoop = function (B) {
        ((Rt = B), ee.setAnimationLoop(B), B === null ? _n.stop() : _n.start());
      }),
      ee.addEventListener("sessionstart", Ot),
      ee.addEventListener("sessionend", kr),
      (this.render = function (B, fe) {
        if (fe !== void 0 && fe.isCamera !== !0) {
          console.error(
            "THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.",
          );
          return;
        }
        if (x === !0) return;
        (B.matrixWorldAutoUpdate === !0 && B.updateMatrixWorld(),
          fe.parent === null &&
            fe.matrixWorldAutoUpdate === !0 &&
            fe.updateMatrixWorld(),
          ee.enabled === !0 &&
            ee.isPresenting === !0 &&
            (ee.cameraAutoUpdate === !0 && ee.updateCamera(fe),
            (fe = ee.getCamera())),
          B.isScene === !0 && B.onBeforeRender(y, B, fe, S),
          (g = _e.get(B, _.length)),
          g.init(),
          _.push(g),
          oe.multiplyMatrices(fe.projectionMatrix, fe.matrixWorldInverse),
          Ee.setFromProjectionMatrix(oe),
          (be = this.localClippingEnabled),
          (Pe = je.init(this.clippingPlanes, be)),
          (b = he.get(B, m.length)),
          b.init(),
          m.push(b),
          bf(B, fe, 0, y.sortObjects),
          b.finish(),
          y.sortObjects === !0 && b.sort(U, ie),
          this.info.render.frame++,
          Pe === !0 && je.beginShadows());
        const we = g.state.shadowsArray;
        if (
          (Ae.render(we, B, fe),
          Pe === !0 && je.endShadows(),
          this.info.autoReset === !0 && this.info.reset(),
          de.render(b, B),
          g.setupLights(y._useLegacyLights),
          fe.isArrayCamera)
        ) {
          const pe = fe.cameras;
          for (let ke = 0, Ge = pe.length; ke < Ge; ke++) {
            const Je = pe[ke];
            yf(b, B, Je, Je.viewport);
          }
        } else yf(b, B, fe);
        (S !== null &&
          (xe.updateMultisampleRenderTarget(S), xe.updateRenderTargetMipmap(S)),
          B.isScene === !0 && B.onAfterRender(y, B, fe),
          $e.resetDefaultState(),
          (D = -1),
          (k = null),
          _.pop(),
          _.length > 0 ? (g = _[_.length - 1]) : (g = null),
          m.pop(),
          m.length > 0 ? (b = m[m.length - 1]) : (b = null));
      }));
    function bf(B, fe, we, pe) {
      if (B.visible === !1) return;
      if (B.layers.test(fe.layers)) {
        if (B.isGroup) we = B.renderOrder;
        else if (B.isLOD) B.autoUpdate === !0 && B.update(fe);
        else if (B.isLight) (g.pushLight(B), B.castShadow && g.pushShadow(B));
        else if (B.isSprite) {
          if (!B.frustumCulled || Ee.intersectsSprite(B)) {
            pe && ge.setFromMatrixPosition(B.matrixWorld).applyMatrix4(oe);
            const Je = T.update(B),
              tt = B.material;
            tt.visible && b.push(B, Je, tt, we, ge.z, null);
          }
        } else if (
          (B.isMesh || B.isLine || B.isPoints) &&
          (!B.frustumCulled || Ee.intersectsObject(B))
        ) {
          const Je = T.update(B),
            tt = B.material;
          if (
            (pe &&
              (B.boundingSphere !== void 0
                ? (B.boundingSphere === null && B.computeBoundingSphere(),
                  ge.copy(B.boundingSphere.center))
                : (Je.boundingSphere === null && Je.computeBoundingSphere(),
                  ge.copy(Je.boundingSphere.center)),
              ge.applyMatrix4(B.matrixWorld).applyMatrix4(oe)),
            Array.isArray(tt))
          ) {
            const nt = Je.groups;
            for (let ft = 0, et = nt.length; ft < et; ft++) {
              const at = nt[ft],
                jt = tt[at.materialIndex];
              jt && jt.visible && b.push(B, Je, jt, we, ge.z, at);
            }
          } else tt.visible && b.push(B, Je, tt, we, ge.z, null);
        }
      }
      const Ge = B.children;
      for (let Je = 0, tt = Ge.length; Je < tt; Je++) bf(Ge[Je], fe, we, pe);
    }
    function yf(B, fe, we, pe) {
      const ke = B.opaque,
        Ge = B.transmissive,
        Je = B.transparent;
      (g.setupLightsView(we),
        Pe === !0 && je.setGlobalState(y.clippingPlanes, we),
        Ge.length > 0 && cb(ke, Ge, fe, we),
        pe && te.viewport(P.copy(pe)),
        ke.length > 0 && Wa(ke, fe, we),
        Ge.length > 0 && Wa(Ge, fe, we),
        Je.length > 0 && Wa(Je, fe, we),
        te.buffers.depth.setTest(!0),
        te.buffers.depth.setMask(!0),
        te.buffers.color.setMask(!0),
        te.setPolygonOffset(!1));
    }
    function cb(B, fe, we, pe) {
      const ke = F.isWebGL2;
      (ce === null &&
        (ce = new ai(1, 1, {
          generateMipmaps: !0,
          type: L.has("EXT_color_buffer_half_float") ? ls : Ai,
          minFilter: wa,
          samples: ke ? 4 : 0,
        })),
        y.getDrawingBufferSize(me),
        ke ? ce.setSize(me.x, me.y) : ce.setSize(hd(me.x), hd(me.y)));
      const Ge = y.getRenderTarget();
      (y.setRenderTarget(ce),
        y.getClearColor(X),
        (Z = y.getClearAlpha()),
        Z < 1 && y.setClearColor(16777215, 0.5),
        y.clear());
      const Je = y.toneMapping;
      ((y.toneMapping = Ti),
        Wa(B, we, pe),
        xe.updateMultisampleRenderTarget(ce),
        xe.updateRenderTargetMipmap(ce));
      let tt = !1;
      for (let nt = 0, ft = fe.length; nt < ft; nt++) {
        const et = fe[nt],
          at = et.object,
          jt = et.geometry,
          Gt = et.material,
          Yn = et.group;
        if (Gt.side === rr && at.layers.test(pe.layers)) {
          const Or = Gt.side;
          ((Gt.side = $n),
            (Gt.needsUpdate = !0),
            xf(at, we, pe, jt, Gt, Yn),
            (Gt.side = Or),
            (Gt.needsUpdate = !0),
            (tt = !0));
        }
      }
      (tt === !0 &&
        (xe.updateMultisampleRenderTarget(ce), xe.updateRenderTargetMipmap(ce)),
        y.setRenderTarget(Ge),
        y.setClearColor(X, Z),
        (y.toneMapping = Je));
    }
    function Wa(B, fe, we) {
      const pe = fe.isScene === !0 ? fe.overrideMaterial : null;
      for (let ke = 0, Ge = B.length; ke < Ge; ke++) {
        const Je = B[ke],
          tt = Je.object,
          nt = Je.geometry,
          ft = pe === null ? Je.material : pe,
          et = Je.group;
        tt.layers.test(we.layers) && xf(tt, fe, we, nt, ft, et);
      }
    }
    function xf(B, fe, we, pe, ke, Ge) {
      (B.onBeforeRender(y, fe, we, pe, ke, Ge),
        B.modelViewMatrix.multiplyMatrices(
          we.matrixWorldInverse,
          B.matrixWorld,
        ),
        B.normalMatrix.getNormalMatrix(B.modelViewMatrix),
        ke.onBeforeRender(y, fe, we, pe, B, Ge),
        ke.transparent === !0 && ke.side === rr && ke.forceSinglePass === !1
          ? ((ke.side = $n),
            (ke.needsUpdate = !0),
            y.renderBufferDirect(we, fe, pe, ke, B, Ge),
            (ke.side = Dr),
            (ke.needsUpdate = !0),
            y.renderBufferDirect(we, fe, pe, ke, B, Ge),
            (ke.side = rr))
          : y.renderBufferDirect(we, fe, pe, ke, B, Ge),
        B.onAfterRender(y, fe, we, pe, ke, Ge));
    }
    function Ka(B, fe, we) {
      fe.isScene !== !0 && (fe = Oe);
      const pe = ye.get(B),
        ke = g.state.lights,
        Ge = g.state.shadowsArray,
        Je = ke.state.version,
        tt = K.getParameters(B, ke.state, Ge, fe, we),
        nt = K.getProgramCacheKey(tt);
      let ft = pe.programs;
      ((pe.environment = B.isMeshStandardMaterial ? fe.environment : null),
        (pe.fog = fe.fog),
        (pe.envMap = (B.isMeshStandardMaterial ? Me : Se).get(
          B.envMap || pe.environment,
        )),
        ft === void 0 &&
          (B.addEventListener("dispose", ze),
          (ft = new Map()),
          (pe.programs = ft)));
      let et = ft.get(nt);
      if (et !== void 0) {
        if (pe.currentProgram === et && pe.lightsStateVersion === Je)
          return (_f(B, tt), et);
      } else
        ((tt.uniforms = K.getUniforms(B)),
          B.onBuild(we, tt, y),
          B.onBeforeCompile(tt, y),
          (et = K.acquireProgram(tt, nt)),
          ft.set(nt, et),
          (pe.uniforms = tt.uniforms));
      const at = pe.uniforms;
      (((!B.isShaderMaterial && !B.isRawShaderMaterial) || B.clipping === !0) &&
        (at.clippingPlanes = je.uniform),
        _f(B, tt),
        (pe.needsLights = fb(B)),
        (pe.lightsStateVersion = Je),
        pe.needsLights &&
          ((at.ambientLightColor.value = ke.state.ambient),
          (at.lightProbe.value = ke.state.probe),
          (at.directionalLights.value = ke.state.directional),
          (at.directionalLightShadows.value = ke.state.directionalShadow),
          (at.spotLights.value = ke.state.spot),
          (at.spotLightShadows.value = ke.state.spotShadow),
          (at.rectAreaLights.value = ke.state.rectArea),
          (at.ltc_1.value = ke.state.rectAreaLTC1),
          (at.ltc_2.value = ke.state.rectAreaLTC2),
          (at.pointLights.value = ke.state.point),
          (at.pointLightShadows.value = ke.state.pointShadow),
          (at.hemisphereLights.value = ke.state.hemi),
          (at.directionalShadowMap.value = ke.state.directionalShadowMap),
          (at.directionalShadowMatrix.value = ke.state.directionalShadowMatrix),
          (at.spotShadowMap.value = ke.state.spotShadowMap),
          (at.spotLightMatrix.value = ke.state.spotLightMatrix),
          (at.spotLightMap.value = ke.state.spotLightMap),
          (at.pointShadowMap.value = ke.state.pointShadowMap),
          (at.pointShadowMatrix.value = ke.state.pointShadowMatrix)));
      const jt = et.getUniforms(),
        Gt = Ul.seqWithValue(jt.seq, at);
      return ((pe.currentProgram = et), (pe.uniformsList = Gt), et);
    }
    function _f(B, fe) {
      const we = ye.get(B);
      ((we.outputColorSpace = fe.outputColorSpace),
        (we.instancing = fe.instancing),
        (we.instancingColor = fe.instancingColor),
        (we.skinning = fe.skinning),
        (we.morphTargets = fe.morphTargets),
        (we.morphNormals = fe.morphNormals),
        (we.morphColors = fe.morphColors),
        (we.morphTargetsCount = fe.morphTargetsCount),
        (we.numClippingPlanes = fe.numClippingPlanes),
        (we.numIntersection = fe.numClipIntersection),
        (we.vertexAlphas = fe.vertexAlphas),
        (we.vertexTangents = fe.vertexTangents),
        (we.toneMapping = fe.toneMapping));
    }
    function ub(B, fe, we, pe, ke) {
      (fe.isScene !== !0 && (fe = Oe), xe.resetTextureUnits());
      const Ge = fe.fog,
        Je = pe.isMeshStandardMaterial ? fe.environment : null,
        tt =
          S === null
            ? y.outputColorSpace
            : S.isXRRenderTarget === !0
              ? S.texture.colorSpace
              : Ir,
        nt = (pe.isMeshStandardMaterial ? Me : Se).get(pe.envMap || Je),
        ft =
          pe.vertexColors === !0 &&
          !!we.attributes.color &&
          we.attributes.color.itemSize === 4,
        et = !!we.attributes.tangent && (!!pe.normalMap || pe.anisotropy > 0),
        at = !!we.morphAttributes.position,
        jt = !!we.morphAttributes.normal,
        Gt = !!we.morphAttributes.color;
      let Yn = Ti;
      pe.toneMapped &&
        (S === null || S.isXRRenderTarget === !0) &&
        (Yn = y.toneMapping);
      const Or =
          we.morphAttributes.position ||
          we.morphAttributes.normal ||
          we.morphAttributes.color,
        Xt = Or !== void 0 ? Or.length : 0,
        pt = ye.get(pe),
        Ic = g.state.lights;
      if (Pe === !0 && (be === !0 || B !== k)) {
        const Bn = B === k && pe.id === D;
        je.setState(pe, B, Bn);
      }
      let Yt = !1;
      pe.version === pt.__version
        ? ((pt.needsLights && pt.lightsStateVersion !== Ic.state.version) ||
            pt.outputColorSpace !== tt ||
            (ke.isInstancedMesh && pt.instancing === !1) ||
            (!ke.isInstancedMesh && pt.instancing === !0) ||
            (ke.isSkinnedMesh && pt.skinning === !1) ||
            (!ke.isSkinnedMesh && pt.skinning === !0) ||
            (ke.isInstancedMesh &&
              pt.instancingColor === !0 &&
              ke.instanceColor === null) ||
            (ke.isInstancedMesh &&
              pt.instancingColor === !1 &&
              ke.instanceColor !== null) ||
            pt.envMap !== nt ||
            (pe.fog === !0 && pt.fog !== Ge) ||
            (pt.numClippingPlanes !== void 0 &&
              (pt.numClippingPlanes !== je.numPlanes ||
                pt.numIntersection !== je.numIntersection)) ||
            pt.vertexAlphas !== ft ||
            pt.vertexTangents !== et ||
            pt.morphTargets !== at ||
            pt.morphNormals !== jt ||
            pt.morphColors !== Gt ||
            pt.toneMapping !== Yn ||
            (F.isWebGL2 === !0 && pt.morphTargetsCount !== Xt)) &&
          (Yt = !0)
        : ((Yt = !0), (pt.__version = pe.version));
      let $i = pt.currentProgram;
      Yt === !0 && ($i = Ka(pe, fe, ke));
      let wf = !1,
        hs = !1,
        Oc = !1;
      const wn = $i.getUniforms(),
        zi = pt.uniforms;
      if (
        (te.useProgram($i.program) && ((wf = !0), (hs = !0), (Oc = !0)),
        pe.id !== D && ((D = pe.id), (hs = !0)),
        wf || k !== B)
      ) {
        (wn.setValue(A, "projectionMatrix", B.projectionMatrix),
          wn.setValue(A, "viewMatrix", B.matrixWorldInverse));
        const Bn = wn.map.cameraPosition;
        (Bn !== void 0 &&
          Bn.setValue(A, ge.setFromMatrixPosition(B.matrixWorld)),
          F.logarithmicDepthBuffer &&
            wn.setValue(
              A,
              "logDepthBufFC",
              2 / (Math.log(B.far + 1) / Math.LN2),
            ),
          (pe.isMeshPhongMaterial ||
            pe.isMeshToonMaterial ||
            pe.isMeshLambertMaterial ||
            pe.isMeshBasicMaterial ||
            pe.isMeshStandardMaterial ||
            pe.isShaderMaterial) &&
            wn.setValue(A, "isOrthographic", B.isOrthographicCamera === !0),
          k !== B && ((k = B), (hs = !0), (Oc = !0)));
      }
      if (ke.isSkinnedMesh) {
        (wn.setOptional(A, ke, "bindMatrix"),
          wn.setOptional(A, ke, "bindMatrixInverse"));
        const Bn = ke.skeleton;
        Bn &&
          (F.floatVertexTextures
            ? (Bn.boneTexture === null && Bn.computeBoneTexture(),
              wn.setValue(A, "boneTexture", Bn.boneTexture, xe),
              wn.setValue(A, "boneTextureSize", Bn.boneTextureSize))
            : console.warn(
                "THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.",
              ));
      }
      const $c = we.morphAttributes;
      if (
        (($c.position !== void 0 ||
          $c.normal !== void 0 ||
          ($c.color !== void 0 && F.isWebGL2 === !0)) &&
          Y.update(ke, we, $i),
        (hs || pt.receiveShadow !== ke.receiveShadow) &&
          ((pt.receiveShadow = ke.receiveShadow),
          wn.setValue(A, "receiveShadow", ke.receiveShadow)),
        pe.isMeshGouraudMaterial &&
          pe.envMap !== null &&
          ((zi.envMap.value = nt),
          (zi.flipEnvMap.value =
            nt.isCubeTexture && nt.isRenderTargetTexture === !1 ? -1 : 1)),
        hs &&
          (wn.setValue(A, "toneMappingExposure", y.toneMappingExposure),
          pt.needsLights && db(zi, Oc),
          Ge && pe.fog === !0 && ue.refreshFogUniforms(zi, Ge),
          ue.refreshMaterialUniforms(zi, pe, ne, $, ce),
          Ul.upload(A, pt.uniformsList, zi, xe)),
        pe.isShaderMaterial &&
          pe.uniformsNeedUpdate === !0 &&
          (Ul.upload(A, pt.uniformsList, zi, xe), (pe.uniformsNeedUpdate = !1)),
        pe.isSpriteMaterial && wn.setValue(A, "center", ke.center),
        wn.setValue(A, "modelViewMatrix", ke.modelViewMatrix),
        wn.setValue(A, "normalMatrix", ke.normalMatrix),
        wn.setValue(A, "modelMatrix", ke.matrixWorld),
        pe.isShaderMaterial || pe.isRawShaderMaterial)
      ) {
        const Bn = pe.uniformsGroups;
        for (let zc = 0, pb = Bn.length; zc < pb; zc++)
          if (F.isWebGL2) {
            const kf = Bn[zc];
            (Qe.update(kf, $i), Qe.bind(kf, $i));
          } else
            console.warn(
              "THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.",
            );
      }
      return $i;
    }
    function db(B, fe) {
      ((B.ambientLightColor.needsUpdate = fe),
        (B.lightProbe.needsUpdate = fe),
        (B.directionalLights.needsUpdate = fe),
        (B.directionalLightShadows.needsUpdate = fe),
        (B.pointLights.needsUpdate = fe),
        (B.pointLightShadows.needsUpdate = fe),
        (B.spotLights.needsUpdate = fe),
        (B.spotLightShadows.needsUpdate = fe),
        (B.rectAreaLights.needsUpdate = fe),
        (B.hemisphereLights.needsUpdate = fe));
    }
    function fb(B) {
      return (
        B.isMeshLambertMaterial ||
        B.isMeshToonMaterial ||
        B.isMeshPhongMaterial ||
        B.isMeshStandardMaterial ||
        B.isShadowMaterial ||
        (B.isShaderMaterial && B.lights === !0)
      );
    }
    ((this.getActiveCubeFace = function () {
      return C;
    }),
      (this.getActiveMipmapLevel = function () {
        return w;
      }),
      (this.getRenderTarget = function () {
        return S;
      }),
      (this.setRenderTargetTextures = function (B, fe, we) {
        ((ye.get(B.texture).__webglTexture = fe),
          (ye.get(B.depthTexture).__webglTexture = we));
        const pe = ye.get(B);
        ((pe.__hasExternalTextures = !0),
          pe.__hasExternalTextures &&
            ((pe.__autoAllocateDepthBuffer = we === void 0),
            pe.__autoAllocateDepthBuffer ||
              (L.has("WEBGL_multisampled_render_to_texture") === !0 &&
                (console.warn(
                  "THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided",
                ),
                (pe.__useRenderToTexture = !1)))));
      }),
      (this.setRenderTargetFramebuffer = function (B, fe) {
        const we = ye.get(B);
        ((we.__webglFramebuffer = fe),
          (we.__useDefaultFramebuffer = fe === void 0));
      }),
      (this.setRenderTarget = function (B, fe = 0, we = 0) {
        ((S = B), (C = fe), (w = we));
        let pe = !0,
          ke = null,
          Ge = !1,
          Je = !1;
        if (B) {
          const nt = ye.get(B);
          nt.__useDefaultFramebuffer !== void 0
            ? (te.bindFramebuffer(A.FRAMEBUFFER, null), (pe = !1))
            : nt.__webglFramebuffer === void 0
              ? xe.setupRenderTarget(B)
              : nt.__hasExternalTextures &&
                xe.rebindTextures(
                  B,
                  ye.get(B.texture).__webglTexture,
                  ye.get(B.depthTexture).__webglTexture,
                );
          const ft = B.texture;
          (ft.isData3DTexture ||
            ft.isDataArrayTexture ||
            ft.isCompressedArrayTexture) &&
            (Je = !0);
          const et = ye.get(B).__webglFramebuffer;
          (B.isWebGLCubeRenderTarget
            ? (Array.isArray(et[fe]) ? (ke = et[fe][we]) : (ke = et[fe]),
              (Ge = !0))
            : F.isWebGL2 && B.samples > 0 && xe.useMultisampledRTT(B) === !1
              ? (ke = ye.get(B).__webglMultisampledFramebuffer)
              : Array.isArray(et)
                ? (ke = et[we])
                : (ke = et),
            P.copy(B.viewport),
            I.copy(B.scissor),
            (W = B.scissorTest));
        } else
          (P.copy(J).multiplyScalar(ne).floor(),
            I.copy(V).multiplyScalar(ne).floor(),
            (W = re));
        if (
          (te.bindFramebuffer(A.FRAMEBUFFER, ke) &&
            F.drawBuffers &&
            pe &&
            te.drawBuffers(B, ke),
          te.viewport(P),
          te.scissor(I),
          te.setScissorTest(W),
          Ge)
        ) {
          const nt = ye.get(B.texture);
          A.framebufferTexture2D(
            A.FRAMEBUFFER,
            A.COLOR_ATTACHMENT0,
            A.TEXTURE_CUBE_MAP_POSITIVE_X + fe,
            nt.__webglTexture,
            we,
          );
        } else if (Je) {
          const nt = ye.get(B.texture),
            ft = fe || 0;
          A.framebufferTextureLayer(
            A.FRAMEBUFFER,
            A.COLOR_ATTACHMENT0,
            nt.__webglTexture,
            we || 0,
            ft,
          );
        }
        D = -1;
      }),
      (this.readRenderTargetPixels = function (B, fe, we, pe, ke, Ge, Je) {
        if (!(B && B.isWebGLRenderTarget)) {
          console.error(
            "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.",
          );
          return;
        }
        let tt = ye.get(B).__webglFramebuffer;
        if ((B.isWebGLCubeRenderTarget && Je !== void 0 && (tt = tt[Je]), tt)) {
          te.bindFramebuffer(A.FRAMEBUFFER, tt);
          try {
            const nt = B.texture,
              ft = nt.format,
              et = nt.type;
            if (
              ft !== gr &&
              Re.convert(ft) !==
                A.getParameter(A.IMPLEMENTATION_COLOR_READ_FORMAT)
            ) {
              console.error(
                "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.",
              );
              return;
            }
            const at =
              et === ls &&
              (L.has("EXT_color_buffer_half_float") ||
                (F.isWebGL2 && L.has("EXT_color_buffer_float")));
            if (
              et !== Ai &&
              Re.convert(et) !==
                A.getParameter(A.IMPLEMENTATION_COLOR_READ_TYPE) &&
              !(
                et === Jr &&
                (F.isWebGL2 ||
                  L.has("OES_texture_float") ||
                  L.has("WEBGL_color_buffer_float"))
              ) &&
              !at
            ) {
              console.error(
                "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.",
              );
              return;
            }
            fe >= 0 &&
              fe <= B.width - pe &&
              we >= 0 &&
              we <= B.height - ke &&
              A.readPixels(fe, we, pe, ke, Re.convert(ft), Re.convert(et), Ge);
          } finally {
            const nt = S !== null ? ye.get(S).__webglFramebuffer : null;
            te.bindFramebuffer(A.FRAMEBUFFER, nt);
          }
        }
      }),
      (this.copyFramebufferToTexture = function (B, fe, we = 0) {
        const pe = Math.pow(2, -we),
          ke = Math.floor(fe.image.width * pe),
          Ge = Math.floor(fe.image.height * pe);
        (xe.setTexture2D(fe, 0),
          A.copyTexSubImage2D(A.TEXTURE_2D, we, 0, 0, B.x, B.y, ke, Ge),
          te.unbindTexture());
      }),
      (this.copyTextureToTexture = function (B, fe, we, pe = 0) {
        const ke = fe.image.width,
          Ge = fe.image.height,
          Je = Re.convert(we.format),
          tt = Re.convert(we.type);
        (xe.setTexture2D(we, 0),
          A.pixelStorei(A.UNPACK_FLIP_Y_WEBGL, we.flipY),
          A.pixelStorei(A.UNPACK_PREMULTIPLY_ALPHA_WEBGL, we.premultiplyAlpha),
          A.pixelStorei(A.UNPACK_ALIGNMENT, we.unpackAlignment),
          fe.isDataTexture
            ? A.texSubImage2D(
                A.TEXTURE_2D,
                pe,
                B.x,
                B.y,
                ke,
                Ge,
                Je,
                tt,
                fe.image.data,
              )
            : fe.isCompressedTexture
              ? A.compressedTexSubImage2D(
                  A.TEXTURE_2D,
                  pe,
                  B.x,
                  B.y,
                  fe.mipmaps[0].width,
                  fe.mipmaps[0].height,
                  Je,
                  fe.mipmaps[0].data,
                )
              : A.texSubImage2D(A.TEXTURE_2D, pe, B.x, B.y, Je, tt, fe.image),
          pe === 0 && we.generateMipmaps && A.generateMipmap(A.TEXTURE_2D),
          te.unbindTexture());
      }),
      (this.copyTextureToTexture3D = function (B, fe, we, pe, ke = 0) {
        if (y.isWebGL1Renderer) {
          console.warn(
            "THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.",
          );
          return;
        }
        const Ge = B.max.x - B.min.x + 1,
          Je = B.max.y - B.min.y + 1,
          tt = B.max.z - B.min.z + 1,
          nt = Re.convert(pe.format),
          ft = Re.convert(pe.type);
        let et;
        if (pe.isData3DTexture) (xe.setTexture3D(pe, 0), (et = A.TEXTURE_3D));
        else if (pe.isDataArrayTexture)
          (xe.setTexture2DArray(pe, 0), (et = A.TEXTURE_2D_ARRAY));
        else {
          console.warn(
            "THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.",
          );
          return;
        }
        (A.pixelStorei(A.UNPACK_FLIP_Y_WEBGL, pe.flipY),
          A.pixelStorei(A.UNPACK_PREMULTIPLY_ALPHA_WEBGL, pe.premultiplyAlpha),
          A.pixelStorei(A.UNPACK_ALIGNMENT, pe.unpackAlignment));
        const at = A.getParameter(A.UNPACK_ROW_LENGTH),
          jt = A.getParameter(A.UNPACK_IMAGE_HEIGHT),
          Gt = A.getParameter(A.UNPACK_SKIP_PIXELS),
          Yn = A.getParameter(A.UNPACK_SKIP_ROWS),
          Or = A.getParameter(A.UNPACK_SKIP_IMAGES),
          Xt = we.isCompressedTexture ? we.mipmaps[0] : we.image;
        (A.pixelStorei(A.UNPACK_ROW_LENGTH, Xt.width),
          A.pixelStorei(A.UNPACK_IMAGE_HEIGHT, Xt.height),
          A.pixelStorei(A.UNPACK_SKIP_PIXELS, B.min.x),
          A.pixelStorei(A.UNPACK_SKIP_ROWS, B.min.y),
          A.pixelStorei(A.UNPACK_SKIP_IMAGES, B.min.z),
          we.isDataTexture || we.isData3DTexture
            ? A.texSubImage3D(
                et,
                ke,
                fe.x,
                fe.y,
                fe.z,
                Ge,
                Je,
                tt,
                nt,
                ft,
                Xt.data,
              )
            : we.isCompressedArrayTexture
              ? (console.warn(
                  "THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.",
                ),
                A.compressedTexSubImage3D(
                  et,
                  ke,
                  fe.x,
                  fe.y,
                  fe.z,
                  Ge,
                  Je,
                  tt,
                  nt,
                  Xt.data,
                ))
              : A.texSubImage3D(
                  et,
                  ke,
                  fe.x,
                  fe.y,
                  fe.z,
                  Ge,
                  Je,
                  tt,
                  nt,
                  ft,
                  Xt,
                ),
          A.pixelStorei(A.UNPACK_ROW_LENGTH, at),
          A.pixelStorei(A.UNPACK_IMAGE_HEIGHT, jt),
          A.pixelStorei(A.UNPACK_SKIP_PIXELS, Gt),
          A.pixelStorei(A.UNPACK_SKIP_ROWS, Yn),
          A.pixelStorei(A.UNPACK_SKIP_IMAGES, Or),
          ke === 0 && pe.generateMipmaps && A.generateMipmap(et),
          te.unbindTexture());
      }),
      (this.initTexture = function (B) {
        (B.isCubeTexture
          ? xe.setTextureCube(B, 0)
          : B.isData3DTexture
            ? xe.setTexture3D(B, 0)
            : B.isDataArrayTexture || B.isCompressedArrayTexture
              ? xe.setTexture2DArray(B, 0)
              : xe.setTexture2D(B, 0),
          te.unbindTexture());
      }),
      (this.resetState = function () {
        ((C = 0), (w = 0), (S = null), te.reset(), $e.reset());
      }),
      typeof __THREE_DEVTOOLS__ < "u" &&
        __THREE_DEVTOOLS__.dispatchEvent(
          new CustomEvent("observe", { detail: this }),
        ));
  }
  get coordinateSystem() {
    return Qr;
  }
  get physicallyCorrectLights() {
    return (
      console.warn(
        "THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.",
      ),
      !this.useLegacyLights
    );
  }
  set physicallyCorrectLights(e) {
    (console.warn(
      "THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.",
    ),
      (this.useLegacyLights = !e));
  }
  get outputEncoding() {
    return (
      console.warn(
        "THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.",
      ),
      this.outputColorSpace === Bt ? oo : gv
    );
  }
  set outputEncoding(e) {
    (console.warn(
      "THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.",
    ),
      (this.outputColorSpace = e === oo ? Bt : Ir));
  }
  get useLegacyLights() {
    return (
      console.warn(
        "THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.",
      ),
      this._useLegacyLights
    );
  }
  set useLegacyLights(e) {
    (console.warn(
      "THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.",
    ),
      (this._useLegacyLights = e));
  }
}
class lD extends Uv {}
lD.prototype.isWebGL1Renderer = !0;
class cD extends xn {
  constructor() {
    (super(),
      (this.isScene = !0),
      (this.type = "Scene"),
      (this.background = null),
      (this.environment = null),
      (this.fog = null),
      (this.backgroundBlurriness = 0),
      (this.backgroundIntensity = 1),
      (this.overrideMaterial = null),
      typeof __THREE_DEVTOOLS__ < "u" &&
        __THREE_DEVTOOLS__.dispatchEvent(
          new CustomEvent("observe", { detail: this }),
        ));
  }
  copy(e, n) {
    return (
      super.copy(e, n),
      e.background !== null && (this.background = e.background.clone()),
      e.environment !== null && (this.environment = e.environment.clone()),
      e.fog !== null && (this.fog = e.fog.clone()),
      (this.backgroundBlurriness = e.backgroundBlurriness),
      (this.backgroundIntensity = e.backgroundIntensity),
      e.overrideMaterial !== null &&
        (this.overrideMaterial = e.overrideMaterial.clone()),
      (this.matrixAutoUpdate = e.matrixAutoUpdate),
      this
    );
  }
  toJSON(e) {
    const n = super.toJSON(e);
    return (
      this.fog !== null && (n.object.fog = this.fog.toJSON()),
      this.backgroundBlurriness > 0 &&
        (n.object.backgroundBlurriness = this.backgroundBlurriness),
      this.backgroundIntensity !== 1 &&
        (n.object.backgroundIntensity = this.backgroundIntensity),
      n
    );
  }
}
class uD {
  constructor(e, n) {
    ((this.isInterleavedBuffer = !0),
      (this.array = e),
      (this.stride = n),
      (this.count = e !== void 0 ? e.length / n : 0),
      (this.usage = dd),
      (this.updateRange = { offset: 0, count: -1 }),
      (this.version = 0),
      (this.uuid = Pi()));
  }
  onUploadCallback() {}
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
  setUsage(e) {
    return ((this.usage = e), this);
  }
  copy(e) {
    return (
      (this.array = new e.array.constructor(e.array)),
      (this.count = e.count),
      (this.stride = e.stride),
      (this.usage = e.usage),
      this
    );
  }
  copyAt(e, n, r) {
    ((e *= this.stride), (r *= n.stride));
    for (let i = 0, o = this.stride; i < o; i++)
      this.array[e + i] = n.array[r + i];
    return this;
  }
  set(e, n = 0) {
    return (this.array.set(e, n), this);
  }
  clone(e) {
    (e.arrayBuffers === void 0 && (e.arrayBuffers = {}),
      this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = Pi()),
      e.arrayBuffers[this.array.buffer._uuid] === void 0 &&
        (e.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer));
    const n = new this.array.constructor(
        e.arrayBuffers[this.array.buffer._uuid],
      ),
      r = new this.constructor(n, this.stride);
    return (r.setUsage(this.usage), r);
  }
  onUpload(e) {
    return ((this.onUploadCallback = e), this);
  }
  toJSON(e) {
    return (
      e.arrayBuffers === void 0 && (e.arrayBuffers = {}),
      this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = Pi()),
      e.arrayBuffers[this.array.buffer._uuid] === void 0 &&
        (e.arrayBuffers[this.array.buffer._uuid] = Array.from(
          new Uint32Array(this.array.buffer),
        )),
      {
        uuid: this.uuid,
        buffer: this.array.buffer._uuid,
        type: this.array.constructor.name,
        stride: this.stride,
      }
    );
  }
}
const kn = new se();
class rc {
  constructor(e, n, r, i = !1) {
    ((this.isInterleavedBufferAttribute = !0),
      (this.name = ""),
      (this.data = e),
      (this.itemSize = n),
      (this.offset = r),
      (this.normalized = i));
  }
  get count() {
    return this.data.count;
  }
  get array() {
    return this.data.array;
  }
  set needsUpdate(e) {
    this.data.needsUpdate = e;
  }
  applyMatrix4(e) {
    for (let n = 0, r = this.data.count; n < r; n++)
      (kn.fromBufferAttribute(this, n),
        kn.applyMatrix4(e),
        this.setXYZ(n, kn.x, kn.y, kn.z));
    return this;
  }
  applyNormalMatrix(e) {
    for (let n = 0, r = this.count; n < r; n++)
      (kn.fromBufferAttribute(this, n),
        kn.applyNormalMatrix(e),
        this.setXYZ(n, kn.x, kn.y, kn.z));
    return this;
  }
  transformDirection(e) {
    for (let n = 0, r = this.count; n < r; n++)
      (kn.fromBufferAttribute(this, n),
        kn.transformDirection(e),
        this.setXYZ(n, kn.x, kn.y, kn.z));
    return this;
  }
  setX(e, n) {
    return (
      this.normalized && (n = Et(n, this.array)),
      (this.data.array[e * this.data.stride + this.offset] = n),
      this
    );
  }
  setY(e, n) {
    return (
      this.normalized && (n = Et(n, this.array)),
      (this.data.array[e * this.data.stride + this.offset + 1] = n),
      this
    );
  }
  setZ(e, n) {
    return (
      this.normalized && (n = Et(n, this.array)),
      (this.data.array[e * this.data.stride + this.offset + 2] = n),
      this
    );
  }
  setW(e, n) {
    return (
      this.normalized && (n = Et(n, this.array)),
      (this.data.array[e * this.data.stride + this.offset + 3] = n),
      this
    );
  }
  getX(e) {
    let n = this.data.array[e * this.data.stride + this.offset];
    return (this.normalized && (n = Zr(n, this.array)), n);
  }
  getY(e) {
    let n = this.data.array[e * this.data.stride + this.offset + 1];
    return (this.normalized && (n = Zr(n, this.array)), n);
  }
  getZ(e) {
    let n = this.data.array[e * this.data.stride + this.offset + 2];
    return (this.normalized && (n = Zr(n, this.array)), n);
  }
  getW(e) {
    let n = this.data.array[e * this.data.stride + this.offset + 3];
    return (this.normalized && (n = Zr(n, this.array)), n);
  }
  setXY(e, n, r) {
    return (
      (e = e * this.data.stride + this.offset),
      this.normalized && ((n = Et(n, this.array)), (r = Et(r, this.array))),
      (this.data.array[e + 0] = n),
      (this.data.array[e + 1] = r),
      this
    );
  }
  setXYZ(e, n, r, i) {
    return (
      (e = e * this.data.stride + this.offset),
      this.normalized &&
        ((n = Et(n, this.array)),
        (r = Et(r, this.array)),
        (i = Et(i, this.array))),
      (this.data.array[e + 0] = n),
      (this.data.array[e + 1] = r),
      (this.data.array[e + 2] = i),
      this
    );
  }
  setXYZW(e, n, r, i, o) {
    return (
      (e = e * this.data.stride + this.offset),
      this.normalized &&
        ((n = Et(n, this.array)),
        (r = Et(r, this.array)),
        (i = Et(i, this.array)),
        (o = Et(o, this.array))),
      (this.data.array[e + 0] = n),
      (this.data.array[e + 1] = r),
      (this.data.array[e + 2] = i),
      (this.data.array[e + 3] = o),
      this
    );
  }
  clone(e) {
    if (e === void 0) {
      console.log(
        "THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.",
      );
      const n = [];
      for (let r = 0; r < this.count; r++) {
        const i = r * this.data.stride + this.offset;
        for (let o = 0; o < this.itemSize; o++) n.push(this.data.array[i + o]);
      }
      return new yr(
        new this.array.constructor(n),
        this.itemSize,
        this.normalized,
      );
    } else
      return (
        e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}),
        e.interleavedBuffers[this.data.uuid] === void 0 &&
          (e.interleavedBuffers[this.data.uuid] = this.data.clone(e)),
        new rc(
          e.interleavedBuffers[this.data.uuid],
          this.itemSize,
          this.offset,
          this.normalized,
        )
      );
  }
  toJSON(e) {
    if (e === void 0) {
      console.log(
        "THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.",
      );
      const n = [];
      for (let r = 0; r < this.count; r++) {
        const i = r * this.data.stride + this.offset;
        for (let o = 0; o < this.itemSize; o++) n.push(this.data.array[i + o]);
      }
      return {
        itemSize: this.itemSize,
        type: this.array.constructor.name,
        array: n,
        normalized: this.normalized,
      };
    } else
      return (
        e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}),
        e.interleavedBuffers[this.data.uuid] === void 0 &&
          (e.interleavedBuffers[this.data.uuid] = this.data.toJSON(e)),
        {
          isInterleavedBufferAttribute: !0,
          itemSize: this.itemSize,
          data: this.data.uuid,
          offset: this.offset,
          normalized: this.normalized,
        }
      );
  }
}
class Fv extends fs {
  constructor(e) {
    (super(),
      (this.isSpriteMaterial = !0),
      (this.type = "SpriteMaterial"),
      (this.color = new _t(16777215)),
      (this.map = null),
      (this.alphaMap = null),
      (this.rotation = 0),
      (this.sizeAttenuation = !0),
      (this.transparent = !0),
      (this.fog = !0),
      this.setValues(e));
  }
  copy(e) {
    return (
      super.copy(e),
      this.color.copy(e.color),
      (this.map = e.map),
      (this.alphaMap = e.alphaMap),
      (this.rotation = e.rotation),
      (this.sizeAttenuation = e.sizeAttenuation),
      (this.fog = e.fog),
      this
    );
  }
}
let Io;
const Es = new se(),
  Oo = new se(),
  $o = new se(),
  zo = new qe(),
  Ts = new qe(),
  Nv = new Kt(),
  kl = new se(),
  As = new se(),
  Sl = new se(),
  Sm = new qe(),
  Pu = new qe(),
  Cm = new qe();
class dD extends xn {
  constructor(e) {
    if (
      (super(), (this.isSprite = !0), (this.type = "Sprite"), Io === void 0)
    ) {
      Io = new ui();
      const n = new Float32Array([
          -0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5,
          0, 0, 1,
        ]),
        r = new uD(n, 5);
      (Io.setIndex([0, 1, 2, 0, 2, 3]),
        Io.setAttribute("position", new rc(r, 3, 0, !1)),
        Io.setAttribute("uv", new rc(r, 2, 3, !1)));
    }
    ((this.geometry = Io),
      (this.material = e !== void 0 ? e : new Fv()),
      (this.center = new qe(0.5, 0.5)));
  }
  raycast(e, n) {
    (e.camera === null &&
      console.error(
        'THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.',
      ),
      Oo.setFromMatrixScale(this.matrixWorld),
      Nv.copy(e.camera.matrixWorld),
      this.modelViewMatrix.multiplyMatrices(
        e.camera.matrixWorldInverse,
        this.matrixWorld,
      ),
      $o.setFromMatrixPosition(this.modelViewMatrix),
      e.camera.isPerspectiveCamera &&
        this.material.sizeAttenuation === !1 &&
        Oo.multiplyScalar(-$o.z));
    const r = this.material.rotation;
    let i, o;
    r !== 0 && ((o = Math.cos(r)), (i = Math.sin(r)));
    const s = this.center;
    (Cl(kl.set(-0.5, -0.5, 0), $o, s, Oo, i, o),
      Cl(As.set(0.5, -0.5, 0), $o, s, Oo, i, o),
      Cl(Sl.set(0.5, 0.5, 0), $o, s, Oo, i, o),
      Sm.set(0, 0),
      Pu.set(1, 0),
      Cm.set(1, 1));
    let a = e.ray.intersectTriangle(kl, As, Sl, !1, Es);
    if (
      a === null &&
      (Cl(As.set(-0.5, 0.5, 0), $o, s, Oo, i, o),
      Pu.set(0, 1),
      (a = e.ray.intersectTriangle(kl, Sl, As, !1, Es)),
      a === null)
    )
      return;
    const c = e.ray.origin.distanceTo(Es);
    c < e.near ||
      c > e.far ||
      n.push({
        distance: c,
        point: Es.clone(),
        uv: nr.getInterpolation(Es, kl, As, Sl, Sm, Pu, Cm, new qe()),
        face: null,
        object: this,
      });
  }
  copy(e, n) {
    return (
      super.copy(e, n),
      e.center !== void 0 && this.center.copy(e.center),
      (this.material = e.material),
      this
    );
  }
}
function Cl(t, e, n, r, i, o) {
  (zo.subVectors(t, n).addScalar(0.5).multiply(r),
    i !== void 0
      ? ((Ts.x = o * zo.x - i * zo.y), (Ts.y = i * zo.x + o * zo.y))
      : Ts.copy(zo),
    t.copy(e),
    (t.x += Ts.x),
    (t.y += Ts.y),
    t.applyMatrix4(Nv));
}
class Fl extends yn {
  constructor(e, n, r, i, o, s, a, c, u) {
    (super(e, n, r, i, o, s, a, c, u),
      (this.isCanvasTexture = !0),
      (this.needsUpdate = !0));
  }
}
class ka extends fs {
  constructor(e) {
    (super(),
      (this.isMeshStandardMaterial = !0),
      (this.defines = { STANDARD: "" }),
      (this.type = "MeshStandardMaterial"),
      (this.color = new _t(16777215)),
      (this.roughness = 1),
      (this.metalness = 0),
      (this.map = null),
      (this.lightMap = null),
      (this.lightMapIntensity = 1),
      (this.aoMap = null),
      (this.aoMapIntensity = 1),
      (this.emissive = new _t(0)),
      (this.emissiveIntensity = 1),
      (this.emissiveMap = null),
      (this.bumpMap = null),
      (this.bumpScale = 1),
      (this.normalMap = null),
      (this.normalMapType = vv),
      (this.normalScale = new qe(1, 1)),
      (this.displacementMap = null),
      (this.displacementScale = 1),
      (this.displacementBias = 0),
      (this.roughnessMap = null),
      (this.metalnessMap = null),
      (this.alphaMap = null),
      (this.envMap = null),
      (this.envMapIntensity = 1),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      (this.wireframeLinecap = "round"),
      (this.wireframeLinejoin = "round"),
      (this.flatShading = !1),
      (this.fog = !0),
      this.setValues(e));
  }
  copy(e) {
    return (
      super.copy(e),
      (this.defines = { STANDARD: "" }),
      this.color.copy(e.color),
      (this.roughness = e.roughness),
      (this.metalness = e.metalness),
      (this.map = e.map),
      (this.lightMap = e.lightMap),
      (this.lightMapIntensity = e.lightMapIntensity),
      (this.aoMap = e.aoMap),
      (this.aoMapIntensity = e.aoMapIntensity),
      this.emissive.copy(e.emissive),
      (this.emissiveMap = e.emissiveMap),
      (this.emissiveIntensity = e.emissiveIntensity),
      (this.bumpMap = e.bumpMap),
      (this.bumpScale = e.bumpScale),
      (this.normalMap = e.normalMap),
      (this.normalMapType = e.normalMapType),
      this.normalScale.copy(e.normalScale),
      (this.displacementMap = e.displacementMap),
      (this.displacementScale = e.displacementScale),
      (this.displacementBias = e.displacementBias),
      (this.roughnessMap = e.roughnessMap),
      (this.metalnessMap = e.metalnessMap),
      (this.alphaMap = e.alphaMap),
      (this.envMap = e.envMap),
      (this.envMapIntensity = e.envMapIntensity),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      (this.wireframeLinecap = e.wireframeLinecap),
      (this.wireframeLinejoin = e.wireframeLinejoin),
      (this.flatShading = e.flatShading),
      (this.fog = e.fog),
      this
    );
  }
}
class Vv extends xn {
  constructor(e, n = 1) {
    (super(),
      (this.isLight = !0),
      (this.type = "Light"),
      (this.color = new _t(e)),
      (this.intensity = n));
  }
  dispose() {}
  copy(e, n) {
    return (
      super.copy(e, n),
      this.color.copy(e.color),
      (this.intensity = e.intensity),
      this
    );
  }
  toJSON(e) {
    const n = super.toJSON(e);
    return (
      (n.object.color = this.color.getHex()),
      (n.object.intensity = this.intensity),
      this.groundColor !== void 0 &&
        (n.object.groundColor = this.groundColor.getHex()),
      this.distance !== void 0 && (n.object.distance = this.distance),
      this.angle !== void 0 && (n.object.angle = this.angle),
      this.decay !== void 0 && (n.object.decay = this.decay),
      this.penumbra !== void 0 && (n.object.penumbra = this.penumbra),
      this.shadow !== void 0 && (n.object.shadow = this.shadow.toJSON()),
      n
    );
  }
}
const Ru = new Kt(),
  Mm = new se(),
  Em = new se();
class fD {
  constructor(e) {
    ((this.camera = e),
      (this.bias = 0),
      (this.normalBias = 0),
      (this.radius = 1),
      (this.blurSamples = 8),
      (this.mapSize = new qe(512, 512)),
      (this.map = null),
      (this.mapPass = null),
      (this.matrix = new Kt()),
      (this.autoUpdate = !0),
      (this.needsUpdate = !1),
      (this._frustum = new af()),
      (this._frameExtents = new qe(1, 1)),
      (this._viewportCount = 1),
      (this._viewports = [new Ut(0, 0, 1, 1)]));
  }
  getViewportCount() {
    return this._viewportCount;
  }
  getFrustum() {
    return this._frustum;
  }
  updateMatrices(e) {
    const n = this.camera,
      r = this.matrix;
    (Mm.setFromMatrixPosition(e.matrixWorld),
      n.position.copy(Mm),
      Em.setFromMatrixPosition(e.target.matrixWorld),
      n.lookAt(Em),
      n.updateMatrixWorld(),
      Ru.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse),
      this._frustum.setFromProjectionMatrix(Ru),
      r.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1),
      r.multiply(Ru));
  }
  getViewport(e) {
    return this._viewports[e];
  }
  getFrameExtents() {
    return this._frameExtents;
  }
  dispose() {
    (this.map && this.map.dispose(), this.mapPass && this.mapPass.dispose());
  }
  copy(e) {
    return (
      (this.camera = e.camera.clone()),
      (this.bias = e.bias),
      (this.radius = e.radius),
      this.mapSize.copy(e.mapSize),
      this
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
  toJSON() {
    const e = {};
    return (
      this.bias !== 0 && (e.bias = this.bias),
      this.normalBias !== 0 && (e.normalBias = this.normalBias),
      this.radius !== 1 && (e.radius = this.radius),
      (this.mapSize.x !== 512 || this.mapSize.y !== 512) &&
        (e.mapSize = this.mapSize.toArray()),
      (e.camera = this.camera.toJSON(!1).object),
      delete e.camera.matrix,
      e
    );
  }
}
const Tm = new Kt(),
  Ps = new se(),
  Lu = new se();
class pD extends fD {
  constructor() {
    (super(new jn(90, 1, 0.5, 500)),
      (this.isPointLightShadow = !0),
      (this._frameExtents = new qe(4, 2)),
      (this._viewportCount = 6),
      (this._viewports = [
        new Ut(2, 1, 1, 1),
        new Ut(0, 1, 1, 1),
        new Ut(3, 1, 1, 1),
        new Ut(1, 1, 1, 1),
        new Ut(3, 0, 1, 1),
        new Ut(1, 0, 1, 1),
      ]),
      (this._cubeDirections = [
        new se(1, 0, 0),
        new se(-1, 0, 0),
        new se(0, 0, 1),
        new se(0, 0, -1),
        new se(0, 1, 0),
        new se(0, -1, 0),
      ]),
      (this._cubeUps = [
        new se(0, 1, 0),
        new se(0, 1, 0),
        new se(0, 1, 0),
        new se(0, 1, 0),
        new se(0, 0, 1),
        new se(0, 0, -1),
      ]));
  }
  updateMatrices(e, n = 0) {
    const r = this.camera,
      i = this.matrix,
      o = e.distance || r.far;
    (o !== r.far && ((r.far = o), r.updateProjectionMatrix()),
      Ps.setFromMatrixPosition(e.matrixWorld),
      r.position.copy(Ps),
      Lu.copy(r.position),
      Lu.add(this._cubeDirections[n]),
      r.up.copy(this._cubeUps[n]),
      r.lookAt(Lu),
      r.updateMatrixWorld(),
      i.makeTranslation(-Ps.x, -Ps.y, -Ps.z),
      Tm.multiplyMatrices(r.projectionMatrix, r.matrixWorldInverse),
      this._frustum.setFromProjectionMatrix(Tm));
  }
}
class hD extends Vv {
  constructor(e, n, r = 0, i = 2) {
    (super(e, n),
      (this.isPointLight = !0),
      (this.type = "PointLight"),
      (this.distance = r),
      (this.decay = i),
      (this.shadow = new pD()));
  }
  get power() {
    return this.intensity * 4 * Math.PI;
  }
  set power(e) {
    this.intensity = e / (4 * Math.PI);
  }
  dispose() {
    this.shadow.dispose();
  }
  copy(e, n) {
    return (
      super.copy(e, n),
      (this.distance = e.distance),
      (this.decay = e.decay),
      (this.shadow = e.shadow.clone()),
      this
    );
  }
}
class mD extends Vv {
  constructor(e, n) {
    (super(e, n), (this.isAmbientLight = !0), (this.type = "AmbientLight"));
  }
}
class Hv {
  constructor(e = !0) {
    ((this.autoStart = e),
      (this.startTime = 0),
      (this.oldTime = 0),
      (this.elapsedTime = 0),
      (this.running = !1));
  }
  start() {
    ((this.startTime = Am()),
      (this.oldTime = this.startTime),
      (this.elapsedTime = 0),
      (this.running = !0));
  }
  stop() {
    (this.getElapsedTime(), (this.running = !1), (this.autoStart = !1));
  }
  getElapsedTime() {
    return (this.getDelta(), this.elapsedTime);
  }
  getDelta() {
    let e = 0;
    if (this.autoStart && !this.running) return (this.start(), 0);
    if (this.running) {
      const n = Am();
      ((e = (n - this.oldTime) / 1e3),
        (this.oldTime = n),
        (this.elapsedTime += e));
    }
    return e;
  }
}
function Am() {
  return (typeof performance > "u" ? Date : performance).now();
}
class Pm {
  constructor(e = 1, n = 0, r = 0) {
    return ((this.radius = e), (this.phi = n), (this.theta = r), this);
  }
  set(e, n, r) {
    return ((this.radius = e), (this.phi = n), (this.theta = r), this);
  }
  copy(e) {
    return (
      (this.radius = e.radius),
      (this.phi = e.phi),
      (this.theta = e.theta),
      this
    );
  }
  makeSafe() {
    return (
      (this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi))),
      this
    );
  }
  setFromVector3(e) {
    return this.setFromCartesianCoords(e.x, e.y, e.z);
  }
  setFromCartesianCoords(e, n, r) {
    return (
      (this.radius = Math.sqrt(e * e + n * n + r * r)),
      this.radius === 0
        ? ((this.theta = 0), (this.phi = 0))
        : ((this.theta = Math.atan2(e, r)),
          (this.phi = Math.acos(An(n / this.radius, -1, 1)))),
      this
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
typeof __THREE_DEVTOOLS__ < "u" &&
  __THREE_DEVTOOLS__.dispatchEvent(
    new CustomEvent("register", { detail: { revision: rf } }),
  );
typeof window < "u" &&
  (window.__THREE__
    ? console.warn("WARNING: Multiple instances of Three.js being imported.")
    : (window.__THREE__ = rf));
function uf(t, e, n, r, i, o, s, a) {
  const c = (S, D, k, P) => [
      new qe(S / s, 1 - P / a),
      new qe(k / s, 1 - P / a),
      new qe(k / s, 1 - D / a),
      new qe(S / s, 1 - D / a),
    ],
    u = c(e + o, n, e + r + o, n + o),
    d = c(e + r + o, n, e + r * 2 + o, n + o),
    f = c(e, n + o, e + o, n + o + i),
    p = c(e + o, n + o, e + r + o, n + o + i),
    h = c(e + r + o, n + o, e + r + o * 2, n + i + o),
    v = c(e + r + o * 2, n + o, e + r * 2 + o * 2, n + i + o),
    b = t.attributes.uv,
    g = [h[3], h[2], h[0], h[1]],
    m = [f[3], f[2], f[0], f[1]],
    _ = [u[3], u[2], u[0], u[1]],
    y = [d[0], d[1], d[3], d[2]],
    x = [p[3], p[2], p[0], p[1]],
    C = [v[3], v[2], v[0], v[1]],
    w = [];
  for (const S of [g, m, _, y, x, C]) for (const D of S) w.push(D.x, D.y);
  (b.set(new Float32Array(w)), (b.needsUpdate = !0));
}
function Qn(t, e, n, r, i, o) {
  uf(t, e, n, r, i, o, 64, 64);
}
function gd(t, e, n, r, i, o) {
  uf(t, e, n, r, i, o, 64, 32);
}
class Wi extends un {
  constructor(e, n) {
    (super(),
      Object.defineProperty(this, "innerLayer", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: e,
      }),
      Object.defineProperty(this, "outerLayer", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: n,
      }),
      (e.name = "inner"),
      (n.name = "outer"));
  }
}
class gD extends un {
  constructor() {
    (super(),
      Object.defineProperty(this, "head", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "body", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "rightArm", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "leftArm", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "rightLeg", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "leftLeg", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "modelListeners", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: [],
      }),
      Object.defineProperty(this, "slim", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: !1,
      }),
      Object.defineProperty(this, "_map", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: null,
      }),
      Object.defineProperty(this, "layer1Material", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "layer1MaterialBiased", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "layer2Material", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "layer2MaterialBiased", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      (this.layer1Material = new ka({ side: Dr })),
      (this.layer2Material = new ka({
        side: rr,
        transparent: !0,
        alphaTest: 1e-5,
      })),
      (this.layer1MaterialBiased = this.layer1Material.clone()),
      (this.layer1MaterialBiased.polygonOffset = !0),
      (this.layer1MaterialBiased.polygonOffsetFactor = 1),
      (this.layer1MaterialBiased.polygonOffsetUnits = 1),
      (this.layer2MaterialBiased = this.layer2Material.clone()),
      (this.layer2MaterialBiased.polygonOffset = !0),
      (this.layer2MaterialBiased.polygonOffsetFactor = 1),
      (this.layer2MaterialBiased.polygonOffsetUnits = 1));
    const e = new Wt(8, 8, 8);
    Qn(e, 0, 0, 8, 8, 8);
    const n = new It(e, this.layer1Material),
      r = new Wt(9, 9, 9);
    Qn(r, 32, 0, 8, 8, 8);
    const i = new It(r, this.layer2Material);
    ((this.head = new Wi(n, i)),
      (this.head.name = "head"),
      this.head.add(n, i),
      (n.position.y = 4),
      (i.position.y = 4),
      this.add(this.head));
    const o = new Wt(8, 12, 4);
    Qn(o, 16, 16, 8, 12, 4);
    const s = new It(o, this.layer1Material),
      a = new Wt(8.5, 12.5, 4.5);
    Qn(a, 16, 32, 8, 12, 4);
    const c = new It(a, this.layer2Material);
    ((this.body = new Wi(s, c)),
      (this.body.name = "body"),
      this.body.add(s, c),
      (this.body.position.y = -6),
      this.add(this.body));
    const u = new Wt(),
      d = new It(u, this.layer1MaterialBiased);
    this.modelListeners.push(() => {
      ((d.scale.x = this.slim ? 3 : 4),
        (d.scale.y = 12),
        (d.scale.z = 4),
        Qn(u, 40, 16, this.slim ? 3 : 4, 12, 4));
    });
    const f = new Wt(),
      p = new It(f, this.layer2MaterialBiased);
    this.modelListeners.push(() => {
      ((p.scale.x = this.slim ? 3.5 : 4.5),
        (p.scale.y = 12.5),
        (p.scale.z = 4.5),
        Qn(f, 40, 32, this.slim ? 3 : 4, 12, 4));
    });
    const h = new un();
    (h.add(d, p),
      this.modelListeners.push(() => {
        h.position.x = this.slim ? -0.5 : -1;
      }),
      (h.position.y = -4),
      (this.rightArm = new Wi(d, p)),
      (this.rightArm.name = "rightArm"),
      this.rightArm.add(h),
      (this.rightArm.position.x = -5),
      (this.rightArm.position.y = -2),
      this.add(this.rightArm));
    const v = new Wt(),
      b = new It(v, this.layer1MaterialBiased);
    this.modelListeners.push(() => {
      ((b.scale.x = this.slim ? 3 : 4),
        (b.scale.y = 12),
        (b.scale.z = 4),
        Qn(v, 32, 48, this.slim ? 3 : 4, 12, 4));
    });
    const g = new Wt(),
      m = new It(g, this.layer2MaterialBiased);
    this.modelListeners.push(() => {
      ((m.scale.x = this.slim ? 3.5 : 4.5),
        (m.scale.y = 12.5),
        (m.scale.z = 4.5),
        Qn(g, 48, 48, this.slim ? 3 : 4, 12, 4));
    });
    const _ = new un();
    (_.add(b, m),
      this.modelListeners.push(() => {
        _.position.x = this.slim ? 0.5 : 1;
      }),
      (_.position.y = -4),
      (this.leftArm = new Wi(b, m)),
      (this.leftArm.name = "leftArm"),
      this.leftArm.add(_),
      (this.leftArm.position.x = 5),
      (this.leftArm.position.y = -2),
      this.add(this.leftArm));
    const y = new Wt(4, 12, 4);
    Qn(y, 0, 16, 4, 12, 4);
    const x = new It(y, this.layer1MaterialBiased),
      C = new Wt(4.5, 12.5, 4.5);
    Qn(C, 0, 32, 4, 12, 4);
    const w = new It(C, this.layer2MaterialBiased),
      S = new un();
    (S.add(x, w),
      (S.position.y = -6),
      (this.rightLeg = new Wi(x, w)),
      (this.rightLeg.name = "rightLeg"),
      this.rightLeg.add(S),
      (this.rightLeg.position.x = -1.9),
      (this.rightLeg.position.y = -12),
      (this.rightLeg.position.z = -0.1),
      this.add(this.rightLeg));
    const D = new Wt(4, 12, 4);
    Qn(D, 16, 48, 4, 12, 4);
    const k = new It(D, this.layer1MaterialBiased),
      P = new Wt(4.5, 12.5, 4.5);
    Qn(P, 0, 48, 4, 12, 4);
    const I = new It(P, this.layer2MaterialBiased),
      W = new un();
    (W.add(k, I),
      (W.position.y = -6),
      (this.leftLeg = new Wi(k, I)),
      (this.leftLeg.name = "leftLeg"),
      this.leftLeg.add(W),
      (this.leftLeg.position.x = 1.9),
      (this.leftLeg.position.y = -12),
      (this.leftLeg.position.z = -0.1),
      this.add(this.leftLeg),
      (this.modelType = "default"));
  }
  get map() {
    return this._map;
  }
  set map(e) {
    ((this._map = e),
      (this.layer1Material.map = e),
      (this.layer1Material.needsUpdate = !0),
      (this.layer1MaterialBiased.map = e),
      (this.layer1MaterialBiased.needsUpdate = !0),
      (this.layer2Material.map = e),
      (this.layer2Material.needsUpdate = !0),
      (this.layer2MaterialBiased.map = e),
      (this.layer2MaterialBiased.needsUpdate = !0));
  }
  get modelType() {
    return this.slim ? "slim" : "default";
  }
  set modelType(e) {
    ((this.slim = e === "slim"), this.modelListeners.forEach((n) => n()));
  }
  getBodyParts() {
    return this.children.filter((e) => e instanceof Wi);
  }
  setInnerLayerVisible(e) {
    this.getBodyParts().forEach((n) => (n.innerLayer.visible = e));
  }
  setOuterLayerVisible(e) {
    this.getBodyParts().forEach((n) => (n.outerLayer.visible = e));
  }
  resetJoints() {
    (this.head.rotation.set(0, 0, 0),
      this.leftArm.rotation.set(0, 0, 0),
      this.rightArm.rotation.set(0, 0, 0),
      this.leftLeg.rotation.set(0, 0, 0),
      this.rightLeg.rotation.set(0, 0, 0),
      this.body.rotation.set(0, 0, 0),
      (this.head.position.y = 0),
      (this.body.position.y = -6),
      (this.body.position.z = 0),
      (this.rightArm.position.x = -5),
      (this.rightArm.position.y = -2),
      (this.rightArm.position.z = 0),
      (this.leftArm.position.x = 5),
      (this.leftArm.position.y = -2),
      (this.leftArm.position.z = 0),
      (this.rightLeg.position.x = -1.9),
      (this.rightLeg.position.y = -12),
      (this.rightLeg.position.z = -0.1),
      (this.leftLeg.position.x = 1.9),
      (this.leftLeg.position.y = -12),
      (this.leftLeg.position.z = -0.1));
  }
}
class vD extends un {
  constructor() {
    (super(),
      Object.defineProperty(this, "cape", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "material", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      (this.material = new ka({ side: rr, transparent: !0, alphaTest: 1e-5 })));
    const e = new Wt(10, 16, 1);
    (gd(e, 0, 0, 10, 16, 1),
      (this.cape = new It(e, this.material)),
      (this.cape.position.y = -8),
      (this.cape.position.z = 0.5),
      this.add(this.cape));
  }
  get map() {
    return this.material.map;
  }
  set map(e) {
    ((this.material.map = e), (this.material.needsUpdate = !0));
  }
}
class bD extends un {
  constructor() {
    (super(),
      Object.defineProperty(this, "leftWing", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "rightWing", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "material", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      (this.material = new ka({ side: rr, transparent: !0, alphaTest: 1e-5 })));
    const e = new Wt(12, 22, 4);
    gd(e, 22, 0, 10, 20, 2);
    const n = new It(e, this.material);
    ((n.position.x = -5),
      (n.position.y = -10),
      (n.position.z = -1),
      (this.leftWing = new un()),
      this.leftWing.add(n),
      this.add(this.leftWing));
    const r = new Wt(12, 22, 4);
    gd(r, 22, 0, 10, 20, 2);
    const i = new It(r, this.material);
    ((i.scale.x = -1),
      (i.position.x = 5),
      (i.position.y = -10),
      (i.position.z = -1),
      (this.rightWing = new un()),
      this.rightWing.add(i),
      this.add(this.rightWing),
      (this.leftWing.position.x = 5),
      (this.leftWing.rotation.x = 0.2617994),
      this.resetJoints());
  }
  resetJoints() {
    ((this.leftWing.rotation.y = 0.01),
      (this.leftWing.rotation.z = 0.2617994),
      this.updateRightWing());
  }
  updateRightWing() {
    ((this.rightWing.position.x = -this.leftWing.position.x),
      (this.rightWing.position.y = this.leftWing.position.y),
      (this.rightWing.rotation.x = this.leftWing.rotation.x),
      (this.rightWing.rotation.y = -this.leftWing.rotation.y),
      (this.rightWing.rotation.z = -this.leftWing.rotation.z));
  }
  get map() {
    return this.material.map;
  }
  set map(e) {
    ((this.material.map = e), (this.material.needsUpdate = !0));
  }
}
class yD extends un {
  constructor() {
    (super(),
      Object.defineProperty(this, "rightEar", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "leftEar", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "material", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      (this.material = new ka({ side: Dr })));
    const e = new Wt(8, 8, 4 / 3);
    (uf(e, 0, 0, 6, 6, 1, 14, 7),
      (this.rightEar = new It(e, this.material)),
      (this.rightEar.name = "rightEar"),
      (this.rightEar.position.x = -6),
      this.add(this.rightEar),
      (this.leftEar = new It(e, this.material)),
      (this.leftEar.name = "leftEar"),
      (this.leftEar.position.x = 6),
      this.add(this.leftEar));
  }
  get map() {
    return this.material.map;
  }
  set map(e) {
    ((this.material.map = e), (this.material.needsUpdate = !0));
  }
}
const Rm = (10.8 * Math.PI) / 180;
class xD extends un {
  constructor() {
    (super(),
      Object.defineProperty(this, "skin", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "cape", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "elytra", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "ears", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      (this.skin = new gD()),
      (this.skin.name = "skin"),
      (this.skin.position.y = 8),
      this.add(this.skin),
      (this.cape = new vD()),
      (this.cape.name = "cape"),
      (this.cape.position.y = 8),
      (this.cape.position.z = -2),
      (this.cape.rotation.x = Rm),
      (this.cape.rotation.y = Math.PI),
      this.add(this.cape),
      (this.elytra = new bD()),
      (this.elytra.name = "elytra"),
      (this.elytra.position.y = 8),
      (this.elytra.position.z = -2),
      (this.elytra.visible = !1),
      this.add(this.elytra),
      (this.ears = new yD()),
      (this.ears.name = "ears"),
      (this.ears.position.y = 10),
      (this.ears.position.z = 2 / 3),
      (this.ears.visible = !1),
      this.skin.head.add(this.ears));
  }
  get backEquipment() {
    return this.cape.visible ? "cape" : this.elytra.visible ? "elytra" : null;
  }
  set backEquipment(e) {
    ((this.cape.visible = e === "cape"),
      (this.elytra.visible = e === "elytra"));
  }
  resetJoints() {
    (this.skin.resetJoints(),
      (this.cape.rotation.x = Rm),
      (this.cape.position.y = 8),
      (this.cape.position.z = -2),
      (this.elytra.position.y = 8),
      (this.elytra.position.z = -2),
      (this.elytra.rotation.x = 0),
      this.elytra.resetJoints());
  }
}
function Ml(t) {
  return (
    t instanceof HTMLImageElement ||
    t instanceof HTMLVideoElement ||
    t instanceof HTMLCanvasElement ||
    (typeof ImageBitmap < "u" && t instanceof ImageBitmap) ||
    (typeof OffscreenCanvas < "u" && t instanceof OffscreenCanvas)
  );
}
function vd(t, e, n, r, i) {
  const o = t.getImageData(e, n, r, i);
  for (let s = 0; s < r; s++)
    for (let a = 0; a < i; a++) {
      const c = (s + a * r) * 4;
      if (o.data[c + 3] !== 255) return !0;
    }
  return !1;
}
function Pc(t) {
  return t / 64;
}
function Lm(t, e, n) {
  if (n) {
    if (vd(t, 0, 0, e, e)) return;
  } else if (vd(t, 0, 0, e, e / 2)) return;
  const r = Pc(e),
    i = (o, s, a, c) => t.clearRect(o * r, s * r, a * r, c * r);
  (i(40, 0, 8, 8),
    i(48, 0, 8, 8),
    i(32, 8, 8, 8),
    i(40, 8, 8, 8),
    i(48, 8, 8, 8),
    i(56, 8, 8, 8),
    n &&
      (i(4, 32, 4, 4),
      i(8, 32, 4, 4),
      i(0, 36, 4, 12),
      i(4, 36, 4, 12),
      i(8, 36, 4, 12),
      i(12, 36, 4, 12),
      i(20, 32, 8, 4),
      i(28, 32, 8, 4),
      i(16, 36, 4, 12),
      i(20, 36, 8, 12),
      i(28, 36, 4, 12),
      i(32, 36, 8, 12),
      i(44, 32, 4, 4),
      i(48, 32, 4, 4),
      i(40, 36, 4, 12),
      i(44, 36, 4, 12),
      i(48, 36, 4, 12),
      i(52, 36, 12, 12),
      i(4, 48, 4, 4),
      i(8, 48, 4, 4),
      i(0, 52, 4, 12),
      i(4, 52, 4, 12),
      i(8, 52, 4, 12),
      i(12, 52, 4, 12),
      i(52, 48, 4, 4),
      i(56, 48, 4, 4),
      i(48, 52, 4, 12),
      i(52, 52, 4, 12),
      i(56, 52, 4, 12),
      i(60, 52, 4, 12)));
}
function _D(t, e) {
  (t.save(), t.scale(-1, 1));
  const n = Pc(e),
    r = (i, o, s, a, c, u) =>
      t.drawImage(
        t.canvas,
        i * n,
        o * n,
        s * n,
        a * n,
        -c * n,
        u * n,
        -s * n,
        a * n,
      );
  (r(4, 16, 4, 4, 20, 48),
    r(8, 16, 4, 4, 24, 48),
    r(0, 20, 4, 12, 24, 52),
    r(4, 20, 4, 12, 20, 52),
    r(8, 20, 4, 12, 16, 52),
    r(12, 20, 4, 12, 28, 52),
    r(44, 16, 4, 4, 36, 48),
    r(48, 16, 4, 4, 40, 48),
    r(40, 20, 4, 12, 40, 52),
    r(44, 20, 4, 12, 36, 52),
    r(48, 20, 4, 12, 32, 52),
    r(52, 20, 4, 12, 44, 52),
    t.restore());
}
function wD(t, e) {
  let n = !1;
  if (e.width !== e.height)
    if (e.width === 2 * e.height) n = !0;
    else throw new Error(`Bad skin size: ${e.width}x${e.height}`);
  const r = t.getContext("2d", { willReadFrequently: !0 });
  if (n) {
    const i = e.width;
    ((t.width = i),
      (t.height = i),
      r.clearRect(0, 0, i, i),
      r.drawImage(e, 0, 0, i, i / 2),
      _D(r, i),
      Lm(r, t.width, !1));
  } else
    ((t.width = e.width),
      (t.height = e.height),
      r.clearRect(0, 0, e.width, e.height),
      r.drawImage(e, 0, 0, t.width, t.height),
      Lm(r, t.width, !0));
}
function kD(t) {
  if (t.width === 2 * t.height) return t.width / 64;
  if (t.width * 17 === t.height * 22) return t.width / 22;
  if (t.width * 11 === t.height * 23) return t.width / 46;
  throw new Error(`Bad cape size: ${t.width}x${t.height}`);
}
function SD(t, e) {
  const n = kD(e);
  ((t.width = 64 * n), (t.height = 32 * n));
  const r = t.getContext("2d", { willReadFrequently: !0 });
  (r.clearRect(0, 0, t.width, t.height),
    r.drawImage(e, 0, 0, e.width, e.height));
}
function CD(t, e, n, r, i) {
  const o = t.getImageData(e, n, r, i);
  for (let s = 0; s < r; s++)
    for (let a = 0; a < i; a++) {
      const c = (s + a * r) * 4;
      if (
        !(
          o.data[c + 0] === 0 &&
          o.data[c + 1] === 0 &&
          o.data[c + 2] === 0 &&
          o.data[c + 3] === 255
        )
      )
        return !1;
    }
  return !0;
}
function MD(t, e, n, r, i) {
  const o = t.getImageData(e, n, r, i);
  for (let s = 0; s < r; s++)
    for (let a = 0; a < i; a++) {
      const c = (s + a * r) * 4;
      if (
        !(
          o.data[c + 0] === 255 &&
          o.data[c + 1] === 255 &&
          o.data[c + 2] === 255 &&
          o.data[c + 3] === 255
        )
      )
        return !1;
    }
  return !0;
}
function ED(t) {
  const e = Pc(t.width),
    n = t.getContext("2d", { willReadFrequently: !0 }),
    r = (a, c, u, d) => vd(n, a * e, c * e, u * e, d * e),
    i = (a, c, u, d) => CD(n, a * e, c * e, u * e, d * e),
    o = (a, c, u, d) => MD(n, a * e, c * e, u * e, d * e);
  return r(50, 16, 2, 4) ||
    r(54, 20, 2, 12) ||
    r(42, 48, 2, 4) ||
    r(46, 52, 2, 12) ||
    (i(50, 16, 2, 4) &&
      i(54, 20, 2, 12) &&
      i(42, 48, 2, 4) &&
      i(46, 52, 2, 12)) ||
    (o(50, 16, 2, 4) && o(54, 20, 2, 12) && o(42, 48, 2, 4) && o(46, 52, 2, 12))
    ? "slim"
    : "default";
}
function TD(t) {
  if (t.width === t.height * 2 && t.height % 7 === 0) return t.height / 7;
  throw new Error(`Bad ears size: ${t.width}x${t.height}`);
}
function AD(t, e) {
  const n = TD(e);
  ((t.width = 14 * n), (t.height = 7 * n));
  const r = t.getContext("2d", { willReadFrequently: !0 });
  (r.clearRect(0, 0, t.width, t.height),
    r.drawImage(e, 0, 0, e.width, e.height));
}
function Dm(t, e) {
  if (e.width !== e.height && e.width !== 2 * e.height)
    throw new Error(`Bad skin size: ${e.width}x${e.height}`);
  const n = Pc(e.width),
    r = 14 * n,
    i = 7 * n;
  ((t.width = r), (t.height = i));
  const o = t.getContext("2d", { willReadFrequently: !0 });
  (o.clearRect(0, 0, r, i), o.drawImage(e, 24 * n, 0, r, i, 0, 0, r, i));
}
async function El(t) {
  const e = document.createElement("img");
  return new Promise((n, r) => {
    ((e.onload = () => n(e)),
      (e.onerror = r),
      (e.crossOrigin = "anonymous"),
      typeof t == "string"
        ? (e.src = t)
        : (t.crossOrigin !== void 0 && (e.crossOrigin = t.crossOrigin),
          t.referrerPolicy !== void 0 && (e.referrerPolicy = t.referrerPolicy),
          (e.src = t.src)));
  });
}
const Im = { type: "change" },
  Du = { type: "start" },
  Om = { type: "end" },
  Tl = new wv(),
  $m = new ki(),
  PD = Math.cos(70 * tA.DEG2RAD);
class RD extends ho {
  constructor(e, n) {
    (super(),
      (this.object = e),
      (this.domElement = n),
      (this.domElement.style.touchAction = "none"),
      (this.enabled = !0),
      (this.target = new se()),
      (this.minDistance = 0),
      (this.maxDistance = 1 / 0),
      (this.minZoom = 0),
      (this.maxZoom = 1 / 0),
      (this.minPolarAngle = 0),
      (this.maxPolarAngle = Math.PI),
      (this.minAzimuthAngle = -1 / 0),
      (this.maxAzimuthAngle = 1 / 0),
      (this.enableDamping = !1),
      (this.dampingFactor = 0.05),
      (this.enableZoom = !0),
      (this.zoomSpeed = 1),
      (this.enableRotate = !0),
      (this.rotateSpeed = 1),
      (this.enablePan = !0),
      (this.panSpeed = 1),
      (this.screenSpacePanning = !0),
      (this.keyPanSpeed = 7),
      (this.zoomToCursor = !1),
      (this.autoRotate = !1),
      (this.autoRotateSpeed = 2),
      (this.keys = {
        LEFT: "ArrowLeft",
        UP: "ArrowUp",
        RIGHT: "ArrowRight",
        BOTTOM: "ArrowDown",
      }),
      (this.mouseButtons = {
        LEFT: go.ROTATE,
        MIDDLE: go.DOLLY,
        RIGHT: go.PAN,
      }),
      (this.touches = { ONE: vo.ROTATE, TWO: vo.DOLLY_PAN }),
      (this.target0 = this.target.clone()),
      (this.position0 = this.object.position.clone()),
      (this.zoom0 = this.object.zoom),
      (this._domElementKeyEvents = null),
      (this.getPolarAngle = function () {
        return a.phi;
      }),
      (this.getAzimuthalAngle = function () {
        return a.theta;
      }),
      (this.getDistance = function () {
        return this.object.position.distanceTo(this.target);
      }),
      (this.listenToKeyEvents = function (Y) {
        (Y.addEventListener("keydown", T), (this._domElementKeyEvents = Y));
      }),
      (this.stopListenToKeyEvents = function () {
        (this._domElementKeyEvents.removeEventListener("keydown", T),
          (this._domElementKeyEvents = null));
      }),
      (this.saveState = function () {
        (r.target0.copy(r.target),
          r.position0.copy(r.object.position),
          (r.zoom0 = r.object.zoom));
      }),
      (this.reset = function () {
        (r.target.copy(r.target0),
          r.object.position.copy(r.position0),
          (r.object.zoom = r.zoom0),
          r.object.updateProjectionMatrix(),
          r.dispatchEvent(Im),
          r.update(),
          (o = i.NONE));
      }),
      (this.update = (function () {
        const Y = new se(),
          Te = new co().setFromUnitVectors(e.up, new se(0, 1, 0)),
          Fe = Te.clone().invert(),
          Re = new se(),
          $e = new co(),
          Qe = new se(),
          gt = 2 * Math.PI;
        return function (Ne = null) {
          const ve = r.object.position;
          (Y.copy(ve).sub(r.target),
            Y.applyQuaternion(Te),
            a.setFromVector3(Y),
            r.autoRotate && o === i.NONE && I(k(Ne)),
            r.enableDamping
              ? ((a.theta += c.theta * r.dampingFactor),
                (a.phi += c.phi * r.dampingFactor))
              : ((a.theta += c.theta), (a.phi += c.phi)));
          let Le = r.minAzimuthAngle,
            ze = r.maxAzimuthAngle;
          (isFinite(Le) &&
            isFinite(ze) &&
            (Le < -Math.PI ? (Le += gt) : Le > Math.PI && (Le -= gt),
            ze < -Math.PI ? (ze += gt) : ze > Math.PI && (ze -= gt),
            Le <= ze
              ? (a.theta = Math.max(Le, Math.min(ze, a.theta)))
              : (a.theta =
                  a.theta > (Le + ze) / 2
                    ? Math.max(Le, a.theta)
                    : Math.min(ze, a.theta))),
            (a.phi = Math.max(
              r.minPolarAngle,
              Math.min(r.maxPolarAngle, a.phi),
            )),
            a.makeSafe(),
            r.enableDamping === !0
              ? r.target.addScaledVector(d, r.dampingFactor)
              : r.target.add(d),
            (r.zoomToCursor && w) || r.object.isOrthographicCamera
              ? (a.radius = ie(a.radius))
              : (a.radius = ie(a.radius * u)),
            Y.setFromSpherical(a),
            Y.applyQuaternion(Fe),
            ve.copy(r.target).add(Y),
            r.object.lookAt(r.target),
            r.enableDamping === !0
              ? ((c.theta *= 1 - r.dampingFactor),
                (c.phi *= 1 - r.dampingFactor),
                d.multiplyScalar(1 - r.dampingFactor))
              : (c.set(0, 0, 0), d.set(0, 0, 0)));
          let dt = !1;
          if (r.zoomToCursor && w) {
            let St = null;
            if (r.object.isPerspectiveCamera) {
              const Rt = Y.length();
              St = ie(Rt * u);
              const zn = Rt - St;
              (r.object.position.addScaledVector(x, zn),
                r.object.updateMatrixWorld());
            } else if (r.object.isOrthographicCamera) {
              const Rt = new se(C.x, C.y, 0);
              (Rt.unproject(r.object),
                (r.object.zoom = Math.max(
                  r.minZoom,
                  Math.min(r.maxZoom, r.object.zoom / u),
                )),
                r.object.updateProjectionMatrix(),
                (dt = !0));
              const zn = new se(C.x, C.y, 0);
              (zn.unproject(r.object),
                r.object.position.sub(zn).add(Rt),
                r.object.updateMatrixWorld(),
                (St = Y.length()));
            } else
              (console.warn(
                "WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.",
              ),
                (r.zoomToCursor = !1));
            St !== null &&
              (this.screenSpacePanning
                ? r.target
                    .set(0, 0, -1)
                    .transformDirection(r.object.matrix)
                    .multiplyScalar(St)
                    .add(r.object.position)
                : (Tl.origin.copy(r.object.position),
                  Tl.direction
                    .set(0, 0, -1)
                    .transformDirection(r.object.matrix),
                  Math.abs(r.object.up.dot(Tl.direction)) < PD
                    ? e.lookAt(r.target)
                    : ($m.setFromNormalAndCoplanarPoint(r.object.up, r.target),
                      Tl.intersectPlane($m, r.target))));
          } else
            r.object.isOrthographicCamera &&
              ((r.object.zoom = Math.max(
                r.minZoom,
                Math.min(r.maxZoom, r.object.zoom / u),
              )),
              r.object.updateProjectionMatrix(),
              (dt = !0));
          return (
            (u = 1),
            (w = !1),
            dt ||
            Re.distanceToSquared(r.object.position) > s ||
            8 * (1 - $e.dot(r.object.quaternion)) > s ||
            Qe.distanceToSquared(r.target) > 0
              ? (r.dispatchEvent(Im),
                Re.copy(r.object.position),
                $e.copy(r.object.quaternion),
                Qe.copy(r.target),
                (dt = !1),
                !0)
              : !1
          );
        };
      })()),
      (this.dispose = function () {
        (r.domElement.removeEventListener("contextmenu", he),
          r.domElement.removeEventListener("pointerdown", ye),
          r.domElement.removeEventListener("pointercancel", Se),
          r.domElement.removeEventListener("wheel", M),
          r.domElement.removeEventListener("pointermove", xe),
          r.domElement.removeEventListener("pointerup", Se),
          r._domElementKeyEvents !== null &&
            (r._domElementKeyEvents.removeEventListener("keydown", T),
            (r._domElementKeyEvents = null)));
      }));
    const r = this,
      i = {
        NONE: -1,
        ROTATE: 0,
        DOLLY: 1,
        PAN: 2,
        TOUCH_ROTATE: 3,
        TOUCH_PAN: 4,
        TOUCH_DOLLY_PAN: 5,
        TOUCH_DOLLY_ROTATE: 6,
      };
    let o = i.NONE;
    const s = 1e-6,
      a = new Pm(),
      c = new Pm();
    let u = 1;
    const d = new se(),
      f = new qe(),
      p = new qe(),
      h = new qe(),
      v = new qe(),
      b = new qe(),
      g = new qe(),
      m = new qe(),
      _ = new qe(),
      y = new qe(),
      x = new se(),
      C = new qe();
    let w = !1;
    const S = [],
      D = {};
    function k(Y) {
      return Y !== null
        ? ((2 * Math.PI) / 60) * r.autoRotateSpeed * Y
        : ((2 * Math.PI) / 60 / 60) * r.autoRotateSpeed;
    }
    function P() {
      return Math.pow(0.95, r.zoomSpeed);
    }
    function I(Y) {
      c.theta -= Y;
    }
    function W(Y) {
      c.phi -= Y;
    }
    const X = (function () {
        const Y = new se();
        return function (Fe, Re) {
          (Y.setFromMatrixColumn(Re, 0), Y.multiplyScalar(-Fe), d.add(Y));
        };
      })(),
      Z = (function () {
        const Y = new se();
        return function (Fe, Re) {
          (r.screenSpacePanning === !0
            ? Y.setFromMatrixColumn(Re, 1)
            : (Y.setFromMatrixColumn(Re, 0), Y.crossVectors(r.object.up, Y)),
            Y.multiplyScalar(Fe),
            d.add(Y));
        };
      })(),
      G = (function () {
        const Y = new se();
        return function (Fe, Re) {
          const $e = r.domElement;
          if (r.object.isPerspectiveCamera) {
            const Qe = r.object.position;
            Y.copy(Qe).sub(r.target);
            let gt = Y.length();
            ((gt *= Math.tan(((r.object.fov / 2) * Math.PI) / 180)),
              X((2 * Fe * gt) / $e.clientHeight, r.object.matrix),
              Z((2 * Re * gt) / $e.clientHeight, r.object.matrix));
          } else
            r.object.isOrthographicCamera
              ? (X(
                  (Fe * (r.object.right - r.object.left)) /
                    r.object.zoom /
                    $e.clientWidth,
                  r.object.matrix,
                ),
                Z(
                  (Re * (r.object.top - r.object.bottom)) /
                    r.object.zoom /
                    $e.clientHeight,
                  r.object.matrix,
                ))
              : (console.warn(
                  "WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.",
                ),
                (r.enablePan = !1));
        };
      })();
    function $(Y) {
      r.object.isPerspectiveCamera || r.object.isOrthographicCamera
        ? (u /= Y)
        : (console.warn(
            "WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.",
          ),
          (r.enableZoom = !1));
    }
    function ne(Y) {
      r.object.isPerspectiveCamera || r.object.isOrthographicCamera
        ? (u *= Y)
        : (console.warn(
            "WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.",
          ),
          (r.enableZoom = !1));
    }
    function U(Y) {
      if (!r.zoomToCursor) return;
      w = !0;
      const Te = r.domElement.getBoundingClientRect(),
        Fe = Y.clientX - Te.left,
        Re = Y.clientY - Te.top,
        $e = Te.width,
        Qe = Te.height;
      ((C.x = (Fe / $e) * 2 - 1),
        (C.y = -(Re / Qe) * 2 + 1),
        x
          .set(C.x, C.y, 1)
          .unproject(r.object)
          .sub(r.object.position)
          .normalize());
    }
    function ie(Y) {
      return Math.max(r.minDistance, Math.min(r.maxDistance, Y));
    }
    function J(Y) {
      f.set(Y.clientX, Y.clientY);
    }
    function V(Y) {
      (U(Y), m.set(Y.clientX, Y.clientY));
    }
    function re(Y) {
      v.set(Y.clientX, Y.clientY);
    }
    function Ee(Y) {
      (p.set(Y.clientX, Y.clientY),
        h.subVectors(p, f).multiplyScalar(r.rotateSpeed));
      const Te = r.domElement;
      (I((2 * Math.PI * h.x) / Te.clientHeight),
        W((2 * Math.PI * h.y) / Te.clientHeight),
        f.copy(p),
        r.update());
    }
    function Pe(Y) {
      (_.set(Y.clientX, Y.clientY),
        y.subVectors(_, m),
        y.y > 0 ? $(P()) : y.y < 0 && ne(P()),
        m.copy(_),
        r.update());
    }
    function be(Y) {
      (b.set(Y.clientX, Y.clientY),
        g.subVectors(b, v).multiplyScalar(r.panSpeed),
        G(g.x, g.y),
        v.copy(b),
        r.update());
    }
    function ce(Y) {
      (U(Y), Y.deltaY < 0 ? ne(P()) : Y.deltaY > 0 && $(P()), r.update());
    }
    function oe(Y) {
      let Te = !1;
      switch (Y.code) {
        case r.keys.UP:
          (Y.ctrlKey || Y.metaKey || Y.shiftKey
            ? W((2 * Math.PI * r.rotateSpeed) / r.domElement.clientHeight)
            : G(0, r.keyPanSpeed),
            (Te = !0));
          break;
        case r.keys.BOTTOM:
          (Y.ctrlKey || Y.metaKey || Y.shiftKey
            ? W((-2 * Math.PI * r.rotateSpeed) / r.domElement.clientHeight)
            : G(0, -r.keyPanSpeed),
            (Te = !0));
          break;
        case r.keys.LEFT:
          (Y.ctrlKey || Y.metaKey || Y.shiftKey
            ? I((2 * Math.PI * r.rotateSpeed) / r.domElement.clientHeight)
            : G(r.keyPanSpeed, 0),
            (Te = !0));
          break;
        case r.keys.RIGHT:
          (Y.ctrlKey || Y.metaKey || Y.shiftKey
            ? I((-2 * Math.PI * r.rotateSpeed) / r.domElement.clientHeight)
            : G(-r.keyPanSpeed, 0),
            (Te = !0));
          break;
      }
      Te && (Y.preventDefault(), r.update());
    }
    function me() {
      if (S.length === 1) f.set(S[0].pageX, S[0].pageY);
      else {
        const Y = 0.5 * (S[0].pageX + S[1].pageX),
          Te = 0.5 * (S[0].pageY + S[1].pageY);
        f.set(Y, Te);
      }
    }
    function ge() {
      if (S.length === 1) v.set(S[0].pageX, S[0].pageY);
      else {
        const Y = 0.5 * (S[0].pageX + S[1].pageX),
          Te = 0.5 * (S[0].pageY + S[1].pageY);
        v.set(Y, Te);
      }
    }
    function Oe() {
      const Y = S[0].pageX - S[1].pageX,
        Te = S[0].pageY - S[1].pageY,
        Fe = Math.sqrt(Y * Y + Te * Te);
      m.set(0, Fe);
    }
    function He() {
      (r.enableZoom && Oe(), r.enablePan && ge());
    }
    function A() {
      (r.enableZoom && Oe(), r.enableRotate && me());
    }
    function j(Y) {
      if (S.length == 1) p.set(Y.pageX, Y.pageY);
      else {
        const Fe = de(Y),
          Re = 0.5 * (Y.pageX + Fe.x),
          $e = 0.5 * (Y.pageY + Fe.y);
        p.set(Re, $e);
      }
      h.subVectors(p, f).multiplyScalar(r.rotateSpeed);
      const Te = r.domElement;
      (I((2 * Math.PI * h.x) / Te.clientHeight),
        W((2 * Math.PI * h.y) / Te.clientHeight),
        f.copy(p));
    }
    function L(Y) {
      if (S.length === 1) b.set(Y.pageX, Y.pageY);
      else {
        const Te = de(Y),
          Fe = 0.5 * (Y.pageX + Te.x),
          Re = 0.5 * (Y.pageY + Te.y);
        b.set(Fe, Re);
      }
      (g.subVectors(b, v).multiplyScalar(r.panSpeed), G(g.x, g.y), v.copy(b));
    }
    function F(Y) {
      const Te = de(Y),
        Fe = Y.pageX - Te.x,
        Re = Y.pageY - Te.y,
        $e = Math.sqrt(Fe * Fe + Re * Re);
      (_.set(0, $e),
        y.set(0, Math.pow(_.y / m.y, r.zoomSpeed)),
        $(y.y),
        m.copy(_));
    }
    function te(Y) {
      (r.enableZoom && F(Y), r.enablePan && L(Y));
    }
    function q(Y) {
      (r.enableZoom && F(Y), r.enableRotate && j(Y));
    }
    function ye(Y) {
      r.enabled !== !1 &&
        (S.length === 0 &&
          (r.domElement.setPointerCapture(Y.pointerId),
          r.domElement.addEventListener("pointermove", xe),
          r.domElement.addEventListener("pointerup", Se)),
        _e(Y),
        Y.pointerType === "touch" ? K(Y) : Me(Y));
    }
    function xe(Y) {
      r.enabled !== !1 && (Y.pointerType === "touch" ? ue(Y) : ae(Y));
    }
    function Se(Y) {
      (je(Y),
        S.length === 0 &&
          (r.domElement.releasePointerCapture(Y.pointerId),
          r.domElement.removeEventListener("pointermove", xe),
          r.domElement.removeEventListener("pointerup", Se)),
        r.dispatchEvent(Om),
        (o = i.NONE));
    }
    function Me(Y) {
      let Te;
      switch (Y.button) {
        case 0:
          Te = r.mouseButtons.LEFT;
          break;
        case 1:
          Te = r.mouseButtons.MIDDLE;
          break;
        case 2:
          Te = r.mouseButtons.RIGHT;
          break;
        default:
          Te = -1;
      }
      switch (Te) {
        case go.DOLLY:
          if (r.enableZoom === !1) return;
          (V(Y), (o = i.DOLLY));
          break;
        case go.ROTATE:
          if (Y.ctrlKey || Y.metaKey || Y.shiftKey) {
            if (r.enablePan === !1) return;
            (re(Y), (o = i.PAN));
          } else {
            if (r.enableRotate === !1) return;
            (J(Y), (o = i.ROTATE));
          }
          break;
        case go.PAN:
          if (Y.ctrlKey || Y.metaKey || Y.shiftKey) {
            if (r.enableRotate === !1) return;
            (J(Y), (o = i.ROTATE));
          } else {
            if (r.enablePan === !1) return;
            (re(Y), (o = i.PAN));
          }
          break;
        default:
          o = i.NONE;
      }
      o !== i.NONE && r.dispatchEvent(Du);
    }
    function ae(Y) {
      switch (o) {
        case i.ROTATE:
          if (r.enableRotate === !1) return;
          Ee(Y);
          break;
        case i.DOLLY:
          if (r.enableZoom === !1) return;
          Pe(Y);
          break;
        case i.PAN:
          if (r.enablePan === !1) return;
          be(Y);
          break;
      }
    }
    function M(Y) {
      r.enabled === !1 ||
        r.enableZoom === !1 ||
        o !== i.NONE ||
        (Y.preventDefault(), r.dispatchEvent(Du), ce(Y), r.dispatchEvent(Om));
    }
    function T(Y) {
      r.enabled === !1 || r.enablePan === !1 || oe(Y);
    }
    function K(Y) {
      switch ((Ae(Y), S.length)) {
        case 1:
          switch (r.touches.ONE) {
            case vo.ROTATE:
              if (r.enableRotate === !1) return;
              (me(), (o = i.TOUCH_ROTATE));
              break;
            case vo.PAN:
              if (r.enablePan === !1) return;
              (ge(), (o = i.TOUCH_PAN));
              break;
            default:
              o = i.NONE;
          }
          break;
        case 2:
          switch (r.touches.TWO) {
            case vo.DOLLY_PAN:
              if (r.enableZoom === !1 && r.enablePan === !1) return;
              (He(), (o = i.TOUCH_DOLLY_PAN));
              break;
            case vo.DOLLY_ROTATE:
              if (r.enableZoom === !1 && r.enableRotate === !1) return;
              (A(), (o = i.TOUCH_DOLLY_ROTATE));
              break;
            default:
              o = i.NONE;
          }
          break;
        default:
          o = i.NONE;
      }
      o !== i.NONE && r.dispatchEvent(Du);
    }
    function ue(Y) {
      switch ((Ae(Y), o)) {
        case i.TOUCH_ROTATE:
          if (r.enableRotate === !1) return;
          (j(Y), r.update());
          break;
        case i.TOUCH_PAN:
          if (r.enablePan === !1) return;
          (L(Y), r.update());
          break;
        case i.TOUCH_DOLLY_PAN:
          if (r.enableZoom === !1 && r.enablePan === !1) return;
          (te(Y), r.update());
          break;
        case i.TOUCH_DOLLY_ROTATE:
          if (r.enableZoom === !1 && r.enableRotate === !1) return;
          (q(Y), r.update());
          break;
        default:
          o = i.NONE;
      }
    }
    function he(Y) {
      r.enabled !== !1 && Y.preventDefault();
    }
    function _e(Y) {
      S.push(Y);
    }
    function je(Y) {
      delete D[Y.pointerId];
      for (let Te = 0; Te < S.length; Te++)
        if (S[Te].pointerId == Y.pointerId) {
          S.splice(Te, 1);
          return;
        }
    }
    function Ae(Y) {
      let Te = D[Y.pointerId];
      (Te === void 0 && ((Te = new qe()), (D[Y.pointerId] = Te)),
        Te.set(Y.pageX, Y.pageY));
    }
    function de(Y) {
      const Te = Y.pointerId === S[0].pointerId ? S[1] : S[0];
      return D[Te.pointerId];
    }
    (r.domElement.addEventListener("contextmenu", he),
      r.domElement.addEventListener("pointerdown", ye),
      r.domElement.addEventListener("pointercancel", Se),
      r.domElement.addEventListener("wheel", M, { passive: !1 }),
      this.update());
  }
}
const LD = {
  name: "CopyShader",
  uniforms: { tDiffuse: { value: null }, opacity: { value: 1 } },
  vertexShader: `

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,
  fragmentShader: `

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`,
};
class Rc {
  constructor() {
    ((this.isPass = !0),
      (this.enabled = !0),
      (this.needsSwap = !0),
      (this.clear = !1),
      (this.renderToScreen = !1));
  }
  setSize() {}
  render() {
    console.error("THREE.Pass: .render() must be implemented in derived pass.");
  }
  dispose() {}
}
const DD = new Dv(-1, 1, 1, -1, 0, 1),
  df = new ui();
df.setAttribute("position", new ni([-1, 3, 0, -1, -1, 0, 3, -1, 0], 3));
df.setAttribute("uv", new ni([0, 2, 0, 0, 2, 0], 2));
class ID {
  constructor(e) {
    this._mesh = new It(df, e);
  }
  dispose() {
    this._mesh.geometry.dispose();
  }
  render(e) {
    e.render(this._mesh, DD);
  }
  get material() {
    return this._mesh.material;
  }
  set material(e) {
    this._mesh.material = e;
  }
}
class jv extends Rc {
  constructor(e, n) {
    (super(),
      (this.textureID = n !== void 0 ? n : "tDiffuse"),
      e instanceof li
        ? ((this.uniforms = e.uniforms), (this.material = e))
        : e &&
          ((this.uniforms = Av.clone(e.uniforms)),
          (this.material = new li({
            name: e.name !== void 0 ? e.name : "unspecified",
            defines: Object.assign({}, e.defines),
            uniforms: this.uniforms,
            vertexShader: e.vertexShader,
            fragmentShader: e.fragmentShader,
          }))),
      (this.fsQuad = new ID(this.material)));
  }
  render(e, n, r) {
    (this.uniforms[this.textureID] &&
      (this.uniforms[this.textureID].value = r.texture),
      (this.fsQuad.material = this.material),
      this.renderToScreen
        ? (e.setRenderTarget(null), this.fsQuad.render(e))
        : (e.setRenderTarget(n),
          this.clear &&
            e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil),
          this.fsQuad.render(e)));
  }
  dispose() {
    (this.material.dispose(), this.fsQuad.dispose());
  }
}
class zm extends Rc {
  constructor(e, n) {
    (super(),
      (this.scene = e),
      (this.camera = n),
      (this.clear = !0),
      (this.needsSwap = !1),
      (this.inverse = !1));
  }
  render(e, n, r) {
    const i = e.getContext(),
      o = e.state;
    (o.buffers.color.setMask(!1),
      o.buffers.depth.setMask(!1),
      o.buffers.color.setLocked(!0),
      o.buffers.depth.setLocked(!0));
    let s, a;
    (this.inverse ? ((s = 0), (a = 1)) : ((s = 1), (a = 0)),
      o.buffers.stencil.setTest(!0),
      o.buffers.stencil.setOp(i.REPLACE, i.REPLACE, i.REPLACE),
      o.buffers.stencil.setFunc(i.ALWAYS, s, 4294967295),
      o.buffers.stencil.setClear(a),
      o.buffers.stencil.setLocked(!0),
      e.setRenderTarget(r),
      this.clear && e.clear(),
      e.render(this.scene, this.camera),
      e.setRenderTarget(n),
      this.clear && e.clear(),
      e.render(this.scene, this.camera),
      o.buffers.color.setLocked(!1),
      o.buffers.depth.setLocked(!1),
      o.buffers.color.setMask(!0),
      o.buffers.depth.setMask(!0),
      o.buffers.stencil.setLocked(!1),
      o.buffers.stencil.setFunc(i.EQUAL, 1, 4294967295),
      o.buffers.stencil.setOp(i.KEEP, i.KEEP, i.KEEP),
      o.buffers.stencil.setLocked(!0));
  }
}
class OD extends Rc {
  constructor() {
    (super(), (this.needsSwap = !1));
  }
  render(e) {
    (e.state.buffers.stencil.setLocked(!1),
      e.state.buffers.stencil.setTest(!1));
  }
}
class $D {
  constructor(e, n) {
    if (
      ((this.renderer = e),
      (this._pixelRatio = e.getPixelRatio()),
      n === void 0)
    ) {
      const r = e.getSize(new qe());
      ((this._width = r.width),
        (this._height = r.height),
        (n = new ai(
          this._width * this._pixelRatio,
          this._height * this._pixelRatio,
          { type: ls },
        )),
        (n.texture.name = "EffectComposer.rt1"));
    } else ((this._width = n.width), (this._height = n.height));
    ((this.renderTarget1 = n),
      (this.renderTarget2 = n.clone()),
      (this.renderTarget2.texture.name = "EffectComposer.rt2"),
      (this.writeBuffer = this.renderTarget1),
      (this.readBuffer = this.renderTarget2),
      (this.renderToScreen = !0),
      (this.passes = []),
      (this.copyPass = new jv(LD)),
      (this.copyPass.material.blending = ti),
      (this.clock = new Hv()));
  }
  swapBuffers() {
    const e = this.readBuffer;
    ((this.readBuffer = this.writeBuffer), (this.writeBuffer = e));
  }
  addPass(e) {
    (this.passes.push(e),
      e.setSize(
        this._width * this._pixelRatio,
        this._height * this._pixelRatio,
      ));
  }
  insertPass(e, n) {
    (this.passes.splice(n, 0, e),
      e.setSize(
        this._width * this._pixelRatio,
        this._height * this._pixelRatio,
      ));
  }
  removePass(e) {
    const n = this.passes.indexOf(e);
    n !== -1 && this.passes.splice(n, 1);
  }
  isLastEnabledPass(e) {
    for (let n = e + 1; n < this.passes.length; n++)
      if (this.passes[n].enabled) return !1;
    return !0;
  }
  render(e) {
    e === void 0 && (e = this.clock.getDelta());
    const n = this.renderer.getRenderTarget();
    let r = !1;
    for (let i = 0, o = this.passes.length; i < o; i++) {
      const s = this.passes[i];
      if (s.enabled !== !1) {
        if (
          ((s.renderToScreen =
            this.renderToScreen && this.isLastEnabledPass(i)),
          s.render(this.renderer, this.writeBuffer, this.readBuffer, e, r),
          s.needsSwap)
        ) {
          if (r) {
            const a = this.renderer.getContext(),
              c = this.renderer.state.buffers.stencil;
            (c.setFunc(a.NOTEQUAL, 1, 4294967295),
              this.copyPass.render(
                this.renderer,
                this.writeBuffer,
                this.readBuffer,
                e,
              ),
              c.setFunc(a.EQUAL, 1, 4294967295));
          }
          this.swapBuffers();
        }
        zm !== void 0 &&
          (s instanceof zm ? (r = !0) : s instanceof OD && (r = !1));
      }
    }
    this.renderer.setRenderTarget(n);
  }
  reset(e) {
    if (e === void 0) {
      const n = this.renderer.getSize(new qe());
      ((this._pixelRatio = this.renderer.getPixelRatio()),
        (this._width = n.width),
        (this._height = n.height),
        (e = this.renderTarget1.clone()),
        e.setSize(
          this._width * this._pixelRatio,
          this._height * this._pixelRatio,
        ));
    }
    (this.renderTarget1.dispose(),
      this.renderTarget2.dispose(),
      (this.renderTarget1 = e),
      (this.renderTarget2 = e.clone()),
      (this.writeBuffer = this.renderTarget1),
      (this.readBuffer = this.renderTarget2));
  }
  setSize(e, n) {
    ((this._width = e), (this._height = n));
    const r = this._width * this._pixelRatio,
      i = this._height * this._pixelRatio;
    (this.renderTarget1.setSize(r, i), this.renderTarget2.setSize(r, i));
    for (let o = 0; o < this.passes.length; o++) this.passes[o].setSize(r, i);
  }
  setPixelRatio(e) {
    ((this._pixelRatio = e), this.setSize(this._width, this._height));
  }
  dispose() {
    (this.renderTarget1.dispose(),
      this.renderTarget2.dispose(),
      this.copyPass.dispose());
  }
}
class zD extends Rc {
  constructor(e, n, r = null, i = null, o = null) {
    (super(),
      (this.scene = e),
      (this.camera = n),
      (this.overrideMaterial = r),
      (this.clearColor = i),
      (this.clearAlpha = o),
      (this.clear = !0),
      (this.clearDepth = !1),
      (this.needsSwap = !1),
      (this._oldClearColor = new _t()));
  }
  render(e, n, r) {
    const i = e.autoClear;
    e.autoClear = !1;
    let o, s;
    (this.overrideMaterial !== null &&
      ((s = this.scene.overrideMaterial),
      (this.scene.overrideMaterial = this.overrideMaterial)),
      this.clearColor !== null &&
        (e.getClearColor(this._oldClearColor),
        e.setClearColor(this.clearColor)),
      this.clearAlpha !== null &&
        ((o = e.getClearAlpha()), e.setClearAlpha(this.clearAlpha)),
      this.clearDepth == !0 && e.clearDepth(),
      e.setRenderTarget(this.renderToScreen ? null : r),
      this.clear === !0 &&
        e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil),
      e.render(this.scene, this.camera),
      this.clearColor !== null && e.setClearColor(this._oldClearColor),
      this.clearAlpha !== null && e.setClearAlpha(o),
      this.overrideMaterial !== null && (this.scene.overrideMaterial = s),
      (e.autoClear = i));
  }
}
const BD = {
  uniforms: {
    tDiffuse: { value: null },
    resolution: { value: new qe(1 / 1024, 1 / 512) },
  },
  vertexShader: `

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,
  fragmentShader: `
	precision highp float;

	uniform sampler2D tDiffuse;

	uniform vec2 resolution;

	varying vec2 vUv;

	// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)

	//----------------------------------------------------------------------------------
	// File:        es3-keplerFXAAassetsshaders/FXAA_DefaultES.frag
	// SDK Version: v3.00
	// Email:       gameworks@nvidia.com
	// Site:        http://developer.nvidia.com/
	//
	// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.
	//
	// Redistribution and use in source and binary forms, with or without
	// modification, are permitted provided that the following conditions
	// are met:
	//  * Redistributions of source code must retain the above copyright
	//    notice, this list of conditions and the following disclaimer.
	//  * Redistributions in binary form must reproduce the above copyright
	//    notice, this list of conditions and the following disclaimer in the
	//    documentation and/or other materials provided with the distribution.
	//  * Neither the name of NVIDIA CORPORATION nor the names of its
	//    contributors may be used to endorse or promote products derived
	//    from this software without specific prior written permission.
	//
	// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ''AS IS'' AND ANY
	// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
	// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
	// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
	// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
	// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
	// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
	// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
	// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
	// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
	// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	//
	//----------------------------------------------------------------------------------

	#ifndef FXAA_DISCARD
			//
			// Only valid for PC OpenGL currently.
			// Probably will not work when FXAA_GREEN_AS_LUMA = 1.
			//
			// 1 = Use discard on pixels which don't need AA.
			//     For APIs which enable concurrent TEX+ROP from same surface.
			// 0 = Return unchanged color on pixels which don't need AA.
			//
			#define FXAA_DISCARD 0
	#endif

	/*--------------------------------------------------------------------------*/
	#define FxaaTexTop(t, p) texture2D(t, p, -100.0)
	#define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), -100.0)
	/*--------------------------------------------------------------------------*/

	#define NUM_SAMPLES 5

	// assumes colors have premultipliedAlpha, so that the calculated color contrast is scaled by alpha
	float contrast( vec4 a, vec4 b ) {
			vec4 diff = abs( a - b );
			return max( max( max( diff.r, diff.g ), diff.b ), diff.a );
	}

	/*============================================================================

									FXAA3 QUALITY - PC

	============================================================================*/

	/*--------------------------------------------------------------------------*/
	vec4 FxaaPixelShader(
			vec2 posM,
			sampler2D tex,
			vec2 fxaaQualityRcpFrame,
			float fxaaQualityEdgeThreshold,
			float fxaaQualityinvEdgeThreshold
	) {
			vec4 rgbaM = FxaaTexTop(tex, posM);
			vec4 rgbaS = FxaaTexOff(tex, posM, vec2( 0.0, 1.0), fxaaQualityRcpFrame.xy);
			vec4 rgbaE = FxaaTexOff(tex, posM, vec2( 1.0, 0.0), fxaaQualityRcpFrame.xy);
			vec4 rgbaN = FxaaTexOff(tex, posM, vec2( 0.0,-1.0), fxaaQualityRcpFrame.xy);
			vec4 rgbaW = FxaaTexOff(tex, posM, vec2(-1.0, 0.0), fxaaQualityRcpFrame.xy);
			// . S .
			// W M E
			// . N .

			bool earlyExit = max( max( max(
					contrast( rgbaM, rgbaN ),
					contrast( rgbaM, rgbaS ) ),
					contrast( rgbaM, rgbaE ) ),
					contrast( rgbaM, rgbaW ) )
					< fxaaQualityEdgeThreshold;
			// . 0 .
			// 0 0 0
			// . 0 .

			#if (FXAA_DISCARD == 1)
					if(earlyExit) FxaaDiscard;
			#else
					if(earlyExit) return rgbaM;
			#endif

			float contrastN = contrast( rgbaM, rgbaN );
			float contrastS = contrast( rgbaM, rgbaS );
			float contrastE = contrast( rgbaM, rgbaE );
			float contrastW = contrast( rgbaM, rgbaW );

			float relativeVContrast = ( contrastN + contrastS ) - ( contrastE + contrastW );
			relativeVContrast *= fxaaQualityinvEdgeThreshold;

			bool horzSpan = relativeVContrast > 0.;
			// . 1 .
			// 0 0 0
			// . 1 .

			// 45 deg edge detection and corners of objects, aka V/H contrast is too similar
			if( abs( relativeVContrast ) < .3 ) {
					// locate the edge
					vec2 dirToEdge;
					dirToEdge.x = contrastE > contrastW ? 1. : -1.;
					dirToEdge.y = contrastS > contrastN ? 1. : -1.;
					// . 2 .      . 1 .
					// 1 0 2  ~=  0 0 1
					// . 1 .      . 0 .

					// tap 2 pixels and see which ones are "outside" the edge, to
					// determine if the edge is vertical or horizontal

					vec4 rgbaAlongH = FxaaTexOff(tex, posM, vec2( dirToEdge.x, -dirToEdge.y ), fxaaQualityRcpFrame.xy);
					float matchAlongH = contrast( rgbaM, rgbaAlongH );
					// . 1 .
					// 0 0 1
					// . 0 H

					vec4 rgbaAlongV = FxaaTexOff(tex, posM, vec2( -dirToEdge.x, dirToEdge.y ), fxaaQualityRcpFrame.xy);
					float matchAlongV = contrast( rgbaM, rgbaAlongV );
					// V 1 .
					// 0 0 1
					// . 0 .

					relativeVContrast = matchAlongV - matchAlongH;
					relativeVContrast *= fxaaQualityinvEdgeThreshold;

					if( abs( relativeVContrast ) < .3 ) { // 45 deg edge
							// 1 1 .
							// 0 0 1
							// . 0 1

							// do a simple blur
							return mix(
									rgbaM,
									(rgbaN + rgbaS + rgbaE + rgbaW) * .25,
									.4
							);
					}

					horzSpan = relativeVContrast > 0.;
			}

			if(!horzSpan) rgbaN = rgbaW;
			if(!horzSpan) rgbaS = rgbaE;
			// . 0 .      1
			// 1 0 1  ->  0
			// . 0 .      1

			bool pairN = contrast( rgbaM, rgbaN ) > contrast( rgbaM, rgbaS );
			if(!pairN) rgbaN = rgbaS;

			vec2 offNP;
			offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;
			offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;

			bool doneN = false;
			bool doneP = false;

			float nDist = 0.;
			float pDist = 0.;

			vec2 posN = posM;
			vec2 posP = posM;

			int iterationsUsed = 0;
			int iterationsUsedN = 0;
			int iterationsUsedP = 0;
			for( int i = 0; i < NUM_SAMPLES; i++ ) {
					iterationsUsed = i;

					float increment = float(i + 1);

					if(!doneN) {
							nDist += increment;
							posN = posM + offNP * nDist;
							vec4 rgbaEndN = FxaaTexTop(tex, posN.xy);
							doneN = contrast( rgbaEndN, rgbaM ) > contrast( rgbaEndN, rgbaN );
							iterationsUsedN = i;
					}

					if(!doneP) {
							pDist += increment;
							posP = posM - offNP * pDist;
							vec4 rgbaEndP = FxaaTexTop(tex, posP.xy);
							doneP = contrast( rgbaEndP, rgbaM ) > contrast( rgbaEndP, rgbaN );
							iterationsUsedP = i;
					}

					if(doneN || doneP) break;
			}


			if ( !doneP && !doneN ) return rgbaM; // failed to find end of edge

			float dist = min(
					doneN ? float( iterationsUsedN ) / float( NUM_SAMPLES - 1 ) : 1.,
					doneP ? float( iterationsUsedP ) / float( NUM_SAMPLES - 1 ) : 1.
			);

			// hacky way of reduces blurriness of mostly diagonal edges
			// but reduces AA quality
			dist = pow(dist, .5);

			dist = 1. - dist;

			return mix(
					rgbaM,
					rgbaN,
					dist * .5
			);
	}

	void main() {
			const float edgeDetectionQuality = .2;
			const float invEdgeDetectionQuality = 1. / edgeDetectionQuality;

			gl_FragColor = FxaaPixelShader(
					vUv,
					tDiffuse,
					resolution,
					edgeDetectionQuality, // [0,1] contrast needed, otherwise early discard
					invEdgeDetectionQuality
			);

	}
	`,
};
class UD extends dD {
  constructor(e = "", n = {}) {
    const r = new Fv({ transparent: !0, alphaTest: 1e-5 });
    (super(r),
      Object.defineProperty(this, "painted", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "text", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "font", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "margin", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "textStyle", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "backgroundStyle", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "height", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "textMaterial", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      (this.textMaterial = r),
      (this.text = e),
      (this.font = n.font === void 0 ? "48px Minecraft" : n.font),
      (this.margin = n.margin === void 0 ? [5, 10, 5, 10] : n.margin),
      (this.textStyle = n.textStyle === void 0 ? "white" : n.textStyle),
      (this.backgroundStyle =
        n.backgroundStyle === void 0 ? "rgba(0,0,0,.25)" : n.backgroundStyle),
      (this.height = n.height === void 0 ? 4 : n.height),
      (n.repaintAfterLoaded === void 0 ? !0 : n.repaintAfterLoaded) &&
      !document.fonts.check(this.font, this.text)
        ? (this.paint(), (this.painted = this.loadAndPaint()))
        : (this.paint(), (this.painted = Promise.resolve())));
  }
  async loadAndPaint() {
    (await document.fonts.load(this.font, this.text), this.paint());
  }
  paint() {
    const e = document.createElement("canvas");
    let n = e.getContext("2d");
    n.font = this.font;
    const r = n.measureText(this.text);
    ((e.width =
      this.margin[3] +
      r.actualBoundingBoxLeft +
      r.actualBoundingBoxRight +
      this.margin[1]),
      (e.height =
        this.margin[0] +
        r.actualBoundingBoxAscent +
        r.actualBoundingBoxDescent +
        this.margin[2]),
      (n = e.getContext("2d")),
      (n.font = this.font),
      (n.fillStyle = this.backgroundStyle),
      n.fillRect(0, 0, e.width, e.height),
      (n.fillStyle = this.textStyle),
      n.fillText(
        this.text,
        this.margin[3] + r.actualBoundingBoxLeft,
        this.margin[0] + r.actualBoundingBoxAscent,
      ));
    const i = new Fl(e);
    ((i.magFilter = Ht),
      (i.minFilter = Ht),
      (this.textMaterial.map = i),
      (this.textMaterial.needsUpdate = !0),
      (this.scale.x = (e.width / e.height) * this.height),
      (this.scale.y = this.height));
  }
}
class FD {
  constructor(e = {}) {
    (Object.defineProperty(this, "canvas", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: void 0,
    }),
      Object.defineProperty(this, "scene", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "camera", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "renderer", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "controls", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "playerObject", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "playerWrapper", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "globalLight", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: new mD(16777215, 3),
      }),
      Object.defineProperty(this, "cameraLight", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: new hD(16777215, 0.6),
      }),
      Object.defineProperty(this, "composer", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "renderPass", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "fxaaPass", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "skinCanvas", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "capeCanvas", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "earsCanvas", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "skinTexture", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: null,
      }),
      Object.defineProperty(this, "capeTexture", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: null,
      }),
      Object.defineProperty(this, "earsTexture", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: null,
      }),
      Object.defineProperty(this, "backgroundTexture", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: null,
      }),
      Object.defineProperty(this, "_disposed", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: !1,
      }),
      Object.defineProperty(this, "_renderPaused", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: !1,
      }),
      Object.defineProperty(this, "_zoom", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "isUserRotating", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: !1,
      }),
      Object.defineProperty(this, "autoRotate", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: !1,
      }),
      Object.defineProperty(this, "autoRotateSpeed", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 1,
      }),
      Object.defineProperty(this, "_animation", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "clock", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "animationID", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "onContextLost", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "onContextRestored", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "_pixelRatio", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "devicePixelRatioQuery", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "onDevicePixelRatioChange", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: void 0,
      }),
      Object.defineProperty(this, "_nameTag", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: null,
      }),
      (this.canvas =
        e.canvas === void 0 ? document.createElement("canvas") : e.canvas),
      (this.skinCanvas = document.createElement("canvas")),
      (this.capeCanvas = document.createElement("canvas")),
      (this.earsCanvas = document.createElement("canvas")),
      (this.scene = new cD()),
      (this.camera = new jn()),
      this.camera.add(this.cameraLight),
      this.scene.add(this.camera),
      this.scene.add(this.globalLight),
      (er.enabled = !1),
      (this.renderer = new Uv({
        canvas: this.canvas,
        preserveDrawingBuffer: e.preserveDrawingBuffer === !0,
      })),
      (this.onDevicePixelRatioChange = () => {
        (this.renderer.setPixelRatio(window.devicePixelRatio),
          this.updateComposerSize(),
          this._pixelRatio === "match-device" &&
            ((this.devicePixelRatioQuery = matchMedia(
              `(resolution: ${window.devicePixelRatio}dppx)`,
            )),
            this.devicePixelRatioQuery.addEventListener(
              "change",
              this.onDevicePixelRatioChange,
              { once: !0 },
            )));
      }),
      e.pixelRatio === void 0 || e.pixelRatio === "match-device"
        ? ((this._pixelRatio = "match-device"),
          (this.devicePixelRatioQuery = matchMedia(
            `(resolution: ${window.devicePixelRatio}dppx)`,
          )),
          this.devicePixelRatioQuery.addEventListener(
            "change",
            this.onDevicePixelRatioChange,
            { once: !0 },
          ),
          this.renderer.setPixelRatio(window.devicePixelRatio))
        : ((this._pixelRatio = e.pixelRatio),
          (this.devicePixelRatioQuery = null),
          this.renderer.setPixelRatio(e.pixelRatio)),
      this.renderer.setClearColor(0, 0));
    let n;
    (this.renderer.capabilities.isWebGL2 &&
      (n = new ai(0, 0, { depthTexture: new Bv(0, 0, Jr) })),
      (this.composer = new $D(this.renderer, n)),
      (this.renderPass = new zD(this.scene, this.camera)),
      (this.fxaaPass = new jv(BD)),
      this.composer.addPass(this.renderPass),
      this.composer.addPass(this.fxaaPass),
      (this.playerObject = new xD()),
      (this.playerObject.name = "player"),
      (this.playerObject.skin.visible = !1),
      (this.playerObject.cape.visible = !1),
      (this.playerWrapper = new un()),
      this.playerWrapper.add(this.playerObject),
      this.scene.add(this.playerWrapper),
      (this.controls = new RD(this.camera, this.canvas)),
      (this.controls.enablePan = !1),
      (this.controls.minDistance = 10),
      (this.controls.maxDistance = 256),
      e.enableControls === !1 && (this.controls.enabled = !1),
      e.skin !== void 0 &&
        this.loadSkin(e.skin, {
          model: e.model,
          ears: e.ears === "current-skin",
        }),
      e.cape !== void 0 && this.loadCape(e.cape),
      e.ears !== void 0 &&
        e.ears !== "current-skin" &&
        this.loadEars(e.ears.source, { textureType: e.ears.textureType }),
      e.width !== void 0 && (this.width = e.width),
      e.height !== void 0 && (this.height = e.height),
      e.background !== void 0 && (this.background = e.background),
      e.panorama !== void 0 && this.loadPanorama(e.panorama),
      e.nameTag !== void 0 && (this.nameTag = e.nameTag),
      (this.camera.position.z = 1),
      (this._zoom = e.zoom === void 0 ? 0.9 : e.zoom),
      (this.fov = e.fov === void 0 ? 50 : e.fov),
      (this._animation = e.animation === void 0 ? null : e.animation),
      (this.clock = new Hv()),
      e.renderPaused === !0
        ? ((this._renderPaused = !0), (this.animationID = null))
        : (this.animationID = window.requestAnimationFrame(() => this.draw())),
      (this.onContextLost = (r) => {
        (r.preventDefault(),
          this.animationID !== null &&
            (window.cancelAnimationFrame(this.animationID),
            (this.animationID = null)));
      }),
      (this.onContextRestored = () => {
        (this.renderer.setClearColor(0, 0),
          !this._renderPaused &&
            !this._disposed &&
            this.animationID === null &&
            (this.animationID = window.requestAnimationFrame(() =>
              this.draw(),
            )));
      }),
      this.canvas.addEventListener("webglcontextlost", this.onContextLost, !1),
      this.canvas.addEventListener(
        "webglcontextrestored",
        this.onContextRestored,
        !1,
      ),
      this.canvas.addEventListener(
        "mousedown",
        () => {
          this.isUserRotating = !0;
        },
        !1,
      ),
      this.canvas.addEventListener(
        "mouseup",
        () => {
          this.isUserRotating = !1;
        },
        !1,
      ),
      this.canvas.addEventListener(
        "touchmove",
        (r) => {
          r.touches.length === 1
            ? (this.isUserRotating = !0)
            : (this.isUserRotating = !1);
        },
        !1,
      ),
      this.canvas.addEventListener(
        "touchend",
        () => {
          this.isUserRotating = !1;
        },
        !1,
      ));
  }
  updateComposerSize() {
    this.composer.setSize(this.width, this.height);
    const e = this.renderer.getPixelRatio();
    (this.composer.setPixelRatio(e),
      (this.fxaaPass.material.uniforms.resolution.value.x =
        1 / (this.width * e)),
      (this.fxaaPass.material.uniforms.resolution.value.y =
        1 / (this.height * e)));
  }
  recreateSkinTexture() {
    (this.skinTexture !== null && this.skinTexture.dispose(),
      (this.skinTexture = new Fl(this.skinCanvas)),
      (this.skinTexture.magFilter = Ht),
      (this.skinTexture.minFilter = Ht),
      (this.playerObject.skin.map = this.skinTexture));
  }
  recreateCapeTexture() {
    (this.capeTexture !== null && this.capeTexture.dispose(),
      (this.capeTexture = new Fl(this.capeCanvas)),
      (this.capeTexture.magFilter = Ht),
      (this.capeTexture.minFilter = Ht),
      (this.playerObject.cape.map = this.capeTexture),
      (this.playerObject.elytra.map = this.capeTexture));
  }
  recreateEarsTexture() {
    (this.earsTexture !== null && this.earsTexture.dispose(),
      (this.earsTexture = new Fl(this.earsCanvas)),
      (this.earsTexture.magFilter = Ht),
      (this.earsTexture.minFilter = Ht),
      (this.playerObject.ears.map = this.earsTexture));
  }
  loadSkin(e, n = {}) {
    if (e === null) this.resetSkin();
    else if (Ml(e))
      (wD(this.skinCanvas, e),
        this.recreateSkinTexture(),
        n.model === void 0 || n.model === "auto-detect"
          ? (this.playerObject.skin.modelType = ED(this.skinCanvas))
          : (this.playerObject.skin.modelType = n.model),
        n.makeVisible !== !1 && (this.playerObject.skin.visible = !0),
        (n.ears === !0 || n.ears == "load-only") &&
          (Dm(this.earsCanvas, e),
          this.recreateEarsTexture(),
          n.ears === !0 && (this.playerObject.ears.visible = !0)));
    else return El(e).then((r) => this.loadSkin(r, n));
  }
  resetSkin() {
    ((this.playerObject.skin.visible = !1),
      (this.playerObject.skin.map = null),
      this.skinTexture !== null &&
        (this.skinTexture.dispose(), (this.skinTexture = null)));
  }
  loadCape(e, n = {}) {
    if (e === null) this.resetCape();
    else if (Ml(e))
      (SD(this.capeCanvas, e),
        this.recreateCapeTexture(),
        n.makeVisible !== !1 &&
          (this.playerObject.backEquipment =
            n.backEquipment === void 0 ? "cape" : n.backEquipment));
    else return El(e).then((r) => this.loadCape(r, n));
  }
  resetCape() {
    ((this.playerObject.backEquipment = null),
      (this.playerObject.cape.map = null),
      (this.playerObject.elytra.map = null),
      this.capeTexture !== null &&
        (this.capeTexture.dispose(), (this.capeTexture = null)));
  }
  loadEars(e, n = {}) {
    if (e === null) this.resetEars();
    else if (Ml(e))
      (n.textureType === "skin"
        ? Dm(this.earsCanvas, e)
        : AD(this.earsCanvas, e),
        this.recreateEarsTexture(),
        n.makeVisible !== !1 && (this.playerObject.ears.visible = !0));
    else return El(e).then((r) => this.loadEars(r, n));
  }
  resetEars() {
    ((this.playerObject.ears.visible = !1),
      (this.playerObject.ears.map = null),
      this.earsTexture !== null &&
        (this.earsTexture.dispose(), (this.earsTexture = null)));
  }
  loadPanorama(e) {
    return this.loadBackground(e, ec);
  }
  loadBackground(e, n) {
    if (Ml(e))
      (this.backgroundTexture !== null && this.backgroundTexture.dispose(),
        (this.backgroundTexture = new yn()),
        (this.backgroundTexture.image = e),
        n !== void 0 && (this.backgroundTexture.mapping = n),
        (this.backgroundTexture.needsUpdate = !0),
        (this.scene.background = this.backgroundTexture));
    else return El(e).then((r) => this.loadBackground(r, n));
  }
  draw() {
    const e = this.clock.getDelta();
    (this._animation !== null && this._animation.update(this.playerObject, e),
      this.autoRotate &&
        ((this.controls.enableRotate && this.isUserRotating) ||
          (this.playerWrapper.rotation.y += e * this.autoRotateSpeed)),
      this.controls.update(),
      this.render(),
      (this.animationID = window.requestAnimationFrame(() => this.draw())));
  }
  render() {
    this.composer.render();
  }
  setSize(e, n) {
    ((this.camera.aspect = e / n),
      this.camera.updateProjectionMatrix(),
      this.renderer.setSize(e, n),
      this.updateComposerSize());
  }
  dispose() {
    ((this._disposed = !0),
      this.canvas.removeEventListener(
        "webglcontextlost",
        this.onContextLost,
        !1,
      ),
      this.canvas.removeEventListener(
        "webglcontextrestored",
        this.onContextRestored,
        !1,
      ),
      this.devicePixelRatioQuery !== null &&
        (this.devicePixelRatioQuery.removeEventListener(
          "change",
          this.onDevicePixelRatioChange,
        ),
        (this.devicePixelRatioQuery = null)),
      this.animationID !== null &&
        (window.cancelAnimationFrame(this.animationID),
        (this.animationID = null)),
      this.controls.dispose(),
      this.renderer.dispose(),
      this.resetSkin(),
      this.resetCape(),
      this.resetEars(),
      (this.background = null),
      this.fxaaPass.fsQuad.dispose());
  }
  get disposed() {
    return this._disposed;
  }
  get renderPaused() {
    return this._renderPaused;
  }
  set renderPaused(e) {
    ((this._renderPaused = e),
      this._renderPaused && this.animationID !== null
        ? (window.cancelAnimationFrame(this.animationID),
          (this.animationID = null),
          this.clock.stop(),
          (this.clock.autoStart = !0))
        : !this._renderPaused &&
          !this._disposed &&
          !this.renderer.getContext().isContextLost() &&
          this.animationID == null &&
          (this.animationID = window.requestAnimationFrame(() => this.draw())));
  }
  get width() {
    return this.renderer.getSize(new qe()).width;
  }
  set width(e) {
    this.setSize(e, this.height);
  }
  get height() {
    return this.renderer.getSize(new qe()).height;
  }
  set height(e) {
    this.setSize(this.width, e);
  }
  get background() {
    return this.scene.background;
  }
  set background(e) {
    (e === null || e instanceof _t || e instanceof yn
      ? (this.scene.background = e)
      : (this.scene.background = new _t(e)),
      this.backgroundTexture !== null &&
        e !== this.backgroundTexture &&
        (this.backgroundTexture.dispose(), (this.backgroundTexture = null)));
  }
  adjustCameraDistance() {
    let e = 4.5 + 16.5 / Math.tan(((this.fov / 180) * Math.PI) / 2) / this.zoom;
    (e < 10 ? (e = 10) : e > 256 && (e = 256),
      this.camera.position.multiplyScalar(e / this.camera.position.length()),
      this.camera.updateProjectionMatrix());
  }
  resetCameraPose() {
    (this.camera.position.set(0, 0, 1),
      this.camera.rotation.set(0, 0, 0),
      this.adjustCameraDistance());
  }
  get fov() {
    return this.camera.fov;
  }
  set fov(e) {
    ((this.camera.fov = e), this.adjustCameraDistance());
  }
  get zoom() {
    return this._zoom;
  }
  set zoom(e) {
    ((this._zoom = e), this.adjustCameraDistance());
  }
  get pixelRatio() {
    return this._pixelRatio;
  }
  set pixelRatio(e) {
    e === "match-device"
      ? this._pixelRatio !== "match-device" &&
        ((this._pixelRatio = e), this.onDevicePixelRatioChange())
      : (this._pixelRatio === "match-device" &&
          this.devicePixelRatioQuery !== null &&
          (this.devicePixelRatioQuery.removeEventListener(
            "change",
            this.onDevicePixelRatioChange,
          ),
          (this.devicePixelRatioQuery = null)),
        (this._pixelRatio = e),
        this.renderer.setPixelRatio(e),
        this.updateComposerSize());
  }
  get animation() {
    return this._animation;
  }
  set animation(e) {
    (this._animation !== e &&
      (this.playerObject.resetJoints(),
      this.playerObject.position.set(0, 0, 0),
      this.playerObject.rotation.set(0, 0, 0),
      this.clock.stop(),
      (this.clock.autoStart = !0)),
      e !== null && (e.progress = 0),
      (this._animation = e));
  }
  get nameTag() {
    return this._nameTag;
  }
  set nameTag(e) {
    (this._nameTag !== null && this.playerWrapper.remove(this._nameTag),
      e !== null &&
        (e instanceof xn || (e = new UD(e)),
        this.playerWrapper.add(e),
        (e.position.y = 20)),
      (this._nameTag = e));
  }
}
const ND = { class: "space-y-6" },
  VD = { class: "flex justify-between items-center" },
  HD = { class: "flex items-center gap-4" },
  jD = { class: "text-right" },
  GD = { class: "grid grid-cols-1 lg:grid-cols-2 gap-6" },
  WD = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  KD = { class: "relative" },
  XD = { class: "absolute bottom-4 left-4 flex gap-2" },
  YD = {
    key: 0,
    class:
      "absolute inset-0 bg-surface-900/50 flex items-center justify-center rounded-lg",
  },
  qD = {
    key: 1,
    class:
      "absolute inset-0 bg-surface-900/30 flex items-center justify-center rounded-lg",
  },
  ZD = { class: "text-center text-white" },
  JD = { class: "text-sm opacity-75" },
  QD = { class: "mt-4 p-3 bg-surface-50 dark:bg-surface-800 rounded-lg" },
  eI = { class: "grid grid-cols-2 gap-4 text-sm" },
  tI = { class: "font-medium text-surface-900 dark:text-surface-0 ml-2" },
  nI = { class: "font-medium text-surface-900 dark:text-surface-0 ml-2" },
  rI = { class: "font-medium text-surface-900 dark:text-surface-0 ml-2" },
  iI = { class: "font-medium text-surface-900 dark:text-surface-0 ml-2" },
  oI = { class: "col-span-2" },
  sI = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  aI = {
    class:
      "mb-4 p-3 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg",
  },
  lI = { class: "text-sm text-blue-800 dark:text-blue-200 space-y-1" },
  cI = { class: "flex items-center gap-2" },
  uI = {
    key: 0,
    class: "mt-4 p-4 bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  dI = { class: "flex items-start gap-3" },
  fI = ["src"],
  pI = { class: "flex-1" },
  hI = { class: "font-medium text-surface-900 dark:text-surface-0" },
  mI = { class: "text-sm text-surface-500 dark:text-surface-400" },
  gI = { class: "text-sm text-surface-600 dark:text-surface-300" },
  vI = { class: "mt-2 space-y-1" },
  bI = { class: "mt-4 flex gap-2" },
  yI = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  xI = { key: 0, class: "text-center py-4" },
  _I = { key: 1, class: "text-center py-8" },
  wI = { key: 2, class: "space-y-3" },
  kI = ["src"],
  SI = { class: "flex-1" },
  CI = { class: "font-medium text-surface-900 dark:text-surface-0" },
  MI = { class: "text-sm text-surface-500 dark:text-surface-400" },
  EI = { class: "text-right" },
  TI = { class: "text-xs text-surface-500 dark:text-surface-400" },
  AI = { class: "flex gap-1" },
  PI = { key: 0, class: "fixed top-4 right-4 z-50" },
  RI = {
    class:
      "bg-red-500 text-white px-6 py-4 rounded-lg shadow-lg flex items-center gap-2 animate-fadeIn",
  },
  LI = { key: 1, class: "fixed top-4 right-4 z-50" },
  DI = {
    class:
      "bg-green-500 text-white px-6 py-4 rounded-lg shadow-lg flex items-center gap-2 animate-fadeIn",
  },
  II = {
    __name: "SkinUpload",
    setup(t) {
      const e = N(null),
        n = N(null),
        r = N(null),
        i = N(!0),
        o = N(!0),
        s = N(!1),
        a = N(null),
        c = N(null),
        u = N(!1),
        d = N(!1),
        f = N(!1),
        p = N(""),
        h = N(""),
        v = N(!0),
        b = N(!1),
        g = N(""),
        m = N("Nincs aktív skin"),
        _ = N(!1);
      let y;
      const x = N({
          type: "Normál Skin",
          resolution: "64x64",
          lastModified: "-",
          fileSize: "-",
        }),
        C = N({
          resolution: "",
          dimensions: { width: 0, height: 0 },
          isHD: !1,
        }),
        w = N([]),
        S = N([]),
        D = Xe(() => w.value.every((ae) => ae.passed)),
        k = (ae) => {
          switch (ae) {
            case "Betöltve":
              return "success";
            case "Betöltés...":
              return "info";
            case "Hiba":
              return "danger";
            case "Nincs aktív skin":
              return "secondary";
            case "Alapértelmezett":
              return "warning";
            default:
              return "secondary";
          }
        },
        P = (ae) => {
          ((h.value = ae),
            (f.value = !0),
            setTimeout(() => {
              f.value = !1;
            }, 5e3));
        },
        I = (ae) => {
          ((p.value = ae),
            (d.value = !0),
            setTimeout(() => {
              d.value = !1;
            }, 3e3));
        },
        W = (ae) => new Promise((M) => setTimeout(M, ae)),
        X = async (ae, M = 1e4) =>
          new Promise((T, K) => {
            const ue = new Image(),
              he = setTimeout(() => {
                K(new Error(`Skin preload timeout after ${M}ms`));
              }, M);
            ((ue.onload = () => {
              (clearTimeout(he), T(!0));
            }),
              (ue.onerror = () => {
                (clearTimeout(he),
                  K(new Error("Failed to preload skin image")));
              }),
              (ue.crossOrigin = "anonymous"),
              (ue.src = ae));
          }),
        Z = async (ae) => {
          try {
            return (
              await fetch(ae, {
                method: "HEAD",
                timeout: 5e3,
                cache: "no-cache",
              })
            ).ok;
          } catch {
            return !1;
          }
        },
        G = async () => {
          try {
            const ae = await Ve.getUserExtras(),
              M = ae.data || ae,
              T = Array.isArray(M) ? M : [];
            _.value = T.some((K) => {
              const ue = K.extra_key === "hd_skin",
                he = K.is_active || K.user_active;
              return ue && he;
            });
          } catch {
            _.value = !1;
          }
        },
        $ = async () => {
          o.value = !0;
          try {
            const ae = await Ve.getUserSkins(),
              M = ae.data || ae;
            S.value = Array.isArray(M) ? M : [];
            const T = S.value.find((K) => K.is_active);
            return T
              ? ((x.value = {
                  type: T.is_hd ? "HD Skin" : "Normál Skin",
                  resolution: T.resolution,
                  lastModified: q(T.upload_date),
                  fileSize: te(T.file_size),
                }),
                T.file_path || T.file_url || T.thumbnail_url)
              : null;
          } catch {
            return ((S.value = []), null);
          } finally {
            o.value = !1;
          }
        },
        ne = (ae) =>
          ae
            ? ae.startsWith("http://") || ae.startsWith("https://")
              ? ae
              : ae.startsWith("/")
                ? `${window.location.origin}${ae}`
                : `https://api.mestermc.hu:8443/api${ae.startsWith("/") ? ae : "/" + ae}`
            : null,
        U = async (ae, M = 3, T = 1e3) => {
          if (!y) return !1;
          for (let K = 1; K <= M; K++)
            try {
              const ue = ne(ae);
              if (!ue) return !1;
              if (!(await Z(ue))) {
                if (K < M) {
                  await W(T);
                  continue;
                }
                return !1;
              }
              try {
                await X(ue, 5e3);
              } catch {
                if (K < M) {
                  await W(T);
                  continue;
                }
                return !1;
              }
              return (await y.loadSkin(ue), !0);
            } catch {
              if (K < M) (await W(T), (T *= 1.5));
              else return !1;
            }
          return !1;
        },
        ie = async (ae = null) => {
          if (e.value)
            try {
              ((b.value = !0),
                (g.value = "3D viewer inicializálása..."),
                (m.value = "Betöltés..."));
              const M =
                "https://crafatar.com/skins/853c80ef-3c37-49fd-aa49-938b674adae6";
              ((y = new FD({
                canvas: e.value,
                width: 400,
                height: 384,
                skin: M,
              })),
                (y.autoRotate = !0),
                (y.autoRotateSpeed = 1),
                (y.zoom = 0.9),
                (y.fov = 70),
                (y.background = 8900331),
                await W(500),
                (i.value = !1),
                ae
                  ? ((g.value = "Aktív skin betöltése..."),
                    (await U(ae, 3, 1e3))
                      ? (m.value = "Betöltve")
                      : (m.value = "Alapértelmezett"))
                  : (m.value = "Alapértelmezett"));
            } catch {
              ((m.value = "Hiba"), (i.value = !1));
            } finally {
              ((b.value = !1), (g.value = ""));
            }
        },
        J = async () => {
          ((b.value = !0),
            (g.value = "Aktív skin keresése..."),
            (m.value = "Betöltés..."));
          try {
            const ae = await $();
            if (!ae) {
              m.value = "Nincs aktív skin";
              return;
            }
            ((g.value = "Skin betöltése..."),
              (await U(ae, 3, 1e3))
                ? ((m.value = "Betöltve"), I("Skin sikeresen újratöltve!"))
                : ((m.value = "Hiba"), P("Nem sikerült újratölteni a skin-t")));
          } catch {
            ((m.value = "Hiba"), P("Hiba történt a skin újratöltése során"));
          } finally {
            ((b.value = !1), (g.value = ""));
          }
        },
        V = (ae) => {
          ae.preventDefault();
        },
        re = (ae) => {
          (ae.preventDefault(), (s.value = !0));
        },
        Ee = (ae) => {
          (ae.preventDefault(),
            n.value.contains(ae.relatedTarget) || (s.value = !1));
        },
        Pe = (ae) => {
          (ae.preventDefault(), (s.value = !1));
          const M = Array.from(ae.dataTransfer.files);
          M.length > 0 && oe(M[0]);
        },
        be = () => {
          r.value.click();
        },
        ce = (ae) => {
          const M = ae.target.files[0];
          M && oe(M);
        },
        oe = async (ae) => {
          ((a.value = ae), (c.value = URL.createObjectURL(ae)));
          try {
            const M = await new Promise((T, K) => {
              const ue = new Image();
              ((ue.onload = () => {
                T({ width: ue.width, height: ue.height });
              }),
                (ue.onerror = () => {
                  K(new Error("Failed to load image"));
                }),
                (ue.src = c.value));
            });
            ((C.value = {
              resolution: `${M.width}x${M.height}`,
              dimensions: M,
              isHD: M.width > 64 || M.height > 64,
            }),
              me());
          } catch {
            (P("Hibás képfájl - nem sikerült betölteni"), Oe());
          }
        },
        me = () => {
          const ae = a.value,
            M = C.value,
            T = [
              {
                rule: "format",
                passed: ae.type === "image/png",
                message: "PNG formátum",
              },
              {
                rule: "size",
                passed: ae.size <= 10 * 1024 * 1024,
                message: "Maximum 10MB méret",
              },
              {
                rule: "dimensions",
                passed:
                  [64, 128, 256, 512, 1024, 2048].includes(
                    M.dimensions.width,
                  ) && M.dimensions.width === M.dimensions.height,
                message:
                  "Érvényes skin méretek (64x64, 128x128, 256x256, 512x512, 1024x1024, 2048x2048)",
              },
              {
                rule: "power_of_two",
                passed: ge(M.dimensions.width),
                message: "A méretek 2 hatványai legyenek",
              },
              {
                rule: "hd_permission",
                passed: !M.isHD || _.value,
                message: M.isHD
                  ? "HD Skin engedély szükséges"
                  : "Normál skin engedély megvan",
              },
            ];
          w.value = T;
        },
        ge = (ae) => ae && (ae & (ae - 1)) === 0,
        Oe = () => {
          (c.value && URL.revokeObjectURL(c.value),
            (a.value = null),
            (c.value = null),
            (w.value = []),
            (C.value = {
              resolution: "",
              dimensions: { width: 0, height: 0 },
              isHD: !1,
            }),
            r.value && (r.value.value = ""));
        },
        He = async () => {
          if (!(!a.value || !y))
            try {
              await y.loadSkin(c.value);
            } catch {
              P("Nem sikerült betölteni a skin előnézetet");
            }
        },
        A = async () => {
          var ae, M, T, K, ue;
          if (!a.value || !D.value) {
            P("Kérlek válassz egy érvényes skin fájlt!");
            return;
          }
          u.value = !0;
          try {
            const he = new FormData();
            (he.append("skin", a.value),
              he.append("is_hd", C.value.isHD ? "1" : "0"),
              he.append("resolution", C.value.resolution));
            const _e = await Ve.uploadSkin(he),
              je = _e.data || _e,
              Ae = await $();
            if (
              je.is_active ||
              ((ae = je.message) != null && ae.includes("activated"))
            ) {
              let de = !1;
              if ((Ae && (de = await U(Ae, 3, 1e3)), !de && c.value && y))
                try {
                  (await y.loadSkin(c.value), (de = !0));
                } catch {}
              de ? (m.value = "Betöltve") : (m.value = "Hiba");
            }
            (I("Skin sikeresen feltöltve!"), Oe());
          } catch (he) {
            let _e = "Feltöltés sikertelen";
            (he != null && he.message
              ? (_e = he.message)
              : (T =
                    (M = he == null ? void 0 : he.response) == null
                      ? void 0
                      : M.data) != null && T.error
                ? (_e = he.response.data.error)
                : (ue =
                    (K = he == null ? void 0 : he.response) == null
                      ? void 0
                      : K.data) != null &&
                  ue.message &&
                  (_e = he.response.data.message),
              P(_e));
          } finally {
            u.value = !1;
          }
        },
        j = async (ae) => {
          if (!y) return;
          const M = ae.file_path || ae.file_url;
          (await U(M, 2, 500)) || P("Nem sikerült betölteni a skin előnézetet");
        },
        L = async (ae) => {
          try {
            ((b.value = !0),
              (g.value = "Skin aktiválása..."),
              (m.value = "Betöltés..."),
              await Ve.setActiveSkin(ae.id),
              (g.value = "Skin betöltése..."));
            const T = [
              await $(),
              ae.file_path,
              ae.file_url,
              ae.thumbnail_url,
            ].filter(Boolean);
            let K = !1;
            for (const ue of T)
              if (
                ((g.value = `Próbálkozás: ${ue.split("/").pop()}`),
                (K = await U(ue, 2, 500)),
                K)
              )
                break;
            K
              ? ((m.value = "Betöltve"), I("Skin sikeresen aktiválva!"))
              : ((m.value = "Hiba"),
                P("Skin aktiválva, de nem sikerült betölteni"));
          } catch {
            ((m.value = "Hiba"), P("Nem sikerült aktiválni a skin-t"));
          } finally {
            ((b.value = !1), (g.value = ""));
          }
        },
        F = async (ae) => {
          if (confirm("Biztosan törölni szeretnéd ezt a skin-t?"))
            try {
              await Ve.deleteSkin(ae.id);
              const M = await $();
              if (ae.is_active && y)
                if (M) {
                  if (!(await U(M, 2, 500)))
                    try {
                      (await y.loadSkin(
                        "https://crafatar.com/skins/853c80ef-3c37-49fd-aa49-938b674adae6",
                      ),
                        (m.value = "Alapértelmezett"));
                    } catch {
                      m.value = "Hiba";
                    }
                } else
                  try {
                    (await y.loadSkin(
                      "https://crafatar.com/skins/853c80ef-3c37-49fd-aa49-938b674adae6",
                    ),
                      (m.value = "Alapértelmezett"));
                  } catch {
                    m.value = "Hiba";
                  }
              I("Skin sikeresen törölve!");
            } catch {
              P("Nem sikerült törölni a skin-t");
            }
        },
        te = (ae) => {
          if (ae === 0) return "0 B";
          const M = 1024,
            T = ["B", "KB", "MB"],
            K = Math.floor(Math.log(ae) / Math.log(M));
          return parseFloat((ae / Math.pow(M, K)).toFixed(1)) + " " + T[K];
        },
        q = (ae) =>
          new Intl.DateTimeFormat("hu-HU", {
            year: "numeric",
            month: "long",
            day: "numeric",
          }).format(new Date(ae)),
        ye = (ae) => {
          ae.target.src =
            "https://crafatar.com/skins/853c80ef-3c37-49fd-aa49-938b674adae6";
        },
        xe = () => {
          y && ((y.zoom = 0.9), (y.fov = 70));
        },
        Se = () => {
          y && ((y.autoRotate = !y.autoRotate), (v.value = y.autoRotate));
        },
        Me = () => {
          setTimeout(async () => {
            m.value === "Betöltés..." && (await J());
          }, 8e3);
        };
      return (
        $t(async () => {
          (await ao(), await G());
          const ae = await $();
          (await ie(ae), Me());
        }),
        uo(() => {
          (y && y.dispose(), c.value && URL.revokeObjectURL(c.value));
        }),
        (ae, M) => {
          const T = Xn("tooltip");
          return (
            E(),
            R("div", ND, [
              l("div", VD, [
                M[1] ||
                  (M[1] = l(
                    "h2",
                    {
                      class:
                        "text-2xl font-bold text-surface-900 dark:text-surface-0",
                    },
                    "Skin Feltöltés",
                    -1,
                  )),
                l("div", HD, [
                  l("div", jD, [
                    M[0] ||
                      (M[0] = l(
                        "p",
                        {
                          class:
                            "text-sm text-surface-500 dark:text-surface-400",
                        },
                        "HD Skin jogosultság",
                        -1,
                      )),
                    O(
                      H(vt),
                      {
                        value: _.value ? "Megvan" : "Nincs meg",
                        severity: _.value ? "success" : "secondary",
                      },
                      null,
                      8,
                      ["value", "severity"],
                    ),
                  ]),
                ]),
              ]),
              l("div", GD, [
                l("div", WD, [
                  M[10] ||
                    (M[10] = l(
                      "h3",
                      {
                        class:
                          "text-lg font-semibold text-surface-900 dark:text-surface-0 mb-4 flex items-center gap-2",
                      },
                      [
                        l("i", { class: "pi pi-eye text-primary-500" }),
                        Ke(" Jelenlegi Skin Preview "),
                      ],
                      -1,
                    )),
                  l("div", KD, [
                    l(
                      "canvas",
                      {
                        ref_key: "canvasContainer",
                        ref: e,
                        class:
                          "w-full h-96 bg-gradient-to-b from-blue-200 to-green-200 dark:from-blue-900 dark:to-green-900 rounded-lg border-2 border-surface-200 dark:border-surface-700",
                      },
                      null,
                      512,
                    ),
                    l("div", XD, [
                      st(
                        O(
                          H(Ce),
                          {
                            icon: "pi pi-refresh",
                            rounded: "",
                            severity: "secondary",
                            size: "small",
                            onClick: xe,
                          },
                          null,
                          512,
                        ),
                        [[T, "Kamera visszaállítása"]],
                      ),
                      st(
                        O(
                          H(Ce),
                          {
                            icon: v.value ? "pi pi-pause" : "pi pi-play",
                            rounded: "",
                            severity: "secondary",
                            size: "small",
                            onClick: Se,
                          },
                          null,
                          8,
                          ["icon"],
                        ),
                        [
                          [
                            T,
                            v.value
                              ? "Forgatás megállítása"
                              : "Automatikus forgatás",
                          ],
                        ],
                      ),
                      st(
                        O(
                          H(Ce),
                          {
                            icon: "pi pi-sync",
                            rounded: "",
                            severity: "warning",
                            size: "small",
                            onClick: J,
                          },
                          null,
                          512,
                        ),
                        [[T, "Aktív skin újratöltése"]],
                      ),
                    ]),
                    i.value
                      ? (E(),
                        R(
                          "div",
                          YD,
                          M[2] ||
                            (M[2] = [
                              l(
                                "div",
                                { class: "text-center text-white" },
                                [
                                  l("i", {
                                    class:
                                      "pi pi-spin pi-spinner text-2xl mb-2",
                                  }),
                                  l("p", null, "3D model betöltése..."),
                                ],
                                -1,
                              ),
                            ]),
                        ))
                      : le("", !0),
                    b.value
                      ? (E(),
                        R("div", qD, [
                          l("div", ZD, [
                            M[3] ||
                              (M[3] = l(
                                "i",
                                {
                                  class: "pi pi-spin pi-spinner text-2xl mb-2",
                                },
                                null,
                                -1,
                              )),
                            M[4] ||
                              (M[4] = l("p", null, "Skin betöltése...", -1)),
                            l("p", JD, z(g.value), 1),
                          ]),
                        ]))
                      : le("", !0),
                  ]),
                  l("div", QD, [
                    l("div", eI, [
                      l("div", null, [
                        M[5] ||
                          (M[5] = l(
                            "span",
                            { class: "text-surface-600 dark:text-surface-300" },
                            "Típus:",
                            -1,
                          )),
                        l("span", tI, z(x.value.type), 1),
                      ]),
                      l("div", null, [
                        M[6] ||
                          (M[6] = l(
                            "span",
                            { class: "text-surface-600 dark:text-surface-300" },
                            "Felbontás:",
                            -1,
                          )),
                        l("span", nI, z(x.value.resolution), 1),
                      ]),
                      l("div", null, [
                        M[7] ||
                          (M[7] = l(
                            "span",
                            { class: "text-surface-600 dark:text-surface-300" },
                            "Utolsó módosítás:",
                            -1,
                          )),
                        l("span", rI, z(x.value.lastModified), 1),
                      ]),
                      l("div", null, [
                        M[8] ||
                          (M[8] = l(
                            "span",
                            { class: "text-surface-600 dark:text-surface-300" },
                            "Fájl méret:",
                            -1,
                          )),
                        l("span", iI, z(x.value.fileSize), 1),
                      ]),
                      l("div", oI, [
                        M[9] ||
                          (M[9] = l(
                            "span",
                            { class: "text-surface-600 dark:text-surface-300" },
                            "Betöltési státusz:",
                            -1,
                          )),
                        O(
                          H(vt),
                          {
                            value: m.value,
                            severity: k(m.value),
                            class: "ml-2",
                          },
                          null,
                          8,
                          ["value", "severity"],
                        ),
                      ]),
                    ]),
                  ]),
                ]),
                l("div", sI, [
                  M[17] ||
                    (M[17] = l(
                      "h3",
                      {
                        class:
                          "text-lg font-semibold text-surface-900 dark:text-surface-0 mb-4 flex items-center gap-2",
                      },
                      [
                        l("i", { class: "pi pi-upload text-primary-500" }),
                        Ke(" Új Skin Feltöltése "),
                      ],
                      -1,
                    )),
                  l("div", aI, [
                    M[15] ||
                      (M[15] = l(
                        "h4",
                        {
                          class:
                            "font-medium text-blue-900 dark:text-blue-100 mb-2",
                        },
                        "Követelmények:",
                        -1,
                      )),
                    l("ul", lI, [
                      M[12] ||
                        (M[12] = l(
                          "li",
                          { class: "flex items-center gap-2" },
                          [
                            l("i", { class: "pi pi-check text-green-500" }),
                            Ke(" PNG formátum "),
                          ],
                          -1,
                        )),
                      M[13] ||
                        (M[13] = l(
                          "li",
                          { class: "flex items-center gap-2" },
                          [
                            l("i", { class: "pi pi-check text-green-500" }),
                            Ke(" 64x64 pixeles (normál) "),
                          ],
                          -1,
                        )),
                      l("li", cI, [
                        l(
                          "i",
                          {
                            class: Ie(
                              _.value
                                ? "pi pi-check text-green-500"
                                : "pi pi-times text-red-500",
                            ),
                          },
                          null,
                          2,
                        ),
                        M[11] ||
                          (M[11] = Ke(
                            " 128x128, 256x256, 512x512, 1024x1024, 2048x2048 (HD extra szükséges) ",
                          )),
                      ]),
                      M[14] ||
                        (M[14] = l(
                          "li",
                          { class: "flex items-center gap-2" },
                          [
                            l("i", { class: "pi pi-check text-green-500" }),
                            Ke(" Maximum 10MB méret "),
                          ],
                          -1,
                        )),
                    ]),
                  ]),
                  l(
                    "div",
                    {
                      ref_key: "dropZone",
                      ref: n,
                      onDrop: Pe,
                      onDragover: V,
                      onDragenter: re,
                      onDragleave: Ee,
                      class: Ie([
                        "border-2 border-dashed rounded-lg p-8 text-center transition-colors cursor-pointer",
                        s.value
                          ? "border-primary-500 bg-primary-50 dark:bg-primary-900/20"
                          : "border-surface-300 dark:border-surface-600 hover:border-primary-400",
                      ]),
                      onClick: be,
                    },
                    [
                      l(
                        "input",
                        {
                          ref_key: "fileInput",
                          ref: r,
                          type: "file",
                          accept: ".png",
                          onChange: ce,
                          class: "hidden",
                        },
                        null,
                        544,
                      ),
                      M[16] ||
                        (M[16] = l(
                          "div",
                          { class: "space-y-3" },
                          [
                            l("i", {
                              class:
                                "pi pi-cloud-upload text-4xl text-surface-400 dark:text-surface-500",
                            }),
                            l("div", null, [
                              l(
                                "p",
                                {
                                  class:
                                    "font-medium text-surface-900 dark:text-surface-0",
                                },
                                " Kattints a tallózáshoz vagy húzd ide a fájlt ",
                              ),
                              l(
                                "p",
                                {
                                  class:
                                    "text-sm text-surface-500 dark:text-surface-400 mt-1",
                                },
                                " PNG formátum, maximum 10MB ",
                              ),
                            ]),
                          ],
                          -1,
                        )),
                    ],
                    34,
                  ),
                  a.value
                    ? (E(),
                      R("div", uI, [
                        l("div", dI, [
                          l(
                            "img",
                            {
                              src: c.value,
                              alt: "Skin preview",
                              class:
                                "w-16 h-16 pixelated border border-surface-300 dark:border-surface-600 rounded",
                            },
                            null,
                            8,
                            fI,
                          ),
                          l("div", pI, [
                            l("h4", hI, z(a.value.name), 1),
                            l("p", mI, z(te(a.value.size)), 1),
                            l("p", gI, z(C.value.resolution), 1),
                            l("div", vI, [
                              (E(!0),
                              R(
                                We,
                                null,
                                mt(
                                  w.value,
                                  (K) => (
                                    E(),
                                    R(
                                      "div",
                                      {
                                        key: K.rule,
                                        class:
                                          "flex items-center gap-2 text-xs",
                                      },
                                      [
                                        l(
                                          "i",
                                          {
                                            class: Ie(
                                              K.passed
                                                ? "pi pi-check text-green-500"
                                                : "pi pi-times text-red-500",
                                            ),
                                          },
                                          null,
                                          2,
                                        ),
                                        l(
                                          "span",
                                          {
                                            class: Ie(
                                              K.passed
                                                ? "text-green-600"
                                                : "text-red-600",
                                            ),
                                          },
                                          z(K.message),
                                          3,
                                        ),
                                      ],
                                    )
                                  ),
                                ),
                                128,
                              )),
                            ]),
                          ]),
                          O(H(Ce), {
                            icon: "pi pi-times",
                            text: "",
                            rounded: "",
                            severity: "secondary",
                            size: "small",
                            onClick: Oe,
                          }),
                        ]),
                      ]))
                    : le("", !0),
                  l("div", bI, [
                    a.value
                      ? (E(),
                        Be(
                          H(Ce),
                          {
                            key: 0,
                            label: u.value ? "Feltöltés..." : "Skin Feltöltése",
                            disabled: !D.value || u.value,
                            loading: u.value,
                            class: "flex-1",
                            onClick: A,
                          },
                          null,
                          8,
                          ["label", "disabled", "loading"],
                        ))
                      : le("", !0),
                    a.value && D.value
                      ? (E(),
                        Be(H(Ce), {
                          key: 1,
                          label: "Előnézet",
                          outlined: "",
                          onClick: He,
                        }))
                      : le("", !0),
                  ]),
                ]),
              ]),
              l("div", yI, [
                M[20] ||
                  (M[20] = l(
                    "h3",
                    {
                      class:
                        "text-lg font-semibold text-surface-900 dark:text-surface-0 mb-4 flex items-center gap-2",
                    },
                    [
                      l("i", { class: "pi pi-history text-primary-500" }),
                      Ke(" Feltöltési Előzmények "),
                    ],
                    -1,
                  )),
                o.value
                  ? (E(),
                    R(
                      "div",
                      xI,
                      M[18] ||
                        (M[18] = [
                          l(
                            "i",
                            { class: "pi pi-spin pi-spinner text-surface-400" },
                            null,
                            -1,
                          ),
                        ]),
                    ))
                  : S.value.length === 0
                    ? (E(),
                      R(
                        "div",
                        _I,
                        M[19] ||
                          (M[19] = [
                            l(
                              "i",
                              {
                                class:
                                  "pi pi-image text-4xl text-surface-400 dark:text-surface-500 mb-4",
                              },
                              null,
                              -1,
                            ),
                            l(
                              "p",
                              {
                                class: "text-surface-500 dark:text-surface-400",
                              },
                              "Még nincs feltöltési előzmény",
                              -1,
                            ),
                          ]),
                      ))
                    : (E(),
                      R("div", wI, [
                        (E(!0),
                        R(
                          We,
                          null,
                          mt(
                            S.value,
                            (K) => (
                              E(),
                              R(
                                "div",
                                {
                                  key: K.id,
                                  class:
                                    "flex items-center gap-4 p-4 bg-surface-50 dark:bg-surface-800 rounded-lg",
                                },
                                [
                                  l(
                                    "img",
                                    {
                                      src: K.thumbnail_url || K.file_path,
                                      alt: "Skin thumbnail",
                                      class:
                                        "w-12 h-12 pixelated border border-surface-300 dark:border-surface-600 rounded",
                                      onError: ye,
                                    },
                                    null,
                                    40,
                                    kI,
                                  ),
                                  l("div", SI, [
                                    l("p", CI, z(K.original_filename), 1),
                                    l("p", MI, z(q(K.upload_date)), 1),
                                  ]),
                                  l("div", EI, [
                                    O(
                                      H(vt),
                                      {
                                        value: K.resolution,
                                        severity: "info",
                                        class: "mb-1",
                                      },
                                      null,
                                      8,
                                      ["value"],
                                    ),
                                    l("p", TI, z(te(K.file_size)), 1),
                                  ]),
                                  l("div", AI, [
                                    st(
                                      O(
                                        H(Ce),
                                        {
                                          icon: "pi pi-eye",
                                          text: "",
                                          rounded: "",
                                          severity: "secondary",
                                          size: "small",
                                          onClick: (ue) => j(K),
                                        },
                                        null,
                                        8,
                                        ["onClick"],
                                      ),
                                      [[T, "Előnézet"]],
                                    ),
                                    st(
                                      O(
                                        H(Ce),
                                        {
                                          icon: "pi pi-check",
                                          text: "",
                                          rounded: "",
                                          severity: K.is_active
                                            ? "success"
                                            : "secondary",
                                          size: "small",
                                          onClick: (ue) => L(K),
                                          disabled: K.is_active,
                                        },
                                        null,
                                        8,
                                        ["severity", "onClick", "disabled"],
                                      ),
                                      [
                                        [
                                          T,
                                          K.is_active
                                            ? "Aktív skin"
                                            : "Aktiválás",
                                        ],
                                      ],
                                    ),
                                    st(
                                      O(
                                        H(Ce),
                                        {
                                          icon: "pi pi-trash",
                                          text: "",
                                          rounded: "",
                                          severity: "danger",
                                          size: "small",
                                          onClick: (ue) => F(K),
                                        },
                                        null,
                                        8,
                                        ["onClick"],
                                      ),
                                      [[T, "Törlés"]],
                                    ),
                                  ]),
                                ],
                              )
                            ),
                          ),
                          128,
                        )),
                      ])),
              ]),
              f.value
                ? (E(),
                  R("div", PI, [
                    l("div", RI, [
                      M[21] ||
                        (M[21] = l(
                          "i",
                          { class: "pi pi-times-circle" },
                          null,
                          -1,
                        )),
                      l("span", null, z(h.value), 1),
                    ]),
                  ]))
                : le("", !0),
              d.value
                ? (E(),
                  R("div", LI, [
                    l("div", DI, [
                      M[22] ||
                        (M[22] = l(
                          "i",
                          { class: "pi pi-check-circle" },
                          null,
                          -1,
                        )),
                      l("span", null, z(p.value), 1),
                    ]),
                  ]))
                : le("", !0),
            ])
          );
        }
      );
    },
  },
  OI = cr(II, [["__scopeId", "data-v-07be3fa1"]]);
var hn = {
  STARTS_WITH: "startsWith",
  CONTAINS: "contains",
  NOT_CONTAINS: "notContains",
  ENDS_WITH: "endsWith",
  EQUALS: "equals",
  NOT_EQUALS: "notEquals",
  LESS_THAN: "lt",
  LESS_THAN_OR_EQUAL_TO: "lte",
  GREATER_THAN: "gt",
  GREATER_THAN_OR_EQUAL_TO: "gte",
  DATE_IS: "dateIs",
  DATE_IS_NOT: "dateIsNot",
  DATE_BEFORE: "dateBefore",
  DATE_AFTER: "dateAfter",
};
function Bm(t, e) {
  var n = (typeof Symbol < "u" && t[Symbol.iterator]) || t["@@iterator"];
  if (!n) {
    if (Array.isArray(t) || (n = $I(t)) || e) {
      n && (t = n);
      var r = 0,
        i = function () {};
      return {
        s: i,
        n: function () {
          return r >= t.length ? { done: !0 } : { done: !1, value: t[r++] };
        },
        e: function (u) {
          throw u;
        },
        f: i,
      };
    }
    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  var o,
    s = !0,
    a = !1;
  return {
    s: function () {
      n = n.call(t);
    },
    n: function () {
      var u = n.next();
      return ((s = u.done), u);
    },
    e: function (u) {
      ((a = !0), (o = u));
    },
    f: function () {
      try {
        s || n.return == null || n.return();
      } finally {
        if (a) throw o;
      }
    },
  };
}
function $I(t, e) {
  if (t) {
    if (typeof t == "string") return Um(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return (
      n === "Object" && t.constructor && (n = t.constructor.name),
      n === "Map" || n === "Set"
        ? Array.from(t)
        : n === "Arguments" ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          ? Um(t, e)
          : void 0
    );
  }
}
function Um(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, r = Array(e); n < e; n++) r[n] = t[n];
  return r;
}
var zI = {
  filter: function (e, n, r, i, o) {
    var s = [];
    if (!e) return s;
    var a = Bm(e),
      c;
    try {
      for (a.s(); !(c = a.n()).done; ) {
        var u = c.value;
        if (typeof u == "string") {
          if (this.filters[i](u, r, o)) {
            s.push(u);
            continue;
          }
        } else {
          var d = Bm(n),
            f;
          try {
            for (d.s(); !(f = d.n()).done; ) {
              var p = f.value,
                h = Xr(u, p);
              if (this.filters[i](h, r, o)) {
                s.push(u);
                break;
              }
            }
          } catch (v) {
            d.e(v);
          } finally {
            d.f();
          }
        }
      }
    } catch (v) {
      a.e(v);
    } finally {
      a.f();
    }
    return s;
  },
  filters: {
    startsWith: function (e, n, r) {
      if (n == null || n === "") return !0;
      if (e == null) return !1;
      var i = Zn(n.toString()).toLocaleLowerCase(r),
        o = Zn(e.toString()).toLocaleLowerCase(r);
      return o.slice(0, i.length) === i;
    },
    contains: function (e, n, r) {
      if (n == null || n === "") return !0;
      if (e == null) return !1;
      var i = Zn(n.toString()).toLocaleLowerCase(r),
        o = Zn(e.toString()).toLocaleLowerCase(r);
      return o.indexOf(i) !== -1;
    },
    notContains: function (e, n, r) {
      if (n == null || n === "") return !0;
      if (e == null) return !1;
      var i = Zn(n.toString()).toLocaleLowerCase(r),
        o = Zn(e.toString()).toLocaleLowerCase(r);
      return o.indexOf(i) === -1;
    },
    endsWith: function (e, n, r) {
      if (n == null || n === "") return !0;
      if (e == null) return !1;
      var i = Zn(n.toString()).toLocaleLowerCase(r),
        o = Zn(e.toString()).toLocaleLowerCase(r);
      return o.indexOf(i, o.length - i.length) !== -1;
    },
    equals: function (e, n, r) {
      return n == null || n === ""
        ? !0
        : e == null
          ? !1
          : e.getTime && n.getTime
            ? e.getTime() === n.getTime()
            : Zn(e.toString()).toLocaleLowerCase(r) ==
              Zn(n.toString()).toLocaleLowerCase(r);
    },
    notEquals: function (e, n, r) {
      return n == null || n === ""
        ? !1
        : e == null
          ? !0
          : e.getTime && n.getTime
            ? e.getTime() !== n.getTime()
            : Zn(e.toString()).toLocaleLowerCase(r) !=
              Zn(n.toString()).toLocaleLowerCase(r);
    },
    in: function (e, n) {
      if (n == null || n.length === 0) return !0;
      for (var r = 0; r < n.length; r++) if (kc(e, n[r])) return !0;
      return !1;
    },
    between: function (e, n) {
      return n == null || n[0] == null || n[1] == null
        ? !0
        : e == null
          ? !1
          : e.getTime
            ? n[0].getTime() <= e.getTime() && e.getTime() <= n[1].getTime()
            : n[0] <= e && e <= n[1];
    },
    lt: function (e, n) {
      return n == null
        ? !0
        : e == null
          ? !1
          : e.getTime && n.getTime
            ? e.getTime() < n.getTime()
            : e < n;
    },
    lte: function (e, n) {
      return n == null
        ? !0
        : e == null
          ? !1
          : e.getTime && n.getTime
            ? e.getTime() <= n.getTime()
            : e <= n;
    },
    gt: function (e, n) {
      return n == null
        ? !0
        : e == null
          ? !1
          : e.getTime && n.getTime
            ? e.getTime() > n.getTime()
            : e > n;
    },
    gte: function (e, n) {
      return n == null
        ? !0
        : e == null
          ? !1
          : e.getTime && n.getTime
            ? e.getTime() >= n.getTime()
            : e >= n;
    },
    dateIs: function (e, n) {
      return n == null
        ? !0
        : e == null
          ? !1
          : e.toDateString() === n.toDateString();
    },
    dateIsNot: function (e, n) {
      return n == null
        ? !0
        : e == null
          ? !1
          : e.toDateString() !== n.toDateString();
    },
    dateBefore: function (e, n) {
      return n == null ? !0 : e == null ? !1 : e.getTime() < n.getTime();
    },
    dateAfter: function (e, n) {
      return n == null ? !0 : e == null ? !1 : e.getTime() > n.getTime();
    },
  },
  register: function (e, n) {
    this.filters[e] = n;
  },
};
function Sa(t) {
  "@babel/helpers - typeof";
  return (
    (Sa =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    Sa(t)
  );
}
function BI(t, e) {
  if (!(t instanceof e))
    throw new TypeError("Cannot call a class as a function");
}
function UI(t, e) {
  for (var n = 0; n < e.length; n++) {
    var r = e[n];
    ((r.enumerable = r.enumerable || !1),
      (r.configurable = !0),
      "value" in r && (r.writable = !0),
      Object.defineProperty(t, NI(r.key), r));
  }
}
function FI(t, e, n) {
  return (
    e && UI(t.prototype, e),
    Object.defineProperty(t, "prototype", { writable: !1 }),
    t
  );
}
function NI(t) {
  var e = VI(t, "string");
  return Sa(e) == "symbol" ? e : e + "";
}
function VI(t, e) {
  if (Sa(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (Sa(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return String(t);
}
var Lc = (function () {
    function t(e) {
      var n =
        arguments.length > 1 && arguments[1] !== void 0
          ? arguments[1]
          : function () {};
      (BI(this, t), (this.element = e), (this.listener = n));
    }
    return FI(t, [
      {
        key: "bindScrollListener",
        value: function () {
          this.scrollableParents = n_(this.element);
          for (var n = 0; n < this.scrollableParents.length; n++)
            this.scrollableParents[n].addEventListener("scroll", this.listener);
        },
      },
      {
        key: "unbindScrollListener",
        value: function () {
          if (this.scrollableParents)
            for (var n = 0; n < this.scrollableParents.length; n++)
              this.scrollableParents[n].removeEventListener(
                "scroll",
                this.listener,
              );
        },
      },
      {
        key: "destroy",
        value: function () {
          (this.unbindScrollListener(),
            (this.element = null),
            (this.listener = null),
            (this.scrollableParents = null));
        },
      },
    ]);
  })(),
  Gv = { name: "BlankIcon", extends: dn };
function HI(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "svg",
      Q(
        {
          width: "14",
          height: "14",
          viewBox: "0 0 14 14",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        t.pti(),
      ),
      e[0] ||
        (e[0] = [
          l(
            "rect",
            {
              width: "1",
              height: "1",
              fill: "currentColor",
              "fill-opacity": "0",
            },
            null,
            -1,
          ),
        ]),
      16,
    )
  );
}
Gv.render = HI;
var ff = { name: "CheckIcon", extends: dn };
function jI(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "svg",
      Q(
        {
          width: "14",
          height: "14",
          viewBox: "0 0 14 14",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        t.pti(),
      ),
      e[0] ||
        (e[0] = [
          l(
            "path",
            {
              d: "M4.86199 11.5948C4.78717 11.5923 4.71366 11.5745 4.64596 11.5426C4.57826 11.5107 4.51779 11.4652 4.46827 11.4091L0.753985 7.69483C0.683167 7.64891 0.623706 7.58751 0.580092 7.51525C0.536478 7.44299 0.509851 7.36177 0.502221 7.27771C0.49459 7.19366 0.506156 7.10897 0.536046 7.03004C0.565935 6.95111 0.613367 6.88 0.674759 6.82208C0.736151 6.76416 0.8099 6.72095 0.890436 6.69571C0.970973 6.67046 1.05619 6.66385 1.13966 6.67635C1.22313 6.68886 1.30266 6.72017 1.37226 6.76792C1.44186 6.81567 1.4997 6.8786 1.54141 6.95197L4.86199 10.2503L12.6397 2.49483C12.7444 2.42694 12.8689 2.39617 12.9932 2.40745C13.1174 2.41873 13.2343 2.47141 13.3251 2.55705C13.4159 2.64268 13.4753 2.75632 13.4938 2.87973C13.5123 3.00315 13.4888 3.1292 13.4271 3.23768L5.2557 11.4091C5.20618 11.4652 5.14571 11.5107 5.07801 11.5426C5.01031 11.5745 4.9368 11.5923 4.86199 11.5948Z",
              fill: "currentColor",
            },
            null,
            -1,
          ),
        ]),
      16,
    )
  );
}
ff.render = jI;
var pf = { name: "ChevronDownIcon", extends: dn };
function GI(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "svg",
      Q(
        {
          width: "14",
          height: "14",
          viewBox: "0 0 14 14",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        t.pti(),
      ),
      e[0] ||
        (e[0] = [
          l(
            "path",
            {
              d: "M7.01744 10.398C6.91269 10.3985 6.8089 10.378 6.71215 10.3379C6.61541 10.2977 6.52766 10.2386 6.45405 10.1641L1.13907 4.84913C1.03306 4.69404 0.985221 4.5065 1.00399 4.31958C1.02276 4.13266 1.10693 3.95838 1.24166 3.82747C1.37639 3.69655 1.55301 3.61742 1.74039 3.60402C1.92777 3.59062 2.11386 3.64382 2.26584 3.75424L7.01744 8.47394L11.769 3.75424C11.9189 3.65709 12.097 3.61306 12.2748 3.62921C12.4527 3.64535 12.6199 3.72073 12.7498 3.84328C12.8797 3.96582 12.9647 4.12842 12.9912 4.30502C13.0177 4.48162 12.9841 4.662 12.8958 4.81724L7.58083 10.1322C7.50996 10.2125 7.42344 10.2775 7.32656 10.3232C7.22968 10.3689 7.12449 10.3944 7.01744 10.398Z",
              fill: "currentColor",
            },
            null,
            -1,
          ),
        ]),
      16,
    )
  );
}
pf.render = GI;
var Wv = { name: "SearchIcon", extends: dn };
function WI(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "svg",
      Q(
        {
          width: "14",
          height: "14",
          viewBox: "0 0 14 14",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        t.pti(),
      ),
      e[0] ||
        (e[0] = [
          l(
            "path",
            {
              "fill-rule": "evenodd",
              "clip-rule": "evenodd",
              d: "M2.67602 11.0265C3.6661 11.688 4.83011 12.0411 6.02086 12.0411C6.81149 12.0411 7.59438 11.8854 8.32483 11.5828C8.87005 11.357 9.37808 11.0526 9.83317 10.6803L12.9769 13.8241C13.0323 13.8801 13.0983 13.9245 13.171 13.9548C13.2438 13.985 13.3219 14.0003 13.4007 14C13.4795 14.0003 13.5575 13.985 13.6303 13.9548C13.7031 13.9245 13.7691 13.8801 13.8244 13.8241C13.9367 13.7116 13.9998 13.5592 13.9998 13.4003C13.9998 13.2414 13.9367 13.089 13.8244 12.9765L10.6807 9.8328C11.053 9.37773 11.3573 8.86972 11.5831 8.32452C11.8857 7.59408 12.0414 6.81119 12.0414 6.02056C12.0414 4.8298 11.6883 3.66579 11.0268 2.67572C10.3652 1.68564 9.42494 0.913972 8.32483 0.45829C7.22472 0.00260857 6.01418 -0.116618 4.84631 0.115686C3.67844 0.34799 2.60568 0.921393 1.76369 1.76338C0.921698 2.60537 0.348296 3.67813 0.115991 4.84601C-0.116313 6.01388 0.00291375 7.22441 0.458595 8.32452C0.914277 9.42464 1.68595 10.3649 2.67602 11.0265ZM3.35565 2.0158C4.14456 1.48867 5.07206 1.20731 6.02086 1.20731C7.29317 1.20731 8.51338 1.71274 9.41304 2.6124C10.3127 3.51206 10.8181 4.73226 10.8181 6.00457C10.8181 6.95337 10.5368 7.88088 10.0096 8.66978C9.48251 9.45868 8.73328 10.0736 7.85669 10.4367C6.98011 10.7997 6.01554 10.8947 5.08496 10.7096C4.15439 10.5245 3.2996 10.0676 2.62869 9.39674C1.95778 8.72583 1.50089 7.87104 1.31579 6.94046C1.13068 6.00989 1.22568 5.04532 1.58878 4.16874C1.95187 3.29215 2.56675 2.54292 3.35565 2.0158Z",
              fill: "currentColor",
            },
            null,
            -1,
          ),
        ]),
      16,
    )
  );
}
Wv.render = WI;
var KI = `
    .p-iconfield {
        position: relative;
        display: block;
    }

    .p-inputicon {
        position: absolute;
        top: 50%;
        margin-top: calc(-1 * (dt('icon.size') / 2));
        color: dt('iconfield.icon.color');
        line-height: 1;
        z-index: 1;
    }

    .p-iconfield .p-inputicon:first-child {
        inset-inline-start: dt('form.field.padding.x');
    }

    .p-iconfield .p-inputicon:last-child {
        inset-inline-end: dt('form.field.padding.x');
    }

    .p-iconfield .p-inputtext:not(:first-child),
    .p-iconfield .p-inputwrapper:not(:first-child) .p-inputtext {
        padding-inline-start: calc((dt('form.field.padding.x') * 2) + dt('icon.size'));
    }

    .p-iconfield .p-inputtext:not(:last-child) {
        padding-inline-end: calc((dt('form.field.padding.x') * 2) + dt('icon.size'));
    }

    .p-iconfield:has(.p-inputfield-sm) .p-inputicon {
        font-size: dt('form.field.sm.font.size');
        width: dt('form.field.sm.font.size');
        height: dt('form.field.sm.font.size');
        margin-top: calc(-1 * (dt('form.field.sm.font.size') / 2));
    }

    .p-iconfield:has(.p-inputfield-lg) .p-inputicon {
        font-size: dt('form.field.lg.font.size');
        width: dt('form.field.lg.font.size');
        height: dt('form.field.lg.font.size');
        margin-top: calc(-1 * (dt('form.field.lg.font.size') / 2));
    }
`,
  XI = { root: "p-iconfield" },
  YI = ot.extend({ name: "iconfield", style: KI, classes: XI }),
  qI = {
    name: "BaseIconField",
    extends: lr,
    style: YI,
    provide: function () {
      return { $pcIconField: this, $parentInstance: this };
    },
  },
  hf = { name: "IconField", extends: qI, inheritAttrs: !1 };
function ZI(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "div",
      Q({ class: t.cx("root") }, t.ptmi("root")),
      [De(t.$slots, "default")],
      16,
    )
  );
}
hf.render = ZI;
var JI = { root: "p-inputicon" },
  QI = ot.extend({ name: "inputicon", classes: JI }),
  e6 = {
    name: "BaseInputIcon",
    extends: lr,
    style: QI,
    props: { class: null },
    provide: function () {
      return { $pcInputIcon: this, $parentInstance: this };
    },
  },
  mf = {
    name: "InputIcon",
    extends: e6,
    inheritAttrs: !1,
    computed: {
      containerClass: function () {
        return [this.cx("root"), this.class];
      },
    },
  };
function t6(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "span",
      Q({ class: o.containerClass }, t.ptmi("root")),
      [De(t.$slots, "default")],
      16,
    )
  );
}
mf.render = t6;
var gf = ef(),
  n6 = `
    .p-virtualscroller-loader {
        background: dt('virtualscroller.loader.mask.background');
        color: dt('virtualscroller.loader.mask.color');
    }

    .p-virtualscroller-loading-icon {
        font-size: dt('virtualscroller.loader.icon.size');
        width: dt('virtualscroller.loader.icon.size');
        height: dt('virtualscroller.loader.icon.size');
    }
`,
  r6 = `
.p-virtualscroller {
    position: relative;
    overflow: auto;
    contain: strict;
    transform: translateZ(0);
    will-change: scroll-position;
    outline: 0 none;
}

.p-virtualscroller-content {
    position: absolute;
    top: 0;
    left: 0;
    min-height: 100%;
    min-width: 100%;
    will-change: transform;
}

.p-virtualscroller-spacer {
    position: absolute;
    top: 0;
    left: 0;
    height: 1px;
    width: 1px;
    transform-origin: 0 0;
    pointer-events: none;
}

.p-virtualscroller-loader {
    position: sticky;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.p-virtualscroller-loader-mask {
    display: flex;
    align-items: center;
    justify-content: center;
}

.p-virtualscroller-horizontal > .p-virtualscroller-content {
    display: flex;
}

.p-virtualscroller-inline .p-virtualscroller-content {
    position: static;
}

.p-virtualscroller .p-virtualscroller-loading {
    transform: none !important;
    min-height: 0;
    position: sticky;
    inset-block-start: 0;
    inset-inline-start: 0;
}
`,
  Fm = ot.extend({ name: "virtualscroller", css: r6, style: n6 }),
  i6 = {
    name: "BaseVirtualScroller",
    extends: lr,
    props: {
      id: { type: String, default: null },
      style: null,
      class: null,
      items: { type: Array, default: null },
      itemSize: { type: [Number, Array], default: 0 },
      scrollHeight: null,
      scrollWidth: null,
      orientation: { type: String, default: "vertical" },
      numToleratedItems: { type: Number, default: null },
      delay: { type: Number, default: 0 },
      resizeDelay: { type: Number, default: 10 },
      lazy: { type: Boolean, default: !1 },
      disabled: { type: Boolean, default: !1 },
      loaderDisabled: { type: Boolean, default: !1 },
      columns: { type: Array, default: null },
      loading: { type: Boolean, default: !1 },
      showSpacer: { type: Boolean, default: !0 },
      showLoader: { type: Boolean, default: !1 },
      tabindex: { type: Number, default: 0 },
      inline: { type: Boolean, default: !1 },
      step: { type: Number, default: 0 },
      appendOnly: { type: Boolean, default: !1 },
      autoSize: { type: Boolean, default: !1 },
    },
    style: Fm,
    provide: function () {
      return { $pcVirtualScroller: this, $parentInstance: this };
    },
    beforeMount: function () {
      var e;
      Fm.loadCSS({
        nonce:
          (e = this.$primevueConfig) === null ||
          e === void 0 ||
          (e = e.csp) === null ||
          e === void 0
            ? void 0
            : e.nonce,
      });
    },
  };
function Ca(t) {
  "@babel/helpers - typeof";
  return (
    (Ca =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    Ca(t)
  );
}
function Nm(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    (e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r));
  }
  return n;
}
function Rs(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? Nm(Object(n), !0).forEach(function (r) {
          Kv(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
        : Nm(Object(n)).forEach(function (r) {
            Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
          });
  }
  return t;
}
function Kv(t, e, n) {
  return (
    (e = o6(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function o6(t) {
  var e = s6(t, "string");
  return Ca(e) == "symbol" ? e : e + "";
}
function s6(t, e) {
  if (Ca(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (Ca(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var Xv = {
    name: "VirtualScroller",
    extends: i6,
    inheritAttrs: !1,
    emits: [
      "update:numToleratedItems",
      "scroll",
      "scroll-index-change",
      "lazy-load",
    ],
    data: function () {
      var e = this.isBoth();
      return {
        first: e ? { rows: 0, cols: 0 } : 0,
        last: e ? { rows: 0, cols: 0 } : 0,
        page: e ? { rows: 0, cols: 0 } : 0,
        numItemsInViewport: e ? { rows: 0, cols: 0 } : 0,
        lastScrollPos: e ? { top: 0, left: 0 } : 0,
        d_numToleratedItems: this.numToleratedItems,
        d_loading: this.loading,
        loaderArr: [],
        spacerStyle: {},
        contentStyle: {},
      };
    },
    element: null,
    content: null,
    lastScrollPos: null,
    scrollTimeout: null,
    resizeTimeout: null,
    defaultWidth: 0,
    defaultHeight: 0,
    defaultContentWidth: 0,
    defaultContentHeight: 0,
    isRangeChanged: !1,
    lazyLoadState: {},
    resizeListener: null,
    resizeObserver: null,
    initialized: !1,
    watch: {
      numToleratedItems: function (e) {
        this.d_numToleratedItems = e;
      },
      loading: function (e, n) {
        this.lazy && e !== n && e !== this.d_loading && (this.d_loading = e);
      },
      items: {
        handler: function (e, n) {
          (!n || n.length !== (e || []).length) &&
            (this.init(), this.calculateAutoSize());
        },
        deep: !0,
      },
      itemSize: function () {
        (this.init(), this.calculateAutoSize());
      },
      orientation: function () {
        this.lastScrollPos = this.isBoth() ? { top: 0, left: 0 } : 0;
      },
      scrollHeight: function () {
        (this.init(), this.calculateAutoSize());
      },
      scrollWidth: function () {
        (this.init(), this.calculateAutoSize());
      },
    },
    mounted: function () {
      (this.viewInit(),
        (this.lastScrollPos = this.isBoth() ? { top: 0, left: 0 } : 0),
        (this.lazyLoadState = this.lazyLoadState || {}));
    },
    updated: function () {
      !this.initialized && this.viewInit();
    },
    unmounted: function () {
      (this.unbindResizeListener(), (this.initialized = !1));
    },
    methods: {
      viewInit: function () {
        (Jl(this.element) &&
          (this.setContentEl(this.content),
          this.init(),
          this.calculateAutoSize(),
          (this.defaultWidth = Ji(this.element)),
          (this.defaultHeight = Zi(this.element)),
          (this.defaultContentWidth = Ji(this.content)),
          (this.defaultContentHeight = Zi(this.content)),
          (this.initialized = !0)),
          this.element && this.bindResizeListener());
      },
      init: function () {
        this.disabled ||
          (this.setSize(), this.calculateOptions(), this.setSpacerSize());
      },
      isVertical: function () {
        return this.orientation === "vertical";
      },
      isHorizontal: function () {
        return this.orientation === "horizontal";
      },
      isBoth: function () {
        return this.orientation === "both";
      },
      scrollTo: function (e) {
        this.element && this.element.scrollTo(e);
      },
      scrollToIndex: function (e) {
        var n = this,
          r =
            arguments.length > 1 && arguments[1] !== void 0
              ? arguments[1]
              : "auto",
          i = this.isBoth(),
          o = this.isHorizontal(),
          s = i
            ? e.every(function (S) {
                return S > -1;
              })
            : e > -1;
        if (s) {
          var a = this.first,
            c = this.element,
            u = c.scrollTop,
            d = u === void 0 ? 0 : u,
            f = c.scrollLeft,
            p = f === void 0 ? 0 : f,
            h = this.calculateNumItems(),
            v = h.numToleratedItems,
            b = this.getContentPosition(),
            g = this.itemSize,
            m = function () {
              var D =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : 0,
                k = arguments.length > 1 ? arguments[1] : void 0;
              return D <= k ? 0 : D;
            },
            _ = function (D, k, P) {
              return D * k + P;
            },
            y = function () {
              var D =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : 0,
                k =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : 0;
              return n.scrollTo({ left: D, top: k, behavior: r });
            },
            x = i ? { rows: 0, cols: 0 } : 0,
            C = !1,
            w = !1;
          (i
            ? ((x = { rows: m(e[0], v[0]), cols: m(e[1], v[1]) }),
              y(_(x.cols, g[1], b.left), _(x.rows, g[0], b.top)),
              (w =
                this.lastScrollPos.top !== d || this.lastScrollPos.left !== p),
              (C = x.rows !== a.rows || x.cols !== a.cols))
            : ((x = m(e, v)),
              o ? y(_(x, g, b.left), d) : y(p, _(x, g, b.top)),
              (w = this.lastScrollPos !== (o ? p : d)),
              (C = x !== a)),
            (this.isRangeChanged = C),
            w && (this.first = x));
        }
      },
      scrollInView: function (e, n) {
        var r = this,
          i =
            arguments.length > 2 && arguments[2] !== void 0
              ? arguments[2]
              : "auto";
        if (n) {
          var o = this.isBoth(),
            s = this.isHorizontal(),
            a = o
              ? e.every(function (g) {
                  return g > -1;
                })
              : e > -1;
          if (a) {
            var c = this.getRenderedRange(),
              u = c.first,
              d = c.viewport,
              f = function () {
                var m =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : 0,
                  _ =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : 0;
                return r.scrollTo({ left: m, top: _, behavior: i });
              },
              p = n === "to-start",
              h = n === "to-end";
            if (p) {
              if (o)
                d.first.rows - u.rows > e[0]
                  ? f(
                      d.first.cols * this.itemSize[1],
                      (d.first.rows - 1) * this.itemSize[0],
                    )
                  : d.first.cols - u.cols > e[1] &&
                    f(
                      (d.first.cols - 1) * this.itemSize[1],
                      d.first.rows * this.itemSize[0],
                    );
              else if (d.first - u > e) {
                var v = (d.first - 1) * this.itemSize;
                s ? f(v, 0) : f(0, v);
              }
            } else if (h) {
              if (o)
                d.last.rows - u.rows <= e[0] + 1
                  ? f(
                      d.first.cols * this.itemSize[1],
                      (d.first.rows + 1) * this.itemSize[0],
                    )
                  : d.last.cols - u.cols <= e[1] + 1 &&
                    f(
                      (d.first.cols + 1) * this.itemSize[1],
                      d.first.rows * this.itemSize[0],
                    );
              else if (d.last - u <= e + 1) {
                var b = (d.first + 1) * this.itemSize;
                s ? f(b, 0) : f(0, b);
              }
            }
          }
        } else this.scrollToIndex(e, i);
      },
      getRenderedRange: function () {
        var e = function (f, p) {
            return Math.floor(f / (p || f));
          },
          n = this.first,
          r = 0;
        if (this.element) {
          var i = this.isBoth(),
            o = this.isHorizontal(),
            s = this.element,
            a = s.scrollTop,
            c = s.scrollLeft;
          if (i)
            ((n = {
              rows: e(a, this.itemSize[0]),
              cols: e(c, this.itemSize[1]),
            }),
              (r = {
                rows: n.rows + this.numItemsInViewport.rows,
                cols: n.cols + this.numItemsInViewport.cols,
              }));
          else {
            var u = o ? c : a;
            ((n = e(u, this.itemSize)), (r = n + this.numItemsInViewport));
          }
        }
        return {
          first: this.first,
          last: this.last,
          viewport: { first: n, last: r },
        };
      },
      calculateNumItems: function () {
        var e = this.isBoth(),
          n = this.isHorizontal(),
          r = this.itemSize,
          i = this.getContentPosition(),
          o = this.element ? this.element.offsetWidth - i.left : 0,
          s = this.element ? this.element.offsetHeight - i.top : 0,
          a = function (p, h) {
            return Math.ceil(p / (h || p));
          },
          c = function (p) {
            return Math.ceil(p / 2);
          },
          u = e ? { rows: a(s, r[0]), cols: a(o, r[1]) } : a(n ? o : s, r),
          d = this.d_numToleratedItems || (e ? [c(u.rows), c(u.cols)] : c(u));
        return { numItemsInViewport: u, numToleratedItems: d };
      },
      calculateOptions: function () {
        var e = this,
          n = this.isBoth(),
          r = this.first,
          i = this.calculateNumItems(),
          o = i.numItemsInViewport,
          s = i.numToleratedItems,
          a = function (d, f, p) {
            var h =
              arguments.length > 3 && arguments[3] !== void 0
                ? arguments[3]
                : !1;
            return e.getLast(d + f + (d < p ? 2 : 3) * p, h);
          },
          c = n
            ? {
                rows: a(r.rows, o.rows, s[0]),
                cols: a(r.cols, o.cols, s[1], !0),
              }
            : a(r, o, s);
        ((this.last = c),
          (this.numItemsInViewport = o),
          (this.d_numToleratedItems = s),
          this.$emit("update:numToleratedItems", this.d_numToleratedItems),
          this.showLoader &&
            (this.loaderArr = n
              ? Array.from({ length: o.rows }).map(function () {
                  return Array.from({ length: o.cols });
                })
              : Array.from({ length: o })),
          this.lazy &&
            Promise.resolve().then(function () {
              var u;
              ((e.lazyLoadState = {
                first: e.step ? (n ? { rows: 0, cols: r.cols } : 0) : r,
                last: Math.min(
                  e.step ? e.step : c,
                  ((u = e.items) === null || u === void 0
                    ? void 0
                    : u.length) || 0,
                ),
              }),
                e.$emit("lazy-load", e.lazyLoadState));
            }));
      },
      calculateAutoSize: function () {
        var e = this;
        this.autoSize &&
          !this.d_loading &&
          Promise.resolve().then(function () {
            if (e.content) {
              var n = e.isBoth(),
                r = e.isHorizontal(),
                i = e.isVertical();
              ((e.content.style.minHeight = e.content.style.minWidth = "auto"),
                (e.content.style.position = "relative"),
                (e.element.style.contain = "none"));
              var o = [Ji(e.element), Zi(e.element)],
                s = o[0],
                a = o[1];
              ((n || r) &&
                (e.element.style.width =
                  s < e.defaultWidth
                    ? s + "px"
                    : e.scrollWidth || e.defaultWidth + "px"),
                (n || i) &&
                  (e.element.style.height =
                    a < e.defaultHeight
                      ? a + "px"
                      : e.scrollHeight || e.defaultHeight + "px"),
                (e.content.style.minHeight = e.content.style.minWidth = ""),
                (e.content.style.position = ""),
                (e.element.style.contain = ""));
            }
          });
      },
      getLast: function () {
        var e,
          n,
          r =
            arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0,
          i = arguments.length > 1 ? arguments[1] : void 0;
        return this.items
          ? Math.min(
              i
                ? ((e = this.columns || this.items[0]) === null || e === void 0
                    ? void 0
                    : e.length) || 0
                : ((n = this.items) === null || n === void 0
                    ? void 0
                    : n.length) || 0,
              r,
            )
          : 0;
      },
      getContentPosition: function () {
        if (this.content) {
          var e = getComputedStyle(this.content),
            n =
              parseFloat(e.paddingLeft) + Math.max(parseFloat(e.left) || 0, 0),
            r =
              parseFloat(e.paddingRight) +
              Math.max(parseFloat(e.right) || 0, 0),
            i = parseFloat(e.paddingTop) + Math.max(parseFloat(e.top) || 0, 0),
            o =
              parseFloat(e.paddingBottom) +
              Math.max(parseFloat(e.bottom) || 0, 0);
          return { left: n, right: r, top: i, bottom: o, x: n + r, y: i + o };
        }
        return { left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };
      },
      setSize: function () {
        var e = this;
        if (this.element) {
          var n = this.isBoth(),
            r = this.isHorizontal(),
            i = this.element.parentElement,
            o =
              this.scrollWidth ||
              "".concat(this.element.offsetWidth || i.offsetWidth, "px"),
            s =
              this.scrollHeight ||
              "".concat(this.element.offsetHeight || i.offsetHeight, "px"),
            a = function (u, d) {
              return (e.element.style[u] = d);
            };
          n || r ? (a("height", s), a("width", o)) : a("height", s);
        }
      },
      setSpacerSize: function () {
        var e = this,
          n = this.items;
        if (n) {
          var r = this.isBoth(),
            i = this.isHorizontal(),
            o = this.getContentPosition(),
            s = function (c, u, d) {
              var f =
                arguments.length > 3 && arguments[3] !== void 0
                  ? arguments[3]
                  : 0;
              return (e.spacerStyle = Rs(
                Rs({}, e.spacerStyle),
                Kv({}, "".concat(c), (u || []).length * d + f + "px"),
              ));
            };
          r
            ? (s("height", n, this.itemSize[0], o.y),
              s("width", this.columns || n[1], this.itemSize[1], o.x))
            : i
              ? s("width", this.columns || n, this.itemSize, o.x)
              : s("height", n, this.itemSize, o.y);
        }
      },
      setContentPosition: function (e) {
        var n = this;
        if (this.content && !this.appendOnly) {
          var r = this.isBoth(),
            i = this.isHorizontal(),
            o = e ? e.first : this.first,
            s = function (d, f) {
              return d * f;
            },
            a = function () {
              var d =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : 0,
                f =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : 0;
              return (n.contentStyle = Rs(Rs({}, n.contentStyle), {
                transform: "translate3d(".concat(d, "px, ").concat(f, "px, 0)"),
              }));
            };
          if (r) a(s(o.cols, this.itemSize[1]), s(o.rows, this.itemSize[0]));
          else {
            var c = s(o, this.itemSize);
            i ? a(c, 0) : a(0, c);
          }
        }
      },
      onScrollPositionChange: function (e) {
        var n = this,
          r = e.target,
          i = this.isBoth(),
          o = this.isHorizontal(),
          s = this.getContentPosition(),
          a = function (I, W) {
            return I ? (I > W ? I - W : I) : 0;
          },
          c = function (I, W) {
            return Math.floor(I / (W || I));
          },
          u = function (I, W, X, Z, G, $) {
            return I <= G ? G : $ ? X - Z - G : W + G - 1;
          },
          d = function (I, W, X, Z, G, $, ne, U) {
            if (I <= $) return 0;
            var ie = Math.max(
                0,
                ne ? (I < W ? X : I - $) : I > W ? X : I - 2 * $,
              ),
              J = n.getLast(ie, U);
            return ie > J ? J - G : ie;
          },
          f = function (I, W, X, Z, G, $) {
            var ne = W + Z + 2 * G;
            return (I >= G && (ne += G + 1), n.getLast(ne, $));
          },
          p = a(r.scrollTop, s.top),
          h = a(r.scrollLeft, s.left),
          v = i ? { rows: 0, cols: 0 } : 0,
          b = this.last,
          g = !1,
          m = this.lastScrollPos;
        if (i) {
          var _ = this.lastScrollPos.top <= p,
            y = this.lastScrollPos.left <= h;
          if (!this.appendOnly || (this.appendOnly && (_ || y))) {
            var x = {
                rows: c(p, this.itemSize[0]),
                cols: c(h, this.itemSize[1]),
              },
              C = {
                rows: u(
                  x.rows,
                  this.first.rows,
                  this.last.rows,
                  this.numItemsInViewport.rows,
                  this.d_numToleratedItems[0],
                  _,
                ),
                cols: u(
                  x.cols,
                  this.first.cols,
                  this.last.cols,
                  this.numItemsInViewport.cols,
                  this.d_numToleratedItems[1],
                  y,
                ),
              };
            ((v = {
              rows: d(
                x.rows,
                C.rows,
                this.first.rows,
                this.last.rows,
                this.numItemsInViewport.rows,
                this.d_numToleratedItems[0],
                _,
              ),
              cols: d(
                x.cols,
                C.cols,
                this.first.cols,
                this.last.cols,
                this.numItemsInViewport.cols,
                this.d_numToleratedItems[1],
                y,
                !0,
              ),
            }),
              (b = {
                rows: f(
                  x.rows,
                  v.rows,
                  this.last.rows,
                  this.numItemsInViewport.rows,
                  this.d_numToleratedItems[0],
                ),
                cols: f(
                  x.cols,
                  v.cols,
                  this.last.cols,
                  this.numItemsInViewport.cols,
                  this.d_numToleratedItems[1],
                  !0,
                ),
              }),
              (g =
                v.rows !== this.first.rows ||
                b.rows !== this.last.rows ||
                v.cols !== this.first.cols ||
                b.cols !== this.last.cols ||
                this.isRangeChanged),
              (m = { top: p, left: h }));
          }
        } else {
          var w = o ? h : p,
            S = this.lastScrollPos <= w;
          if (!this.appendOnly || (this.appendOnly && S)) {
            var D = c(w, this.itemSize),
              k = u(
                D,
                this.first,
                this.last,
                this.numItemsInViewport,
                this.d_numToleratedItems,
                S,
              );
            ((v = d(
              D,
              k,
              this.first,
              this.last,
              this.numItemsInViewport,
              this.d_numToleratedItems,
              S,
            )),
              (b = f(
                D,
                v,
                this.last,
                this.numItemsInViewport,
                this.d_numToleratedItems,
              )),
              (g = v !== this.first || b !== this.last || this.isRangeChanged),
              (m = w));
          }
        }
        return { first: v, last: b, isRangeChanged: g, scrollPos: m };
      },
      onScrollChange: function (e) {
        var n = this.onScrollPositionChange(e),
          r = n.first,
          i = n.last,
          o = n.isRangeChanged,
          s = n.scrollPos;
        if (o) {
          var a = { first: r, last: i };
          if (
            (this.setContentPosition(a),
            (this.first = r),
            (this.last = i),
            (this.lastScrollPos = s),
            this.$emit("scroll-index-change", a),
            this.lazy && this.isPageChanged(r))
          ) {
            var c,
              u,
              d = {
                first: this.step
                  ? Math.min(
                      this.getPageByFirst(r) * this.step,
                      (((c = this.items) === null || c === void 0
                        ? void 0
                        : c.length) || 0) - this.step,
                    )
                  : r,
                last: Math.min(
                  this.step ? (this.getPageByFirst(r) + 1) * this.step : i,
                  ((u = this.items) === null || u === void 0
                    ? void 0
                    : u.length) || 0,
                ),
              },
              f =
                this.lazyLoadState.first !== d.first ||
                this.lazyLoadState.last !== d.last;
            (f && this.$emit("lazy-load", d), (this.lazyLoadState = d));
          }
        }
      },
      onScroll: function (e) {
        var n = this;
        if ((this.$emit("scroll", e), this.delay)) {
          if (
            (this.scrollTimeout && clearTimeout(this.scrollTimeout),
            this.isPageChanged())
          ) {
            if (!this.d_loading && this.showLoader) {
              var r = this.onScrollPositionChange(e),
                i = r.isRangeChanged,
                o = i || (this.step ? this.isPageChanged() : !1);
              o && (this.d_loading = !0);
            }
            this.scrollTimeout = setTimeout(function () {
              (n.onScrollChange(e),
                n.d_loading &&
                  n.showLoader &&
                  (!n.lazy || n.loading === void 0) &&
                  ((n.d_loading = !1), (n.page = n.getPageByFirst())));
            }, this.delay);
          }
        } else this.onScrollChange(e);
      },
      onResize: function () {
        var e = this;
        (this.resizeTimeout && clearTimeout(this.resizeTimeout),
          (this.resizeTimeout = setTimeout(function () {
            if (Jl(e.element)) {
              var n = e.isBoth(),
                r = e.isVertical(),
                i = e.isHorizontal(),
                o = [Ji(e.element), Zi(e.element)],
                s = o[0],
                a = o[1],
                c = s !== e.defaultWidth,
                u = a !== e.defaultHeight,
                d = n ? c || u : i ? c : r ? u : !1;
              d &&
                ((e.d_numToleratedItems = e.numToleratedItems),
                (e.defaultWidth = s),
                (e.defaultHeight = a),
                (e.defaultContentWidth = Ji(e.content)),
                (e.defaultContentHeight = Zi(e.content)),
                e.init());
            }
          }, this.resizeDelay)));
      },
      bindResizeListener: function () {
        var e = this;
        this.resizeListener ||
          ((this.resizeListener = this.onResize.bind(this)),
          window.addEventListener("resize", this.resizeListener),
          window.addEventListener("orientationchange", this.resizeListener),
          (this.resizeObserver = new ResizeObserver(function () {
            e.onResize();
          })),
          this.resizeObserver.observe(this.element));
      },
      unbindResizeListener: function () {
        (this.resizeListener &&
          (window.removeEventListener("resize", this.resizeListener),
          window.removeEventListener("orientationchange", this.resizeListener),
          (this.resizeListener = null)),
          this.resizeObserver &&
            (this.resizeObserver.disconnect(), (this.resizeObserver = null)));
      },
      getOptions: function (e) {
        var n = (this.items || []).length,
          r = this.isBoth() ? this.first.rows + e : this.first + e;
        return {
          index: r,
          count: n,
          first: r === 0,
          last: r === n - 1,
          even: r % 2 === 0,
          odd: r % 2 !== 0,
        };
      },
      getLoaderOptions: function (e, n) {
        var r = this.loaderArr.length;
        return Rs(
          {
            index: e,
            count: r,
            first: e === 0,
            last: e === r - 1,
            even: e % 2 === 0,
            odd: e % 2 !== 0,
          },
          n,
        );
      },
      getPageByFirst: function (e) {
        return Math.floor(
          ((e ?? this.first) + this.d_numToleratedItems * 4) / (this.step || 1),
        );
      },
      isPageChanged: function (e) {
        return this.step && !this.lazy
          ? this.page !== this.getPageByFirst(e ?? this.first)
          : !0;
      },
      setContentEl: function (e) {
        this.content =
          e || this.content || En(this.element, '[data-pc-section="content"]');
      },
      elementRef: function (e) {
        this.element = e;
      },
      contentRef: function (e) {
        this.content = e;
      },
    },
    computed: {
      containerClass: function () {
        return [
          "p-virtualscroller",
          this.class,
          {
            "p-virtualscroller-inline": this.inline,
            "p-virtualscroller-both p-both-scroll": this.isBoth(),
            "p-virtualscroller-horizontal p-horizontal-scroll":
              this.isHorizontal(),
          },
        ];
      },
      contentClass: function () {
        return [
          "p-virtualscroller-content",
          { "p-virtualscroller-loading": this.d_loading },
        ];
      },
      loaderClass: function () {
        return [
          "p-virtualscroller-loader",
          { "p-virtualscroller-loader-mask": !this.$slots.loader },
        ];
      },
      loadedItems: function () {
        var e = this;
        return this.items && !this.d_loading
          ? this.isBoth()
            ? this.items
                .slice(this.appendOnly ? 0 : this.first.rows, this.last.rows)
                .map(function (n) {
                  return e.columns
                    ? n
                    : n.slice(e.appendOnly ? 0 : e.first.cols, e.last.cols);
                })
            : this.isHorizontal() && this.columns
              ? this.items
              : this.items.slice(this.appendOnly ? 0 : this.first, this.last)
          : [];
      },
      loadedRows: function () {
        return this.d_loading
          ? this.loaderDisabled
            ? this.loaderArr
            : []
          : this.loadedItems;
      },
      loadedColumns: function () {
        if (this.columns) {
          var e = this.isBoth(),
            n = this.isHorizontal();
          if (e || n)
            return this.d_loading && this.loaderDisabled
              ? e
                ? this.loaderArr[0]
                : this.loaderArr
              : this.columns.slice(
                  e ? this.first.cols : this.first,
                  e ? this.last.cols : this.last,
                );
        }
        return this.columns;
      },
    },
    components: { SpinnerIcon: Cc },
  },
  a6 = ["tabindex"];
function l6(t, e, n, r, i, o) {
  var s = Mt("SpinnerIcon");
  return t.disabled
    ? (E(),
      R(
        We,
        { key: 1 },
        [
          De(t.$slots, "default"),
          De(t.$slots, "content", {
            items: t.items,
            rows: t.items,
            columns: o.loadedColumns,
          }),
        ],
        64,
      ))
    : (E(),
      R(
        "div",
        Q(
          {
            key: 0,
            ref: o.elementRef,
            class: o.containerClass,
            tabindex: t.tabindex,
            style: t.style,
            onScroll:
              e[0] ||
              (e[0] = function () {
                return o.onScroll && o.onScroll.apply(o, arguments);
              }),
          },
          t.ptmi("root"),
        ),
        [
          De(
            t.$slots,
            "content",
            {
              styleClass: o.contentClass,
              items: o.loadedItems,
              getItemOptions: o.getOptions,
              loading: i.d_loading,
              getLoaderOptions: o.getLoaderOptions,
              itemSize: t.itemSize,
              rows: o.loadedRows,
              columns: o.loadedColumns,
              contentRef: o.contentRef,
              spacerStyle: i.spacerStyle,
              contentStyle: i.contentStyle,
              vertical: o.isVertical(),
              horizontal: o.isHorizontal(),
              both: o.isBoth(),
            },
            function () {
              return [
                l(
                  "div",
                  Q(
                    {
                      ref: o.contentRef,
                      class: o.contentClass,
                      style: i.contentStyle,
                    },
                    t.ptm("content"),
                  ),
                  [
                    (E(!0),
                    R(
                      We,
                      null,
                      mt(o.loadedItems, function (a, c) {
                        return De(t.$slots, "item", {
                          key: c,
                          item: a,
                          options: o.getOptions(c),
                        });
                      }),
                      128,
                    )),
                  ],
                  16,
                ),
              ];
            },
          ),
          t.showSpacer
            ? (E(),
              R(
                "div",
                Q(
                  {
                    key: 0,
                    class: "p-virtualscroller-spacer",
                    style: i.spacerStyle,
                  },
                  t.ptm("spacer"),
                ),
                null,
                16,
              ))
            : le("", !0),
          !t.loaderDisabled && t.showLoader && i.d_loading
            ? (E(),
              R(
                "div",
                Q({ key: 1, class: o.loaderClass }, t.ptm("loader")),
                [
                  t.$slots && t.$slots.loader
                    ? (E(!0),
                      R(
                        We,
                        { key: 0 },
                        mt(i.loaderArr, function (a, c) {
                          return De(t.$slots, "loader", {
                            key: c,
                            options: o.getLoaderOptions(
                              c,
                              o.isBoth() && {
                                numCols: t.d_numItemsInViewport.cols,
                              },
                            ),
                          });
                        }),
                        128,
                      ))
                    : le("", !0),
                  De(t.$slots, "loadingicon", {}, function () {
                    return [
                      O(
                        s,
                        Q(
                          { spin: "", class: "p-virtualscroller-loading-icon" },
                          t.ptm("loadingIcon"),
                        ),
                        null,
                        16,
                      ),
                    ];
                  }),
                ],
                16,
              ))
            : le("", !0),
        ],
        16,
        a6,
      ));
}
Xv.render = l6;
var c6 = `
    .p-select {
        display: inline-flex;
        cursor: pointer;
        position: relative;
        user-select: none;
        background: dt('select.background');
        border: 1px solid dt('select.border.color');
        transition:
            background dt('select.transition.duration'),
            color dt('select.transition.duration'),
            border-color dt('select.transition.duration'),
            outline-color dt('select.transition.duration'),
            box-shadow dt('select.transition.duration');
        border-radius: dt('select.border.radius');
        outline-color: transparent;
        box-shadow: dt('select.shadow');
    }

    .p-select:not(.p-disabled):hover {
        border-color: dt('select.hover.border.color');
    }

    .p-select:not(.p-disabled).p-focus {
        border-color: dt('select.focus.border.color');
        box-shadow: dt('select.focus.ring.shadow');
        outline: dt('select.focus.ring.width') dt('select.focus.ring.style') dt('select.focus.ring.color');
        outline-offset: dt('select.focus.ring.offset');
    }

    .p-select.p-variant-filled {
        background: dt('select.filled.background');
    }

    .p-select.p-variant-filled:not(.p-disabled):hover {
        background: dt('select.filled.hover.background');
    }

    .p-select.p-variant-filled:not(.p-disabled).p-focus {
        background: dt('select.filled.focus.background');
    }

    .p-select.p-invalid {
        border-color: dt('select.invalid.border.color');
    }

    .p-select.p-disabled {
        opacity: 1;
        background: dt('select.disabled.background');
    }

    .p-select-clear-icon {
        position: absolute;
        top: 50%;
        margin-top: -0.5rem;
        color: dt('select.clear.icon.color');
        inset-inline-end: dt('select.dropdown.width');
    }

    .p-select-dropdown {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        background: transparent;
        color: dt('select.dropdown.color');
        width: dt('select.dropdown.width');
        border-start-end-radius: dt('select.border.radius');
        border-end-end-radius: dt('select.border.radius');
    }

    .p-select-label {
        display: block;
        white-space: nowrap;
        overflow: hidden;
        flex: 1 1 auto;
        width: 1%;
        padding: dt('select.padding.y') dt('select.padding.x');
        text-overflow: ellipsis;
        cursor: pointer;
        color: dt('select.color');
        background: transparent;
        border: 0 none;
        outline: 0 none;
    }

    .p-select-label.p-placeholder {
        color: dt('select.placeholder.color');
    }

    .p-select.p-invalid .p-select-label.p-placeholder {
        color: dt('select.invalid.placeholder.color');
    }

    .p-select:has(.p-select-clear-icon) .p-select-label {
        padding-inline-end: calc(1rem + dt('select.padding.x'));
    }

    .p-select.p-disabled .p-select-label {
        color: dt('select.disabled.color');
    }

    .p-select-label-empty {
        overflow: hidden;
        opacity: 0;
    }

    input.p-select-label {
        cursor: default;
    }

    .p-select .p-select-overlay {
        min-width: 100%;
    }

    .p-select-overlay {
        position: absolute;
        top: 0;
        left: 0;
        background: dt('select.overlay.background');
        color: dt('select.overlay.color');
        border: 1px solid dt('select.overlay.border.color');
        border-radius: dt('select.overlay.border.radius');
        box-shadow: dt('select.overlay.shadow');
    }

    .p-select-header {
        padding: dt('select.list.header.padding');
    }

    .p-select-filter {
        width: 100%;
    }

    .p-select-list-container {
        overflow: auto;
    }

    .p-select-option-group {
        cursor: auto;
        margin: 0;
        padding: dt('select.option.group.padding');
        background: dt('select.option.group.background');
        color: dt('select.option.group.color');
        font-weight: dt('select.option.group.font.weight');
    }

    .p-select-list {
        margin: 0;
        padding: 0;
        list-style-type: none;
        padding: dt('select.list.padding');
        gap: dt('select.list.gap');
        display: flex;
        flex-direction: column;
    }

    .p-select-option {
        cursor: pointer;
        font-weight: normal;
        white-space: nowrap;
        position: relative;
        overflow: hidden;
        display: flex;
        align-items: center;
        padding: dt('select.option.padding');
        border: 0 none;
        color: dt('select.option.color');
        background: transparent;
        transition:
            background dt('select.transition.duration'),
            color dt('select.transition.duration'),
            border-color dt('select.transition.duration'),
            box-shadow dt('select.transition.duration'),
            outline-color dt('select.transition.duration');
        border-radius: dt('select.option.border.radius');
    }

    .p-select-option:not(.p-select-option-selected):not(.p-disabled).p-focus {
        background: dt('select.option.focus.background');
        color: dt('select.option.focus.color');
    }

    .p-select-option.p-select-option-selected {
        background: dt('select.option.selected.background');
        color: dt('select.option.selected.color');
    }

    .p-select-option.p-select-option-selected.p-focus {
        background: dt('select.option.selected.focus.background');
        color: dt('select.option.selected.focus.color');
    }

    .p-select-option-blank-icon {
        flex-shrink: 0;
    }

    .p-select-option-check-icon {
        position: relative;
        flex-shrink: 0;
        margin-inline-start: dt('select.checkmark.gutter.start');
        margin-inline-end: dt('select.checkmark.gutter.end');
        color: dt('select.checkmark.color');
    }

    .p-select-empty-message {
        padding: dt('select.empty.message.padding');
    }

    .p-select-fluid {
        display: flex;
        width: 100%;
    }

    .p-select-sm .p-select-label {
        font-size: dt('select.sm.font.size');
        padding-block: dt('select.sm.padding.y');
        padding-inline: dt('select.sm.padding.x');
    }

    .p-select-sm .p-select-dropdown .p-icon {
        font-size: dt('select.sm.font.size');
        width: dt('select.sm.font.size');
        height: dt('select.sm.font.size');
    }

    .p-select-lg .p-select-label {
        font-size: dt('select.lg.font.size');
        padding-block: dt('select.lg.padding.y');
        padding-inline: dt('select.lg.padding.x');
    }

    .p-select-lg .p-select-dropdown .p-icon {
        font-size: dt('select.lg.font.size');
        width: dt('select.lg.font.size');
        height: dt('select.lg.font.size');
    }
`,
  u6 = {
    root: function (e) {
      var n = e.instance,
        r = e.props,
        i = e.state;
      return [
        "p-select p-component p-inputwrapper",
        {
          "p-disabled": r.disabled,
          "p-invalid": n.$invalid,
          "p-variant-filled": n.$variant === "filled",
          "p-focus": i.focused,
          "p-inputwrapper-filled": n.$filled,
          "p-inputwrapper-focus": i.focused || i.overlayVisible,
          "p-select-open": i.overlayVisible,
          "p-select-fluid": n.$fluid,
          "p-select-sm p-inputfield-sm": r.size === "small",
          "p-select-lg p-inputfield-lg": r.size === "large",
        },
      ];
    },
    label: function (e) {
      var n = e.instance,
        r = e.props;
      return [
        "p-select-label",
        {
          "p-placeholder": !r.editable && n.label === r.placeholder,
          "p-select-label-empty":
            !r.editable &&
            !n.$slots.value &&
            (n.label === "p-emptylabel" || n.label.length === 0),
        },
      ];
    },
    clearIcon: "p-select-clear-icon",
    dropdown: "p-select-dropdown",
    loadingicon: "p-select-loading-icon",
    dropdownIcon: "p-select-dropdown-icon",
    overlay: "p-select-overlay p-component",
    header: "p-select-header",
    pcFilter: "p-select-filter",
    listContainer: "p-select-list-container",
    list: "p-select-list",
    optionGroup: "p-select-option-group",
    optionGroupLabel: "p-select-option-group-label",
    option: function (e) {
      var n = e.instance,
        r = e.props,
        i = e.state,
        o = e.option,
        s = e.focusedOption;
      return [
        "p-select-option",
        {
          "p-select-option-selected": n.isSelected(o) && r.highlightOnSelect,
          "p-focus": i.focusedOptionIndex === s,
          "p-disabled": n.isOptionDisabled(o),
        },
      ];
    },
    optionLabel: "p-select-option-label",
    optionCheckIcon: "p-select-option-check-icon",
    optionBlankIcon: "p-select-option-blank-icon",
    emptyMessage: "p-select-empty-message",
  },
  d6 = ot.extend({ name: "select", style: c6, classes: u6 }),
  f6 = {
    name: "BaseSelect",
    extends: po,
    props: {
      options: Array,
      optionLabel: [String, Function],
      optionValue: [String, Function],
      optionDisabled: [String, Function],
      optionGroupLabel: [String, Function],
      optionGroupChildren: [String, Function],
      scrollHeight: { type: String, default: "14rem" },
      filter: Boolean,
      filterPlaceholder: String,
      filterLocale: String,
      filterMatchMode: { type: String, default: "contains" },
      filterFields: { type: Array, default: null },
      editable: Boolean,
      placeholder: { type: String, default: null },
      dataKey: null,
      showClear: { type: Boolean, default: !1 },
      inputId: { type: String, default: null },
      inputClass: { type: [String, Object], default: null },
      inputStyle: { type: Object, default: null },
      labelId: { type: String, default: null },
      labelClass: { type: [String, Object], default: null },
      labelStyle: { type: Object, default: null },
      panelClass: { type: [String, Object], default: null },
      overlayStyle: { type: Object, default: null },
      overlayClass: { type: [String, Object], default: null },
      panelStyle: { type: Object, default: null },
      appendTo: { type: [String, Object], default: "body" },
      loading: { type: Boolean, default: !1 },
      clearIcon: { type: String, default: void 0 },
      dropdownIcon: { type: String, default: void 0 },
      filterIcon: { type: String, default: void 0 },
      loadingIcon: { type: String, default: void 0 },
      resetFilterOnHide: { type: Boolean, default: !1 },
      resetFilterOnClear: { type: Boolean, default: !1 },
      virtualScrollerOptions: { type: Object, default: null },
      autoOptionFocus: { type: Boolean, default: !1 },
      autoFilterFocus: { type: Boolean, default: !1 },
      selectOnFocus: { type: Boolean, default: !1 },
      focusOnHover: { type: Boolean, default: !0 },
      highlightOnSelect: { type: Boolean, default: !0 },
      checkmark: { type: Boolean, default: !1 },
      filterMessage: { type: String, default: null },
      selectionMessage: { type: String, default: null },
      emptySelectionMessage: { type: String, default: null },
      emptyFilterMessage: { type: String, default: null },
      emptyMessage: { type: String, default: null },
      tabindex: { type: Number, default: 0 },
      ariaLabel: { type: String, default: null },
      ariaLabelledby: { type: String, default: null },
    },
    style: d6,
    provide: function () {
      return { $pcSelect: this, $parentInstance: this };
    },
  };
function Ma(t) {
  "@babel/helpers - typeof";
  return (
    (Ma =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    Ma(t)
  );
}
function p6(t) {
  return v6(t) || g6(t) || m6(t) || h6();
}
function h6() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function m6(t, e) {
  if (t) {
    if (typeof t == "string") return bd(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return (
      n === "Object" && t.constructor && (n = t.constructor.name),
      n === "Map" || n === "Set"
        ? Array.from(t)
        : n === "Arguments" ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          ? bd(t, e)
          : void 0
    );
  }
}
function g6(t) {
  if (
    (typeof Symbol < "u" && t[Symbol.iterator] != null) ||
    t["@@iterator"] != null
  )
    return Array.from(t);
}
function v6(t) {
  if (Array.isArray(t)) return bd(t);
}
function bd(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, r = Array(e); n < e; n++) r[n] = t[n];
  return r;
}
function Vm(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    (e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r));
  }
  return n;
}
function Hm(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? Vm(Object(n), !0).forEach(function (r) {
          Yi(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
        : Vm(Object(n)).forEach(function (r) {
            Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
          });
  }
  return t;
}
function Yi(t, e, n) {
  return (
    (e = b6(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function b6(t) {
  var e = y6(t, "string");
  return Ma(e) == "symbol" ? e : e + "";
}
function y6(t, e) {
  if (Ma(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (Ma(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var Yv = {
    name: "Select",
    extends: f6,
    inheritAttrs: !1,
    emits: [
      "change",
      "focus",
      "blur",
      "before-show",
      "before-hide",
      "show",
      "hide",
      "filter",
    ],
    outsideClickListener: null,
    scrollHandler: null,
    resizeListener: null,
    labelClickListener: null,
    matchMediaOrientationListener: null,
    overlay: null,
    list: null,
    virtualScroller: null,
    searchTimeout: null,
    searchValue: null,
    isModelValueChanged: !1,
    data: function () {
      return {
        clicked: !1,
        focused: !1,
        focusedOptionIndex: -1,
        filterValue: null,
        overlayVisible: !1,
        queryOrientation: null,
      };
    },
    watch: {
      modelValue: function () {
        this.isModelValueChanged = !0;
      },
      options: function () {
        this.autoUpdateModel();
      },
    },
    mounted: function () {
      (this.autoUpdateModel(),
        this.bindLabelClickListener(),
        this.bindMatchMediaOrientationListener());
    },
    updated: function () {
      (this.overlayVisible &&
        this.isModelValueChanged &&
        this.scrollInView(this.findSelectedOptionIndex()),
        (this.isModelValueChanged = !1));
    },
    beforeUnmount: function () {
      (this.unbindOutsideClickListener(),
        this.unbindResizeListener(),
        this.unbindLabelClickListener(),
        this.unbindMatchMediaOrientationListener(),
        this.scrollHandler &&
          (this.scrollHandler.destroy(), (this.scrollHandler = null)),
        this.overlay && (On.clear(this.overlay), (this.overlay = null)));
    },
    methods: {
      getOptionIndex: function (e, n) {
        return this.virtualScrollerDisabled ? e : n && n(e).index;
      },
      getOptionLabel: function (e) {
        return this.optionLabel ? Xr(e, this.optionLabel) : e;
      },
      getOptionValue: function (e) {
        return this.optionValue ? Xr(e, this.optionValue) : e;
      },
      getOptionRenderKey: function (e, n) {
        return (
          (this.dataKey ? Xr(e, this.dataKey) : this.getOptionLabel(e)) +
          "_" +
          n
        );
      },
      getPTItemOptions: function (e, n, r, i) {
        return this.ptm(i, {
          context: {
            option: e,
            index: r,
            selected: this.isSelected(e),
            focused: this.focusedOptionIndex === this.getOptionIndex(r, n),
            disabled: this.isOptionDisabled(e),
          },
        });
      },
      isOptionDisabled: function (e) {
        return this.optionDisabled ? Xr(e, this.optionDisabled) : !1;
      },
      isOptionGroup: function (e) {
        return this.optionGroupLabel && e.optionGroup && e.group;
      },
      getOptionGroupLabel: function (e) {
        return Xr(e, this.optionGroupLabel);
      },
      getOptionGroupChildren: function (e) {
        return Xr(e, this.optionGroupChildren);
      },
      getAriaPosInset: function (e) {
        var n = this;
        return (
          (this.optionGroupLabel
            ? e -
              this.visibleOptions.slice(0, e).filter(function (r) {
                return n.isOptionGroup(r);
              }).length
            : e) + 1
        );
      },
      show: function (e) {
        (this.$emit("before-show"),
          (this.overlayVisible = !0),
          (this.focusedOptionIndex =
            this.focusedOptionIndex !== -1
              ? this.focusedOptionIndex
              : this.autoOptionFocus
                ? this.findFirstFocusedOptionIndex()
                : this.editable
                  ? -1
                  : this.findSelectedOptionIndex()),
          e && Dn(this.$refs.focusInput));
      },
      hide: function (e) {
        var n = this,
          r = function () {
            (n.$emit("before-hide"),
              (n.overlayVisible = !1),
              (n.clicked = !1),
              (n.focusedOptionIndex = -1),
              (n.searchValue = ""),
              n.resetFilterOnHide && (n.filterValue = null),
              e && Dn(n.$refs.focusInput));
          };
        setTimeout(function () {
          r();
        }, 0);
      },
      onFocus: function (e) {
        this.disabled ||
          ((this.focused = !0),
          this.overlayVisible &&
            ((this.focusedOptionIndex =
              this.focusedOptionIndex !== -1
                ? this.focusedOptionIndex
                : this.autoOptionFocus
                  ? this.findFirstFocusedOptionIndex()
                  : this.editable
                    ? -1
                    : this.findSelectedOptionIndex()),
            this.scrollInView(this.focusedOptionIndex)),
          this.$emit("focus", e));
      },
      onBlur: function (e) {
        var n = this;
        setTimeout(function () {
          var r, i;
          ((n.focused = !1),
            (n.focusedOptionIndex = -1),
            (n.searchValue = ""),
            n.$emit("blur", e),
            (r = (i = n.formField).onBlur) === null ||
              r === void 0 ||
              r.call(i, e));
        }, 100);
      },
      onKeyDown: function (e) {
        if (this.disabled) {
          e.preventDefault();
          return;
        }
        if (r_())
          switch (e.code) {
            case "Backspace":
              this.onBackspaceKey(e, this.editable);
              break;
            case "Enter":
            case "NumpadDecimal":
              this.onEnterKey(e);
              break;
            default:
              e.preventDefault();
              return;
          }
        var n = e.metaKey || e.ctrlKey;
        switch (e.code) {
          case "ArrowDown":
            this.onArrowDownKey(e);
            break;
          case "ArrowUp":
            this.onArrowUpKey(e, this.editable);
            break;
          case "ArrowLeft":
          case "ArrowRight":
            this.onArrowLeftKey(e, this.editable);
            break;
          case "Home":
            this.onHomeKey(e, this.editable);
            break;
          case "End":
            this.onEndKey(e, this.editable);
            break;
          case "PageDown":
            this.onPageDownKey(e);
            break;
          case "PageUp":
            this.onPageUpKey(e);
            break;
          case "Space":
            this.onSpaceKey(e, this.editable);
            break;
          case "Enter":
          case "NumpadEnter":
            this.onEnterKey(e);
            break;
          case "Escape":
            this.onEscapeKey(e);
            break;
          case "Tab":
            this.onTabKey(e);
            break;
          case "Backspace":
            this.onBackspaceKey(e, this.editable);
            break;
          case "ShiftLeft":
          case "ShiftRight":
            break;
          default:
            !n &&
              f_(e.key) &&
              (!this.overlayVisible && this.show(),
              !this.editable && this.searchOptions(e, e.key));
            break;
        }
        this.clicked = !1;
      },
      onEditableInput: function (e) {
        var n = e.target.value;
        this.searchValue = "";
        var r = this.searchOptions(e, n);
        (!r && (this.focusedOptionIndex = -1),
          this.updateModel(e, n),
          !this.overlayVisible && ct(n) && this.show());
      },
      onContainerClick: function (e) {
        this.disabled ||
          this.loading ||
          e.target.tagName === "INPUT" ||
          e.target.getAttribute("data-pc-section") === "clearicon" ||
          e.target.closest('[data-pc-section="clearicon"]') ||
          ((!this.overlay || !this.overlay.contains(e.target)) &&
            (this.overlayVisible ? this.hide(!0) : this.show(!0)),
          (this.clicked = !0));
      },
      onClearClick: function (e) {
        (this.updateModel(e, null),
          this.resetFilterOnClear && (this.filterValue = null));
      },
      onFirstHiddenFocus: function (e) {
        var n =
          e.relatedTarget === this.$refs.focusInput
            ? No(this.overlay, ':not([data-p-hidden-focusable="true"])')
            : this.$refs.focusInput;
        Dn(n);
      },
      onLastHiddenFocus: function (e) {
        var n =
          e.relatedTarget === this.$refs.focusInput
            ? F0(this.overlay, ':not([data-p-hidden-focusable="true"])')
            : this.$refs.focusInput;
        Dn(n);
      },
      onOptionSelect: function (e, n) {
        var r =
            arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0,
          i = this.getOptionValue(n);
        (this.updateModel(e, i), r && this.hide(!0));
      },
      onOptionMouseMove: function (e, n) {
        this.focusOnHover && this.changeFocusedOptionIndex(e, n);
      },
      onFilterChange: function (e) {
        var n = e.target.value;
        ((this.filterValue = n),
          (this.focusedOptionIndex = -1),
          this.$emit("filter", { originalEvent: e, value: n }),
          !this.virtualScrollerDisabled &&
            this.virtualScroller.scrollToIndex(0));
      },
      onFilterKeyDown: function (e) {
        if (!e.isComposing)
          switch (e.code) {
            case "ArrowDown":
              this.onArrowDownKey(e);
              break;
            case "ArrowUp":
              this.onArrowUpKey(e, !0);
              break;
            case "ArrowLeft":
            case "ArrowRight":
              this.onArrowLeftKey(e, !0);
              break;
            case "Home":
              this.onHomeKey(e, !0);
              break;
            case "End":
              this.onEndKey(e, !0);
              break;
            case "Enter":
            case "NumpadEnter":
              this.onEnterKey(e);
              break;
            case "Escape":
              this.onEscapeKey(e);
              break;
            case "Tab":
              this.onTabKey(e, !0);
              break;
          }
      },
      onFilterBlur: function () {
        this.focusedOptionIndex = -1;
      },
      onFilterUpdated: function () {
        this.overlayVisible && this.alignOverlay();
      },
      onOverlayClick: function (e) {
        gf.emit("overlay-click", { originalEvent: e, target: this.$el });
      },
      onOverlayKeyDown: function (e) {
        switch (e.code) {
          case "Escape":
            this.onEscapeKey(e);
            break;
        }
      },
      onArrowDownKey: function (e) {
        if (!this.overlayVisible)
          (this.show(),
            this.editable &&
              this.changeFocusedOptionIndex(e, this.findSelectedOptionIndex()));
        else {
          var n =
            this.focusedOptionIndex !== -1
              ? this.findNextOptionIndex(this.focusedOptionIndex)
              : this.clicked
                ? this.findFirstOptionIndex()
                : this.findFirstFocusedOptionIndex();
          this.changeFocusedOptionIndex(e, n);
        }
        e.preventDefault();
      },
      onArrowUpKey: function (e) {
        var n =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
        if (e.altKey && !n)
          (this.focusedOptionIndex !== -1 &&
            this.onOptionSelect(
              e,
              this.visibleOptions[this.focusedOptionIndex],
            ),
            this.overlayVisible && this.hide(),
            e.preventDefault());
        else {
          var r =
            this.focusedOptionIndex !== -1
              ? this.findPrevOptionIndex(this.focusedOptionIndex)
              : this.clicked
                ? this.findLastOptionIndex()
                : this.findLastFocusedOptionIndex();
          (this.changeFocusedOptionIndex(e, r),
            !this.overlayVisible && this.show(),
            e.preventDefault());
        }
      },
      onArrowLeftKey: function (e) {
        var n =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
        n && (this.focusedOptionIndex = -1);
      },
      onHomeKey: function (e) {
        var n =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
        if (n) {
          var r = e.currentTarget;
          e.shiftKey
            ? r.setSelectionRange(0, e.target.selectionStart)
            : (r.setSelectionRange(0, 0), (this.focusedOptionIndex = -1));
        } else
          (this.changeFocusedOptionIndex(e, this.findFirstOptionIndex()),
            !this.overlayVisible && this.show());
        e.preventDefault();
      },
      onEndKey: function (e) {
        var n =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
        if (n) {
          var r = e.currentTarget;
          if (e.shiftKey)
            r.setSelectionRange(e.target.selectionStart, r.value.length);
          else {
            var i = r.value.length;
            (r.setSelectionRange(i, i), (this.focusedOptionIndex = -1));
          }
        } else
          (this.changeFocusedOptionIndex(e, this.findLastOptionIndex()),
            !this.overlayVisible && this.show());
        e.preventDefault();
      },
      onPageUpKey: function (e) {
        (this.scrollInView(0), e.preventDefault());
      },
      onPageDownKey: function (e) {
        (this.scrollInView(this.visibleOptions.length - 1), e.preventDefault());
      },
      onEnterKey: function (e) {
        (this.overlayVisible
          ? (this.focusedOptionIndex !== -1 &&
              this.onOptionSelect(
                e,
                this.visibleOptions[this.focusedOptionIndex],
              ),
            this.hide(!0))
          : ((this.focusedOptionIndex = -1), this.onArrowDownKey(e)),
          e.preventDefault());
      },
      onSpaceKey: function (e) {
        var n =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
        !n && this.onEnterKey(e);
      },
      onEscapeKey: function (e) {
        (this.overlayVisible && this.hide(!0),
          e.preventDefault(),
          e.stopPropagation());
      },
      onTabKey: function (e) {
        var n =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
        n ||
          (this.overlayVisible && this.hasFocusableElements()
            ? (Dn(this.$refs.firstHiddenFocusableElementOnOverlay),
              e.preventDefault())
            : (this.focusedOptionIndex !== -1 &&
                this.onOptionSelect(
                  e,
                  this.visibleOptions[this.focusedOptionIndex],
                ),
              this.overlayVisible && this.hide(this.filter)));
      },
      onBackspaceKey: function (e) {
        var n =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
        n && !this.overlayVisible && this.show();
      },
      onOverlayEnter: function (e) {
        var n = this;
        (On.set("overlay", e, this.$primevue.config.zIndex.overlay),
          xc(e, { position: "absolute", top: "0" }),
          this.alignOverlay(),
          this.scrollInView(),
          this.$attrSelector && e.setAttribute(this.$attrSelector, ""),
          setTimeout(function () {
            (n.autoFilterFocus && n.filter && Dn(n.$refs.filterInput.$el),
              n.autoUpdateModel());
          }, 1));
      },
      onOverlayAfterEnter: function () {
        (this.bindOutsideClickListener(),
          this.bindScrollListener(),
          this.bindResizeListener(),
          this.$emit("show"));
      },
      onOverlayLeave: function () {
        var e = this;
        (this.unbindOutsideClickListener(),
          this.unbindScrollListener(),
          this.unbindResizeListener(),
          this.autoFilterFocus &&
            this.filter &&
            !this.editable &&
            this.$nextTick(function () {
              e.$refs.filterInput && Dn(e.$refs.filterInput.$el);
            }),
          this.$emit("hide"),
          (this.overlay = null));
      },
      onOverlayAfterLeave: function (e) {
        On.clear(e);
      },
      alignOverlay: function () {
        this.appendTo === "self"
          ? Zd(this.overlay, this.$el)
          : this.overlay &&
            ((this.overlay.style.minWidth = In(this.$el) + "px"),
            qd(this.overlay, this.$el));
      },
      bindOutsideClickListener: function () {
        var e = this;
        this.outsideClickListener ||
          ((this.outsideClickListener = function (n) {
            var r = n.composedPath();
            e.overlayVisible &&
              e.overlay &&
              !r.includes(e.$el) &&
              !r.includes(e.overlay) &&
              e.hide();
          }),
          document.addEventListener("click", this.outsideClickListener, !0));
      },
      unbindOutsideClickListener: function () {
        this.outsideClickListener &&
          (document.removeEventListener("click", this.outsideClickListener, !0),
          (this.outsideClickListener = null));
      },
      bindScrollListener: function () {
        var e = this;
        (this.scrollHandler ||
          (this.scrollHandler = new Lc(this.$refs.container, function () {
            e.overlayVisible && e.hide();
          })),
          this.scrollHandler.bindScrollListener());
      },
      unbindScrollListener: function () {
        this.scrollHandler && this.scrollHandler.unbindScrollListener();
      },
      bindResizeListener: function () {
        var e = this;
        this.resizeListener ||
          ((this.resizeListener = function () {
            e.overlayVisible && !_c() && e.hide();
          }),
          window.addEventListener("resize", this.resizeListener));
      },
      unbindResizeListener: function () {
        this.resizeListener &&
          (window.removeEventListener("resize", this.resizeListener),
          (this.resizeListener = null));
      },
      bindLabelClickListener: function () {
        var e = this;
        if (!this.editable && !this.labelClickListener) {
          var n = document.querySelector(
            'label[for="'.concat(this.labelId, '"]'),
          );
          n &&
            Jl(n) &&
            ((this.labelClickListener = function () {
              Dn(e.$refs.focusInput);
            }),
            n.addEventListener("click", this.labelClickListener));
        }
      },
      unbindLabelClickListener: function () {
        if (this.labelClickListener) {
          var e = document.querySelector(
            'label[for="'.concat(this.labelId, '"]'),
          );
          e && Jl(e) && e.removeEventListener("click", this.labelClickListener);
        }
      },
      bindMatchMediaOrientationListener: function () {
        var e = this;
        if (!this.matchMediaOrientationListener) {
          var n = matchMedia("(orientation: portrait)");
          ((this.queryOrientation = n),
            (this.matchMediaOrientationListener = function () {
              e.alignOverlay();
            }),
            this.queryOrientation.addEventListener(
              "change",
              this.matchMediaOrientationListener,
            ));
        }
      },
      unbindMatchMediaOrientationListener: function () {
        this.matchMediaOrientationListener &&
          (this.queryOrientation.removeEventListener(
            "change",
            this.matchMediaOrientationListener,
          ),
          (this.queryOrientation = null),
          (this.matchMediaOrientationListener = null));
      },
      hasFocusableElements: function () {
        return (
          sa(this.overlay, ':not([data-p-hidden-focusable="true"])').length > 0
        );
      },
      isOptionExactMatched: function (e) {
        var n;
        return (
          this.isValidOption(e) &&
          typeof this.getOptionLabel(e) == "string" &&
          ((n = this.getOptionLabel(e)) === null || n === void 0
            ? void 0
            : n.toLocaleLowerCase(this.filterLocale)) ==
            this.searchValue.toLocaleLowerCase(this.filterLocale)
        );
      },
      isOptionStartsWith: function (e) {
        var n;
        return (
          this.isValidOption(e) &&
          typeof this.getOptionLabel(e) == "string" &&
          ((n = this.getOptionLabel(e)) === null || n === void 0
            ? void 0
            : n
                .toLocaleLowerCase(this.filterLocale)
                .startsWith(
                  this.searchValue.toLocaleLowerCase(this.filterLocale),
                ))
        );
      },
      isValidOption: function (e) {
        return ct(e) && !(this.isOptionDisabled(e) || this.isOptionGroup(e));
      },
      isValidSelectedOption: function (e) {
        return this.isValidOption(e) && this.isSelected(e);
      },
      isSelected: function (e) {
        return kc(this.d_value, this.getOptionValue(e), this.equalityKey);
      },
      findFirstOptionIndex: function () {
        var e = this;
        return this.visibleOptions.findIndex(function (n) {
          return e.isValidOption(n);
        });
      },
      findLastOptionIndex: function () {
        var e = this;
        return Rp(this.visibleOptions, function (n) {
          return e.isValidOption(n);
        });
      },
      findNextOptionIndex: function (e) {
        var n = this,
          r =
            e < this.visibleOptions.length - 1
              ? this.visibleOptions.slice(e + 1).findIndex(function (i) {
                  return n.isValidOption(i);
                })
              : -1;
        return r > -1 ? r + e + 1 : e;
      },
      findPrevOptionIndex: function (e) {
        var n = this,
          r =
            e > 0
              ? Rp(this.visibleOptions.slice(0, e), function (i) {
                  return n.isValidOption(i);
                })
              : -1;
        return r > -1 ? r : e;
      },
      findSelectedOptionIndex: function () {
        var e = this;
        return this.$filled
          ? this.visibleOptions.findIndex(function (n) {
              return e.isValidSelectedOption(n);
            })
          : -1;
      },
      findFirstFocusedOptionIndex: function () {
        var e = this.findSelectedOptionIndex();
        return e < 0 ? this.findFirstOptionIndex() : e;
      },
      findLastFocusedOptionIndex: function () {
        var e = this.findSelectedOptionIndex();
        return e < 0 ? this.findLastOptionIndex() : e;
      },
      searchOptions: function (e, n) {
        var r = this;
        this.searchValue = (this.searchValue || "") + n;
        var i = -1,
          o = !1;
        return (
          ct(this.searchValue) &&
            ((i = this.visibleOptions.findIndex(function (s) {
              return r.isOptionExactMatched(s);
            })),
            i === -1 &&
              (i = this.visibleOptions.findIndex(function (s) {
                return r.isOptionStartsWith(s);
              })),
            i !== -1 && (o = !0),
            i === -1 &&
              this.focusedOptionIndex === -1 &&
              (i = this.findFirstFocusedOptionIndex()),
            i !== -1 && this.changeFocusedOptionIndex(e, i)),
          this.searchTimeout && clearTimeout(this.searchTimeout),
          (this.searchTimeout = setTimeout(function () {
            ((r.searchValue = ""), (r.searchTimeout = null));
          }, 500)),
          o
        );
      },
      changeFocusedOptionIndex: function (e, n) {
        this.focusedOptionIndex !== n &&
          ((this.focusedOptionIndex = n),
          this.scrollInView(),
          this.selectOnFocus &&
            this.onOptionSelect(e, this.visibleOptions[n], !1));
      },
      scrollInView: function () {
        var e = this,
          n =
            arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : -1;
        this.$nextTick(function () {
          var r =
              n !== -1 ? "".concat(e.$id, "_").concat(n) : e.focusedOptionId,
            i = En(e.list, 'li[id="'.concat(r, '"]'));
          i
            ? i.scrollIntoView &&
              i.scrollIntoView({ block: "nearest", inline: "nearest" })
            : e.virtualScrollerDisabled ||
              (e.virtualScroller &&
                e.virtualScroller.scrollToIndex(
                  n !== -1 ? n : e.focusedOptionIndex,
                ));
        });
      },
      autoUpdateModel: function () {
        (this.autoOptionFocus &&
          (this.focusedOptionIndex = this.findFirstFocusedOptionIndex()),
          this.selectOnFocus &&
            this.autoOptionFocus &&
            !this.$filled &&
            this.onOptionSelect(
              null,
              this.visibleOptions[this.focusedOptionIndex],
              !1,
            ));
      },
      updateModel: function (e, n) {
        (this.writeValue(n, e),
          this.$emit("change", { originalEvent: e, value: n }));
      },
      flatOptions: function (e) {
        var n = this;
        return (e || []).reduce(function (r, i, o) {
          r.push({ optionGroup: i, group: !0, index: o });
          var s = n.getOptionGroupChildren(i);
          return (
            s &&
              s.forEach(function (a) {
                return r.push(a);
              }),
            r
          );
        }, []);
      },
      overlayRef: function (e) {
        this.overlay = e;
      },
      listRef: function (e, n) {
        ((this.list = e), n && n(e));
      },
      virtualScrollerRef: function (e) {
        this.virtualScroller = e;
      },
    },
    computed: {
      visibleOptions: function () {
        var e = this,
          n = this.optionGroupLabel
            ? this.flatOptions(this.options)
            : this.options || [];
        if (this.filterValue) {
          var r = zI.filter(
            n,
            this.searchFields,
            this.filterValue,
            this.filterMatchMode,
            this.filterLocale,
          );
          if (this.optionGroupLabel) {
            var i = this.options || [],
              o = [];
            return (
              i.forEach(function (s) {
                var a = e.getOptionGroupChildren(s),
                  c = a.filter(function (u) {
                    return r.includes(u);
                  });
                c.length > 0 &&
                  o.push(
                    Hm(
                      Hm({}, s),
                      {},
                      Yi(
                        {},
                        typeof e.optionGroupChildren == "string"
                          ? e.optionGroupChildren
                          : "items",
                        p6(c),
                      ),
                    ),
                  );
              }),
              this.flatOptions(o)
            );
          }
          return r;
        }
        return n;
      },
      hasSelectedOption: function () {
        return this.$filled;
      },
      label: function () {
        var e = this.findSelectedOptionIndex();
        return e !== -1
          ? this.getOptionLabel(this.visibleOptions[e])
          : this.placeholder || "p-emptylabel";
      },
      editableInputValue: function () {
        var e = this.findSelectedOptionIndex();
        return e !== -1
          ? this.getOptionLabel(this.visibleOptions[e])
          : this.d_value || "";
      },
      equalityKey: function () {
        return this.optionValue ? null : this.dataKey;
      },
      searchFields: function () {
        return this.filterFields || [this.optionLabel];
      },
      filterResultMessageText: function () {
        return ct(this.visibleOptions)
          ? this.filterMessageText.replaceAll("{0}", this.visibleOptions.length)
          : this.emptyFilterMessageText;
      },
      filterMessageText: function () {
        return (
          this.filterMessage || this.$primevue.config.locale.searchMessage || ""
        );
      },
      emptyFilterMessageText: function () {
        return (
          this.emptyFilterMessage ||
          this.$primevue.config.locale.emptySearchMessage ||
          this.$primevue.config.locale.emptyFilterMessage ||
          ""
        );
      },
      emptyMessageText: function () {
        return (
          this.emptyMessage || this.$primevue.config.locale.emptyMessage || ""
        );
      },
      selectionMessageText: function () {
        return (
          this.selectionMessage ||
          this.$primevue.config.locale.selectionMessage ||
          ""
        );
      },
      emptySelectionMessageText: function () {
        return (
          this.emptySelectionMessage ||
          this.$primevue.config.locale.emptySelectionMessage ||
          ""
        );
      },
      selectedMessageText: function () {
        return this.$filled
          ? this.selectionMessageText.replaceAll("{0}", "1")
          : this.emptySelectionMessageText;
      },
      focusedOptionId: function () {
        return this.focusedOptionIndex !== -1
          ? "".concat(this.$id, "_").concat(this.focusedOptionIndex)
          : null;
      },
      ariaSetSize: function () {
        var e = this;
        return this.visibleOptions.filter(function (n) {
          return !e.isOptionGroup(n);
        }).length;
      },
      isClearIconVisible: function () {
        return this.showClear && this.d_value != null && ct(this.options);
      },
      virtualScrollerDisabled: function () {
        return !this.virtualScrollerOptions;
      },
      containerDataP: function () {
        return At(
          Yi(
            {
              invalid: this.$invalid,
              disabled: this.disabled,
              focus: this.focused,
              fluid: this.$fluid,
              filled: this.$variant === "filled",
            },
            this.size,
            this.size,
          ),
        );
      },
      labelDataP: function () {
        return At(
          Yi(
            Yi(
              {
                placeholder: !this.editable && this.label === this.placeholder,
                clearable: this.showClear,
                disabled: this.disabled,
                editable: this.editable,
              },
              this.size,
              this.size,
            ),
            "empty",
            !this.editable &&
              !this.$slots.value &&
              (this.label === "p-emptylabel" || this.label.length === 0),
          ),
        );
      },
      dropdownIconDataP: function () {
        return At(Yi({}, this.size, this.size));
      },
      overlayDataP: function () {
        return At(Yi({}, "portal-" + this.appendTo, "portal-" + this.appendTo));
      },
    },
    directives: { ripple: Ha },
    components: {
      InputText: yt,
      VirtualScroller: Xv,
      Portal: ja,
      InputIcon: mf,
      IconField: hf,
      TimesIcon: Sc,
      ChevronDownIcon: pf,
      SpinnerIcon: Cc,
      SearchIcon: Wv,
      CheckIcon: ff,
      BlankIcon: Gv,
    },
  },
  x6 = ["id", "data-p"],
  _6 = [
    "name",
    "id",
    "value",
    "placeholder",
    "tabindex",
    "disabled",
    "aria-label",
    "aria-labelledby",
    "aria-expanded",
    "aria-controls",
    "aria-activedescendant",
    "aria-invalid",
    "data-p",
  ],
  w6 = [
    "name",
    "id",
    "tabindex",
    "aria-label",
    "aria-labelledby",
    "aria-expanded",
    "aria-controls",
    "aria-activedescendant",
    "aria-invalid",
    "aria-disabled",
    "data-p",
  ],
  k6 = ["data-p"],
  S6 = ["id"],
  C6 = ["id"],
  M6 = [
    "id",
    "aria-label",
    "aria-selected",
    "aria-disabled",
    "aria-setsize",
    "aria-posinset",
    "onMousedown",
    "onMousemove",
    "data-p-selected",
    "data-p-focused",
    "data-p-disabled",
  ];
function E6(t, e, n, r, i, o) {
  var s = Mt("SpinnerIcon"),
    a = Mt("InputText"),
    c = Mt("SearchIcon"),
    u = Mt("InputIcon"),
    d = Mt("IconField"),
    f = Mt("CheckIcon"),
    p = Mt("BlankIcon"),
    h = Mt("VirtualScroller"),
    v = Mt("Portal"),
    b = Xn("ripple");
  return (
    E(),
    R(
      "div",
      Q(
        {
          ref: "container",
          id: t.$id,
          class: t.cx("root"),
          onClick:
            e[12] ||
            (e[12] = function () {
              return (
                o.onContainerClick && o.onContainerClick.apply(o, arguments)
              );
            }),
          "data-p": o.containerDataP,
        },
        t.ptmi("root"),
      ),
      [
        t.editable
          ? (E(),
            R(
              "input",
              Q(
                {
                  key: 0,
                  ref: "focusInput",
                  name: t.name,
                  id: t.labelId || t.inputId,
                  type: "text",
                  class: [t.cx("label"), t.inputClass, t.labelClass],
                  style: [t.inputStyle, t.labelStyle],
                  value: o.editableInputValue,
                  placeholder: t.placeholder,
                  tabindex: t.disabled ? -1 : t.tabindex,
                  disabled: t.disabled,
                  autocomplete: "off",
                  role: "combobox",
                  "aria-label": t.ariaLabel,
                  "aria-labelledby": t.ariaLabelledby,
                  "aria-haspopup": "listbox",
                  "aria-expanded": i.overlayVisible,
                  "aria-controls": t.$id + "_list",
                  "aria-activedescendant": i.focused
                    ? o.focusedOptionId
                    : void 0,
                  "aria-invalid": t.invalid || void 0,
                  onFocus:
                    e[0] ||
                    (e[0] = function () {
                      return o.onFocus && o.onFocus.apply(o, arguments);
                    }),
                  onBlur:
                    e[1] ||
                    (e[1] = function () {
                      return o.onBlur && o.onBlur.apply(o, arguments);
                    }),
                  onKeydown:
                    e[2] ||
                    (e[2] = function () {
                      return o.onKeyDown && o.onKeyDown.apply(o, arguments);
                    }),
                  onInput:
                    e[3] ||
                    (e[3] = function () {
                      return (
                        o.onEditableInput &&
                        o.onEditableInput.apply(o, arguments)
                      );
                    }),
                  "data-p": o.labelDataP,
                },
                t.ptm("label"),
              ),
              null,
              16,
              _6,
            ))
          : (E(),
            R(
              "span",
              Q(
                {
                  key: 1,
                  ref: "focusInput",
                  name: t.name,
                  id: t.labelId || t.inputId,
                  class: [t.cx("label"), t.inputClass, t.labelClass],
                  style: [t.inputStyle, t.labelStyle],
                  tabindex: t.disabled ? -1 : t.tabindex,
                  role: "combobox",
                  "aria-label":
                    t.ariaLabel ||
                    (o.label === "p-emptylabel" ? void 0 : o.label),
                  "aria-labelledby": t.ariaLabelledby,
                  "aria-haspopup": "listbox",
                  "aria-expanded": i.overlayVisible,
                  "aria-controls": t.$id + "_list",
                  "aria-activedescendant": i.focused
                    ? o.focusedOptionId
                    : void 0,
                  "aria-invalid": t.invalid || void 0,
                  "aria-disabled": t.disabled,
                  onFocus:
                    e[4] ||
                    (e[4] = function () {
                      return o.onFocus && o.onFocus.apply(o, arguments);
                    }),
                  onBlur:
                    e[5] ||
                    (e[5] = function () {
                      return o.onBlur && o.onBlur.apply(o, arguments);
                    }),
                  onKeydown:
                    e[6] ||
                    (e[6] = function () {
                      return o.onKeyDown && o.onKeyDown.apply(o, arguments);
                    }),
                  "data-p": o.labelDataP,
                },
                t.ptm("label"),
              ),
              [
                De(
                  t.$slots,
                  "value",
                  { value: t.d_value, placeholder: t.placeholder },
                  function () {
                    var g;
                    return [
                      Ke(
                        z(
                          o.label === "p-emptylabel"
                            ? " "
                            : (g = o.label) !== null && g !== void 0
                              ? g
                              : "empty",
                        ),
                        1,
                      ),
                    ];
                  },
                ),
              ],
              16,
              w6,
            )),
        o.isClearIconVisible
          ? De(
              t.$slots,
              "clearicon",
              {
                key: 2,
                class: Ie(t.cx("clearIcon")),
                clearCallback: o.onClearClick,
              },
              function () {
                return [
                  (E(),
                  Be(
                    Dt(t.clearIcon ? "i" : "TimesIcon"),
                    Q(
                      {
                        ref: "clearIcon",
                        class: [t.cx("clearIcon"), t.clearIcon],
                        onClick: o.onClearClick,
                      },
                      t.ptm("clearIcon"),
                      { "data-pc-section": "clearicon" },
                    ),
                    null,
                    16,
                    ["class", "onClick"],
                  )),
                ];
              },
            )
          : le("", !0),
        l(
          "div",
          Q({ class: t.cx("dropdown") }, t.ptm("dropdown")),
          [
            t.loading
              ? De(
                  t.$slots,
                  "loadingicon",
                  { key: 0, class: Ie(t.cx("loadingIcon")) },
                  function () {
                    return [
                      t.loadingIcon
                        ? (E(),
                          R(
                            "span",
                            Q(
                              {
                                key: 0,
                                class: [
                                  t.cx("loadingIcon"),
                                  "pi-spin",
                                  t.loadingIcon,
                                ],
                                "aria-hidden": "true",
                              },
                              t.ptm("loadingIcon"),
                            ),
                            null,
                            16,
                          ))
                        : (E(),
                          Be(
                            s,
                            Q(
                              {
                                key: 1,
                                class: t.cx("loadingIcon"),
                                spin: "",
                                "aria-hidden": "true",
                              },
                              t.ptm("loadingIcon"),
                            ),
                            null,
                            16,
                            ["class"],
                          )),
                    ];
                  },
                )
              : De(
                  t.$slots,
                  "dropdownicon",
                  { key: 1, class: Ie(t.cx("dropdownIcon")) },
                  function () {
                    return [
                      (E(),
                      Be(
                        Dt(t.dropdownIcon ? "span" : "ChevronDownIcon"),
                        Q(
                          {
                            class: [t.cx("dropdownIcon"), t.dropdownIcon],
                            "aria-hidden": "true",
                            "data-p": o.dropdownIconDataP,
                          },
                          t.ptm("dropdownIcon"),
                        ),
                        null,
                        16,
                        ["class", "data-p"],
                      )),
                    ];
                  },
                ),
          ],
          16,
        ),
        O(
          v,
          { appendTo: t.appendTo },
          {
            default: Ye(function () {
              return [
                O(
                  Fa,
                  Q(
                    {
                      name: "p-connected-overlay",
                      onEnter: o.onOverlayEnter,
                      onAfterEnter: o.onOverlayAfterEnter,
                      onLeave: o.onOverlayLeave,
                      onAfterLeave: o.onOverlayAfterLeave,
                    },
                    t.ptm("transition"),
                  ),
                  {
                    default: Ye(function () {
                      return [
                        i.overlayVisible
                          ? (E(),
                            R(
                              "div",
                              Q(
                                {
                                  key: 0,
                                  ref: o.overlayRef,
                                  class: [
                                    t.cx("overlay"),
                                    t.panelClass,
                                    t.overlayClass,
                                  ],
                                  style: [t.panelStyle, t.overlayStyle],
                                  onClick:
                                    e[10] ||
                                    (e[10] = function () {
                                      return (
                                        o.onOverlayClick &&
                                        o.onOverlayClick.apply(o, arguments)
                                      );
                                    }),
                                  onKeydown:
                                    e[11] ||
                                    (e[11] = function () {
                                      return (
                                        o.onOverlayKeyDown &&
                                        o.onOverlayKeyDown.apply(o, arguments)
                                      );
                                    }),
                                  "data-p": o.overlayDataP,
                                },
                                t.ptm("overlay"),
                              ),
                              [
                                l(
                                  "span",
                                  Q(
                                    {
                                      ref: "firstHiddenFocusableElementOnOverlay",
                                      role: "presentation",
                                      "aria-hidden": "true",
                                      class:
                                        "p-hidden-accessible p-hidden-focusable",
                                      tabindex: 0,
                                      onFocus:
                                        e[7] ||
                                        (e[7] = function () {
                                          return (
                                            o.onFirstHiddenFocus &&
                                            o.onFirstHiddenFocus.apply(
                                              o,
                                              arguments,
                                            )
                                          );
                                        }),
                                    },
                                    t.ptm("hiddenFirstFocusableEl"),
                                    {
                                      "data-p-hidden-accessible": !0,
                                      "data-p-hidden-focusable": !0,
                                    },
                                  ),
                                  null,
                                  16,
                                ),
                                De(t.$slots, "header", {
                                  value: t.d_value,
                                  options: o.visibleOptions,
                                }),
                                t.filter
                                  ? (E(),
                                    R(
                                      "div",
                                      Q(
                                        { key: 0, class: t.cx("header") },
                                        t.ptm("header"),
                                      ),
                                      [
                                        O(
                                          d,
                                          {
                                            unstyled: t.unstyled,
                                            pt: t.ptm("pcFilterContainer"),
                                          },
                                          {
                                            default: Ye(function () {
                                              return [
                                                O(
                                                  a,
                                                  {
                                                    ref: "filterInput",
                                                    type: "text",
                                                    value: i.filterValue,
                                                    onVnodeMounted:
                                                      o.onFilterUpdated,
                                                    onVnodeUpdated:
                                                      o.onFilterUpdated,
                                                    class: Ie(t.cx("pcFilter")),
                                                    placeholder:
                                                      t.filterPlaceholder,
                                                    variant: t.variant,
                                                    unstyled: t.unstyled,
                                                    role: "searchbox",
                                                    autocomplete: "off",
                                                    "aria-owns":
                                                      t.$id + "_list",
                                                    "aria-activedescendant":
                                                      o.focusedOptionId,
                                                    onKeydown:
                                                      o.onFilterKeyDown,
                                                    onBlur: o.onFilterBlur,
                                                    onInput: o.onFilterChange,
                                                    pt: t.ptm("pcFilter"),
                                                    formControl: {
                                                      novalidate: !0,
                                                    },
                                                  },
                                                  null,
                                                  8,
                                                  [
                                                    "value",
                                                    "onVnodeMounted",
                                                    "onVnodeUpdated",
                                                    "class",
                                                    "placeholder",
                                                    "variant",
                                                    "unstyled",
                                                    "aria-owns",
                                                    "aria-activedescendant",
                                                    "onKeydown",
                                                    "onBlur",
                                                    "onInput",
                                                    "pt",
                                                  ],
                                                ),
                                                O(
                                                  u,
                                                  {
                                                    unstyled: t.unstyled,
                                                    pt: t.ptm(
                                                      "pcFilterIconContainer",
                                                    ),
                                                  },
                                                  {
                                                    default: Ye(function () {
                                                      return [
                                                        De(
                                                          t.$slots,
                                                          "filtericon",
                                                          {},
                                                          function () {
                                                            return [
                                                              t.filterIcon
                                                                ? (E(),
                                                                  R(
                                                                    "span",
                                                                    Q(
                                                                      {
                                                                        key: 0,
                                                                        class:
                                                                          t.filterIcon,
                                                                      },
                                                                      t.ptm(
                                                                        "filterIcon",
                                                                      ),
                                                                    ),
                                                                    null,
                                                                    16,
                                                                  ))
                                                                : (E(),
                                                                  Be(
                                                                    c,
                                                                    Sb(
                                                                      Q(
                                                                        {
                                                                          key: 1,
                                                                        },
                                                                        t.ptm(
                                                                          "filterIcon",
                                                                        ),
                                                                      ),
                                                                    ),
                                                                    null,
                                                                    16,
                                                                  )),
                                                            ];
                                                          },
                                                        ),
                                                      ];
                                                    }),
                                                    _: 3,
                                                  },
                                                  8,
                                                  ["unstyled", "pt"],
                                                ),
                                              ];
                                            }),
                                            _: 3,
                                          },
                                          8,
                                          ["unstyled", "pt"],
                                        ),
                                        l(
                                          "span",
                                          Q(
                                            {
                                              role: "status",
                                              "aria-live": "polite",
                                              class: "p-hidden-accessible",
                                            },
                                            t.ptm("hiddenFilterResult"),
                                            { "data-p-hidden-accessible": !0 },
                                          ),
                                          z(o.filterResultMessageText),
                                          17,
                                        ),
                                      ],
                                      16,
                                    ))
                                  : le("", !0),
                                l(
                                  "div",
                                  Q(
                                    {
                                      class: t.cx("listContainer"),
                                      style: {
                                        "max-height": o.virtualScrollerDisabled
                                          ? t.scrollHeight
                                          : "",
                                      },
                                    },
                                    t.ptm("listContainer"),
                                  ),
                                  [
                                    O(
                                      h,
                                      Q(
                                        { ref: o.virtualScrollerRef },
                                        t.virtualScrollerOptions,
                                        {
                                          items: o.visibleOptions,
                                          style: { height: t.scrollHeight },
                                          tabindex: -1,
                                          disabled: o.virtualScrollerDisabled,
                                          pt: t.ptm("virtualScroller"),
                                        },
                                      ),
                                      xy(
                                        {
                                          content: Ye(function (g) {
                                            var m = g.styleClass,
                                              _ = g.contentRef,
                                              y = g.items,
                                              x = g.getItemOptions,
                                              C = g.contentStyle,
                                              w = g.itemSize;
                                            return [
                                              l(
                                                "ul",
                                                Q(
                                                  {
                                                    ref: function (D) {
                                                      return o.listRef(D, _);
                                                    },
                                                    id: t.$id + "_list",
                                                    class: [t.cx("list"), m],
                                                    style: C,
                                                    role: "listbox",
                                                  },
                                                  t.ptm("list"),
                                                ),
                                                [
                                                  (E(!0),
                                                  R(
                                                    We,
                                                    null,
                                                    mt(y, function (S, D) {
                                                      return (
                                                        E(),
                                                        R(
                                                          We,
                                                          {
                                                            key: o.getOptionRenderKey(
                                                              S,
                                                              o.getOptionIndex(
                                                                D,
                                                                x,
                                                              ),
                                                            ),
                                                          },
                                                          [
                                                            o.isOptionGroup(S)
                                                              ? (E(),
                                                                R(
                                                                  "li",
                                                                  Q(
                                                                    {
                                                                      key: 0,
                                                                      id:
                                                                        t.$id +
                                                                        "_" +
                                                                        o.getOptionIndex(
                                                                          D,
                                                                          x,
                                                                        ),
                                                                      style: {
                                                                        height:
                                                                          w
                                                                            ? w +
                                                                              "px"
                                                                            : void 0,
                                                                      },
                                                                      class:
                                                                        t.cx(
                                                                          "optionGroup",
                                                                        ),
                                                                      role: "option",
                                                                    },
                                                                    {
                                                                      ref_for:
                                                                        !0,
                                                                    },
                                                                    t.ptm(
                                                                      "optionGroup",
                                                                    ),
                                                                  ),
                                                                  [
                                                                    De(
                                                                      t.$slots,
                                                                      "optiongroup",
                                                                      {
                                                                        option:
                                                                          S.optionGroup,
                                                                        index:
                                                                          o.getOptionIndex(
                                                                            D,
                                                                            x,
                                                                          ),
                                                                      },
                                                                      function () {
                                                                        return [
                                                                          l(
                                                                            "span",
                                                                            Q(
                                                                              {
                                                                                class:
                                                                                  t.cx(
                                                                                    "optionGroupLabel",
                                                                                  ),
                                                                              },
                                                                              {
                                                                                ref_for:
                                                                                  !0,
                                                                              },
                                                                              t.ptm(
                                                                                "optionGroupLabel",
                                                                              ),
                                                                            ),
                                                                            z(
                                                                              o.getOptionGroupLabel(
                                                                                S.optionGroup,
                                                                              ),
                                                                            ),
                                                                            17,
                                                                          ),
                                                                        ];
                                                                      },
                                                                    ),
                                                                  ],
                                                                  16,
                                                                  C6,
                                                                ))
                                                              : st(
                                                                  (E(),
                                                                  R(
                                                                    "li",
                                                                    Q(
                                                                      {
                                                                        key: 1,
                                                                        id:
                                                                          t.$id +
                                                                          "_" +
                                                                          o.getOptionIndex(
                                                                            D,
                                                                            x,
                                                                          ),
                                                                        class:
                                                                          t.cx(
                                                                            "option",
                                                                            {
                                                                              option:
                                                                                S,
                                                                              focusedOption:
                                                                                o.getOptionIndex(
                                                                                  D,
                                                                                  x,
                                                                                ),
                                                                            },
                                                                          ),
                                                                        style: {
                                                                          height:
                                                                            w
                                                                              ? w +
                                                                                "px"
                                                                              : void 0,
                                                                        },
                                                                        role: "option",
                                                                        "aria-label":
                                                                          o.getOptionLabel(
                                                                            S,
                                                                          ),
                                                                        "aria-selected":
                                                                          o.isSelected(
                                                                            S,
                                                                          ),
                                                                        "aria-disabled":
                                                                          o.isOptionDisabled(
                                                                            S,
                                                                          ),
                                                                        "aria-setsize":
                                                                          o.ariaSetSize,
                                                                        "aria-posinset":
                                                                          o.getAriaPosInset(
                                                                            o.getOptionIndex(
                                                                              D,
                                                                              x,
                                                                            ),
                                                                          ),
                                                                        onMousedown:
                                                                          function (
                                                                            P,
                                                                          ) {
                                                                            return o.onOptionSelect(
                                                                              P,
                                                                              S,
                                                                            );
                                                                          },
                                                                        onMousemove:
                                                                          function (
                                                                            P,
                                                                          ) {
                                                                            return o.onOptionMouseMove(
                                                                              P,
                                                                              o.getOptionIndex(
                                                                                D,
                                                                                x,
                                                                              ),
                                                                            );
                                                                          },
                                                                        onClick:
                                                                          e[8] ||
                                                                          (e[8] =
                                                                            oi(
                                                                              function () {},
                                                                              [
                                                                                "stop",
                                                                              ],
                                                                            )),
                                                                        "data-p-selected":
                                                                          !t.checkmark &&
                                                                          o.isSelected(
                                                                            S,
                                                                          ),
                                                                        "data-p-focused":
                                                                          i.focusedOptionIndex ===
                                                                          o.getOptionIndex(
                                                                            D,
                                                                            x,
                                                                          ),
                                                                        "data-p-disabled":
                                                                          o.isOptionDisabled(
                                                                            S,
                                                                          ),
                                                                      },
                                                                      {
                                                                        ref_for:
                                                                          !0,
                                                                      },
                                                                      o.getPTItemOptions(
                                                                        S,
                                                                        x,
                                                                        D,
                                                                        "option",
                                                                      ),
                                                                    ),
                                                                    [
                                                                      t.checkmark
                                                                        ? (E(),
                                                                          R(
                                                                            We,
                                                                            {
                                                                              key: 0,
                                                                            },
                                                                            [
                                                                              o.isSelected(
                                                                                S,
                                                                              )
                                                                                ? (E(),
                                                                                  Be(
                                                                                    f,
                                                                                    Q(
                                                                                      {
                                                                                        key: 0,
                                                                                        class:
                                                                                          t.cx(
                                                                                            "optionCheckIcon",
                                                                                          ),
                                                                                      },
                                                                                      {
                                                                                        ref_for:
                                                                                          !0,
                                                                                      },
                                                                                      t.ptm(
                                                                                        "optionCheckIcon",
                                                                                      ),
                                                                                    ),
                                                                                    null,
                                                                                    16,
                                                                                    [
                                                                                      "class",
                                                                                    ],
                                                                                  ))
                                                                                : (E(),
                                                                                  Be(
                                                                                    p,
                                                                                    Q(
                                                                                      {
                                                                                        key: 1,
                                                                                        class:
                                                                                          t.cx(
                                                                                            "optionBlankIcon",
                                                                                          ),
                                                                                      },
                                                                                      {
                                                                                        ref_for:
                                                                                          !0,
                                                                                      },
                                                                                      t.ptm(
                                                                                        "optionBlankIcon",
                                                                                      ),
                                                                                    ),
                                                                                    null,
                                                                                    16,
                                                                                    [
                                                                                      "class",
                                                                                    ],
                                                                                  )),
                                                                            ],
                                                                            64,
                                                                          ))
                                                                        : le(
                                                                            "",
                                                                            !0,
                                                                          ),
                                                                      De(
                                                                        t.$slots,
                                                                        "option",
                                                                        {
                                                                          option:
                                                                            S,
                                                                          selected:
                                                                            o.isSelected(
                                                                              S,
                                                                            ),
                                                                          index:
                                                                            o.getOptionIndex(
                                                                              D,
                                                                              x,
                                                                            ),
                                                                        },
                                                                        function () {
                                                                          return [
                                                                            l(
                                                                              "span",
                                                                              Q(
                                                                                {
                                                                                  class:
                                                                                    t.cx(
                                                                                      "optionLabel",
                                                                                    ),
                                                                                },
                                                                                {
                                                                                  ref_for:
                                                                                    !0,
                                                                                },
                                                                                t.ptm(
                                                                                  "optionLabel",
                                                                                ),
                                                                              ),
                                                                              z(
                                                                                o.getOptionLabel(
                                                                                  S,
                                                                                ),
                                                                              ),
                                                                              17,
                                                                            ),
                                                                          ];
                                                                        },
                                                                      ),
                                                                    ],
                                                                    16,
                                                                    M6,
                                                                  )),
                                                                  [[b]],
                                                                ),
                                                          ],
                                                          64,
                                                        )
                                                      );
                                                    }),
                                                    128,
                                                  )),
                                                  i.filterValue &&
                                                  (!y || (y && y.length === 0))
                                                    ? (E(),
                                                      R(
                                                        "li",
                                                        Q(
                                                          {
                                                            key: 0,
                                                            class:
                                                              t.cx(
                                                                "emptyMessage",
                                                              ),
                                                            role: "option",
                                                          },
                                                          t.ptm("emptyMessage"),
                                                          {
                                                            "data-p-hidden-accessible":
                                                              !0,
                                                          },
                                                        ),
                                                        [
                                                          De(
                                                            t.$slots,
                                                            "emptyfilter",
                                                            {},
                                                            function () {
                                                              return [
                                                                Ke(
                                                                  z(
                                                                    o.emptyFilterMessageText,
                                                                  ),
                                                                  1,
                                                                ),
                                                              ];
                                                            },
                                                          ),
                                                        ],
                                                        16,
                                                      ))
                                                    : !t.options ||
                                                        (t.options &&
                                                          t.options.length ===
                                                            0)
                                                      ? (E(),
                                                        R(
                                                          "li",
                                                          Q(
                                                            {
                                                              key: 1,
                                                              class:
                                                                t.cx(
                                                                  "emptyMessage",
                                                                ),
                                                              role: "option",
                                                            },
                                                            t.ptm(
                                                              "emptyMessage",
                                                            ),
                                                            {
                                                              "data-p-hidden-accessible":
                                                                !0,
                                                            },
                                                          ),
                                                          [
                                                            De(
                                                              t.$slots,
                                                              "empty",
                                                              {},
                                                              function () {
                                                                return [
                                                                  Ke(
                                                                    z(
                                                                      o.emptyMessageText,
                                                                    ),
                                                                    1,
                                                                  ),
                                                                ];
                                                              },
                                                            ),
                                                          ],
                                                          16,
                                                        ))
                                                      : le("", !0),
                                                ],
                                                16,
                                                S6,
                                              ),
                                            ];
                                          }),
                                          _: 2,
                                        },
                                        [
                                          t.$slots.loader
                                            ? {
                                                name: "loader",
                                                fn: Ye(function (g) {
                                                  var m = g.options;
                                                  return [
                                                    De(t.$slots, "loader", {
                                                      options: m,
                                                    }),
                                                  ];
                                                }),
                                                key: "0",
                                              }
                                            : void 0,
                                        ],
                                      ),
                                      1040,
                                      ["items", "style", "disabled", "pt"],
                                    ),
                                  ],
                                  16,
                                ),
                                De(t.$slots, "footer", {
                                  value: t.d_value,
                                  options: o.visibleOptions,
                                }),
                                !t.options ||
                                (t.options && t.options.length === 0)
                                  ? (E(),
                                    R(
                                      "span",
                                      Q(
                                        {
                                          key: 1,
                                          role: "status",
                                          "aria-live": "polite",
                                          class: "p-hidden-accessible",
                                        },
                                        t.ptm("hiddenEmptyMessage"),
                                        { "data-p-hidden-accessible": !0 },
                                      ),
                                      z(o.emptyMessageText),
                                      17,
                                    ))
                                  : le("", !0),
                                l(
                                  "span",
                                  Q(
                                    {
                                      role: "status",
                                      "aria-live": "polite",
                                      class: "p-hidden-accessible",
                                    },
                                    t.ptm("hiddenSelectedMessage"),
                                    { "data-p-hidden-accessible": !0 },
                                  ),
                                  z(o.selectedMessageText),
                                  17,
                                ),
                                l(
                                  "span",
                                  Q(
                                    {
                                      ref: "lastHiddenFocusableElementOnOverlay",
                                      role: "presentation",
                                      "aria-hidden": "true",
                                      class:
                                        "p-hidden-accessible p-hidden-focusable",
                                      tabindex: 0,
                                      onFocus:
                                        e[9] ||
                                        (e[9] = function () {
                                          return (
                                            o.onLastHiddenFocus &&
                                            o.onLastHiddenFocus.apply(
                                              o,
                                              arguments,
                                            )
                                          );
                                        }),
                                    },
                                    t.ptm("hiddenLastFocusableEl"),
                                    {
                                      "data-p-hidden-accessible": !0,
                                      "data-p-hidden-focusable": !0,
                                    },
                                  ),
                                  null,
                                  16,
                                ),
                              ],
                              16,
                              k6,
                            ))
                          : le("", !0),
                      ];
                    }),
                    _: 3,
                  },
                  16,
                  ["onEnter", "onAfterEnter", "onLeave", "onAfterLeave"],
                ),
              ];
            }),
            _: 3,
          },
          8,
          ["appendTo"],
        ),
      ],
      16,
      x6,
    )
  );
}
Yv.render = E6;
var ic = {
  name: "Dropdown",
  extends: Yv,
  mounted: function () {
    console.warn("Deprecated since v4. Use Select component instead.");
  },
};
const T6 = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  A6 = { key: 0, class: "flex justify-center py-8" },
  P6 = { class: "grid grid-cols-1 md:grid-cols-2 gap-4" },
  R6 = { class: "flex flex-col gap-2" },
  L6 = { key: 0, class: "text-red-500" },
  D6 = { class: "flex flex-col gap-2" },
  I6 = { key: 0, class: "text-red-500" },
  O6 = { key: 1, class: "text-surface-500 dark:text-surface-400" },
  $6 = {
    class:
      "p-4 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg",
  },
  z6 = { class: "grid grid-cols-1 md:grid-cols-2 gap-4" },
  B6 = { class: "flex flex-col gap-2" },
  U6 = { class: "flex items-center gap-2" },
  F6 = { class: "flex flex-col gap-2" },
  N6 = { class: "grid grid-cols-1 md:grid-cols-2 gap-4" },
  V6 = { class: "flex flex-col gap-2" },
  H6 = { class: "flex flex-col gap-2" },
  j6 = {
    class:
      "p-4 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg",
  },
  G6 = { class: "space-y-4" },
  W6 = { class: "flex flex-col gap-2" },
  K6 = { key: 0, class: "text-red-500" },
  X6 = { key: 1, class: "text-green-700 dark:text-green-300" },
  Y6 = { class: "grid grid-cols-1 md:grid-cols-3 gap-4" },
  q6 = { class: "md:col-span-2 flex flex-col gap-2" },
  Z6 = { key: 0, class: "text-red-500" },
  J6 = { class: "flex flex-col gap-2" },
  Q6 = { key: 0, class: "text-red-500" },
  eO = { class: "grid grid-cols-1 md:grid-cols-2 gap-4" },
  tO = { class: "flex flex-col gap-2" },
  nO = { key: 0, class: "text-red-500" },
  rO = { class: "flex flex-col gap-2" },
  iO = { class: "flex flex-col gap-2" },
  oO = {
    class:
      "flex justify-end gap-2 pt-4 border-t border-surface-200 dark:border-surface-700",
  },
  sO = { class: "flex flex-col gap-4" },
  aO = { class: "flex justify-between items-center" },
  lO = { class: "flex flex-col gap-2" },
  cO = { class: "flex justify-end gap-2" },
  uO = {
    __name: "ProfileOverview",
    props: { userProfile: { type: Object, required: !0 } },
    emits: ["profile-updated"],
    setup(t, { emit: e }) {
      const n = t,
        r = e,
        i = N(!1),
        o = N(!1),
        s = N(!1),
        a = N({}),
        c = N(!1),
        u = N(""),
        d = N(null),
        f = N({
          displayName: "",
          email: "",
          username: "",
          discordTag: "",
          timezone: "Europe/Budapest",
          billingName: "",
          billingAddress: "",
          billingPostalCode: "",
          billingCity: "",
          billingCountry: "Magyarország",
          taxNumber: "",
        }),
        p = N({}),
        h = N([
          { label: "Budapest (CET/CEST)", value: "Europe/Budapest" },
          { label: "London (GMT/BST)", value: "Europe/London" },
          { label: "New York (EST/EDT)", value: "America/New_York" },
          { label: "Los Angeles (PST/PDT)", value: "America/Los_Angeles" },
          { label: "Tokyo (JST)", value: "Asia/Tokyo" },
        ]),
        v = N([
          { label: "Magyarország", value: "Magyarország" },
          { label: "Románia", value: "Románia" },
          { label: "Szlovákia", value: "Szlovákia" },
          { label: "Ausztria", value: "Ausztria" },
          { label: "Németország", value: "Németország" },
          { label: "Csehország", value: "Csehország" },
          { label: "Lengyelország", value: "Lengyelország" },
          { label: "Horvátország", value: "Horvátország" },
          { label: "Szerbia", value: "Szerbia" },
          { label: "Szlovénia", value: "Szlovénia" },
          { label: "Egyéb...", value: "Egyéb" },
        ]),
        b = (S) => {
          S &&
            ((f.value = {
              displayName: S.display_name || "",
              email: S.email || "",
              username: S.username || "",
              discordTag: S.discord_tag || "",
              timezone: S.timezone || "Europe/Budapest",
              billingName: S.billing_name || "",
              billingAddress: S.billing_address || "",
              billingPostalCode: S.billing_postal_code || "",
              billingCity: S.billing_city || "",
              billingCountry: S.billing_country || "Magyarország",
              taxNumber: S.tax_number || "",
            }),
            (p.value = { ...f.value }));
        },
        g = Xe(() => JSON.stringify(f.value) !== JSON.stringify(p.value));
      Ft(
        () => n.userProfile,
        (S) => {
          b(S);
        },
        { immediate: !0 },
      );
      const m = async () => {
          try {
            const S = await Ve.getUserStats();
            d.value = S;
          } catch {}
        },
        _ = () => (
          (a.value = {}),
          f.value.displayName.trim()
            ? f.value.displayName.length < 2 &&
              (a.value.displayName = "A név legalább 2 karakter hosszú legyen")
            : (a.value.displayName = "A megjelenítendő név kötelező"),
          f.value.email.trim()
            ? /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(f.value.email) ||
              (a.value.email = "Érvényes email címet adj meg")
            : (a.value.email = "Az email cím kötelező"),
          f.value.billingName.trim()
            ? f.value.billingName.length < 2 &&
              (a.value.billingName =
                "A számlázási név legalább 2 karakter legyen")
            : (a.value.billingName = "A számlázási név kötelező"),
          f.value.billingAddress.trim()
            ? f.value.billingAddress.length < 5 &&
              (a.value.billingAddress = "A cím legalább 5 karakter legyen")
            : (a.value.billingAddress = "A cím kötelező"),
          f.value.billingPostalCode.trim()
            ? /^\d{4,10}$/.test(f.value.billingPostalCode) ||
              (a.value.billingPostalCode = "Érvényes irányítószámot adj meg")
            : (a.value.billingPostalCode = "Az irányítószám kötelező"),
          f.value.billingCity.trim()
            ? f.value.billingCity.length < 2 &&
              (a.value.billingCity = "A város legalább 2 karakter legyen")
            : (a.value.billingCity = "A város kötelező"),
          Object.keys(a.value).length === 0
        ),
        y = async () => {
          if (_()) {
            o.value = !0;
            try {
              const S = await Ve.updateUserProfile({
                display_name: f.value.displayName,
                email: f.value.email,
                discord_tag: f.value.discordTag,
                timezone: f.value.timezone,
                billing_name: f.value.billingName,
                billing_address: f.value.billingAddress,
                billing_postal_code: f.value.billingPostalCode,
                billing_city: f.value.billingCity,
                billing_country: f.value.billingCountry,
                tax_number: f.value.taxNumber || null,
              });
              ((p.value = { ...f.value }), r("profile-updated", S.user || S));
            } catch {
            } finally {
              o.value = !1;
            }
          }
        },
        x = () => {
          ((f.value = { ...p.value }), (a.value = {}));
        },
        C = async () => {
          s.value = !0;
          try {
            (await Ve.changeUsername(u.value),
              (c.value = !1),
              (u.value = ""),
              (f.value.username = u.value),
              r("profile-updated", { username: u.value }));
          } catch {
          } finally {
            s.value = !1;
          }
        },
        w = () => {};
      return (
        $t(() => {
          m();
        }),
        (S, D) => (
          E(),
          R("div", T6, [
            D[40] ||
              (D[40] = l(
                "div",
                { class: "flex items-center gap-2 mb-6" },
                [
                  l("i", { class: "pi pi-user text-primary-500" }),
                  l(
                    "h3",
                    {
                      class:
                        "text-lg font-semibold text-surface-900 dark:text-surface-0",
                    },
                    "Személyes adatok",
                  ),
                ],
                -1,
              )),
            i.value
              ? (E(),
                R(
                  "div",
                  A6,
                  D[15] ||
                    (D[15] = [
                      l(
                        "div",
                        {
                          class:
                            "flex items-center gap-2 text-surface-500 dark:text-surface-400",
                        },
                        [
                          l("i", { class: "pi pi-spin pi-spinner" }),
                          l("span", null, "Profil betöltése..."),
                        ],
                        -1,
                      ),
                    ]),
                ))
              : (E(),
                R(
                  "form",
                  { key: 1, onSubmit: oi(y, ["prevent"]), class: "space-y-6" },
                  [
                    l("div", P6, [
                      l("div", R6, [
                        D[16] ||
                          (D[16] = l(
                            "label",
                            {
                              for: "displayName",
                              class:
                                "text-surface-900 dark:text-surface-0 font-medium",
                            },
                            " Megjelenítendő név ",
                            -1,
                          )),
                        O(
                          H(yt),
                          {
                            id: "displayName",
                            modelValue: f.value.displayName,
                            "onUpdate:modelValue":
                              D[0] || (D[0] = (k) => (f.value.displayName = k)),
                            class: Ie([
                              "w-full",
                              { "p-invalid": a.value.displayName },
                            ]),
                          },
                          null,
                          8,
                          ["modelValue", "class"],
                        ),
                        a.value.displayName
                          ? (E(), R("small", L6, z(a.value.displayName), 1))
                          : le("", !0),
                      ]),
                      l("div", D6, [
                        D[17] ||
                          (D[17] = l(
                            "label",
                            {
                              for: "email",
                              class:
                                "text-surface-900 dark:text-surface-0 font-medium",
                            },
                            " Email cím ",
                            -1,
                          )),
                        O(
                          H(yt),
                          {
                            id: "email",
                            modelValue: f.value.email,
                            "onUpdate:modelValue":
                              D[1] || (D[1] = (k) => (f.value.email = k)),
                            type: "email",
                            class: Ie([
                              "w-full",
                              { "p-invalid": a.value.email },
                            ]),
                          },
                          null,
                          8,
                          ["modelValue", "class"],
                        ),
                        a.value.email
                          ? (E(), R("small", I6, z(a.value.email), 1))
                          : (E(),
                            R(
                              "small",
                              O6,
                              " Ez az email címre küldünk értesítéseket ",
                            )),
                      ]),
                    ]),
                    l("div", $6, [
                      D[22] ||
                        (D[22] = l(
                          "h4",
                          {
                            class:
                              "font-medium text-blue-900 dark:text-blue-100 mb-3 flex items-center gap-2",
                          },
                          [
                            l("i", { class: "pi pi-box" }),
                            Ke(" Minecraft account adatok "),
                          ],
                          -1,
                        )),
                      l("div", z6, [
                        l("div", B6, [
                          D[18] ||
                            (D[18] = l(
                              "label",
                              {
                                class:
                                  "text-blue-800 dark:text-blue-200 font-medium text-sm",
                              },
                              " Minecraft felhasználónév ",
                              -1,
                            )),
                          l("div", U6, [
                            O(
                              H(yt),
                              {
                                modelValue: f.value.username,
                                "onUpdate:modelValue":
                                  D[2] ||
                                  (D[2] = (k) => (f.value.username = k)),
                                class: "flex-1",
                                disabled: !0,
                              },
                              null,
                              8,
                              ["modelValue"],
                            ),
                            O(H(Ce), {
                              label: "Módosítás",
                              icon: "pi pi-camera",
                              outlined: "",
                              disabled: "",
                              onClick: w,
                            }),
                          ]),
                          D[19] ||
                            (D[19] = l(
                              "small",
                              { class: "text-blue-700 dark:text-blue-300" },
                              " A Minecraft felhasználónév módosítása külön eljárást igényel ",
                              -1,
                            )),
                        ]),
                        l("div", F6, [
                          D[20] ||
                            (D[20] = l(
                              "label",
                              {
                                class:
                                  "text-blue-800 dark:text-blue-200 font-medium text-sm",
                              },
                              " Account ID ",
                              -1,
                            )),
                          O(
                            H(yt),
                            {
                              value: n.userProfile.account_id || "MC-0000",
                              class: "flex-1",
                              disabled: !0,
                            },
                            null,
                            8,
                            ["value"],
                          ),
                          D[21] ||
                            (D[21] = l(
                              "small",
                              { class: "text-blue-700 dark:text-blue-300" },
                              " Az Account ID nem módosítható ",
                              -1,
                            )),
                        ]),
                      ]),
                    ]),
                    l("div", N6, [
                      l("div", V6, [
                        D[23] ||
                          (D[23] = l(
                            "label",
                            {
                              for: "discordTag",
                              class:
                                "text-surface-900 dark:text-surface-0 font-medium",
                            },
                            " Discord Tag (opcionális) ",
                            -1,
                          )),
                        O(
                          H(yt),
                          {
                            id: "discordTag",
                            modelValue: f.value.discordTag,
                            "onUpdate:modelValue":
                              D[3] || (D[3] = (k) => (f.value.discordTag = k)),
                            placeholder: "Username#1234",
                            class: "w-full",
                          },
                          null,
                          8,
                          ["modelValue"],
                        ),
                        D[24] ||
                          (D[24] = l(
                            "small",
                            { class: "text-surface-500 dark:text-surface-400" },
                            " Discord integráció és értesítések számára ",
                            -1,
                          )),
                      ]),
                      l("div", H6, [
                        D[25] ||
                          (D[25] = l(
                            "label",
                            {
                              for: "timezone",
                              class:
                                "text-surface-900 dark:text-surface-0 font-medium",
                            },
                            " Időzóna ",
                            -1,
                          )),
                        O(
                          H(ic),
                          {
                            id: "timezone",
                            modelValue: f.value.timezone,
                            "onUpdate:modelValue":
                              D[4] || (D[4] = (k) => (f.value.timezone = k)),
                            options: h.value,
                            "option-label": "label",
                            "option-value": "value",
                            placeholder: "Válassz időzónát",
                            class: "w-full",
                          },
                          null,
                          8,
                          ["modelValue", "options"],
                        ),
                      ]),
                    ]),
                    l("div", j6, [
                      D[34] ||
                        (D[34] = l(
                          "h4",
                          {
                            class:
                              "font-medium text-green-900 dark:text-green-100 mb-3 flex items-center gap-2",
                          },
                          [
                            l("i", { class: "pi pi-credit-card" }),
                            Ke(" Számlázási adatok "),
                          ],
                          -1,
                        )),
                      D[35] ||
                        (D[35] = l(
                          "p",
                          {
                            class:
                              "text-sm text-green-800 dark:text-green-200 mb-4",
                          },
                          " Ezek az adatok jelennek meg a számlákon és nyugtákon. Kérlek töltsd ki pontosan a vásárlásokhoz. ",
                          -1,
                        )),
                      l("div", G6, [
                        l("div", W6, [
                          D[26] ||
                            (D[26] = l(
                              "label",
                              {
                                for: "billingName",
                                class:
                                  "text-green-800 dark:text-green-200 font-medium text-sm",
                              },
                              " Számlázási név * ",
                              -1,
                            )),
                          O(
                            H(yt),
                            {
                              id: "billingName",
                              modelValue: f.value.billingName,
                              "onUpdate:modelValue":
                                D[5] ||
                                (D[5] = (k) => (f.value.billingName = k)),
                              placeholder: "Teljes név (egyéni) vagy cégnév",
                              class: Ie([
                                "w-full",
                                { "p-invalid": a.value.billingName },
                              ]),
                            },
                            null,
                            8,
                            ["modelValue", "class"],
                          ),
                          a.value.billingName
                            ? (E(), R("small", K6, z(a.value.billingName), 1))
                            : (E(),
                              R(
                                "small",
                                X6,
                                " Egyéni vásárlás esetén teljes neved, céges vásárlás esetén a cég neve ",
                              )),
                        ]),
                        l("div", Y6, [
                          l("div", q6, [
                            D[27] ||
                              (D[27] = l(
                                "label",
                                {
                                  for: "billingAddress",
                                  class:
                                    "text-green-800 dark:text-green-200 font-medium text-sm",
                                },
                                " Cím * ",
                                -1,
                              )),
                            O(
                              H(yt),
                              {
                                id: "billingAddress",
                                modelValue: f.value.billingAddress,
                                "onUpdate:modelValue":
                                  D[6] ||
                                  (D[6] = (k) => (f.value.billingAddress = k)),
                                placeholder: "Utca, házszám, lakás",
                                class: Ie([
                                  "w-full",
                                  { "p-invalid": a.value.billingAddress },
                                ]),
                              },
                              null,
                              8,
                              ["modelValue", "class"],
                            ),
                            a.value.billingAddress
                              ? (E(),
                                R("small", Z6, z(a.value.billingAddress), 1))
                              : le("", !0),
                          ]),
                          l("div", J6, [
                            D[28] ||
                              (D[28] = l(
                                "label",
                                {
                                  for: "billingPostalCode",
                                  class:
                                    "text-green-800 dark:text-green-200 font-medium text-sm",
                                },
                                " Irányítószám * ",
                                -1,
                              )),
                            O(
                              H(yt),
                              {
                                id: "billingPostalCode",
                                modelValue: f.value.billingPostalCode,
                                "onUpdate:modelValue":
                                  D[7] ||
                                  (D[7] = (k) =>
                                    (f.value.billingPostalCode = k)),
                                placeholder: "1234",
                                class: Ie([
                                  "w-full",
                                  { "p-invalid": a.value.billingPostalCode },
                                ]),
                                maxlength: "10",
                              },
                              null,
                              8,
                              ["modelValue", "class"],
                            ),
                            a.value.billingPostalCode
                              ? (E(),
                                R("small", Q6, z(a.value.billingPostalCode), 1))
                              : le("", !0),
                          ]),
                        ]),
                        l("div", eO, [
                          l("div", tO, [
                            D[29] ||
                              (D[29] = l(
                                "label",
                                {
                                  for: "billingCity",
                                  class:
                                    "text-green-800 dark:text-green-200 font-medium text-sm",
                                },
                                " Város * ",
                                -1,
                              )),
                            O(
                              H(yt),
                              {
                                id: "billingCity",
                                modelValue: f.value.billingCity,
                                "onUpdate:modelValue":
                                  D[8] ||
                                  (D[8] = (k) => (f.value.billingCity = k)),
                                placeholder: "Budapest",
                                class: Ie([
                                  "w-full",
                                  { "p-invalid": a.value.billingCity },
                                ]),
                              },
                              null,
                              8,
                              ["modelValue", "class"],
                            ),
                            a.value.billingCity
                              ? (E(), R("small", nO, z(a.value.billingCity), 1))
                              : le("", !0),
                          ]),
                          l("div", rO, [
                            D[30] ||
                              (D[30] = l(
                                "label",
                                {
                                  for: "billingCountry",
                                  class:
                                    "text-green-800 dark:text-green-200 font-medium text-sm",
                                },
                                " Ország ",
                                -1,
                              )),
                            O(
                              H(ic),
                              {
                                id: "billingCountry",
                                modelValue: f.value.billingCountry,
                                "onUpdate:modelValue":
                                  D[9] ||
                                  (D[9] = (k) => (f.value.billingCountry = k)),
                                options: v.value,
                                "option-label": "label",
                                "option-value": "value",
                                placeholder: "Válassz országot",
                                class: "w-full",
                              },
                              null,
                              8,
                              ["modelValue", "options"],
                            ),
                            D[31] ||
                              (D[31] = l(
                                "small",
                                { class: "text-green-700 dark:text-green-300" },
                                " Alapértelmezett: Magyarország ",
                                -1,
                              )),
                          ]),
                        ]),
                        l("div", iO, [
                          D[32] ||
                            (D[32] = l(
                              "label",
                              {
                                for: "taxNumber",
                                class:
                                  "text-green-800 dark:text-green-200 font-medium text-sm",
                              },
                              " Adószám (opcionális) ",
                              -1,
                            )),
                          O(
                            H(yt),
                            {
                              id: "taxNumber",
                              modelValue: f.value.taxNumber,
                              "onUpdate:modelValue":
                                D[10] ||
                                (D[10] = (k) => (f.value.taxNumber = k)),
                              placeholder: "12345678-1-23",
                              class: "w-full",
                            },
                            null,
                            8,
                            ["modelValue"],
                          ),
                          D[33] ||
                            (D[33] = l(
                              "small",
                              { class: "text-green-700 dark:text-green-300" },
                              " Csak céges vásárlás esetén szükséges ",
                              -1,
                            )),
                        ]),
                      ]),
                    ]),
                    l("div", oO, [
                      O(
                        H(Ce),
                        {
                          label: "Visszaállítás",
                          severity: "secondary",
                          outlined: "",
                          onClick: x,
                          disabled: o.value,
                        },
                        null,
                        8,
                        ["disabled"],
                      ),
                      O(
                        H(Ce),
                        {
                          label: "Mentés",
                          type: "submit",
                          loading: o.value,
                          disabled: !g.value,
                        },
                        null,
                        8,
                        ["loading", "disabled"],
                      ),
                    ]),
                  ],
                  32,
                )),
            O(
              H(on),
              {
                visible: c.value,
                "onUpdate:visible": D[14] || (D[14] = (k) => (c.value = k)),
                modal: !0,
                "show-header": !1,
                breakpoints: { "960px": "75vw", "640px": "90vw" },
                style: { width: "35rem" },
                class: "shadow-sm rounded-2xl",
                pt: { content: "!p-6" },
              },
              {
                default: Ye(() => [
                  l("div", sO, [
                    l("div", aO, [
                      D[36] ||
                        (D[36] = l(
                          "h3",
                          {
                            class:
                              "text-lg font-semibold text-surface-900 dark:text-surface-0",
                          },
                          "Minecraft felhasználónév módosítása",
                          -1,
                        )),
                      O(H(Ce), {
                        icon: "pi pi-times",
                        text: "",
                        rounded: "",
                        severity: "secondary",
                        class: "w-8 h-8",
                        onClick: D[11] || (D[11] = (k) => (c.value = !1)),
                      }),
                    ]),
                    D[39] ||
                      (D[39] = l(
                        "div",
                        {
                          class:
                            "p-4 bg-orange-50 dark:bg-orange-900/20 border border-orange-200 dark:border-orange-800 rounded-lg",
                        },
                        [
                          l("div", { class: "flex items-center gap-2 mb-2" }, [
                            l("i", {
                              class:
                                "pi pi-exclamation-triangle text-orange-600 dark:text-orange-400",
                            }),
                            l(
                              "span",
                              {
                                class:
                                  "font-semibold text-orange-900 dark:text-orange-100",
                              },
                              "Fontos tudnivalók",
                            ),
                          ]),
                          l(
                            "ul",
                            {
                              class:
                                "text-sm text-orange-800 dark:text-orange-200 space-y-1 ml-6",
                            },
                            [
                              l(
                                "li",
                                null,
                                "• A felhasználónév módosítása 30 naponta egyszer lehetséges",
                              ),
                              l(
                                "li",
                                null,
                                "• Az új név ellenőrzésre kerül a Minecraft adatbázisban",
                              ),
                              l(
                                "li",
                                null,
                                "• A váltás után 24 óráig tarthat az új név aktiválása",
                              ),
                              l("li", null, "• Minden rangod és BÉ megmarad"),
                            ],
                          ),
                        ],
                        -1,
                      )),
                    l("div", lO, [
                      D[37] ||
                        (D[37] = l(
                          "label",
                          {
                            class:
                              "text-surface-900 dark:text-surface-0 font-medium",
                          },
                          "Új Minecraft felhasználónév",
                          -1,
                        )),
                      O(
                        H(yt),
                        {
                          modelValue: u.value,
                          "onUpdate:modelValue":
                            D[12] || (D[12] = (k) => (u.value = k)),
                          placeholder: "Új felhasználónév",
                          class: "w-full",
                        },
                        null,
                        8,
                        ["modelValue"],
                      ),
                      D[38] ||
                        (D[38] = l(
                          "small",
                          { class: "text-surface-500 dark:text-surface-400" },
                          " 3-16 karakter, csak betűk, számok és _ ",
                          -1,
                        )),
                    ]),
                    l("div", cO, [
                      O(H(Ce), {
                        label: "Mégse",
                        outlined: "",
                        onClick: D[13] || (D[13] = (k) => (c.value = !1)),
                      }),
                      O(
                        H(Ce),
                        {
                          label: "Felhasználónév módosítása",
                          disabled: !u.value || u.value.length < 3,
                          loading: s.value,
                          onClick: C,
                        },
                        null,
                        8,
                        ["disabled", "loading"],
                      ),
                    ]),
                  ]),
                ]),
                _: 1,
              },
              8,
              ["visible"],
            ),
          ])
        )
      );
    },
  };
var qv = { name: "EyeIcon", extends: dn };
function dO(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "svg",
      Q(
        {
          width: "14",
          height: "14",
          viewBox: "0 0 14 14",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        t.pti(),
      ),
      e[0] ||
        (e[0] = [
          l(
            "path",
            {
              "fill-rule": "evenodd",
              "clip-rule": "evenodd",
              d: "M0.0535499 7.25213C0.208567 7.59162 2.40413 12.4 7 12.4C11.5959 12.4 13.7914 7.59162 13.9465 7.25213C13.9487 7.2471 13.9506 7.24304 13.952 7.24001C13.9837 7.16396 14 7.08239 14 7.00001C14 6.91762 13.9837 6.83605 13.952 6.76001C13.9506 6.75697 13.9487 6.75292 13.9465 6.74788C13.7914 6.4084 11.5959 1.60001 7 1.60001C2.40413 1.60001 0.208567 6.40839 0.0535499 6.74788C0.0512519 6.75292 0.0494023 6.75697 0.048 6.76001C0.0163137 6.83605 0 6.91762 0 7.00001C0 7.08239 0.0163137 7.16396 0.048 7.24001C0.0494023 7.24304 0.0512519 7.2471 0.0535499 7.25213ZM7 11.2C3.664 11.2 1.736 7.92001 1.264 7.00001C1.736 6.08001 3.664 2.80001 7 2.80001C10.336 2.80001 12.264 6.08001 12.736 7.00001C12.264 7.92001 10.336 11.2 7 11.2ZM5.55551 9.16182C5.98308 9.44751 6.48576 9.6 7 9.6C7.68891 9.59789 8.349 9.32328 8.83614 8.83614C9.32328 8.349 9.59789 7.68891 9.59999 7C9.59999 6.48576 9.44751 5.98308 9.16182 5.55551C8.87612 5.12794 8.47006 4.7947 7.99497 4.59791C7.51988 4.40112 6.99711 4.34963 6.49276 4.44995C5.98841 4.55027 5.52513 4.7979 5.16152 5.16152C4.7979 5.52513 4.55027 5.98841 4.44995 6.49276C4.34963 6.99711 4.40112 7.51988 4.59791 7.99497C4.7947 8.47006 5.12794 8.87612 5.55551 9.16182ZM6.2222 5.83594C6.45243 5.6821 6.7231 5.6 7 5.6C7.37065 5.6021 7.72553 5.75027 7.98762 6.01237C8.24972 6.27446 8.39789 6.62934 8.4 7C8.4 7.27689 8.31789 7.54756 8.16405 7.77779C8.01022 8.00802 7.79157 8.18746 7.53575 8.29343C7.27994 8.39939 6.99844 8.42711 6.72687 8.37309C6.4553 8.31908 6.20584 8.18574 6.01005 7.98994C5.81425 7.79415 5.68091 7.54469 5.6269 7.27312C5.57288 7.00155 5.6006 6.72006 5.70656 6.46424C5.81253 6.20842 5.99197 5.98977 6.2222 5.83594Z",
              fill: "currentColor",
            },
            null,
            -1,
          ),
        ]),
      16,
    )
  );
}
qv.render = dO;
var Zv = { name: "EyeSlashIcon", extends: dn };
function fO(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "svg",
      Q(
        {
          width: "14",
          height: "14",
          viewBox: "0 0 14 14",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        t.pti(),
      ),
      e[0] ||
        (e[0] = [
          l(
            "path",
            {
              "fill-rule": "evenodd",
              "clip-rule": "evenodd",
              d: "M13.9414 6.74792C13.9437 6.75295 13.9455 6.757 13.9469 6.76003C13.982 6.8394 14.0001 6.9252 14.0001 7.01195C14.0001 7.0987 13.982 7.1845 13.9469 7.26386C13.6004 8.00059 13.1711 8.69549 12.6674 9.33515C12.6115 9.4071 12.54 9.46538 12.4582 9.50556C12.3765 9.54574 12.2866 9.56678 12.1955 9.56707C12.0834 9.56671 11.9737 9.53496 11.8788 9.47541C11.7838 9.41586 11.7074 9.3309 11.6583 9.23015C11.6092 9.12941 11.5893 9.01691 11.6008 8.90543C11.6124 8.79394 11.6549 8.68793 11.7237 8.5994C12.1065 8.09726 12.4437 7.56199 12.7313 6.99995C12.2595 6.08027 10.3402 2.8014 6.99732 2.8014C6.63723 2.80218 6.27816 2.83969 5.92569 2.91336C5.77666 2.93304 5.62568 2.89606 5.50263 2.80972C5.37958 2.72337 5.29344 2.59398 5.26125 2.44714C5.22907 2.30031 5.2532 2.14674 5.32885 2.01685C5.40451 1.88696 5.52618 1.79021 5.66978 1.74576C6.10574 1.64961 6.55089 1.60134 6.99732 1.60181C11.5916 1.60181 13.7864 6.40856 13.9414 6.74792ZM2.20333 1.61685C2.35871 1.61411 2.5091 1.67179 2.6228 1.77774L12.2195 11.3744C12.3318 11.4869 12.3949 11.6393 12.3949 11.7983C12.3949 11.9572 12.3318 12.1097 12.2195 12.2221C12.107 12.3345 11.9546 12.3976 11.7956 12.3976C11.6367 12.3976 11.4842 12.3345 11.3718 12.2221L10.5081 11.3584C9.46549 12.0426 8.24432 12.4042 6.99729 12.3981C2.403 12.3981 0.208197 7.59135 0.0532336 7.25198C0.0509364 7.24694 0.0490875 7.2429 0.0476856 7.23986C0.0162332 7.16518 3.05176e-05 7.08497 3.05176e-05 7.00394C3.05176e-05 6.92291 0.0162332 6.8427 0.0476856 6.76802C0.631261 5.47831 1.46902 4.31959 2.51084 3.36119L1.77509 2.62545C1.66914 2.51175 1.61146 2.36136 1.61421 2.20597C1.61695 2.05059 1.6799 1.90233 1.78979 1.79244C1.89968 1.68254 2.04794 1.6196 2.20333 1.61685ZM7.45314 8.35147L5.68574 6.57609V6.5361C5.5872 6.78938 5.56498 7.06597 5.62183 7.33173C5.67868 7.59749 5.8121 7.84078 6.00563 8.03158C6.19567 8.21043 6.43052 8.33458 6.68533 8.39089C6.94014 8.44721 7.20543 8.43359 7.45314 8.35147ZM1.26327 6.99994C1.7351 7.91163 3.64645 11.1985 6.99729 11.1985C7.9267 11.2048 8.8408 10.9618 9.64438 10.4947L8.35682 9.20718C7.86027 9.51441 7.27449 9.64491 6.69448 9.57752C6.11446 9.51014 5.57421 9.24881 5.16131 8.83592C4.74842 8.42303 4.4871 7.88277 4.41971 7.30276C4.35232 6.72274 4.48282 6.13697 4.79005 5.64041L3.35855 4.2089C2.4954 5.00336 1.78523 5.94935 1.26327 6.99994Z",
              fill: "currentColor",
            },
            null,
            -1,
          ),
        ]),
      16,
    )
  );
}
Zv.render = fO;
var pO = `
    .p-password {
        display: inline-flex;
        position: relative;
    }

    .p-password .p-password-overlay {
        min-width: 100%;
    }

    .p-password-meter {
        height: dt('password.meter.height');
        background: dt('password.meter.background');
        border-radius: dt('password.meter.border.radius');
    }

    .p-password-meter-label {
        height: 100%;
        width: 0;
        transition: width 1s ease-in-out;
        border-radius: dt('password.meter.border.radius');
    }

    .p-password-meter-weak {
        background: dt('password.strength.weak.background');
    }

    .p-password-meter-medium {
        background: dt('password.strength.medium.background');
    }

    .p-password-meter-strong {
        background: dt('password.strength.strong.background');
    }

    .p-password-fluid {
        display: flex;
    }

    .p-password-fluid .p-password-input {
        width: 100%;
    }

    .p-password-input::-ms-reveal,
    .p-password-input::-ms-clear {
        display: none;
    }

    .p-password-overlay {
        padding: dt('password.overlay.padding');
        background: dt('password.overlay.background');
        color: dt('password.overlay.color');
        border: 1px solid dt('password.overlay.border.color');
        box-shadow: dt('password.overlay.shadow');
        border-radius: dt('password.overlay.border.radius');
    }

    .p-password-content {
        display: flex;
        flex-direction: column;
        gap: dt('password.content.gap');
    }

    .p-password-toggle-mask-icon {
        inset-inline-end: dt('form.field.padding.x');
        color: dt('password.icon.color');
        position: absolute;
        top: 50%;
        margin-top: calc(-1 * calc(dt('icon.size') / 2));
        width: dt('icon.size');
        height: dt('icon.size');
    }

    .p-password-clear-icon {
        position: absolute;
        top: 50%;
        margin-top: -0.5rem;
        cursor: pointer;
        inset-inline-end: dt('form.field.padding.x');
        color: dt('form.field.icon.color');
    }

    .p-password:has(.p-password-toggle-mask-icon) .p-password-input {
        padding-inline-end: calc((dt('form.field.padding.x') * 2) + dt('icon.size'));
    }

    .p-password:has(.p-password-toggle-mask-icon) .p-password-clear-icon {
        inset-inline-end: calc((dt('form.field.padding.x') * 2) + dt('icon.size'));
    }
`,
  hO = {
    root: function (e) {
      var n = e.props;
      return { position: n.appendTo === "self" ? "relative" : void 0 };
    },
  },
  mO = {
    root: function (e) {
      var n = e.instance;
      return [
        "p-password p-component p-inputwrapper",
        {
          "p-inputwrapper-filled": n.$filled,
          "p-inputwrapper-focus": n.focused,
          "p-password-fluid": n.$fluid,
        },
      ];
    },
    pcInputText: "p-password-input",
    maskIcon: "p-password-toggle-mask-icon p-password-mask-icon",
    unmaskIcon: "p-password-toggle-mask-icon p-password-unmask-icon",
    overlay: "p-password-overlay p-component",
    content: "p-password-content",
    meter: "p-password-meter",
    meterLabel: function (e) {
      var n = e.instance;
      return "p-password-meter-label ".concat(
        n.meter ? "p-password-meter-" + n.meter.strength : "",
      );
    },
    meterText: "p-password-meter-text",
  },
  gO = ot.extend({
    name: "password",
    style: pO,
    classes: mO,
    inlineStyles: hO,
  }),
  vO = {
    name: "BasePassword",
    extends: po,
    props: {
      promptLabel: { type: String, default: null },
      mediumRegex: {
        type: [String, RegExp],
        default:
          "^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})",
      },
      strongRegex: {
        type: [String, RegExp],
        default: "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})",
      },
      weakLabel: { type: String, default: null },
      mediumLabel: { type: String, default: null },
      strongLabel: { type: String, default: null },
      feedback: { type: Boolean, default: !0 },
      appendTo: { type: [String, Object], default: "body" },
      toggleMask: { type: Boolean, default: !1 },
      hideIcon: { type: String, default: void 0 },
      maskIcon: { type: String, default: void 0 },
      showIcon: { type: String, default: void 0 },
      unmaskIcon: { type: String, default: void 0 },
      disabled: { type: Boolean, default: !1 },
      placeholder: { type: String, default: null },
      required: { type: Boolean, default: !1 },
      inputId: { type: String, default: null },
      inputClass: { type: [String, Object], default: null },
      inputStyle: { type: Object, default: null },
      inputProps: { type: null, default: null },
      panelId: { type: String, default: null },
      panelClass: { type: [String, Object], default: null },
      panelStyle: { type: Object, default: null },
      panelProps: { type: null, default: null },
      overlayId: { type: String, default: null },
      overlayClass: { type: [String, Object], default: null },
      overlayStyle: { type: Object, default: null },
      overlayProps: { type: null, default: null },
      ariaLabelledby: { type: String, default: null },
      ariaLabel: { type: String, default: null },
      autofocus: { type: Boolean, default: null },
    },
    style: gO,
    provide: function () {
      return { $pcPassword: this, $parentInstance: this };
    },
  };
function Ea(t) {
  "@babel/helpers - typeof";
  return (
    (Ea =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    Ea(t)
  );
}
function jm(t, e, n) {
  return (
    (e = bO(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function bO(t) {
  var e = yO(t, "string");
  return Ea(e) == "symbol" ? e : e + "";
}
function yO(t, e) {
  if (Ea(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (Ea(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var eo = {
  name: "Password",
  extends: vO,
  inheritAttrs: !1,
  emits: ["change", "focus", "blur", "invalid"],
  inject: { $pcFluid: { default: null } },
  data: function () {
    return {
      overlayVisible: !1,
      meter: null,
      infoText: null,
      focused: !1,
      unmasked: !1,
    };
  },
  mediumCheckRegExp: null,
  strongCheckRegExp: null,
  resizeListener: null,
  scrollHandler: null,
  overlay: null,
  mounted: function () {
    ((this.infoText = this.promptText),
      (this.mediumCheckRegExp = new RegExp(this.mediumRegex)),
      (this.strongCheckRegExp = new RegExp(this.strongRegex)));
  },
  beforeUnmount: function () {
    (this.unbindResizeListener(),
      this.scrollHandler &&
        (this.scrollHandler.destroy(), (this.scrollHandler = null)),
      this.overlay && (On.clear(this.overlay), (this.overlay = null)));
  },
  methods: {
    onOverlayEnter: function (e) {
      (On.set("overlay", e, this.$primevue.config.zIndex.overlay),
        xc(e, { position: "absolute", top: "0" }),
        this.alignOverlay(),
        this.bindScrollListener(),
        this.bindResizeListener(),
        this.$attrSelector && e.setAttribute(this.$attrSelector, ""));
    },
    onOverlayLeave: function () {
      (this.unbindScrollListener(),
        this.unbindResizeListener(),
        (this.overlay = null));
    },
    onOverlayAfterLeave: function (e) {
      On.clear(e);
    },
    alignOverlay: function () {
      this.appendTo === "self"
        ? Zd(this.overlay, this.$refs.input.$el)
        : ((this.overlay.style.minWidth = In(this.$refs.input.$el) + "px"),
          qd(this.overlay, this.$refs.input.$el));
    },
    testStrength: function (e) {
      var n = 0;
      return (
        this.strongCheckRegExp.test(e)
          ? (n = 3)
          : this.mediumCheckRegExp.test(e)
            ? (n = 2)
            : e.length && (n = 1),
        n
      );
    },
    onInput: function (e) {
      (this.writeValue(e.target.value, e), this.$emit("change", e));
    },
    onFocus: function (e) {
      ((this.focused = !0),
        this.feedback &&
          (this.setPasswordMeter(this.d_value), (this.overlayVisible = !0)),
        this.$emit("focus", e));
    },
    onBlur: function (e) {
      ((this.focused = !1),
        this.feedback && (this.overlayVisible = !1),
        this.$emit("blur", e));
    },
    onKeyUp: function (e) {
      if (this.feedback) {
        var n = e.target.value,
          r = this.checkPasswordStrength(n),
          i = r.meter,
          o = r.label;
        if (((this.meter = i), (this.infoText = o), e.code === "Escape")) {
          this.overlayVisible && (this.overlayVisible = !1);
          return;
        }
        this.overlayVisible || (this.overlayVisible = !0);
      }
    },
    setPasswordMeter: function () {
      if (!this.d_value) {
        ((this.meter = null), (this.infoText = this.promptText));
        return;
      }
      var e = this.checkPasswordStrength(this.d_value),
        n = e.meter,
        r = e.label;
      ((this.meter = n),
        (this.infoText = r),
        this.overlayVisible || (this.overlayVisible = !0));
    },
    checkPasswordStrength: function (e) {
      var n = null,
        r = null;
      switch (this.testStrength(e)) {
        case 1:
          ((n = this.weakText), (r = { strength: "weak", width: "33.33%" }));
          break;
        case 2:
          ((n = this.mediumText),
            (r = { strength: "medium", width: "66.66%" }));
          break;
        case 3:
          ((n = this.strongText), (r = { strength: "strong", width: "100%" }));
          break;
        default:
          ((n = this.promptText), (r = null));
          break;
      }
      return { label: n, meter: r };
    },
    onInvalid: function (e) {
      this.$emit("invalid", e);
    },
    bindScrollListener: function () {
      var e = this;
      (this.scrollHandler ||
        (this.scrollHandler = new Lc(this.$refs.input.$el, function () {
          e.overlayVisible && (e.overlayVisible = !1);
        })),
        this.scrollHandler.bindScrollListener());
    },
    unbindScrollListener: function () {
      this.scrollHandler && this.scrollHandler.unbindScrollListener();
    },
    bindResizeListener: function () {
      var e = this;
      this.resizeListener ||
        ((this.resizeListener = function () {
          e.overlayVisible && !_c() && (e.overlayVisible = !1);
        }),
        window.addEventListener("resize", this.resizeListener));
    },
    unbindResizeListener: function () {
      this.resizeListener &&
        (window.removeEventListener("resize", this.resizeListener),
        (this.resizeListener = null));
    },
    overlayRef: function (e) {
      this.overlay = e;
    },
    onMaskToggle: function () {
      this.unmasked = !this.unmasked;
    },
    onOverlayClick: function (e) {
      gf.emit("overlay-click", { originalEvent: e, target: this.$el });
    },
  },
  computed: {
    inputType: function () {
      return this.unmasked ? "text" : "password";
    },
    weakText: function () {
      return this.weakLabel || this.$primevue.config.locale.weak;
    },
    mediumText: function () {
      return this.mediumLabel || this.$primevue.config.locale.medium;
    },
    strongText: function () {
      return this.strongLabel || this.$primevue.config.locale.strong;
    },
    promptText: function () {
      return this.promptLabel || this.$primevue.config.locale.passwordPrompt;
    },
    overlayUniqueId: function () {
      return this.$id + "_overlay";
    },
    containerDataP: function () {
      return At({ fluid: this.$fluid });
    },
    meterDataP: function () {
      var e, n;
      return At(
        jm(
          {},
          (e = this.meter) === null || e === void 0 ? void 0 : e.strength,
          (n = this.meter) === null || n === void 0 ? void 0 : n.strength,
        ),
      );
    },
    overlayDataP: function () {
      return At(jm({}, "portal-" + this.appendTo, "portal-" + this.appendTo));
    },
  },
  components: { InputText: yt, Portal: ja, EyeSlashIcon: Zv, EyeIcon: qv },
};
function Ta(t) {
  "@babel/helpers - typeof";
  return (
    (Ta =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    Ta(t)
  );
}
function Gm(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    (e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r));
  }
  return n;
}
function Iu(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? Gm(Object(n), !0).forEach(function (r) {
          xO(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
        : Gm(Object(n)).forEach(function (r) {
            Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
          });
  }
  return t;
}
function xO(t, e, n) {
  return (
    (e = _O(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function _O(t) {
  var e = wO(t, "string");
  return Ta(e) == "symbol" ? e : e + "";
}
function wO(t, e) {
  if (Ta(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (Ta(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var kO = ["data-p"],
  SO = ["id", "data-p"],
  CO = ["data-p"];
function MO(t, e, n, r, i, o) {
  var s = Mt("InputText"),
    a = Mt("Portal");
  return (
    E(),
    R(
      "div",
      Q(
        {
          class: t.cx("root"),
          style: t.sx("root"),
          "data-p": o.containerDataP,
        },
        t.ptmi("root"),
      ),
      [
        O(
          s,
          Q(
            {
              ref: "input",
              id: t.inputId,
              type: o.inputType,
              class: [t.cx("pcInputText"), t.inputClass],
              style: t.inputStyle,
              defaultValue: t.d_value,
              name: t.$formName,
              "aria-labelledby": t.ariaLabelledby,
              "aria-label": t.ariaLabel,
              "aria-controls":
                (t.overlayProps && t.overlayProps.id) ||
                t.overlayId ||
                (t.panelProps && t.panelProps.id) ||
                t.panelId ||
                o.overlayUniqueId,
              "aria-haspopup": !0,
              placeholder: t.placeholder,
              required: t.required,
              fluid: t.fluid,
              disabled: t.disabled,
              variant: t.variant,
              invalid: t.invalid,
              size: t.size,
              autofocus: t.autofocus,
              onInput: o.onInput,
              onFocus: o.onFocus,
              onBlur: o.onBlur,
              onKeyup: o.onKeyUp,
              onInvalid: o.onInvalid,
            },
            t.inputProps,
            {
              "data-p-has-e-icon": t.toggleMask,
              pt: t.ptm("pcInputText"),
              unstyled: t.unstyled,
              formControl: { novalidate: !0 },
            },
          ),
          null,
          16,
          [
            "id",
            "type",
            "class",
            "style",
            "defaultValue",
            "name",
            "aria-labelledby",
            "aria-label",
            "aria-controls",
            "placeholder",
            "required",
            "fluid",
            "disabled",
            "variant",
            "invalid",
            "size",
            "autofocus",
            "onInput",
            "onFocus",
            "onBlur",
            "onKeyup",
            "onInvalid",
            "data-p-has-e-icon",
            "pt",
            "unstyled",
          ],
        ),
        t.toggleMask && i.unmasked
          ? De(
              t.$slots,
              t.$slots.maskicon ? "maskicon" : "hideicon",
              Q(
                {
                  key: 0,
                  toggleCallback: o.onMaskToggle,
                  class: [t.cx("maskIcon"), t.maskIcon],
                },
                t.ptm("maskIcon"),
              ),
              function () {
                return [
                  (E(),
                  Be(
                    Dt(t.maskIcon ? "i" : "EyeSlashIcon"),
                    Q(
                      {
                        class: [t.cx("maskIcon"), t.maskIcon],
                        onClick: o.onMaskToggle,
                      },
                      t.ptm("maskIcon"),
                    ),
                    null,
                    16,
                    ["class", "onClick"],
                  )),
                ];
              },
            )
          : le("", !0),
        t.toggleMask && !i.unmasked
          ? De(
              t.$slots,
              t.$slots.unmaskicon ? "unmaskicon" : "showicon",
              Q(
                {
                  key: 1,
                  toggleCallback: o.onMaskToggle,
                  class: [t.cx("unmaskIcon")],
                },
                t.ptm("unmaskIcon"),
              ),
              function () {
                return [
                  (E(),
                  Be(
                    Dt(t.unmaskIcon ? "i" : "EyeIcon"),
                    Q(
                      {
                        class: [t.cx("unmaskIcon"), t.unmaskIcon],
                        onClick: o.onMaskToggle,
                      },
                      t.ptm("unmaskIcon"),
                    ),
                    null,
                    16,
                    ["class", "onClick"],
                  )),
                ];
              },
            )
          : le("", !0),
        l(
          "span",
          Q(
            { class: "p-hidden-accessible", "aria-live": "polite" },
            t.ptm("hiddenAccesible"),
            { "data-p-hidden-accessible": !0 },
          ),
          z(i.infoText),
          17,
        ),
        O(
          a,
          { appendTo: t.appendTo },
          {
            default: Ye(function () {
              return [
                O(
                  Fa,
                  Q(
                    {
                      name: "p-connected-overlay",
                      onEnter: o.onOverlayEnter,
                      onLeave: o.onOverlayLeave,
                      onAfterLeave: o.onOverlayAfterLeave,
                    },
                    t.ptm("transition"),
                  ),
                  {
                    default: Ye(function () {
                      return [
                        i.overlayVisible
                          ? (E(),
                            R(
                              "div",
                              Q(
                                {
                                  key: 0,
                                  ref: o.overlayRef,
                                  id:
                                    t.overlayId ||
                                    t.panelId ||
                                    o.overlayUniqueId,
                                  class: [
                                    t.cx("overlay"),
                                    t.panelClass,
                                    t.overlayClass,
                                  ],
                                  style: [t.overlayStyle, t.panelStyle],
                                  onClick:
                                    e[0] ||
                                    (e[0] = function () {
                                      return (
                                        o.onOverlayClick &&
                                        o.onOverlayClick.apply(o, arguments)
                                      );
                                    }),
                                  "data-p": o.overlayDataP,
                                  role: "dialog",
                                  "aria-live": "polite",
                                },
                                Iu(
                                  Iu(Iu({}, t.panelProps), t.overlayProps),
                                  t.ptm("overlay"),
                                ),
                              ),
                              [
                                De(t.$slots, "header"),
                                De(t.$slots, "content", {}, function () {
                                  return [
                                    l(
                                      "div",
                                      Q(
                                        { class: t.cx("content") },
                                        t.ptm("content"),
                                      ),
                                      [
                                        l(
                                          "div",
                                          Q(
                                            { class: t.cx("meter") },
                                            t.ptm("meter"),
                                          ),
                                          [
                                            l(
                                              "div",
                                              Q(
                                                {
                                                  class: t.cx("meterLabel"),
                                                  style: {
                                                    width: i.meter
                                                      ? i.meter.width
                                                      : "",
                                                  },
                                                  "data-p": o.meterDataP,
                                                },
                                                t.ptm("meterLabel"),
                                              ),
                                              null,
                                              16,
                                              CO,
                                            ),
                                          ],
                                          16,
                                        ),
                                        l(
                                          "div",
                                          Q(
                                            { class: t.cx("meterText") },
                                            t.ptm("meterText"),
                                          ),
                                          z(i.infoText),
                                          17,
                                        ),
                                      ],
                                      16,
                                    ),
                                  ];
                                }),
                                De(t.$slots, "footer"),
                              ],
                              16,
                              SO,
                            ))
                          : le("", !0),
                      ];
                    }),
                    _: 3,
                  },
                  16,
                  ["onEnter", "onLeave", "onAfterLeave"],
                ),
              ];
            }),
            _: 3,
          },
          8,
          ["appendTo"],
        ),
      ],
      16,
      kO,
    )
  );
}
eo.render = MO;
const EO = { class: "space-y-6" },
  TO = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  AO = { class: "flex flex-col gap-2" },
  PO = { key: 0, class: "text-red-500" },
  RO = { class: "grid grid-cols-1 md:grid-cols-2 gap-4" },
  LO = { class: "flex flex-col gap-2" },
  DO = { key: 0, class: "text-red-500" },
  IO = { class: "flex flex-col gap-2" },
  OO = { key: 0, class: "text-red-500" },
  $O = {
    class:
      "flex justify-end gap-2 pt-4 border-t border-surface-200 dark:border-surface-700",
  },
  zO = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  BO = { key: 0, class: "flex items-center gap-2 text-surface-500" },
  UO = { key: 1, class: "flex items-start gap-4" },
  FO = { class: "flex-1" },
  NO = { class: "flex items-center gap-3 mb-2" },
  VO = { class: "font-medium text-surface-900 dark:text-surface-0" },
  HO = { class: "text-surface-600 dark:text-surface-300 text-sm mb-4" },
  jO = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  GO = { class: "flex items-center justify-between mb-6" },
  WO = { key: 0, class: "flex items-center gap-2 text-surface-500 py-4" },
  KO = { key: 1, class: "space-y-3" },
  XO = { class: "flex items-center gap-3" },
  YO = { class: "font-medium text-surface-900 dark:text-surface-0" },
  qO = { class: "text-sm text-surface-500 dark:text-surface-400" },
  ZO = { class: "text-xs text-surface-400 dark:text-surface-500" },
  JO = { class: "flex items-center gap-2" },
  QO = { class: "flex flex-col gap-4" },
  e$ = { class: "flex justify-between items-center" },
  t$ = { class: "text-lg font-semibold text-surface-900 dark:text-surface-0" },
  n$ = { key: 0, class: "space-y-4" },
  r$ = { class: "text-center" },
  i$ = {
    class:
      "bg-surface-100 dark:bg-surface-800 p-4 rounded-lg inline-block mb-4",
  },
  o$ = ["innerHTML"],
  s$ = {
    key: 1,
    class: "w-48 h-48 bg-white flex items-center justify-center border",
  },
  a$ = { class: "flex flex-col gap-2" },
  l$ = { class: "flex flex-col gap-2" },
  c$ = { key: 1, class: "space-y-4" },
  u$ = { class: "flex flex-col gap-2" },
  d$ = { class: "flex justify-end gap-2" },
  f$ = {
    __name: "SecuritySettings",
    emits: ["password-changed"],
    setup(t, { emit: e }) {
      const n = e,
        r = N(!1),
        i = N({}),
        o = N(!1),
        s = N(!1),
        a = N(!1),
        c = N(!0),
        u = N(!0),
        d = N(!1),
        f = N({ currentPassword: "", newPassword: "", confirmPassword: "" }),
        p = N(""),
        h = N(""),
        v = N(""),
        b = N(""),
        g = N([]),
        { changePassword: m } = Va(),
        _ = Xe(
          () =>
            f.value.currentPassword &&
            f.value.newPassword &&
            f.value.confirmPassword &&
            f.value.newPassword === f.value.confirmPassword &&
            f.value.newPassword.length >= 8,
        ),
        y = Xe(() => (o.value ? h.value.length >= 6 : p.value.length === 6)),
        x = async () => {
          await Promise.all([C(), w()]);
        },
        C = async () => {
          c.value = !0;
          try {
            const G = await Ve.get("/user/2fa-status");
            o.value = G.enabled;
          } catch {
          } finally {
            c.value = !1;
          }
        },
        w = async () => {
          u.value = !0;
          try {
            const G = await Ve.getUserSessions();
            g.value = G.data || G;
          } catch {
          } finally {
            u.value = !1;
          }
        },
        S = () => (
          (i.value = {}),
          f.value.currentPassword ||
            (i.value.currentPassword = "A jelenlegi jelszó kötelező"),
          f.value.newPassword
            ? f.value.newPassword.length < 8 &&
              (i.value.newPassword = "Az új jelszó legalább 8 karakter legyen")
            : (i.value.newPassword = "Az új jelszó kötelező"),
          f.value.newPassword !== f.value.confirmPassword &&
            (i.value.confirmPassword = "A jelszavak nem egyeznek meg"),
          Object.keys(i.value).length === 0
        ),
        D = async () => {
          if (S()) {
            r.value = !0;
            try {
              (await m(f.value.currentPassword, f.value.newPassword),
                (f.value = {
                  currentPassword: "",
                  newPassword: "",
                  confirmPassword: "",
                }),
                n("password-changed"));
            } catch {
              i.value.currentPassword = "Hibás jelenlegi jelszó";
            } finally {
              r.value = !1;
            }
          }
        },
        k = async () => {
          s.value = !0;
          try {
            (o.value
              ? await Ve.post("/user/2fa/disable", { password: h.value })
              : await Ve.post("/user/2fa/enable", {
                  verification_code: p.value,
                }),
              (o.value = !o.value),
              (a.value = !1),
              (p.value = ""),
              (h.value = ""));
          } catch {
          } finally {
            s.value = !1;
          }
        },
        P = async (G) => {
          try {
            (await Ve.delete(`/user/sessions/${G}`),
              (g.value = g.value.filter(($) => $.id !== G)));
          } catch {}
        },
        I = async () => {
          d.value = !0;
          try {
            (await Ve.delete("/user/sessions"),
              (g.value = g.value.filter((G) => G.is_current)));
          } catch {
          } finally {
            d.value = !1;
          }
        },
        W = () => {},
        X = (G) =>
          G
            ? G.includes("iPhone") || G.includes("Android")
              ? "pi pi-mobile"
              : G.includes("iPad") || G.includes("Tablet")
                ? "pi pi-tablet"
                : "pi pi-desktop"
            : "pi pi-desktop",
        Z = (G) => {
          if (!G) return "Ismeretlen";
          const $ = new Date(G),
            U = Math.floor((new Date() - $) / 1e3);
          return U < 60
            ? "Éppen most"
            : U < 3600
              ? `${Math.floor(U / 60)} perce`
              : U < 86400
                ? `${Math.floor(U / 3600)} órája`
                : `${Math.floor(U / 86400)} napja`;
        };
      return (
        $t(() => {
          x();
        }),
        (G, $) => {
          const ne = Xn("tooltip");
          return (
            E(),
            R("div", EO, [
              l("div", TO, [
                $[11] ||
                  ($[11] = l(
                    "div",
                    { class: "flex items-center gap-2 mb-6" },
                    [
                      l("i", { class: "pi pi-lock text-primary-500" }),
                      l(
                        "h3",
                        {
                          class:
                            "text-lg font-semibold text-surface-900 dark:text-surface-0",
                        },
                        "Jelszó módosítása",
                      ),
                    ],
                    -1,
                  )),
                l(
                  "form",
                  { onSubmit: oi(D, ["prevent"]), class: "space-y-4" },
                  [
                    l("div", AO, [
                      $[8] ||
                        ($[8] = l(
                          "label",
                          {
                            for: "currentPassword",
                            class:
                              "text-surface-900 dark:text-surface-0 font-medium",
                          },
                          " Jelenlegi jelszó ",
                          -1,
                        )),
                      O(
                        H(eo),
                        {
                          id: "currentPassword",
                          modelValue: f.value.currentPassword,
                          "onUpdate:modelValue":
                            $[0] ||
                            ($[0] = (U) => (f.value.currentPassword = U)),
                          feedback: !1,
                          "toggle-mask": "",
                          class: Ie([
                            "w-full",
                            { "p-invalid": i.value.currentPassword },
                          ]),
                          placeholder: "Jelenlegi jelszó",
                        },
                        null,
                        8,
                        ["modelValue", "class"],
                      ),
                      i.value.currentPassword
                        ? (E(), R("small", PO, z(i.value.currentPassword), 1))
                        : le("", !0),
                    ]),
                    l("div", RO, [
                      l("div", LO, [
                        $[9] ||
                          ($[9] = l(
                            "label",
                            {
                              for: "newPassword",
                              class:
                                "text-surface-900 dark:text-surface-0 font-medium",
                            },
                            " Új jelszó ",
                            -1,
                          )),
                        O(
                          H(eo),
                          {
                            id: "newPassword",
                            modelValue: f.value.newPassword,
                            "onUpdate:modelValue":
                              $[1] || ($[1] = (U) => (f.value.newPassword = U)),
                            feedback: !0,
                            "toggle-mask": "",
                            class: Ie([
                              "w-full",
                              { "p-invalid": i.value.newPassword },
                            ]),
                            placeholder: "Új jelszó",
                          },
                          null,
                          8,
                          ["modelValue", "class"],
                        ),
                        i.value.newPassword
                          ? (E(), R("small", DO, z(i.value.newPassword), 1))
                          : le("", !0),
                      ]),
                      l("div", IO, [
                        $[10] ||
                          ($[10] = l(
                            "label",
                            {
                              for: "confirmPassword",
                              class:
                                "text-surface-900 dark:text-surface-0 font-medium",
                            },
                            " Új jelszó megerősítése ",
                            -1,
                          )),
                        O(
                          H(eo),
                          {
                            id: "confirmPassword",
                            modelValue: f.value.confirmPassword,
                            "onUpdate:modelValue":
                              $[2] ||
                              ($[2] = (U) => (f.value.confirmPassword = U)),
                            feedback: !1,
                            "toggle-mask": "",
                            class: Ie([
                              "w-full",
                              { "p-invalid": i.value.confirmPassword },
                            ]),
                            placeholder: "Jelszó megerősítése",
                          },
                          null,
                          8,
                          ["modelValue", "class"],
                        ),
                        i.value.confirmPassword
                          ? (E(), R("small", OO, z(i.value.confirmPassword), 1))
                          : le("", !0),
                      ]),
                    ]),
                    l("div", $O, [
                      O(
                        H(Ce),
                        {
                          label: "Jelszó módosítása",
                          type: "submit",
                          loading: r.value,
                          disabled: !_.value,
                        },
                        null,
                        8,
                        ["loading", "disabled"],
                      ),
                    ]),
                  ],
                  32,
                ),
              ]),
              l("div", zO, [
                $[14] ||
                  ($[14] = l(
                    "div",
                    { class: "flex items-center gap-2 mb-6" },
                    [
                      l("i", { class: "pi pi-shield text-primary-500" }),
                      l(
                        "h3",
                        {
                          class:
                            "text-lg font-semibold text-surface-900 dark:text-surface-0",
                        },
                        "Két faktoros hitelesítés",
                      ),
                    ],
                    -1,
                  )),
                c.value
                  ? (E(),
                    R(
                      "div",
                      BO,
                      $[12] ||
                        ($[12] = [
                          l("i", { class: "pi pi-spin pi-spinner" }, null, -1),
                          l("span", null, "2FA státusz betöltése...", -1),
                        ]),
                    ))
                  : (E(),
                    R("div", UO, [
                      l("div", FO, [
                        l("div", NO, [
                          l(
                            "div",
                            {
                              class: Ie([
                                "w-3 h-3 rounded-full",
                                o.value ? "bg-green-500" : "bg-gray-400",
                              ]),
                            },
                            null,
                            2,
                          ),
                          l(
                            "span",
                            VO,
                            z(o.value ? "Bekapcsolva" : "Kikapcsolva"),
                            1,
                          ),
                        ]),
                        l(
                          "p",
                          HO,
                          z(
                            o.value
                              ? "A fiókod védett a két faktoros hitelesítéssel."
                              : "Növeld a fiókod biztonságát két faktoros hitelesítéssel.",
                          ),
                          1,
                        ),
                        $[13] ||
                          ($[13] = l(
                            "p",
                            {
                              class:
                                "text-surface-500 dark:text-surface-400 text-xs",
                            },
                            " Támogatott alkalmazások: Google Authenticator, Microsoft Authenticator, Authy ",
                            -1,
                          )),
                      ]),
                      O(H(Ce), {
                        label: "Bekapcsolás",
                        icon: "pi pi-camera",
                        outlined: "",
                        disabled: "",
                        onClick: W,
                      }),
                    ])),
              ]),
              l("div", jO, [
                l("div", GO, [
                  $[15] ||
                    ($[15] = l(
                      "div",
                      { class: "flex items-center gap-2" },
                      [
                        l("i", { class: "pi pi-desktop text-primary-500" }),
                        l(
                          "h3",
                          {
                            class:
                              "text-lg font-semibold text-surface-900 dark:text-surface-0",
                          },
                          "Aktív munkamenetek",
                        ),
                      ],
                      -1,
                    )),
                  O(
                    H(Ce),
                    {
                      label: "Összes kijelentkeztetése",
                      severity: "danger",
                      outlined: "",
                      size: "small",
                      onClick: I,
                      loading: d.value,
                    },
                    null,
                    8,
                    ["loading"],
                  ),
                ]),
                u.value
                  ? (E(),
                    R(
                      "div",
                      WO,
                      $[16] ||
                        ($[16] = [
                          l("i", { class: "pi pi-spin pi-spinner" }, null, -1),
                          l("span", null, "Munkamenetek betöltése...", -1),
                        ]),
                    ))
                  : (E(),
                    R("div", KO, [
                      (E(!0),
                      R(
                        We,
                        null,
                        mt(
                          g.value,
                          (U) => (
                            E(),
                            R(
                              "div",
                              {
                                key: U.id,
                                class:
                                  "flex items-center justify-between p-4 bg-surface-50 dark:bg-surface-800 rounded-lg",
                              },
                              [
                                l("div", XO, [
                                  l(
                                    "i",
                                    {
                                      class: Ie([
                                        X(U.device_info),
                                        "text-xl text-surface-500",
                                      ]),
                                    },
                                    null,
                                    2,
                                  ),
                                  l("div", null, [
                                    l(
                                      "p",
                                      YO,
                                      z(U.device_info || "Ismeretlen eszköz"),
                                      1,
                                    ),
                                    l(
                                      "p",
                                      qO,
                                      z(U.location || "Ismeretlen helyszín"),
                                      1,
                                    ),
                                    l(
                                      "p",
                                      ZO,
                                      z(
                                        U.is_current
                                          ? "Jelenlegi munkamenet"
                                          : Z(U.last_activity),
                                      ),
                                      1,
                                    ),
                                  ]),
                                ]),
                                l("div", JO, [
                                  O(
                                    H(vt),
                                    {
                                      value: U.is_current ? "Aktív" : "Inaktív",
                                      severity: U.is_current
                                        ? "success"
                                        : "secondary",
                                    },
                                    null,
                                    8,
                                    ["value", "severity"],
                                  ),
                                  U.is_current
                                    ? le("", !0)
                                    : st(
                                        (E(),
                                        Be(
                                          H(Ce),
                                          {
                                            key: 0,
                                            icon: "pi pi-sign-out",
                                            text: "",
                                            rounded: "",
                                            severity: "danger",
                                            size: "small",
                                            onClick: (ie) => P(U.id),
                                          },
                                          null,
                                          8,
                                          ["onClick"],
                                        )),
                                        [[ne, "Munkamenet lezárása"]],
                                      ),
                                ]),
                              ],
                            )
                          ),
                        ),
                        128,
                      )),
                    ])),
              ]),
              O(
                H(on),
                {
                  visible: a.value,
                  "onUpdate:visible": $[7] || ($[7] = (U) => (a.value = U)),
                  modal: !0,
                  "show-header": !1,
                  breakpoints: { "960px": "75vw", "640px": "90vw" },
                  style: { width: "40rem" },
                  class: "shadow-sm rounded-2xl",
                  pt: { content: "!p-6" },
                },
                {
                  default: Ye(() => [
                    l("div", QO, [
                      l("div", e$, [
                        l(
                          "h3",
                          t$,
                          z(
                            o.value
                              ? "Két faktoros hitelesítés kikapcsolása"
                              : "Két faktoros hitelesítés bekapcsolása",
                          ),
                          1,
                        ),
                        O(H(Ce), {
                          icon: "pi pi-times",
                          text: "",
                          rounded: "",
                          severity: "secondary",
                          class: "w-8 h-8",
                          onClick: $[3] || ($[3] = (U) => (a.value = !1)),
                        }),
                      ]),
                      o.value
                        ? (E(),
                          R("div", c$, [
                            $[22] ||
                              ($[22] = l(
                                "div",
                                {
                                  class:
                                    "p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg",
                                },
                                [
                                  l(
                                    "div",
                                    { class: "flex items-center gap-2 mb-2" },
                                    [
                                      l("i", {
                                        class:
                                          "pi pi-exclamation-triangle text-red-600 dark:text-red-400",
                                      }),
                                      l(
                                        "span",
                                        {
                                          class:
                                            "font-semibold text-red-900 dark:text-red-100",
                                        },
                                        "Figyelem!",
                                      ),
                                    ],
                                  ),
                                  l(
                                    "p",
                                    {
                                      class:
                                        "text-sm text-red-800 dark:text-red-200",
                                    },
                                    " A két faktoros hitelesítés kikapcsolása csökkenti a fiókod biztonságát. ",
                                  ),
                                ],
                                -1,
                              )),
                            l("div", u$, [
                              $[21] ||
                                ($[21] = l(
                                  "label",
                                  {
                                    class:
                                      "text-surface-900 dark:text-surface-0 font-medium",
                                  },
                                  " Jelenlegi jelszó megerősítése: ",
                                  -1,
                                )),
                              O(
                                H(eo),
                                {
                                  modelValue: h.value,
                                  "onUpdate:modelValue":
                                    $[5] || ($[5] = (U) => (h.value = U)),
                                  feedback: !1,
                                  "toggle-mask": "",
                                  class: "w-full",
                                  placeholder: "Jelszó",
                                },
                                null,
                                8,
                                ["modelValue"],
                              ),
                            ]),
                          ]))
                        : (E(),
                          R("div", n$, [
                            l("div", r$, [
                              l("div", i$, [
                                b.value
                                  ? (E(),
                                    R(
                                      "div",
                                      {
                                        key: 0,
                                        class:
                                          "w-48 h-48 bg-white flex items-center justify-center border",
                                        innerHTML: b.value,
                                      },
                                      null,
                                      8,
                                      o$,
                                    ))
                                  : (E(),
                                    R(
                                      "div",
                                      s$,
                                      $[17] ||
                                        ($[17] = [
                                          l(
                                            "span",
                                            { class: "text-surface-500" },
                                            "QR kód betöltése...",
                                            -1,
                                          ),
                                        ]),
                                    )),
                              ]),
                              $[18] ||
                                ($[18] = l(
                                  "p",
                                  {
                                    class:
                                      "text-sm text-surface-600 dark:text-surface-300",
                                  },
                                  " Olvasd be ezt a QR kódot az authenticator alkalmazásoddal ",
                                  -1,
                                )),
                            ]),
                            l("div", a$, [
                              $[19] ||
                                ($[19] = l(
                                  "label",
                                  {
                                    class:
                                      "text-surface-900 dark:text-surface-0 font-medium",
                                  },
                                  " Vagy írd be manuálisan ezt a kódot: ",
                                  -1,
                                )),
                              O(
                                H(yt),
                                {
                                  value: v.value,
                                  readonly: "",
                                  class: "w-full font-mono text-sm",
                                },
                                null,
                                8,
                                ["value"],
                              ),
                            ]),
                            l("div", l$, [
                              $[20] ||
                                ($[20] = l(
                                  "label",
                                  {
                                    class:
                                      "text-surface-900 dark:text-surface-0 font-medium",
                                  },
                                  " Ellenőrző kód az alkalmazásból: ",
                                  -1,
                                )),
                              O(
                                H(yt),
                                {
                                  modelValue: p.value,
                                  "onUpdate:modelValue":
                                    $[4] || ($[4] = (U) => (p.value = U)),
                                  placeholder: "123456",
                                  class:
                                    "w-full text-center text-lg tracking-widest",
                                  maxlength: "6",
                                },
                                null,
                                8,
                                ["modelValue"],
                              ),
                            ]),
                          ])),
                      l("div", d$, [
                        O(H(Ce), {
                          label: "Mégse",
                          outlined: "",
                          onClick: $[6] || ($[6] = (U) => (a.value = !1)),
                        }),
                        O(
                          H(Ce),
                          {
                            label: o.value ? "Kikapcsolás" : "Bekapcsolás",
                            severity: o.value ? "danger" : "success",
                            onClick: k,
                            disabled: !y.value,
                            loading: s.value,
                          },
                          null,
                          8,
                          ["label", "severity", "disabled", "loading"],
                        ),
                      ]),
                    ]),
                  ]),
                  _: 1,
                },
                8,
                ["visible"],
              ),
            ])
          );
        }
      );
    },
  };
var p$ = `
    .p-toggleswitch {
        display: inline-block;
        width: dt('toggleswitch.width');
        height: dt('toggleswitch.height');
    }

    .p-toggleswitch-input {
        cursor: pointer;
        appearance: none;
        position: absolute;
        top: 0;
        inset-inline-start: 0;
        width: 100%;
        height: 100%;
        padding: 0;
        margin: 0;
        opacity: 0;
        z-index: 1;
        outline: 0 none;
        border-radius: dt('toggleswitch.border.radius');
    }

    .p-toggleswitch-slider {
        cursor: pointer;
        width: 100%;
        height: 100%;
        border-width: dt('toggleswitch.border.width');
        border-style: solid;
        border-color: dt('toggleswitch.border.color');
        background: dt('toggleswitch.background');
        transition:
            background dt('toggleswitch.transition.duration'),
            color dt('toggleswitch.transition.duration'),
            border-color dt('toggleswitch.transition.duration'),
            outline-color dt('toggleswitch.transition.duration'),
            box-shadow dt('toggleswitch.transition.duration');
        border-radius: dt('toggleswitch.border.radius');
        outline-color: transparent;
        box-shadow: dt('toggleswitch.shadow');
    }

    .p-toggleswitch-handle {
        position: absolute;
        top: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        background: dt('toggleswitch.handle.background');
        color: dt('toggleswitch.handle.color');
        width: dt('toggleswitch.handle.size');
        height: dt('toggleswitch.handle.size');
        inset-inline-start: dt('toggleswitch.gap');
        margin-block-start: calc(-1 * calc(dt('toggleswitch.handle.size') / 2));
        border-radius: dt('toggleswitch.handle.border.radius');
        transition:
            background dt('toggleswitch.transition.duration'),
            color dt('toggleswitch.transition.duration'),
            inset-inline-start dt('toggleswitch.slide.duration'),
            box-shadow dt('toggleswitch.slide.duration');
    }

    .p-toggleswitch.p-toggleswitch-checked .p-toggleswitch-slider {
        background: dt('toggleswitch.checked.background');
        border-color: dt('toggleswitch.checked.border.color');
    }

    .p-toggleswitch.p-toggleswitch-checked .p-toggleswitch-handle {
        background: dt('toggleswitch.handle.checked.background');
        color: dt('toggleswitch.handle.checked.color');
        inset-inline-start: calc(dt('toggleswitch.width') - calc(dt('toggleswitch.handle.size') + dt('toggleswitch.gap')));
    }

    .p-toggleswitch:not(.p-disabled):has(.p-toggleswitch-input:hover) .p-toggleswitch-slider {
        background: dt('toggleswitch.hover.background');
        border-color: dt('toggleswitch.hover.border.color');
    }

    .p-toggleswitch:not(.p-disabled):has(.p-toggleswitch-input:hover) .p-toggleswitch-handle {
        background: dt('toggleswitch.handle.hover.background');
        color: dt('toggleswitch.handle.hover.color');
    }

    .p-toggleswitch:not(.p-disabled):has(.p-toggleswitch-input:hover).p-toggleswitch-checked .p-toggleswitch-slider {
        background: dt('toggleswitch.checked.hover.background');
        border-color: dt('toggleswitch.checked.hover.border.color');
    }

    .p-toggleswitch:not(.p-disabled):has(.p-toggleswitch-input:hover).p-toggleswitch-checked .p-toggleswitch-handle {
        background: dt('toggleswitch.handle.checked.hover.background');
        color: dt('toggleswitch.handle.checked.hover.color');
    }

    .p-toggleswitch:not(.p-disabled):has(.p-toggleswitch-input:focus-visible) .p-toggleswitch-slider {
        box-shadow: dt('toggleswitch.focus.ring.shadow');
        outline: dt('toggleswitch.focus.ring.width') dt('toggleswitch.focus.ring.style') dt('toggleswitch.focus.ring.color');
        outline-offset: dt('toggleswitch.focus.ring.offset');
    }

    .p-toggleswitch.p-invalid > .p-toggleswitch-slider {
        border-color: dt('toggleswitch.invalid.border.color');
    }

    .p-toggleswitch.p-disabled {
        opacity: 1;
    }

    .p-toggleswitch.p-disabled .p-toggleswitch-slider {
        background: dt('toggleswitch.disabled.background');
    }

    .p-toggleswitch.p-disabled .p-toggleswitch-handle {
        background: dt('toggleswitch.handle.disabled.background');
    }
`,
  h$ = { root: { position: "relative" } },
  m$ = {
    root: function (e) {
      var n = e.instance,
        r = e.props;
      return [
        "p-toggleswitch p-component",
        {
          "p-toggleswitch-checked": n.checked,
          "p-disabled": r.disabled,
          "p-invalid": n.$invalid,
        },
      ];
    },
    input: "p-toggleswitch-input",
    slider: "p-toggleswitch-slider",
    handle: "p-toggleswitch-handle",
  },
  g$ = ot.extend({
    name: "toggleswitch",
    style: p$,
    classes: m$,
    inlineStyles: h$,
  }),
  v$ = {
    name: "BaseToggleSwitch",
    extends: iv,
    props: {
      trueValue: { type: null, default: !0 },
      falseValue: { type: null, default: !1 },
      readonly: { type: Boolean, default: !1 },
      tabindex: { type: Number, default: null },
      inputId: { type: String, default: null },
      inputClass: { type: [String, Object], default: null },
      inputStyle: { type: Object, default: null },
      ariaLabelledby: { type: String, default: null },
      ariaLabel: { type: String, default: null },
    },
    style: g$,
    provide: function () {
      return { $pcToggleSwitch: this, $parentInstance: this };
    },
  },
  Nn = {
    name: "ToggleSwitch",
    extends: v$,
    inheritAttrs: !1,
    emits: ["change", "focus", "blur"],
    methods: {
      getPTOptions: function (e) {
        var n = e === "root" ? this.ptmi : this.ptm;
        return n(e, {
          context: { checked: this.checked, disabled: this.disabled },
        });
      },
      onChange: function (e) {
        if (!this.disabled && !this.readonly) {
          var n = this.checked ? this.falseValue : this.trueValue;
          (this.writeValue(n, e), this.$emit("change", e));
        }
      },
      onFocus: function (e) {
        this.$emit("focus", e);
      },
      onBlur: function (e) {
        var n, r;
        (this.$emit("blur", e),
          (n = (r = this.formField).onBlur) === null ||
            n === void 0 ||
            n.call(r, e));
      },
    },
    computed: {
      checked: function () {
        return this.d_value === this.trueValue;
      },
      dataP: function () {
        return At({
          checked: this.checked,
          disabled: this.disabled,
          invalid: this.$invalid,
        });
      },
    },
  },
  b$ = ["data-p-checked", "data-p-disabled", "data-p"],
  y$ = [
    "id",
    "checked",
    "tabindex",
    "disabled",
    "readonly",
    "aria-checked",
    "aria-labelledby",
    "aria-label",
    "aria-invalid",
  ],
  x$ = ["data-p"],
  _$ = ["data-p"];
function w$(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "div",
      Q({ class: t.cx("root"), style: t.sx("root") }, o.getPTOptions("root"), {
        "data-p-checked": o.checked,
        "data-p-disabled": t.disabled,
        "data-p": o.dataP,
      }),
      [
        l(
          "input",
          Q(
            {
              id: t.inputId,
              type: "checkbox",
              role: "switch",
              class: [t.cx("input"), t.inputClass],
              style: t.inputStyle,
              checked: o.checked,
              tabindex: t.tabindex,
              disabled: t.disabled,
              readonly: t.readonly,
              "aria-checked": o.checked,
              "aria-labelledby": t.ariaLabelledby,
              "aria-label": t.ariaLabel,
              "aria-invalid": t.invalid || void 0,
              onFocus:
                e[0] ||
                (e[0] = function () {
                  return o.onFocus && o.onFocus.apply(o, arguments);
                }),
              onBlur:
                e[1] ||
                (e[1] = function () {
                  return o.onBlur && o.onBlur.apply(o, arguments);
                }),
              onChange:
                e[2] ||
                (e[2] = function () {
                  return o.onChange && o.onChange.apply(o, arguments);
                }),
            },
            o.getPTOptions("input"),
          ),
          null,
          16,
          y$,
        ),
        l(
          "div",
          Q({ class: t.cx("slider") }, o.getPTOptions("slider"), {
            "data-p": o.dataP,
          }),
          [
            l(
              "div",
              Q({ class: t.cx("handle") }, o.getPTOptions("handle"), {
                "data-p": o.dataP,
              }),
              [De(t.$slots, "handle", { checked: o.checked })],
              16,
              _$,
            ),
          ],
          16,
          x$,
        ),
      ],
      16,
      b$,
    )
  );
}
Nn.render = w$;
var Jv = { name: "CalendarIcon", extends: dn };
function k$(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "svg",
      Q(
        {
          width: "14",
          height: "14",
          viewBox: "0 0 14 14",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        t.pti(),
      ),
      e[0] ||
        (e[0] = [
          l(
            "path",
            {
              d: "M10.7838 1.51351H9.83783V0.567568C9.83783 0.417039 9.77804 0.272676 9.6716 0.166237C9.56516 0.0597971 9.42079 0 9.27027 0C9.11974 0 8.97538 0.0597971 8.86894 0.166237C8.7625 0.272676 8.7027 0.417039 8.7027 0.567568V1.51351H5.29729V0.567568C5.29729 0.417039 5.2375 0.272676 5.13106 0.166237C5.02462 0.0597971 4.88025 0 4.72973 0C4.5792 0 4.43484 0.0597971 4.3284 0.166237C4.22196 0.272676 4.16216 0.417039 4.16216 0.567568V1.51351H3.21621C2.66428 1.51351 2.13494 1.73277 1.74467 2.12305C1.35439 2.51333 1.13513 3.04266 1.13513 3.59459V11.9189C1.13513 12.4709 1.35439 13.0002 1.74467 13.3905C2.13494 13.7807 2.66428 14 3.21621 14H10.7838C11.3357 14 11.865 13.7807 12.2553 13.3905C12.6456 13.0002 12.8649 12.4709 12.8649 11.9189V3.59459C12.8649 3.04266 12.6456 2.51333 12.2553 2.12305C11.865 1.73277 11.3357 1.51351 10.7838 1.51351ZM3.21621 2.64865H4.16216V3.59459C4.16216 3.74512 4.22196 3.88949 4.3284 3.99593C4.43484 4.10237 4.5792 4.16216 4.72973 4.16216C4.88025 4.16216 5.02462 4.10237 5.13106 3.99593C5.2375 3.88949 5.29729 3.74512 5.29729 3.59459V2.64865H8.7027V3.59459C8.7027 3.74512 8.7625 3.88949 8.86894 3.99593C8.97538 4.10237 9.11974 4.16216 9.27027 4.16216C9.42079 4.16216 9.56516 4.10237 9.6716 3.99593C9.77804 3.88949 9.83783 3.74512 9.83783 3.59459V2.64865H10.7838C11.0347 2.64865 11.2753 2.74831 11.4527 2.92571C11.6301 3.10311 11.7297 3.34371 11.7297 3.59459V5.67568H2.27027V3.59459C2.27027 3.34371 2.36993 3.10311 2.54733 2.92571C2.72473 2.74831 2.96533 2.64865 3.21621 2.64865ZM10.7838 12.8649H3.21621C2.96533 12.8649 2.72473 12.7652 2.54733 12.5878C2.36993 12.4104 2.27027 12.1698 2.27027 11.9189V6.81081H11.7297V11.9189C11.7297 12.1698 11.6301 12.4104 11.4527 12.5878C11.2753 12.7652 11.0347 12.8649 10.7838 12.8649Z",
              fill: "currentColor",
            },
            null,
            -1,
          ),
        ]),
      16,
    )
  );
}
Jv.render = k$;
var Qv = { name: "ChevronLeftIcon", extends: dn };
function S$(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "svg",
      Q(
        {
          width: "14",
          height: "14",
          viewBox: "0 0 14 14",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        t.pti(),
      ),
      e[0] ||
        (e[0] = [
          l(
            "path",
            {
              d: "M9.61296 13C9.50997 13.0005 9.40792 12.9804 9.3128 12.9409C9.21767 12.9014 9.13139 12.8433 9.05902 12.7701L3.83313 7.54416C3.68634 7.39718 3.60388 7.19795 3.60388 6.99022C3.60388 6.78249 3.68634 6.58325 3.83313 6.43628L9.05902 1.21039C9.20762 1.07192 9.40416 0.996539 9.60724 1.00012C9.81032 1.00371 10.0041 1.08597 10.1477 1.22959C10.2913 1.37322 10.3736 1.56698 10.3772 1.77005C10.3808 1.97313 10.3054 2.16968 10.1669 2.31827L5.49496 6.99022L10.1669 11.6622C10.3137 11.8091 10.3962 12.0084 10.3962 12.2161C10.3962 12.4238 10.3137 12.6231 10.1669 12.7701C10.0945 12.8433 10.0083 12.9014 9.91313 12.9409C9.81801 12.9804 9.71596 13.0005 9.61296 13Z",
              fill: "currentColor",
            },
            null,
            -1,
          ),
        ]),
      16,
    )
  );
}
Qv.render = S$;
var eb = { name: "ChevronRightIcon", extends: dn };
function C$(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "svg",
      Q(
        {
          width: "14",
          height: "14",
          viewBox: "0 0 14 14",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        t.pti(),
      ),
      e[0] ||
        (e[0] = [
          l(
            "path",
            {
              d: "M4.38708 13C4.28408 13.0005 4.18203 12.9804 4.08691 12.9409C3.99178 12.9014 3.9055 12.8433 3.83313 12.7701C3.68634 12.6231 3.60388 12.4238 3.60388 12.2161C3.60388 12.0084 3.68634 11.8091 3.83313 11.6622L8.50507 6.99022L3.83313 2.31827C3.69467 2.16968 3.61928 1.97313 3.62287 1.77005C3.62645 1.56698 3.70872 1.37322 3.85234 1.22959C3.99596 1.08597 4.18972 1.00371 4.3928 1.00012C4.59588 0.996539 4.79242 1.07192 4.94102 1.21039L10.1669 6.43628C10.3137 6.58325 10.3962 6.78249 10.3962 6.99022C10.3962 7.19795 10.3137 7.39718 10.1669 7.54416L4.94102 12.7701C4.86865 12.8433 4.78237 12.9014 4.68724 12.9409C4.59212 12.9804 4.49007 13.0005 4.38708 13Z",
              fill: "currentColor",
            },
            null,
            -1,
          ),
        ]),
      16,
    )
  );
}
eb.render = C$;
var tb = { name: "ChevronUpIcon", extends: dn };
function M$(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "svg",
      Q(
        {
          width: "14",
          height: "14",
          viewBox: "0 0 14 14",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        t.pti(),
      ),
      e[0] ||
        (e[0] = [
          l(
            "path",
            {
              d: "M12.2097 10.4113C12.1057 10.4118 12.0027 10.3915 11.9067 10.3516C11.8107 10.3118 11.7237 10.2532 11.6506 10.1792L6.93602 5.46461L2.22139 10.1476C2.07272 10.244 1.89599 10.2877 1.71953 10.2717C1.54307 10.2556 1.3771 10.1808 1.24822 10.0593C1.11933 9.93766 1.035 9.77633 1.00874 9.6011C0.982477 9.42587 1.0158 9.2469 1.10338 9.09287L6.37701 3.81923C6.52533 3.6711 6.72639 3.58789 6.93602 3.58789C7.14565 3.58789 7.3467 3.6711 7.49502 3.81923L12.7687 9.09287C12.9168 9.24119 13 9.44225 13 9.65187C13 9.8615 12.9168 10.0626 12.7687 10.2109C12.616 10.3487 12.4151 10.4207 12.2097 10.4113Z",
              fill: "currentColor",
            },
            null,
            -1,
          ),
        ]),
      16,
    )
  );
}
tb.render = M$;
var E$ = `
    .p-datepicker {
        display: inline-flex;
        max-width: 100%;
    }

    .p-datepicker-input {
        flex: 1 1 auto;
        width: 1%;
    }

    .p-datepicker:has(.p-datepicker-dropdown) .p-datepicker-input {
        border-start-end-radius: 0;
        border-end-end-radius: 0;
    }

    .p-datepicker-dropdown {
        cursor: pointer;
        display: inline-flex;
        user-select: none;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        position: relative;
        width: dt('datepicker.dropdown.width');
        border-start-end-radius: dt('datepicker.dropdown.border.radius');
        border-end-end-radius: dt('datepicker.dropdown.border.radius');
        background: dt('datepicker.dropdown.background');
        border: 1px solid dt('datepicker.dropdown.border.color');
        border-inline-start: 0 none;
        color: dt('datepicker.dropdown.color');
        transition:
            background dt('datepicker.transition.duration'),
            color dt('datepicker.transition.duration'),
            border-color dt('datepicker.transition.duration'),
            outline-color dt('datepicker.transition.duration');
        outline-color: transparent;
    }

    .p-datepicker-dropdown:not(:disabled):hover {
        background: dt('datepicker.dropdown.hover.background');
        border-color: dt('datepicker.dropdown.hover.border.color');
        color: dt('datepicker.dropdown.hover.color');
    }

    .p-datepicker-dropdown:not(:disabled):active {
        background: dt('datepicker.dropdown.active.background');
        border-color: dt('datepicker.dropdown.active.border.color');
        color: dt('datepicker.dropdown.active.color');
    }

    .p-datepicker-dropdown:focus-visible {
        box-shadow: dt('datepicker.dropdown.focus.ring.shadow');
        outline: dt('datepicker.dropdown.focus.ring.width') dt('datepicker.dropdown.focus.ring.style') dt('datepicker.dropdown.focus.ring.color');
        outline-offset: dt('datepicker.dropdown.focus.ring.offset');
    }

    .p-datepicker:has(.p-datepicker-input-icon-container) {
        position: relative;
    }

    .p-datepicker:has(.p-datepicker-input-icon-container) .p-datepicker-input {
        padding-inline-end: calc((dt('form.field.padding.x') * 2) + dt('icon.size'));
    }

    .p-datepicker-input-icon-container {
        cursor: pointer;
        position: absolute;
        top: 50%;
        inset-inline-end: dt('form.field.padding.x');
        margin-block-start: calc(-1 * (dt('icon.size') / 2));
        color: dt('datepicker.input.icon.color');
        line-height: 1;
    }

    .p-datepicker-fluid {
        display: flex;
    }

    .p-datepicker-fluid .p-datepicker-input {
        width: 1%;
    }

    .p-datepicker .p-datepicker-panel {
        min-width: 100%;
    }

    .p-datepicker-panel {
        width: auto;
        padding: dt('datepicker.panel.padding');
        background: dt('datepicker.panel.background');
        color: dt('datepicker.panel.color');
        border: 1px solid dt('datepicker.panel.border.color');
        border-radius: dt('datepicker.panel.border.radius');
        box-shadow: dt('datepicker.panel.shadow');
    }

    .p-datepicker-panel-inline {
        display: inline-block;
        overflow-x: auto;
        box-shadow: none;
    }

    .p-datepicker-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: dt('datepicker.header.padding');
        background: dt('datepicker.header.background');
        color: dt('datepicker.header.color');
        border-block-end: 1px solid dt('datepicker.header.border.color');
    }

    .p-datepicker-next-button:dir(rtl) {
        order: -1;
    }

    .p-datepicker-prev-button:dir(rtl) {
        order: 1;
    }

    .p-datepicker-title {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: dt('datepicker.title.gap');
        font-weight: dt('datepicker.title.font.weight');
    }

    .p-datepicker-select-year,
    .p-datepicker-select-month {
        border: none;
        background: transparent;
        margin: 0;
        cursor: pointer;
        font-weight: inherit;
        transition:
            background dt('datepicker.transition.duration'),
            color dt('datepicker.transition.duration'),
            border-color dt('datepicker.transition.duration'),
            outline-color dt('datepicker.transition.duration'),
            box-shadow dt('datepicker.transition.duration');
    }

    .p-datepicker-select-month {
        padding: dt('datepicker.select.month.padding');
        color: dt('datepicker.select.month.color');
        border-radius: dt('datepicker.select.month.border.radius');
    }

    .p-datepicker-select-year {
        padding: dt('datepicker.select.year.padding');
        color: dt('datepicker.select.year.color');
        border-radius: dt('datepicker.select.year.border.radius');
    }

    .p-datepicker-select-month:enabled:hover {
        background: dt('datepicker.select.month.hover.background');
        color: dt('datepicker.select.month.hover.color');
    }

    .p-datepicker-select-year:enabled:hover {
        background: dt('datepicker.select.year.hover.background');
        color: dt('datepicker.select.year.hover.color');
    }

    .p-datepicker-select-month:focus-visible,
    .p-datepicker-select-year:focus-visible {
        box-shadow: dt('datepicker.date.focus.ring.shadow');
        outline: dt('datepicker.date.focus.ring.width') dt('datepicker.date.focus.ring.style') dt('datepicker.date.focus.ring.color');
        outline-offset: dt('datepicker.date.focus.ring.offset');
    }

    .p-datepicker-calendar-container {
        display: flex;
    }

    .p-datepicker-calendar-container .p-datepicker-calendar {
        flex: 1 1 auto;
        border-inline-start: 1px solid dt('datepicker.group.border.color');
        padding-inline-end: dt('datepicker.group.gap');
        padding-inline-start: dt('datepicker.group.gap');
    }

    .p-datepicker-calendar-container .p-datepicker-calendar:first-child {
        padding-inline-start: 0;
        border-inline-start: 0 none;
    }

    .p-datepicker-calendar-container .p-datepicker-calendar:last-child {
        padding-inline-end: 0;
    }

    .p-datepicker-day-view {
        width: 100%;
        border-collapse: collapse;
        font-size: 1rem;
        margin: dt('datepicker.day.view.margin');
    }

    .p-datepicker-weekday-cell {
        padding: dt('datepicker.week.day.padding');
    }

    .p-datepicker-weekday {
        font-weight: dt('datepicker.week.day.font.weight');
        color: dt('datepicker.week.day.color');
    }

    .p-datepicker-day-cell {
        padding: dt('datepicker.date.padding');
    }

    .p-datepicker-day {
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        margin: 0 auto;
        overflow: hidden;
        position: relative;
        width: dt('datepicker.date.width');
        height: dt('datepicker.date.height');
        border-radius: dt('datepicker.date.border.radius');
        transition:
            background dt('datepicker.transition.duration'),
            color dt('datepicker.transition.duration'),
            border-color dt('datepicker.transition.duration'),
            box-shadow dt('datepicker.transition.duration'),
            outline-color dt('datepicker.transition.duration');
        border: 1px solid transparent;
        outline-color: transparent;
        color: dt('datepicker.date.color');
    }

    .p-datepicker-day:not(.p-datepicker-day-selected):not(.p-disabled):hover {
        background: dt('datepicker.date.hover.background');
        color: dt('datepicker.date.hover.color');
    }

    .p-datepicker-day:focus-visible {
        box-shadow: dt('datepicker.date.focus.ring.shadow');
        outline: dt('datepicker.date.focus.ring.width') dt('datepicker.date.focus.ring.style') dt('datepicker.date.focus.ring.color');
        outline-offset: dt('datepicker.date.focus.ring.offset');
    }

    .p-datepicker-day-selected {
        background: dt('datepicker.date.selected.background');
        color: dt('datepicker.date.selected.color');
    }

    .p-datepicker-day-selected-range {
        background: dt('datepicker.date.range.selected.background');
        color: dt('datepicker.date.range.selected.color');
    }

    .p-datepicker-today > .p-datepicker-day {
        background: dt('datepicker.today.background');
        color: dt('datepicker.today.color');
    }

    .p-datepicker-today > .p-datepicker-day-selected {
        background: dt('datepicker.date.selected.background');
        color: dt('datepicker.date.selected.color');
    }

    .p-datepicker-today > .p-datepicker-day-selected-range {
        background: dt('datepicker.date.range.selected.background');
        color: dt('datepicker.date.range.selected.color');
    }

    .p-datepicker-weeknumber {
        text-align: center;
    }

    .p-datepicker-month-view {
        margin: dt('datepicker.month.view.margin');
    }

    .p-datepicker-month {
        width: 33.3%;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        overflow: hidden;
        position: relative;
        padding: dt('datepicker.month.padding');
        transition:
            background dt('datepicker.transition.duration'),
            color dt('datepicker.transition.duration'),
            border-color dt('datepicker.transition.duration'),
            box-shadow dt('datepicker.transition.duration'),
            outline-color dt('datepicker.transition.duration');
        border-radius: dt('datepicker.month.border.radius');
        outline-color: transparent;
        color: dt('datepicker.date.color');
    }

    .p-datepicker-month:not(.p-disabled):not(.p-datepicker-month-selected):hover {
        color: dt('datepicker.date.hover.color');
        background: dt('datepicker.date.hover.background');
    }

    .p-datepicker-month-selected {
        color: dt('datepicker.date.selected.color');
        background: dt('datepicker.date.selected.background');
    }

    .p-datepicker-month:not(.p-disabled):focus-visible {
        box-shadow: dt('datepicker.date.focus.ring.shadow');
        outline: dt('datepicker.date.focus.ring.width') dt('datepicker.date.focus.ring.style') dt('datepicker.date.focus.ring.color');
        outline-offset: dt('datepicker.date.focus.ring.offset');
    }

    .p-datepicker-year-view {
        margin: dt('datepicker.year.view.margin');
    }

    .p-datepicker-year {
        width: 50%;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        overflow: hidden;
        position: relative;
        padding: dt('datepicker.year.padding');
        transition:
            background dt('datepicker.transition.duration'),
            color dt('datepicker.transition.duration'),
            border-color dt('datepicker.transition.duration'),
            box-shadow dt('datepicker.transition.duration'),
            outline-color dt('datepicker.transition.duration');
        border-radius: dt('datepicker.year.border.radius');
        outline-color: transparent;
        color: dt('datepicker.date.color');
    }

    .p-datepicker-year:not(.p-disabled):not(.p-datepicker-year-selected):hover {
        color: dt('datepicker.date.hover.color');
        background: dt('datepicker.date.hover.background');
    }

    .p-datepicker-year-selected {
        color: dt('datepicker.date.selected.color');
        background: dt('datepicker.date.selected.background');
    }

    .p-datepicker-year:not(.p-disabled):focus-visible {
        box-shadow: dt('datepicker.date.focus.ring.shadow');
        outline: dt('datepicker.date.focus.ring.width') dt('datepicker.date.focus.ring.style') dt('datepicker.date.focus.ring.color');
        outline-offset: dt('datepicker.date.focus.ring.offset');
    }

    .p-datepicker-buttonbar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: dt('datepicker.buttonbar.padding');
        border-block-start: 1px solid dt('datepicker.buttonbar.border.color');
    }

    .p-datepicker-buttonbar .p-button {
        width: auto;
    }

    .p-datepicker-time-picker {
        display: flex;
        justify-content: center;
        align-items: center;
        border-block-start: 1px solid dt('datepicker.time.picker.border.color');
        padding: 0;
        gap: dt('datepicker.time.picker.gap');
    }

    .p-datepicker-calendar-container + .p-datepicker-time-picker {
        padding: dt('datepicker.time.picker.padding');
    }

    .p-datepicker-time-picker > div {
        display: flex;
        align-items: center;
        flex-direction: column;
        gap: dt('datepicker.time.picker.button.gap');
    }

    .p-datepicker-time-picker span {
        font-size: 1rem;
    }

    .p-datepicker-timeonly .p-datepicker-time-picker {
        border-block-start: 0 none;
    }

    .p-datepicker:has(.p-inputtext-sm) .p-datepicker-dropdown {
        width: dt('datepicker.dropdown.sm.width');
    }

    .p-datepicker:has(.p-inputtext-sm) .p-datepicker-dropdown .p-icon,
    .p-datepicker:has(.p-inputtext-sm) .p-datepicker-input-icon {
        font-size: dt('form.field.sm.font.size');
        width: dt('form.field.sm.font.size');
        height: dt('form.field.sm.font.size');
    }

    .p-datepicker:has(.p-inputtext-lg) .p-datepicker-dropdown {
        width: dt('datepicker.dropdown.lg.width');
    }

    .p-datepicker:has(.p-inputtext-lg) .p-datepicker-dropdown .p-icon,
    .p-datepicker:has(.p-inputtext-lg) .p-datepicker-input-icon {
        font-size: dt('form.field.lg.font.size');
        width: dt('form.field.lg.font.size');
        height: dt('form.field.lg.font.size');
    }

    .p-datepicker:has(.p-datepicker-dropdown) .p-datepicker-clear-icon,
    .p-datepicker:has(.p-datepicker-input-icon-container) .p-datepicker-clear-icon {
        inset-inline-end: calc(dt('datepicker.dropdown.width') + dt('form.field.padding.x'));
    }

    .p-datepicker-clear-icon {
        position: absolute;
        top: 50%;
        margin-top: -0.5rem;
        cursor: pointer;
        color: dt('form.field.icon.color');
        inset-inline-end: dt('form.field.padding.x');
    }
`,
  T$ = {
    root: function (e) {
      var n = e.props;
      return { position: n.appendTo === "self" ? "relative" : void 0 };
    },
  },
  A$ = {
    root: function (e) {
      var n = e.instance,
        r = e.state;
      return [
        "p-datepicker p-component p-inputwrapper",
        {
          "p-invalid": n.$invalid,
          "p-inputwrapper-filled": n.$filled,
          "p-inputwrapper-focus": r.focused || r.overlayVisible,
          "p-focus": r.focused || r.overlayVisible,
          "p-datepicker-fluid": n.$fluid,
        },
      ];
    },
    pcInputText: "p-datepicker-input",
    dropdown: "p-datepicker-dropdown",
    inputIconContainer: "p-datepicker-input-icon-container",
    inputIcon: "p-datepicker-input-icon",
    panel: function (e) {
      var n = e.props;
      return [
        "p-datepicker-panel p-component",
        {
          "p-datepicker-panel-inline": n.inline,
          "p-disabled": n.disabled,
          "p-datepicker-timeonly": n.timeOnly,
        },
      ];
    },
    calendarContainer: "p-datepicker-calendar-container",
    calendar: "p-datepicker-calendar",
    header: "p-datepicker-header",
    pcPrevButton: "p-datepicker-prev-button",
    title: "p-datepicker-title",
    selectMonth: "p-datepicker-select-month",
    selectYear: "p-datepicker-select-year",
    decade: "p-datepicker-decade",
    pcNextButton: "p-datepicker-next-button",
    dayView: "p-datepicker-day-view",
    weekHeader: "p-datepicker-weekheader p-disabled",
    weekNumber: "p-datepicker-weeknumber",
    weekLabelContainer: "p-datepicker-weeklabel-container p-disabled",
    weekDayCell: "p-datepicker-weekday-cell",
    weekDay: "p-datepicker-weekday",
    dayCell: function (e) {
      var n = e.date;
      return [
        "p-datepicker-day-cell",
        {
          "p-datepicker-other-month": n.otherMonth,
          "p-datepicker-today": n.today,
        },
      ];
    },
    day: function (e) {
      var n = e.instance,
        r = e.props,
        i = e.state,
        o = e.date,
        s = "";
      return (
        n.isRangeSelection() &&
          n.isSelected(o) &&
          o.selectable &&
          (s =
            n.isDateEquals(i.d_value[0], o) || n.isDateEquals(i.d_value[1], o)
              ? "p-datepicker-day-selected"
              : "p-datepicker-day-selected-range"),
        [
          "p-datepicker-day",
          {
            "p-datepicker-day-selected":
              !n.isRangeSelection() && n.isSelected(o) && o.selectable,
            "p-disabled": r.disabled || !o.selectable,
          },
          s,
        ]
      );
    },
    monthView: "p-datepicker-month-view",
    month: function (e) {
      var n = e.instance,
        r = e.props,
        i = e.month,
        o = e.index;
      return [
        "p-datepicker-month",
        {
          "p-datepicker-month-selected": n.isMonthSelected(o),
          "p-disabled": r.disabled || !i.selectable,
        },
      ];
    },
    yearView: "p-datepicker-year-view",
    year: function (e) {
      var n = e.instance,
        r = e.props,
        i = e.year;
      return [
        "p-datepicker-year",
        {
          "p-datepicker-year-selected": n.isYearSelected(i.value),
          "p-disabled": r.disabled || !i.selectable,
        },
      ];
    },
    timePicker: "p-datepicker-time-picker",
    hourPicker: "p-datepicker-hour-picker",
    pcIncrementButton: "p-datepicker-increment-button",
    pcDecrementButton: "p-datepicker-decrement-button",
    separator: "p-datepicker-separator",
    minutePicker: "p-datepicker-minute-picker",
    secondPicker: "p-datepicker-second-picker",
    ampmPicker: "p-datepicker-ampm-picker",
    buttonbar: "p-datepicker-buttonbar",
    pcTodayButton: "p-datepicker-today-button",
    pcClearButton: "p-datepicker-clear-button",
  },
  P$ = ot.extend({
    name: "datepicker",
    style: E$,
    classes: A$,
    inlineStyles: T$,
  }),
  R$ = {
    name: "BaseDatePicker",
    extends: po,
    props: {
      selectionMode: { type: String, default: "single" },
      dateFormat: { type: String, default: null },
      inline: { type: Boolean, default: !1 },
      showOtherMonths: { type: Boolean, default: !0 },
      selectOtherMonths: { type: Boolean, default: !1 },
      showIcon: { type: Boolean, default: !1 },
      iconDisplay: { type: String, default: "button" },
      icon: { type: String, default: void 0 },
      prevIcon: { type: String, default: void 0 },
      nextIcon: { type: String, default: void 0 },
      incrementIcon: { type: String, default: void 0 },
      decrementIcon: { type: String, default: void 0 },
      numberOfMonths: { type: Number, default: 1 },
      responsiveOptions: Array,
      breakpoint: { type: String, default: "769px" },
      view: { type: String, default: "date" },
      minDate: { type: Date, value: null },
      maxDate: { type: Date, value: null },
      disabledDates: { type: Array, value: null },
      disabledDays: { type: Array, value: null },
      maxDateCount: { type: Number, value: null },
      showOnFocus: { type: Boolean, default: !0 },
      autoZIndex: { type: Boolean, default: !0 },
      baseZIndex: { type: Number, default: 0 },
      showButtonBar: { type: Boolean, default: !1 },
      shortYearCutoff: { type: String, default: "+10" },
      showTime: { type: Boolean, default: !1 },
      timeOnly: { type: Boolean, default: !1 },
      hourFormat: { type: String, default: "24" },
      stepHour: { type: Number, default: 1 },
      stepMinute: { type: Number, default: 1 },
      stepSecond: { type: Number, default: 1 },
      showSeconds: { type: Boolean, default: !1 },
      hideOnDateTimeSelect: { type: Boolean, default: !1 },
      hideOnRangeSelection: { type: Boolean, default: !1 },
      timeSeparator: { type: String, default: ":" },
      showWeek: { type: Boolean, default: !1 },
      manualInput: { type: Boolean, default: !0 },
      appendTo: { type: [String, Object], default: "body" },
      readonly: { type: Boolean, default: !1 },
      placeholder: { type: String, default: null },
      inputId: { type: String, default: null },
      inputClass: { type: [String, Object], default: null },
      inputStyle: { type: Object, default: null },
      panelClass: { type: [String, Object], default: null },
      panelStyle: { type: Object, default: null },
      todayButtonProps: {
        type: Object,
        default: function () {
          return { severity: "secondary", text: !0, size: "small" };
        },
      },
      clearButtonProps: {
        type: Object,
        default: function () {
          return { severity: "secondary", text: !0, size: "small" };
        },
      },
      navigatorButtonProps: {
        type: Object,
        default: function () {
          return { severity: "secondary", text: !0, rounded: !0 };
        },
      },
      timepickerButtonProps: {
        type: Object,
        default: function () {
          return { severity: "secondary", text: !0, rounded: !0 };
        },
      },
      ariaLabelledby: { type: String, default: null },
      ariaLabel: { type: String, default: null },
    },
    style: P$,
    provide: function () {
      return { $pcDatePicker: this, $parentInstance: this };
    },
  };
function Wm(t, e, n) {
  return (
    (e = L$(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function L$(t) {
  var e = D$(t, "string");
  return ds(e) == "symbol" ? e : e + "";
}
function D$(t, e) {
  if (ds(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (ds(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
function ds(t) {
  "@babel/helpers - typeof";
  return (
    (ds =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    ds(t)
  );
}
function Ou(t) {
  return $$(t) || O$(t) || nb(t) || I$();
}
function I$() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function O$(t) {
  if (
    (typeof Symbol < "u" && t[Symbol.iterator] != null) ||
    t["@@iterator"] != null
  )
    return Array.from(t);
}
function $$(t) {
  if (Array.isArray(t)) return yd(t);
}
function $u(t, e) {
  var n = (typeof Symbol < "u" && t[Symbol.iterator]) || t["@@iterator"];
  if (!n) {
    if (Array.isArray(t) || (n = nb(t)) || e) {
      n && (t = n);
      var r = 0,
        i = function () {};
      return {
        s: i,
        n: function () {
          return r >= t.length ? { done: !0 } : { done: !1, value: t[r++] };
        },
        e: function (u) {
          throw u;
        },
        f: i,
      };
    }
    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  var o,
    s = !0,
    a = !1;
  return {
    s: function () {
      n = n.call(t);
    },
    n: function () {
      var u = n.next();
      return ((s = u.done), u);
    },
    e: function (u) {
      ((a = !0), (o = u));
    },
    f: function () {
      try {
        s || n.return == null || n.return();
      } finally {
        if (a) throw o;
      }
    },
  };
}
function nb(t, e) {
  if (t) {
    if (typeof t == "string") return yd(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return (
      n === "Object" && t.constructor && (n = t.constructor.name),
      n === "Map" || n === "Set"
        ? Array.from(t)
        : n === "Arguments" ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          ? yd(t, e)
          : void 0
    );
  }
}
function yd(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, r = Array(e); n < e; n++) r[n] = t[n];
  return r;
}
var rb = {
    name: "DatePicker",
    extends: R$,
    inheritAttrs: !1,
    emits: [
      "show",
      "hide",
      "input",
      "month-change",
      "year-change",
      "date-select",
      "today-click",
      "clear-click",
      "focus",
      "blur",
      "keydown",
    ],
    inject: { $pcFluid: { default: null } },
    navigationState: null,
    timePickerChange: !1,
    scrollHandler: null,
    outsideClickListener: null,
    resizeListener: null,
    matchMediaListener: null,
    matchMediaOrientationListener: null,
    overlay: null,
    input: null,
    previousButton: null,
    nextButton: null,
    timePickerTimer: null,
    preventFocus: !1,
    typeUpdate: !1,
    data: function () {
      return {
        currentMonth: null,
        currentYear: null,
        currentHour: null,
        currentMinute: null,
        currentSecond: null,
        pm: null,
        focused: !1,
        overlayVisible: !1,
        currentView: this.view,
        query: null,
        queryMatches: !1,
        queryOrientation: null,
      };
    },
    watch: {
      modelValue: function (e) {
        (this.updateCurrentMetaData(),
          !this.typeUpdate &&
            !this.inline &&
            this.input &&
            (this.input.value = this.inputFieldValue),
          (this.typeUpdate = !1));
      },
      showTime: function () {
        this.updateCurrentMetaData();
      },
      minDate: function () {
        this.updateCurrentMetaData();
      },
      maxDate: function () {
        this.updateCurrentMetaData();
      },
      months: function () {
        this.overlay &&
          (this.focused ||
            (this.inline && (this.preventFocus = !0),
            setTimeout(this.updateFocus, 0)));
      },
      numberOfMonths: function () {
        (this.destroyResponsiveStyleElement(), this.createResponsiveStyle());
      },
      responsiveOptions: function () {
        (this.destroyResponsiveStyleElement(), this.createResponsiveStyle());
      },
      currentView: function () {
        var e = this;
        Promise.resolve(null).then(function () {
          return e.alignOverlay();
        });
      },
      view: function (e) {
        this.currentView = e;
      },
    },
    created: function () {
      this.updateCurrentMetaData();
    },
    mounted: function () {
      (this.createResponsiveStyle(),
        this.bindMatchMediaListener(),
        this.bindMatchMediaOrientationListener(),
        this.inline
          ? this.disabled ||
            ((this.preventFocus = !0), this.initFocusableCell())
          : (this.input.value = this.inputFieldValue));
    },
    updated: function () {
      (this.overlay &&
        ((this.preventFocus = !0), setTimeout(this.updateFocus, 0)),
        this.input &&
          this.selectionStart != null &&
          this.selectionEnd != null &&
          ((this.input.selectionStart = this.selectionStart),
          (this.input.selectionEnd = this.selectionEnd),
          (this.selectionStart = null),
          (this.selectionEnd = null)));
    },
    beforeUnmount: function () {
      (this.timePickerTimer && clearTimeout(this.timePickerTimer),
        this.destroyResponsiveStyleElement(),
        this.unbindOutsideClickListener(),
        this.unbindResizeListener(),
        this.unbindMatchMediaListener(),
        this.unbindMatchMediaOrientationListener(),
        this.scrollHandler &&
          (this.scrollHandler.destroy(), (this.scrollHandler = null)),
        this.overlay && this.autoZIndex && On.clear(this.overlay),
        (this.overlay = null));
    },
    methods: {
      isComparable: function () {
        return this.d_value != null && typeof this.d_value != "string";
      },
      isSelected: function (e) {
        if (!this.isComparable()) return !1;
        if (this.d_value) {
          if (this.isSingleSelection())
            return this.isDateEquals(this.d_value, e);
          if (this.isMultipleSelection()) {
            var n = !1,
              r = $u(this.d_value),
              i;
            try {
              for (r.s(); !(i = r.n()).done; ) {
                var o = i.value;
                if (((n = this.isDateEquals(o, e)), n)) break;
              }
            } catch (s) {
              r.e(s);
            } finally {
              r.f();
            }
            return n;
          } else if (this.isRangeSelection())
            return this.d_value[1]
              ? this.isDateEquals(this.d_value[0], e) ||
                  this.isDateEquals(this.d_value[1], e) ||
                  this.isDateBetween(this.d_value[0], this.d_value[1], e)
              : this.isDateEquals(this.d_value[0], e);
        }
        return !1;
      },
      isMonthSelected: function (e) {
        var n = this;
        if (!this.isComparable()) return !1;
        if (this.isMultipleSelection())
          return this.d_value.some(function (c) {
            return c.getMonth() === e && c.getFullYear() === n.currentYear;
          });
        if (this.isRangeSelection())
          if (this.d_value[1]) {
            var o = new Date(this.currentYear, e, 1),
              s = new Date(
                this.d_value[0].getFullYear(),
                this.d_value[0].getMonth(),
                1,
              ),
              a = new Date(
                this.d_value[1].getFullYear(),
                this.d_value[1].getMonth(),
                1,
              );
            return o >= s && o <= a;
          } else {
            var r, i;
            return (
              ((r = this.d_value[0]) === null || r === void 0
                ? void 0
                : r.getFullYear()) === this.currentYear &&
              ((i = this.d_value[0]) === null || i === void 0
                ? void 0
                : i.getMonth()) === e
            );
          }
        else
          return (
            this.d_value.getMonth() === e &&
            this.d_value.getFullYear() === this.currentYear
          );
      },
      isYearSelected: function (e) {
        if (!this.isComparable()) return !1;
        if (this.isMultipleSelection())
          return this.d_value.some(function (i) {
            return i.getFullYear() === e;
          });
        if (this.isRangeSelection()) {
          var n = this.d_value[0] ? this.d_value[0].getFullYear() : null,
            r = this.d_value[1] ? this.d_value[1].getFullYear() : null;
          return n === e || r === e || (n < e && r > e);
        } else return this.d_value.getFullYear() === e;
      },
      isDateEquals: function (e, n) {
        return e
          ? e.getDate() === n.day &&
              e.getMonth() === n.month &&
              e.getFullYear() === n.year
          : !1;
      },
      isDateBetween: function (e, n, r) {
        var i = !1;
        if (e && n) {
          var o = new Date(r.year, r.month, r.day);
          return e.getTime() <= o.getTime() && n.getTime() >= o.getTime();
        }
        return i;
      },
      getFirstDayOfMonthIndex: function (e, n) {
        var r = new Date();
        (r.setDate(1), r.setMonth(e), r.setFullYear(n));
        var i = r.getDay() + this.sundayIndex;
        return i >= 7 ? i - 7 : i;
      },
      getDaysCountInMonth: function (e, n) {
        return 32 - this.daylightSavingAdjust(new Date(n, e, 32)).getDate();
      },
      getDaysCountInPrevMonth: function (e, n) {
        var r = this.getPreviousMonthAndYear(e, n);
        return this.getDaysCountInMonth(r.month, r.year);
      },
      getPreviousMonthAndYear: function (e, n) {
        var r, i;
        return (
          e === 0 ? ((r = 11), (i = n - 1)) : ((r = e - 1), (i = n)),
          { month: r, year: i }
        );
      },
      getNextMonthAndYear: function (e, n) {
        var r, i;
        return (
          e === 11 ? ((r = 0), (i = n + 1)) : ((r = e + 1), (i = n)),
          { month: r, year: i }
        );
      },
      daylightSavingAdjust: function (e) {
        return e
          ? (e.setHours(e.getHours() > 12 ? e.getHours() + 2 : 0), e)
          : null;
      },
      isToday: function (e, n, r, i) {
        return e.getDate() === n && e.getMonth() === r && e.getFullYear() === i;
      },
      isSelectable: function (e, n, r, i) {
        var o = !0,
          s = !0,
          a = !0,
          c = !0;
        return i && !this.selectOtherMonths
          ? !1
          : (this.minDate &&
              (this.minDate.getFullYear() > r ||
                (this.minDate.getFullYear() === r &&
                  (this.minDate.getMonth() > n ||
                    (this.minDate.getMonth() === n &&
                      this.minDate.getDate() > e)))) &&
              (o = !1),
            this.maxDate &&
              (this.maxDate.getFullYear() < r ||
                (this.maxDate.getFullYear() === r &&
                  (this.maxDate.getMonth() < n ||
                    (this.maxDate.getMonth() === n &&
                      this.maxDate.getDate() < e)))) &&
              (s = !1),
            this.disabledDates && (a = !this.isDateDisabled(e, n, r)),
            this.disabledDays && (c = !this.isDayDisabled(e, n, r)),
            o && s && a && c);
      },
      onOverlayEnter: function (e) {
        var n = this.inline ? void 0 : { position: "absolute", top: "0" };
        (xc(e, n),
          this.autoZIndex &&
            On.set(
              "overlay",
              e,
              this.baseZIndex || this.$primevue.config.zIndex.overlay,
            ),
          this.$attrSelector && e.setAttribute(this.$attrSelector, ""),
          this.alignOverlay(),
          this.$emit("show"));
      },
      onOverlayEnterComplete: function () {
        (this.bindOutsideClickListener(),
          this.bindScrollListener(),
          this.bindResizeListener());
      },
      onOverlayAfterLeave: function (e) {
        this.autoZIndex && On.clear(e);
      },
      onOverlayLeave: function () {
        ((this.currentView = this.view),
          this.unbindOutsideClickListener(),
          this.unbindScrollListener(),
          this.unbindResizeListener(),
          this.$emit("hide"),
          (this.overlay = null));
      },
      onPrevButtonClick: function (e) {
        ((this.navigationState = { backward: !0, button: !0 }),
          this.navBackward(e));
      },
      onNextButtonClick: function (e) {
        ((this.navigationState = { backward: !1, button: !0 }),
          this.navForward(e));
      },
      navBackward: function (e) {
        (e.preventDefault(),
          this.isEnabled() &&
            (this.currentView === "month"
              ? (this.decrementYear(),
                this.$emit("year-change", {
                  month: this.currentMonth,
                  year: this.currentYear,
                }))
              : this.currentView === "year"
                ? this.decrementDecade()
                : e.shiftKey
                  ? this.decrementYear()
                  : (this.currentMonth === 0
                      ? ((this.currentMonth = 11), this.decrementYear())
                      : this.currentMonth--,
                    this.$emit("month-change", {
                      month: this.currentMonth + 1,
                      year: this.currentYear,
                    }))));
      },
      navForward: function (e) {
        (e.preventDefault(),
          this.isEnabled() &&
            (this.currentView === "month"
              ? (this.incrementYear(),
                this.$emit("year-change", {
                  month: this.currentMonth,
                  year: this.currentYear,
                }))
              : this.currentView === "year"
                ? this.incrementDecade()
                : e.shiftKey
                  ? this.incrementYear()
                  : (this.currentMonth === 11
                      ? ((this.currentMonth = 0), this.incrementYear())
                      : this.currentMonth++,
                    this.$emit("month-change", {
                      month: this.currentMonth + 1,
                      year: this.currentYear,
                    }))));
      },
      decrementYear: function () {
        this.currentYear--;
      },
      decrementDecade: function () {
        this.currentYear = this.currentYear - 10;
      },
      incrementYear: function () {
        this.currentYear++;
      },
      incrementDecade: function () {
        this.currentYear = this.currentYear + 10;
      },
      switchToMonthView: function (e) {
        ((this.currentView = "month"),
          setTimeout(this.updateFocus, 0),
          e.preventDefault());
      },
      switchToYearView: function (e) {
        ((this.currentView = "year"),
          setTimeout(this.updateFocus, 0),
          e.preventDefault());
      },
      isEnabled: function () {
        return !this.disabled && !this.readonly;
      },
      updateCurrentTimeMeta: function (e) {
        var n = e.getHours();
        (this.hourFormat === "12" &&
          ((this.pm = n > 11), n >= 12 && (n = n == 12 ? 12 : n - 12)),
          (this.currentHour = Math.floor(n / this.stepHour) * this.stepHour),
          (this.currentMinute =
            Math.floor(e.getMinutes() / this.stepMinute) * this.stepMinute),
          (this.currentSecond =
            Math.floor(e.getSeconds() / this.stepSecond) * this.stepSecond));
      },
      bindOutsideClickListener: function () {
        var e = this;
        this.outsideClickListener ||
          ((this.outsideClickListener = function (n) {
            e.overlayVisible &&
              e.isOutsideClicked(n) &&
              (e.overlayVisible = !1);
          }),
          document.addEventListener("mousedown", this.outsideClickListener));
      },
      unbindOutsideClickListener: function () {
        this.outsideClickListener &&
          (document.removeEventListener("mousedown", this.outsideClickListener),
          (this.outsideClickListener = null));
      },
      bindScrollListener: function () {
        var e = this;
        (this.scrollHandler ||
          (this.scrollHandler = new Lc(this.$refs.container, function () {
            e.overlayVisible && (e.overlayVisible = !1);
          })),
          this.scrollHandler.bindScrollListener());
      },
      unbindScrollListener: function () {
        this.scrollHandler && this.scrollHandler.unbindScrollListener();
      },
      bindResizeListener: function () {
        var e = this;
        this.resizeListener ||
          ((this.resizeListener = function () {
            e.overlayVisible && !_c() && (e.overlayVisible = !1);
          }),
          window.addEventListener("resize", this.resizeListener));
      },
      unbindResizeListener: function () {
        this.resizeListener &&
          (window.removeEventListener("resize", this.resizeListener),
          (this.resizeListener = null));
      },
      bindMatchMediaListener: function () {
        var e = this;
        if (!this.matchMediaListener) {
          var n = matchMedia("(max-width: ".concat(this.breakpoint, ")"));
          ((this.query = n),
            (this.queryMatches = n.matches),
            (this.matchMediaListener = function () {
              ((e.queryMatches = n.matches), (e.mobileActive = !1));
            }),
            this.query.addEventListener("change", this.matchMediaListener));
        }
      },
      unbindMatchMediaListener: function () {
        this.matchMediaListener &&
          (this.query.removeEventListener("change", this.matchMediaListener),
          (this.matchMediaListener = null));
      },
      bindMatchMediaOrientationListener: function () {
        var e = this;
        if (!this.matchMediaOrientationListener) {
          var n = matchMedia("(orientation: portrait)");
          ((this.queryOrientation = n),
            (this.matchMediaOrientationListener = function () {
              e.alignOverlay();
            }),
            this.queryOrientation.addEventListener(
              "change",
              this.matchMediaOrientationListener,
            ));
        }
      },
      unbindMatchMediaOrientationListener: function () {
        this.matchMediaOrientationListener &&
          (this.queryOrientation.removeEventListener(
            "change",
            this.matchMediaOrientationListener,
          ),
          (this.queryOrientation = null),
          (this.matchMediaOrientationListener = null));
      },
      isOutsideClicked: function (e) {
        var n = e.composedPath();
        return !(
          this.$el.isSameNode(e.target) ||
          this.isNavIconClicked(e) ||
          n.includes(this.$el) ||
          n.includes(this.overlay)
        );
      },
      isNavIconClicked: function (e) {
        return (
          (this.previousButton &&
            (this.previousButton.isSameNode(e.target) ||
              this.previousButton.contains(e.target))) ||
          (this.nextButton &&
            (this.nextButton.isSameNode(e.target) ||
              this.nextButton.contains(e.target)))
        );
      },
      alignOverlay: function () {
        this.overlay &&
          (this.appendTo === "self" || this.inline
            ? Zd(this.overlay, this.$el)
            : (this.view === "date"
                ? ((this.overlay.style.width = In(this.overlay) + "px"),
                  (this.overlay.style.minWidth = In(this.$el) + "px"))
                : (this.overlay.style.width = In(this.$el) + "px"),
              qd(this.overlay, this.$el)));
      },
      onButtonClick: function () {
        this.isEnabled() &&
          (this.overlayVisible
            ? (this.overlayVisible = !1)
            : (this.input.focus(), (this.overlayVisible = !0)));
      },
      isDateDisabled: function (e, n, r) {
        if (this.disabledDates) {
          var i = $u(this.disabledDates),
            o;
          try {
            for (i.s(); !(o = i.n()).done; ) {
              var s = o.value;
              if (
                s.getFullYear() === r &&
                s.getMonth() === n &&
                s.getDate() === e
              )
                return !0;
            }
          } catch (a) {
            i.e(a);
          } finally {
            i.f();
          }
        }
        return !1;
      },
      isDayDisabled: function (e, n, r) {
        if (this.disabledDays) {
          var i = new Date(r, n, e),
            o = i.getDay();
          return this.disabledDays.indexOf(o) !== -1;
        }
        return !1;
      },
      onMonthDropdownChange: function (e) {
        ((this.currentMonth = parseInt(e)),
          this.$emit("month-change", {
            month: this.currentMonth + 1,
            year: this.currentYear,
          }));
      },
      onYearDropdownChange: function (e) {
        ((this.currentYear = parseInt(e)),
          this.$emit("year-change", {
            month: this.currentMonth + 1,
            year: this.currentYear,
          }));
      },
      onDateSelect: function (e, n) {
        var r = this;
        if (!(this.disabled || !n.selectable)) {
          if (
            (bi(
              this.overlay,
              'table td span:not([data-p-disabled="true"])',
            ).forEach(function (o) {
              return (o.tabIndex = -1);
            }),
            e && e.currentTarget.focus(),
            this.isMultipleSelection() && this.isSelected(n))
          ) {
            var i = this.d_value.filter(function (o) {
              return !r.isDateEquals(o, n);
            });
            this.updateModel(i);
          } else
            this.shouldSelectDate(n) &&
              (n.otherMonth
                ? ((this.currentMonth = n.month),
                  (this.currentYear = n.year),
                  this.selectDate(n))
                : this.selectDate(n));
          this.isSingleSelection() &&
            (!this.showTime || this.hideOnDateTimeSelect) &&
            (this.input && this.input.focus(),
            setTimeout(function () {
              r.overlayVisible = !1;
            }, 150));
        }
      },
      selectDate: function (e) {
        var n = this,
          r = new Date(e.year, e.month, e.day);
        (this.showTime &&
          (this.hourFormat === "12" && this.currentHour !== 12 && this.pm
            ? r.setHours(this.currentHour + 12)
            : r.setHours(this.currentHour),
          r.setMinutes(this.currentMinute),
          r.setSeconds(this.currentSecond)),
          this.minDate &&
            this.minDate > r &&
            ((r = this.minDate),
            (this.currentHour = r.getHours()),
            (this.currentMinute = r.getMinutes()),
            (this.currentSecond = r.getSeconds())),
          this.maxDate &&
            this.maxDate < r &&
            ((r = this.maxDate),
            (this.currentHour = r.getHours()),
            (this.currentMinute = r.getMinutes()),
            (this.currentSecond = r.getSeconds())));
        var i = null;
        if (this.isSingleSelection()) i = r;
        else if (this.isMultipleSelection())
          i = this.d_value ? [].concat(Ou(this.d_value), [r]) : [r];
        else if (this.isRangeSelection())
          if (this.d_value && this.d_value.length) {
            var o = this.d_value[0],
              s = this.d_value[1];
            (!s && r.getTime() >= o.getTime() ? (s = r) : ((o = r), (s = null)),
              (i = [o, s]));
          } else i = [r, null];
        (i !== null && this.updateModel(i),
          this.isRangeSelection() &&
            this.hideOnRangeSelection &&
            i[1] !== null &&
            setTimeout(function () {
              n.overlayVisible = !1;
            }, 150),
          this.$emit("date-select", r));
      },
      updateModel: function (e) {
        this.writeValue(e);
      },
      shouldSelectDate: function () {
        return this.isMultipleSelection() && this.maxDateCount != null
          ? this.maxDateCount > (this.d_value ? this.d_value.length : 0)
          : !0;
      },
      isSingleSelection: function () {
        return this.selectionMode === "single";
      },
      isRangeSelection: function () {
        return this.selectionMode === "range";
      },
      isMultipleSelection: function () {
        return this.selectionMode === "multiple";
      },
      formatValue: function (e) {
        if (typeof e == "string")
          return this.dateFormat
            ? isNaN(new Date(e))
              ? e
              : this.formatDate(new Date(e), this.dateFormat)
            : e;
        var n = "";
        if (e)
          try {
            if (this.isSingleSelection()) n = this.formatDateTime(e);
            else if (this.isMultipleSelection())
              for (var r = 0; r < e.length; r++) {
                var i = this.formatDateTime(e[r]);
                ((n += i), r !== e.length - 1 && (n += ", "));
              }
            else if (this.isRangeSelection() && e && e.length) {
              var o = e[0],
                s = e[1];
              ((n = this.formatDateTime(o)),
                s && (n += " - " + this.formatDateTime(s)));
            }
          } catch {
            n = e;
          }
        return n;
      },
      formatDateTime: function (e) {
        var n = null;
        return (
          e &&
            (this.timeOnly
              ? (n = this.formatTime(e))
              : ((n = this.formatDate(e, this.datePattern)),
                this.showTime && (n += " " + this.formatTime(e)))),
          n
        );
      },
      formatDate: function (e, n) {
        if (!e) return "";
        var r,
          i = function (d) {
            var f = r + 1 < n.length && n.charAt(r + 1) === d;
            return (f && r++, f);
          },
          o = function (d, f, p) {
            var h = "" + f;
            if (i(d)) for (; h.length < p; ) h = "0" + h;
            return h;
          },
          s = function (d, f, p, h) {
            return i(d) ? h[f] : p[f];
          },
          a = "",
          c = !1;
        if (e)
          for (r = 0; r < n.length; r++)
            if (c)
              n.charAt(r) === "'" && !i("'") ? (c = !1) : (a += n.charAt(r));
            else
              switch (n.charAt(r)) {
                case "d":
                  a += o("d", e.getDate(), 2);
                  break;
                case "D":
                  a += s(
                    "D",
                    e.getDay(),
                    this.$primevue.config.locale.dayNamesShort,
                    this.$primevue.config.locale.dayNames,
                  );
                  break;
                case "o":
                  a += o(
                    "o",
                    Math.round(
                      (new Date(
                        e.getFullYear(),
                        e.getMonth(),
                        e.getDate(),
                      ).getTime() -
                        new Date(e.getFullYear(), 0, 0).getTime()) /
                        864e5,
                    ),
                    3,
                  );
                  break;
                case "m":
                  a += o("m", e.getMonth() + 1, 2);
                  break;
                case "M":
                  a += s(
                    "M",
                    e.getMonth(),
                    this.$primevue.config.locale.monthNamesShort,
                    this.$primevue.config.locale.monthNames,
                  );
                  break;
                case "y":
                  a += i("y")
                    ? e.getFullYear()
                    : (e.getFullYear() % 100 < 10 ? "0" : "") +
                      (e.getFullYear() % 100);
                  break;
                case "@":
                  a += e.getTime();
                  break;
                case "!":
                  a += e.getTime() * 1e4 + this.ticksTo1970;
                  break;
                case "'":
                  i("'") ? (a += "'") : (c = !0);
                  break;
                default:
                  a += n.charAt(r);
              }
        return a;
      },
      formatTime: function (e) {
        if (!e) return "";
        var n = "",
          r = e.getHours(),
          i = e.getMinutes(),
          o = e.getSeconds();
        return (
          this.hourFormat === "12" && r > 11 && r !== 12 && (r -= 12),
          this.hourFormat === "12"
            ? (n += r === 0 ? 12 : r < 10 ? "0" + r : r)
            : (n += r < 10 ? "0" + r : r),
          (n += ":"),
          (n += i < 10 ? "0" + i : i),
          this.showSeconds && ((n += ":"), (n += o < 10 ? "0" + o : o)),
          this.hourFormat === "12" &&
            (n +=
              e.getHours() > 11
                ? " ".concat(this.$primevue.config.locale.pm)
                : " ".concat(this.$primevue.config.locale.am)),
          n
        );
      },
      onTodayButtonClick: function (e) {
        var n = new Date(),
          r = {
            day: n.getDate(),
            month: n.getMonth(),
            year: n.getFullYear(),
            otherMonth:
              n.getMonth() !== this.currentMonth ||
              n.getFullYear() !== this.currentYear,
            today: !0,
            selectable: !0,
          };
        (this.onDateSelect(null, r),
          this.$emit("today-click", n),
          e.preventDefault());
      },
      onClearButtonClick: function (e) {
        (this.updateModel(this.$formDefaultValue || null),
          (this.overlayVisible = !1),
          this.$emit("clear-click", e),
          e.preventDefault());
      },
      onTimePickerElementMouseDown: function (e, n, r) {
        this.isEnabled() && (this.repeat(e, null, n, r), e.preventDefault());
      },
      onTimePickerElementMouseUp: function (e) {
        this.isEnabled() &&
          (this.clearTimePickerTimer(),
          this.updateModelTime(),
          e.preventDefault());
      },
      onTimePickerElementMouseLeave: function () {
        this.clearTimePickerTimer();
      },
      onTimePickerElementKeyDown: function (e, n, r) {
        switch (e.code) {
          case "Enter":
          case "NumpadEnter":
          case "Space":
            this.isEnabled() &&
              (this.repeat(e, null, n, r), e.preventDefault());
            break;
        }
      },
      onTimePickerElementKeyUp: function (e) {
        switch (e.code) {
          case "Enter":
          case "NumpadEnter":
          case "Space":
            this.isEnabled() &&
              (this.clearTimePickerTimer(),
              this.updateModelTime(),
              e.preventDefault());
            break;
        }
      },
      repeat: function (e, n, r, i) {
        var o = this,
          s = n || 500;
        switch (
          (this.clearTimePickerTimer(),
          (this.timePickerTimer = setTimeout(function () {
            o.repeat(e, 100, r, i);
          }, s)),
          r)
        ) {
          case 0:
            i === 1 ? this.incrementHour(e) : this.decrementHour(e);
            break;
          case 1:
            i === 1 ? this.incrementMinute(e) : this.decrementMinute(e);
            break;
          case 2:
            i === 1 ? this.incrementSecond(e) : this.decrementSecond(e);
            break;
        }
      },
      convertTo24Hour: function (e, n) {
        return this.hourFormat == "12"
          ? e === 12
            ? n
              ? 12
              : 0
            : n
              ? e + 12
              : e
          : e;
      },
      validateTime: function (e, n, r, i) {
        var o = this.isComparable() ? this.d_value : this.viewDate,
          s = this.convertTo24Hour(e, i);
        (this.isRangeSelection() && (o = this.d_value[1] || this.d_value[0]),
          this.isMultipleSelection() &&
            (o = this.d_value[this.d_value.length - 1]));
        var a = o ? o.toDateString() : null;
        return !(
          (this.minDate &&
            a &&
            this.minDate.toDateString() === a &&
            (this.minDate.getHours() > s ||
              (this.minDate.getHours() === s &&
                (this.minDate.getMinutes() > n ||
                  (this.minDate.getMinutes() === n &&
                    this.minDate.getSeconds() > r))))) ||
          (this.maxDate &&
            a &&
            this.maxDate.toDateString() === a &&
            (this.maxDate.getHours() < s ||
              (this.maxDate.getHours() === s &&
                (this.maxDate.getMinutes() < n ||
                  (this.maxDate.getMinutes() === n &&
                    this.maxDate.getSeconds() < r)))))
        );
      },
      incrementHour: function (e) {
        var n = this.currentHour,
          r = this.currentHour + Number(this.stepHour),
          i = this.pm;
        (this.hourFormat == "24"
          ? (r = r >= 24 ? r - 24 : r)
          : this.hourFormat == "12" &&
            (n < 12 && r > 11 && (i = !this.pm), (r = r >= 13 ? r - 12 : r)),
          this.validateTime(r, this.currentMinute, this.currentSecond, i) &&
            ((this.currentHour = r), (this.pm = i)),
          e.preventDefault());
      },
      decrementHour: function (e) {
        var n = this.currentHour - this.stepHour,
          r = this.pm;
        (this.hourFormat == "24"
          ? (n = n < 0 ? 24 + n : n)
          : this.hourFormat == "12" &&
            (this.currentHour === 12 && (r = !this.pm),
            (n = n <= 0 ? 12 + n : n)),
          this.validateTime(n, this.currentMinute, this.currentSecond, r) &&
            ((this.currentHour = n), (this.pm = r)),
          e.preventDefault());
      },
      incrementMinute: function (e) {
        var n = this.currentMinute + Number(this.stepMinute);
        (this.validateTime(this.currentHour, n, this.currentSecond, this.pm) &&
          (this.currentMinute = n > 59 ? n - 60 : n),
          e.preventDefault());
      },
      decrementMinute: function (e) {
        var n = this.currentMinute - this.stepMinute;
        ((n = n < 0 ? 60 + n : n),
          this.validateTime(this.currentHour, n, this.currentSecond, this.pm) &&
            (this.currentMinute = n),
          e.preventDefault());
      },
      incrementSecond: function (e) {
        var n = this.currentSecond + Number(this.stepSecond);
        (this.validateTime(this.currentHour, this.currentMinute, n, this.pm) &&
          (this.currentSecond = n > 59 ? n - 60 : n),
          e.preventDefault());
      },
      decrementSecond: function (e) {
        var n = this.currentSecond - this.stepSecond;
        ((n = n < 0 ? 60 + n : n),
          this.validateTime(this.currentHour, this.currentMinute, n, this.pm) &&
            (this.currentSecond = n),
          e.preventDefault());
      },
      updateModelTime: function () {
        var e = this;
        this.timePickerChange = !0;
        var n = this.isComparable() ? this.d_value : this.viewDate;
        (this.isRangeSelection() && (n = this.d_value[1] || this.d_value[0]),
          this.isMultipleSelection() &&
            (n = this.d_value[this.d_value.length - 1]),
          (n = n ? new Date(n.getTime()) : new Date()),
          this.hourFormat == "12"
            ? this.currentHour === 12
              ? n.setHours(this.pm ? 12 : 0)
              : n.setHours(this.pm ? this.currentHour + 12 : this.currentHour)
            : n.setHours(this.currentHour),
          n.setMinutes(this.currentMinute),
          n.setSeconds(this.currentSecond),
          this.isRangeSelection() &&
            (this.d_value[1] ? (n = [this.d_value[0], n]) : (n = [n, null])),
          this.isMultipleSelection() &&
            (n = [].concat(Ou(this.d_value.slice(0, -1)), [n])),
          this.updateModel(n),
          this.$emit("date-select", n),
          setTimeout(function () {
            return (e.timePickerChange = !1);
          }, 0));
      },
      toggleAMPM: function (e) {
        var n = this.validateTime(
          this.currentHour,
          this.currentMinute,
          this.currentSecond,
          !this.pm,
        );
        (!n && (this.maxDate || this.minDate)) ||
          ((this.pm = !this.pm), this.updateModelTime(), e.preventDefault());
      },
      clearTimePickerTimer: function () {
        this.timePickerTimer && clearInterval(this.timePickerTimer);
      },
      onMonthSelect: function (e, n) {
        n.month;
        var r = n.index;
        (this.view === "month"
          ? this.onDateSelect(e, {
              year: this.currentYear,
              month: r,
              day: 1,
              selectable: !0,
            })
          : ((this.currentMonth = r),
            (this.currentView = "date"),
            this.$emit("month-change", {
              month: this.currentMonth + 1,
              year: this.currentYear,
            })),
          setTimeout(this.updateFocus, 0));
      },
      onYearSelect: function (e, n) {
        (this.view === "year"
          ? this.onDateSelect(e, {
              year: n.value,
              month: 0,
              day: 1,
              selectable: !0,
            })
          : ((this.currentYear = n.value),
            (this.currentView = "month"),
            this.$emit("year-change", {
              month: this.currentMonth + 1,
              year: this.currentYear,
            })),
          setTimeout(this.updateFocus, 0));
      },
      updateCurrentMetaData: function () {
        var e = this.viewDate;
        ((this.currentMonth = e.getMonth()),
          (this.currentYear = e.getFullYear()),
          (this.showTime || this.timeOnly) && this.updateCurrentTimeMeta(e));
      },
      isValidSelection: function (e) {
        var n = this;
        if (e == null) return !0;
        var r = !0;
        return (
          this.isSingleSelection()
            ? this.isSelectable(
                e.getDate(),
                e.getMonth(),
                e.getFullYear(),
                !1,
              ) || (r = !1)
            : e.every(function (i) {
                return n.isSelectable(
                  i.getDate(),
                  i.getMonth(),
                  i.getFullYear(),
                  !1,
                );
              }) &&
              this.isRangeSelection() &&
              (r = e.length > 1 && e[1] >= e[0]),
          r
        );
      },
      parseValue: function (e) {
        if (!e || e.trim().length === 0) return null;
        var n;
        if (this.isSingleSelection()) n = this.parseDateTime(e);
        else if (this.isMultipleSelection()) {
          var r = e.split(",");
          n = [];
          var i = $u(r),
            o;
          try {
            for (i.s(); !(o = i.n()).done; ) {
              var s = o.value;
              n.push(this.parseDateTime(s.trim()));
            }
          } catch (u) {
            i.e(u);
          } finally {
            i.f();
          }
        } else if (this.isRangeSelection()) {
          var a = e.split(" - ");
          n = [];
          for (var c = 0; c < a.length; c++)
            n[c] = this.parseDateTime(a[c].trim());
        }
        return n;
      },
      parseDateTime: function (e) {
        var n,
          r = e.split(" ");
        if (this.timeOnly) ((n = new Date()), this.populateTime(n, r[0], r[1]));
        else {
          var i = this.datePattern;
          this.showTime
            ? ((n = this.parseDate(r[0], i)), this.populateTime(n, r[1], r[2]))
            : (n = this.parseDate(e, i));
        }
        return n;
      },
      populateTime: function (e, n, r) {
        if (this.hourFormat == "12" && !r) throw "Invalid Time";
        this.pm =
          r === this.$primevue.config.locale.pm ||
          r === this.$primevue.config.locale.pm.toLowerCase();
        var i = this.parseTime(n);
        (e.setHours(i.hour), e.setMinutes(i.minute), e.setSeconds(i.second));
      },
      parseTime: function (e) {
        var n = e.split(":"),
          r = this.showSeconds ? 3 : 2,
          i = /^[0-9][0-9]$/;
        if (
          n.length !== r ||
          !n[0].match(i) ||
          !n[1].match(i) ||
          (this.showSeconds && !n[2].match(i))
        )
          throw "Invalid time";
        var o = parseInt(n[0]),
          s = parseInt(n[1]),
          a = this.showSeconds ? parseInt(n[2]) : null;
        if (
          isNaN(o) ||
          isNaN(s) ||
          o > 23 ||
          s > 59 ||
          (this.hourFormat == "12" && o > 12) ||
          (this.showSeconds && (isNaN(a) || a > 59))
        )
          throw "Invalid time";
        return (
          this.hourFormat == "12" && o !== 12 && this.pm
            ? (o += 12)
            : this.hourFormat == "12" && o == 12 && !this.pm && (o = 0),
          { hour: o, minute: s, second: a }
        );
      },
      parseDate: function (e, n) {
        if (n == null || e == null) throw "Invalid arguments";
        if (((e = ds(e) === "object" ? e.toString() : e + ""), e === ""))
          return null;
        var r,
          i,
          o,
          s = 0,
          a =
            typeof this.shortYearCutoff != "string"
              ? this.shortYearCutoff
              : (new Date().getFullYear() % 100) +
                parseInt(this.shortYearCutoff, 10),
          c = -1,
          u = -1,
          d = -1,
          f = -1,
          p = !1,
          h,
          v = function (y) {
            var x = r + 1 < n.length && n.charAt(r + 1) === y;
            return (x && r++, x);
          },
          b = function (y) {
            var x = v(y),
              C =
                y === "@"
                  ? 14
                  : y === "!"
                    ? 20
                    : y === "y" && x
                      ? 4
                      : y === "o"
                        ? 3
                        : 2,
              w = y === "y" ? C : 1,
              S = new RegExp("^\\d{" + w + "," + C + "}"),
              D = e.substring(s).match(S);
            if (!D) throw "Missing number at position " + s;
            return ((s += D[0].length), parseInt(D[0], 10));
          },
          g = function (y, x, C) {
            for (var w = -1, S = v(y) ? C : x, D = [], k = 0; k < S.length; k++)
              D.push([k, S[k]]);
            D.sort(function (W, X) {
              return -(W[1].length - X[1].length);
            });
            for (var P = 0; P < D.length; P++) {
              var I = D[P][1];
              if (e.substr(s, I.length).toLowerCase() === I.toLowerCase()) {
                ((w = D[P][0]), (s += I.length));
                break;
              }
            }
            if (w !== -1) return w + 1;
            throw "Unknown name at position " + s;
          },
          m = function () {
            if (e.charAt(s) !== n.charAt(r))
              throw "Unexpected literal at position " + s;
            s++;
          };
        for (
          this.currentView === "month" && (d = 1),
            this.currentView === "year" && ((d = 1), (u = 1)),
            r = 0;
          r < n.length;
          r++
        )
          if (p) n.charAt(r) === "'" && !v("'") ? (p = !1) : m();
          else
            switch (n.charAt(r)) {
              case "d":
                d = b("d");
                break;
              case "D":
                g(
                  "D",
                  this.$primevue.config.locale.dayNamesShort,
                  this.$primevue.config.locale.dayNames,
                );
                break;
              case "o":
                f = b("o");
                break;
              case "m":
                u = b("m");
                break;
              case "M":
                u = g(
                  "M",
                  this.$primevue.config.locale.monthNamesShort,
                  this.$primevue.config.locale.monthNames,
                );
                break;
              case "y":
                c = b("y");
                break;
              case "@":
                ((h = new Date(b("@"))),
                  (c = h.getFullYear()),
                  (u = h.getMonth() + 1),
                  (d = h.getDate()));
                break;
              case "!":
                ((h = new Date((b("!") - this.ticksTo1970) / 1e4)),
                  (c = h.getFullYear()),
                  (u = h.getMonth() + 1),
                  (d = h.getDate()));
                break;
              case "'":
                v("'") ? m() : (p = !0);
                break;
              default:
                m();
            }
        if (s < e.length && ((o = e.substr(s)), !/^\s+/.test(o)))
          throw "Extra/unparsed characters found in date: " + o;
        if (
          (c === -1
            ? (c = new Date().getFullYear())
            : c < 100 &&
              (c +=
                new Date().getFullYear() -
                (new Date().getFullYear() % 100) +
                (c <= a ? 0 : -100)),
          f > -1)
        ) {
          ((u = 1), (d = f));
          do {
            if (((i = this.getDaysCountInMonth(c, u - 1)), d <= i)) break;
            (u++, (d -= i));
          } while (!0);
        }
        if (
          ((h = this.daylightSavingAdjust(new Date(c, u - 1, d))),
          h.getFullYear() !== c || h.getMonth() + 1 !== u || h.getDate() !== d)
        )
          throw "Invalid date";
        return h;
      },
      getWeekNumber: function (e) {
        var n = new Date(e.getTime());
        n.setDate(n.getDate() + 4 - (n.getDay() || 7));
        var r = n.getTime();
        return (
          n.setMonth(0),
          n.setDate(1),
          Math.floor(Math.round((r - n.getTime()) / 864e5) / 7) + 1
        );
      },
      onDateCellKeydown: function (e, n, r) {
        var i = e.currentTarget,
          o = i.parentElement,
          s = xs(o);
        switch (e.code) {
          case "ArrowDown": {
            i.tabIndex = "-1";
            var a = o.parentElement.nextElementSibling;
            if (a) {
              var c = xs(o.parentElement),
                u = Array.from(o.parentElement.parentElement.children),
                d = u.slice(c + 1),
                f = d.find(function (ne) {
                  var U = ne.children[s].children[0];
                  return !Hn(U, "data-p-disabled");
                });
              if (f) {
                var p = f.children[s].children[0];
                ((p.tabIndex = "0"), p.focus());
              } else
                ((this.navigationState = { backward: !1 }), this.navForward(e));
            } else
              ((this.navigationState = { backward: !1 }), this.navForward(e));
            e.preventDefault();
            break;
          }
          case "ArrowUp": {
            if (((i.tabIndex = "-1"), e.altKey))
              ((this.overlayVisible = !1), (this.focused = !0));
            else {
              var h = o.parentElement.previousElementSibling;
              if (h) {
                var v = xs(o.parentElement),
                  b = Array.from(o.parentElement.parentElement.children),
                  g = b.slice(0, v).reverse(),
                  m = g.find(function (ne) {
                    var U = ne.children[s].children[0];
                    return !Hn(U, "data-p-disabled");
                  });
                if (m) {
                  var _ = m.children[s].children[0];
                  ((_.tabIndex = "0"), _.focus());
                } else
                  ((this.navigationState = { backward: !0 }),
                    this.navBackward(e));
              } else
                ((this.navigationState = { backward: !0 }),
                  this.navBackward(e));
            }
            e.preventDefault();
            break;
          }
          case "ArrowLeft": {
            i.tabIndex = "-1";
            var y = o.previousElementSibling;
            if (y) {
              var x = Array.from(o.parentElement.children),
                C = x.slice(0, s).reverse(),
                w = C.find(function (ne) {
                  var U = ne.children[0];
                  return !Hn(U, "data-p-disabled");
                });
              if (w) {
                var S = w.children[0];
                ((S.tabIndex = "0"), S.focus());
              } else this.navigateToMonth(e, !0, r);
            } else this.navigateToMonth(e, !0, r);
            e.preventDefault();
            break;
          }
          case "ArrowRight": {
            i.tabIndex = "-1";
            var D = o.nextElementSibling;
            if (D) {
              var k = Array.from(o.parentElement.children),
                P = k.slice(s + 1),
                I = P.find(function (ne) {
                  var U = ne.children[0];
                  return !Hn(U, "data-p-disabled");
                });
              if (I) {
                var W = I.children[0];
                ((W.tabIndex = "0"), W.focus());
              } else this.navigateToMonth(e, !1, r);
            } else this.navigateToMonth(e, !1, r);
            e.preventDefault();
            break;
          }
          case "Enter":
          case "NumpadEnter":
          case "Space": {
            (this.onDateSelect(e, n), e.preventDefault());
            break;
          }
          case "Escape": {
            ((this.overlayVisible = !1), e.preventDefault());
            break;
          }
          case "Tab": {
            this.inline || this.trapFocus(e);
            break;
          }
          case "Home": {
            i.tabIndex = "-1";
            var X = o.parentElement,
              Z = X.children[0].children[0];
            (Hn(Z, "data-p-disabled")
              ? this.navigateToMonth(e, !0, r)
              : ((Z.tabIndex = "0"), Z.focus()),
              e.preventDefault());
            break;
          }
          case "End": {
            i.tabIndex = "-1";
            var G = o.parentElement,
              $ = G.children[G.children.length - 1].children[0];
            (Hn($, "data-p-disabled")
              ? this.navigateToMonth(e, !1, r)
              : (($.tabIndex = "0"), $.focus()),
              e.preventDefault());
            break;
          }
          case "PageUp": {
            ((i.tabIndex = "-1"),
              e.shiftKey
                ? ((this.navigationState = { backward: !0 }),
                  this.navBackward(e))
                : this.navigateToMonth(e, !0, r),
              e.preventDefault());
            break;
          }
          case "PageDown": {
            ((i.tabIndex = "-1"),
              e.shiftKey
                ? ((this.navigationState = { backward: !1 }),
                  this.navForward(e))
                : this.navigateToMonth(e, !1, r),
              e.preventDefault());
            break;
          }
        }
      },
      navigateToMonth: function (e, n, r) {
        if (n)
          if (this.numberOfMonths === 1 || r === 0)
            ((this.navigationState = { backward: !0 }), this.navBackward(e));
          else {
            var i = this.overlay.children[r - 1],
              o = bi(
                i,
                'table td span:not([data-p-disabled="true"]):not([data-p-ink="true"])',
              ),
              s = o[o.length - 1];
            ((s.tabIndex = "0"), s.focus());
          }
        else if (this.numberOfMonths === 1 || r === this.numberOfMonths - 1)
          ((this.navigationState = { backward: !1 }), this.navForward(e));
        else {
          var a = this.overlay.children[r + 1],
            c = En(
              a,
              'table td span:not([data-p-disabled="true"]):not([data-p-ink="true"])',
            );
          ((c.tabIndex = "0"), c.focus());
        }
      },
      onMonthCellKeydown: function (e, n) {
        var r = e.currentTarget;
        switch (e.code) {
          case "ArrowUp":
          case "ArrowDown": {
            r.tabIndex = "-1";
            var i = r.parentElement.children,
              o = xs(r),
              s = i[e.code === "ArrowDown" ? o + 3 : o - 3];
            (s && ((s.tabIndex = "0"), s.focus()), e.preventDefault());
            break;
          }
          case "ArrowLeft": {
            r.tabIndex = "-1";
            var a = r.previousElementSibling;
            (a
              ? ((a.tabIndex = "0"), a.focus())
              : ((this.navigationState = { backward: !0 }),
                this.navBackward(e)),
              e.preventDefault());
            break;
          }
          case "ArrowRight": {
            r.tabIndex = "-1";
            var c = r.nextElementSibling;
            (c
              ? ((c.tabIndex = "0"), c.focus())
              : ((this.navigationState = { backward: !1 }), this.navForward(e)),
              e.preventDefault());
            break;
          }
          case "PageUp": {
            if (e.shiftKey) return;
            ((this.navigationState = { backward: !0 }), this.navBackward(e));
            break;
          }
          case "PageDown": {
            if (e.shiftKey) return;
            ((this.navigationState = { backward: !1 }), this.navForward(e));
            break;
          }
          case "Enter":
          case "NumpadEnter":
          case "Space": {
            (this.onMonthSelect(e, n), e.preventDefault());
            break;
          }
          case "Escape": {
            ((this.overlayVisible = !1), e.preventDefault());
            break;
          }
          case "Tab": {
            this.trapFocus(e);
            break;
          }
        }
      },
      onYearCellKeydown: function (e, n) {
        var r = e.currentTarget;
        switch (e.code) {
          case "ArrowUp":
          case "ArrowDown": {
            r.tabIndex = "-1";
            var i = r.parentElement.children,
              o = xs(r),
              s = i[e.code === "ArrowDown" ? o + 2 : o - 2];
            (s && ((s.tabIndex = "0"), s.focus()), e.preventDefault());
            break;
          }
          case "ArrowLeft": {
            r.tabIndex = "-1";
            var a = r.previousElementSibling;
            (a
              ? ((a.tabIndex = "0"), a.focus())
              : ((this.navigationState = { backward: !0 }),
                this.navBackward(e)),
              e.preventDefault());
            break;
          }
          case "ArrowRight": {
            r.tabIndex = "-1";
            var c = r.nextElementSibling;
            (c
              ? ((c.tabIndex = "0"), c.focus())
              : ((this.navigationState = { backward: !1 }), this.navForward(e)),
              e.preventDefault());
            break;
          }
          case "PageUp": {
            if (e.shiftKey) return;
            ((this.navigationState = { backward: !0 }), this.navBackward(e));
            break;
          }
          case "PageDown": {
            if (e.shiftKey) return;
            ((this.navigationState = { backward: !1 }), this.navForward(e));
            break;
          }
          case "Enter":
          case "NumpadEnter":
          case "Space": {
            (this.onYearSelect(e, n), e.preventDefault());
            break;
          }
          case "Escape": {
            ((this.overlayVisible = !1), e.preventDefault());
            break;
          }
          case "Tab": {
            this.trapFocus(e);
            break;
          }
        }
      },
      updateFocus: function () {
        var e;
        if (this.navigationState) {
          if (this.navigationState.button)
            (this.initFocusableCell(),
              this.navigationState.backward
                ? this.previousButton && this.previousButton.focus()
                : this.nextButton && this.nextButton.focus());
          else {
            if (this.navigationState.backward) {
              var n;
              (this.currentView === "month"
                ? (n = bi(
                    this.overlay,
                    '[data-pc-section="monthview"] [data-pc-section="month"]:not([data-p-disabled="true"])',
                  ))
                : this.currentView === "year"
                  ? (n = bi(
                      this.overlay,
                      '[data-pc-section="yearview"] [data-pc-section="year"]:not([data-p-disabled="true"])',
                    ))
                  : (n = bi(
                      this.overlay,
                      'table td span:not([data-p-disabled="true"]):not([data-p-ink="true"])',
                    )),
                n && n.length > 0 && (e = n[n.length - 1]));
            } else
              this.currentView === "month"
                ? (e = En(
                    this.overlay,
                    '[data-pc-section="monthview"] [data-pc-section="month"]:not([data-p-disabled="true"])',
                  ))
                : this.currentView === "year"
                  ? (e = En(
                      this.overlay,
                      '[data-pc-section="yearview"] [data-pc-section="year"]:not([data-p-disabled="true"])',
                    ))
                  : (e = En(
                      this.overlay,
                      'table td span:not([data-p-disabled="true"]):not([data-p-ink="true"])',
                    ));
            e && ((e.tabIndex = "0"), e.focus());
          }
          this.navigationState = null;
        } else this.initFocusableCell();
      },
      initFocusableCell: function () {
        var e;
        if (this.currentView === "month") {
          var n = bi(
              this.overlay,
              '[data-pc-section="monthview"] [data-pc-section="month"]',
            ),
            r = En(
              this.overlay,
              '[data-pc-section="monthview"] [data-pc-section="month"][data-p-selected="true"]',
            );
          (n.forEach(function (a) {
            return (a.tabIndex = -1);
          }),
            (e = r || n[0]));
        } else if (this.currentView === "year") {
          var i = bi(
              this.overlay,
              '[data-pc-section="yearview"] [data-pc-section="year"]',
            ),
            o = En(
              this.overlay,
              '[data-pc-section="yearview"] [data-pc-section="year"][data-p-selected="true"]',
            );
          (i.forEach(function (a) {
            return (a.tabIndex = -1);
          }),
            (e = o || i[0]));
        } else if (
          ((e = En(this.overlay, 'span[data-p-selected="true"]')), !e)
        ) {
          var s = En(
            this.overlay,
            'td[data-p-today="true"] span:not([data-p-disabled="true"]):not([data-p-ink="true"])',
          );
          s
            ? (e = s)
            : (e = En(
                this.overlay,
                '.p-datepicker-calendar td span:not([data-p-disabled="true"]):not([data-p-ink="true"])',
              ));
        }
        e && ((e.tabIndex = "0"), (this.preventFocus = !1));
      },
      trapFocus: function (e) {
        e.preventDefault();
        var n = sa(this.overlay);
        if (n && n.length > 0)
          if (!document.activeElement) n[0].focus();
          else {
            var r = n.indexOf(document.activeElement);
            if (e.shiftKey)
              r === -1 || r === 0 ? n[n.length - 1].focus() : n[r - 1].focus();
            else if (r === -1)
              if (this.timeOnly) n[0].focus();
              else {
                var i = n.findIndex(function (o) {
                  return o.tagName === "SPAN";
                });
                (i === -1 &&
                  (i = n.findIndex(function (o) {
                    return o.tagName === "BUTTON";
                  })),
                  i !== -1 ? n[i].focus() : n[0].focus());
              }
            else r === n.length - 1 ? n[0].focus() : n[r + 1].focus();
          }
      },
      onContainerButtonKeydown: function (e) {
        switch (e.code) {
          case "Tab":
            this.trapFocus(e);
            break;
          case "Escape":
            ((this.overlayVisible = !1), e.preventDefault());
            break;
        }
        this.$emit("keydown", e);
      },
      onInput: function (e) {
        try {
          ((this.selectionStart = this.input.selectionStart),
            (this.selectionEnd = this.input.selectionEnd));
          var n = this.parseValue(e.target.value);
          this.isValidSelection(n) &&
            ((this.typeUpdate = !0),
            this.updateModel(n),
            this.updateCurrentMetaData());
        } catch {}
        this.$emit("input", e);
      },
      onInputClick: function () {
        this.showOnFocus &&
          this.isEnabled() &&
          !this.overlayVisible &&
          (this.overlayVisible = !0);
      },
      onFocus: function (e) {
        (this.showOnFocus && this.isEnabled() && (this.overlayVisible = !0),
          (this.focused = !0),
          this.$emit("focus", e));
      },
      onBlur: function (e) {
        var n, r;
        (this.$emit("blur", { originalEvent: e, value: e.target.value }),
          (n = (r = this.formField).onBlur) === null ||
            n === void 0 ||
            n.call(r),
          (this.focused = !1),
          (e.target.value = this.formatValue(this.d_value)));
      },
      onKeyDown: function (e) {
        if (e.code === "ArrowDown" && this.overlay) this.trapFocus(e);
        else if (e.code === "ArrowDown" && !this.overlay)
          this.overlayVisible = !0;
        else if (e.code === "Escape")
          this.overlayVisible &&
            ((this.overlayVisible = !1), e.preventDefault());
        else if (e.code === "Tab")
          (this.overlay &&
            sa(this.overlay).forEach(function (i) {
              return (i.tabIndex = "-1");
            }),
            this.overlayVisible && (this.overlayVisible = !1));
        else if (e.code === "Enter") {
          var n;
          if (
            this.manualInput &&
            e.target.value !== null &&
            ((n = e.target.value) === null || n === void 0
              ? void 0
              : n.trim()) !== ""
          )
            try {
              var r = this.parseValue(e.target.value);
              this.isValidSelection(r) && (this.overlayVisible = !1);
            } catch {}
          this.$emit("keydown", e);
        }
      },
      overlayRef: function (e) {
        this.overlay = e;
      },
      inputRef: function (e) {
        this.input = e ? e.$el : void 0;
      },
      previousButtonRef: function (e) {
        this.previousButton = e ? e.$el : void 0;
      },
      nextButtonRef: function (e) {
        this.nextButton = e ? e.$el : void 0;
      },
      getMonthName: function (e) {
        return this.$primevue.config.locale.monthNames[e];
      },
      getYear: function (e) {
        return this.currentView === "month" ? this.currentYear : e.year;
      },
      onOverlayClick: function (e) {
        (e.stopPropagation(),
          this.inline ||
            gf.emit("overlay-click", { originalEvent: e, target: this.$el }));
      },
      onOverlayKeyDown: function (e) {
        switch (e.code) {
          case "Escape":
            this.inline || (this.input.focus(), (this.overlayVisible = !1));
            break;
        }
      },
      onOverlayMouseUp: function (e) {
        this.onOverlayClick(e);
      },
      createResponsiveStyle: function () {
        if (
          this.numberOfMonths > 1 &&
          this.responsiveOptions &&
          !this.isUnstyled
        ) {
          if (!this.responsiveStyleElement) {
            var e;
            ((this.responsiveStyleElement = document.createElement("style")),
              (this.responsiveStyleElement.type = "text/css"),
              Qd(
                this.responsiveStyleElement,
                "nonce",
                (e = this.$primevue) === null ||
                  e === void 0 ||
                  (e = e.config) === null ||
                  e === void 0 ||
                  (e = e.csp) === null ||
                  e === void 0
                  ? void 0
                  : e.nonce,
              ),
              document.body.appendChild(this.responsiveStyleElement));
          }
          var n = "";
          if (this.responsiveOptions)
            for (
              var r = p_(),
                i = Ou(this.responsiveOptions)
                  .filter(function (f) {
                    return !!(f.breakpoint && f.numMonths);
                  })
                  .sort(function (f, p) {
                    return -1 * r(f.breakpoint, p.breakpoint);
                  }),
                o = 0;
              o < i.length;
              o++
            ) {
              for (
                var s = i[o],
                  a = s.breakpoint,
                  c = s.numMonths,
                  u = `
                            .p-datepicker-panel[`
                    .concat(
                      this.$attrSelector,
                      "] .p-datepicker-calendar:nth-child(",
                    )
                    .concat(
                      c,
                      `) .p-datepicker-next-button {
                                display: inline-flex;
                            }
                        `,
                    ),
                  d = c;
                d < this.numberOfMonths;
                d++
              )
                u += `
                                .p-datepicker-panel[`
                  .concat(
                    this.$attrSelector,
                    "] .p-datepicker-calendar:nth-child(",
                  )
                  .concat(
                    d + 1,
                    `) {
                                    display: none;
                                }
                            `,
                  );
              n += `
                            @media screen and (max-width: `
                .concat(
                  a,
                  `) {
                                `,
                )
                .concat(
                  u,
                  `
                            }
                        `,
                );
            }
          this.responsiveStyleElement.innerHTML = n;
        }
      },
      destroyResponsiveStyleElement: function () {
        this.responsiveStyleElement &&
          (this.responsiveStyleElement.remove(),
          (this.responsiveStyleElement = null));
      },
      dayDataP: function (e) {
        return At({
          today: e.today,
          "other-month": e.otherMonth,
          selected: this.isSelected(e),
          disabled: !e.selectable,
        });
      },
    },
    computed: {
      viewDate: function () {
        var e = this.d_value;
        if (
          (e &&
            Array.isArray(e) &&
            (this.isRangeSelection()
              ? (e = e[1] || e[0])
              : this.isMultipleSelection() && (e = e[e.length - 1])),
          e && typeof e != "string")
        )
          return e;
        var n = new Date();
        return this.maxDate && this.maxDate < n
          ? this.maxDate
          : this.minDate && this.minDate > n
            ? this.minDate
            : n;
      },
      inputFieldValue: function () {
        return this.formatValue(this.d_value);
      },
      months: function () {
        for (var e = [], n = 0; n < this.numberOfMonths; n++) {
          var r = this.currentMonth + n,
            i = this.currentYear;
          r > 11 && ((r = (r % 11) - 1), (i = i + 1));
          for (
            var o = [],
              s = this.getFirstDayOfMonthIndex(r, i),
              a = this.getDaysCountInMonth(r, i),
              c = this.getDaysCountInPrevMonth(r, i),
              u = 1,
              d = new Date(),
              f = [],
              p = Math.ceil((a + s) / 7),
              h = 0;
            h < p;
            h++
          ) {
            var v = [];
            if (h == 0) {
              for (var b = c - s + 1; b <= c; b++) {
                var g = this.getPreviousMonthAndYear(r, i);
                v.push({
                  day: b,
                  month: g.month,
                  year: g.year,
                  otherMonth: !0,
                  today: this.isToday(d, b, g.month, g.year),
                  selectable: this.isSelectable(b, g.month, g.year, !0),
                });
              }
              for (var m = 7 - v.length, _ = 0; _ < m; _++)
                (v.push({
                  day: u,
                  month: r,
                  year: i,
                  today: this.isToday(d, u, r, i),
                  selectable: this.isSelectable(u, r, i, !1),
                }),
                  u++);
            } else
              for (var y = 0; y < 7; y++) {
                if (u > a) {
                  var x = this.getNextMonthAndYear(r, i);
                  v.push({
                    day: u - a,
                    month: x.month,
                    year: x.year,
                    otherMonth: !0,
                    today: this.isToday(d, u - a, x.month, x.year),
                    selectable: this.isSelectable(u - a, x.month, x.year, !0),
                  });
                } else
                  v.push({
                    day: u,
                    month: r,
                    year: i,
                    today: this.isToday(d, u, r, i),
                    selectable: this.isSelectable(u, r, i, !1),
                  });
                u++;
              }
            (this.showWeek &&
              f.push(
                this.getWeekNumber(new Date(v[0].year, v[0].month, v[0].day)),
              ),
              o.push(v));
          }
          e.push({ month: r, year: i, dates: o, weekNumbers: f });
        }
        return e;
      },
      weekDays: function () {
        for (
          var e = [], n = this.$primevue.config.locale.firstDayOfWeek, r = 0;
          r < 7;
          r++
        )
          (e.push(this.$primevue.config.locale.dayNamesMin[n]),
            (n = n == 6 ? 0 : ++n));
        return e;
      },
      ticksTo1970: function () {
        return (
          (1969 * 365 +
            Math.floor(1970 / 4) -
            Math.floor(1970 / 100) +
            Math.floor(1970 / 400)) *
          24 *
          60 *
          60 *
          1e7
        );
      },
      sundayIndex: function () {
        return this.$primevue.config.locale.firstDayOfWeek > 0
          ? 7 - this.$primevue.config.locale.firstDayOfWeek
          : 0;
      },
      datePattern: function () {
        return this.dateFormat || this.$primevue.config.locale.dateFormat;
      },
      monthPickerValues: function () {
        for (
          var e = this,
            n = [],
            r = function (s) {
              if (e.minDate) {
                var a = e.minDate.getMonth(),
                  c = e.minDate.getFullYear();
                if (e.currentYear < c || (e.currentYear === c && s < a))
                  return !1;
              }
              if (e.maxDate) {
                var u = e.maxDate.getMonth(),
                  d = e.maxDate.getFullYear();
                if (e.currentYear > d || (e.currentYear === d && s > u))
                  return !1;
              }
              return !0;
            },
            i = 0;
          i <= 11;
          i++
        )
          n.push({
            value: this.$primevue.config.locale.monthNamesShort[i],
            selectable: r(i),
          });
        return n;
      },
      yearPickerValues: function () {
        for (
          var e = this,
            n = [],
            r = this.currentYear - (this.currentYear % 10),
            i = function (a) {
              return !(
                (e.minDate && e.minDate.getFullYear() > a) ||
                (e.maxDate && e.maxDate.getFullYear() < a)
              );
            },
            o = 0;
          o < 10;
          o++
        )
          n.push({ value: r + o, selectable: i(r + o) });
        return n;
      },
      formattedCurrentHour: function () {
        return this.currentHour == 0 && this.hourFormat == "12"
          ? this.currentHour + 12
          : this.currentHour < 10
            ? "0" + this.currentHour
            : this.currentHour;
      },
      formattedCurrentMinute: function () {
        return this.currentMinute < 10
          ? "0" + this.currentMinute
          : this.currentMinute;
      },
      formattedCurrentSecond: function () {
        return this.currentSecond < 10
          ? "0" + this.currentSecond
          : this.currentSecond;
      },
      todayLabel: function () {
        return this.$primevue.config.locale.today;
      },
      clearLabel: function () {
        return this.$primevue.config.locale.clear;
      },
      weekHeaderLabel: function () {
        return this.$primevue.config.locale.weekHeader;
      },
      monthNames: function () {
        return this.$primevue.config.locale.monthNames;
      },
      switchViewButtonDisabled: function () {
        return this.numberOfMonths > 1 || this.disabled;
      },
      panelId: function () {
        return this.$id + "_panel";
      },
      containerDataP: function () {
        return At({ fluid: this.$fluid });
      },
      panelDataP: function () {
        return At(
          Wm(
            { inline: this.inline },
            "portal-" + this.appendTo,
            "portal-" + this.appendTo,
          ),
        );
      },
      inputIconDataP: function () {
        return At(Wm({}, this.size, this.size));
      },
      timePickerDataP: function () {
        return At({ "time-only": this.timeOnly });
      },
      hourIncrementCallbacks: function () {
        var e = this;
        return {
          mousedown: function (r) {
            return e.onTimePickerElementMouseDown(r, 0, 1);
          },
          mouseup: function (r) {
            return e.onTimePickerElementMouseUp(r);
          },
          mouseleave: function () {
            return e.onTimePickerElementMouseLeave();
          },
          keydown: function (r) {
            return e.onTimePickerElementKeyDown(r, 0, 1);
          },
          keyup: function (r) {
            return e.onTimePickerElementKeyUp(r);
          },
        };
      },
      hourDecrementCallbacks: function () {
        var e = this;
        return {
          mousedown: function (r) {
            return e.onTimePickerElementMouseDown(r, 0, -1);
          },
          mouseup: function (r) {
            return e.onTimePickerElementMouseUp(r);
          },
          mouseleave: function () {
            return e.onTimePickerElementMouseLeave();
          },
          keydown: function (r) {
            return e.onTimePickerElementKeyDown(r, 0, -1);
          },
          keyup: function (r) {
            return e.onTimePickerElementKeyUp(r);
          },
        };
      },
      minuteIncrementCallbacks: function () {
        var e = this;
        return {
          mousedown: function (r) {
            return e.onTimePickerElementMouseDown(r, 1, 1);
          },
          mouseup: function (r) {
            return e.onTimePickerElementMouseUp(r);
          },
          mouseleave: function () {
            return e.onTimePickerElementMouseLeave();
          },
          keydown: function (r) {
            return e.onTimePickerElementKeyDown(r, 1, 1);
          },
          keyup: function (r) {
            return e.onTimePickerElementKeyUp(r);
          },
        };
      },
      minuteDecrementCallbacks: function () {
        var e = this;
        return {
          mousedown: function (r) {
            return e.onTimePickerElementMouseDown(r, 1, -1);
          },
          mouseup: function (r) {
            return e.onTimePickerElementMouseUp(r);
          },
          mouseleave: function () {
            return e.onTimePickerElementMouseLeave();
          },
          keydown: function (r) {
            return e.onTimePickerElementKeyDown(r, 1, -1);
          },
          keyup: function (r) {
            return e.onTimePickerElementKeyUp(r);
          },
        };
      },
      secondIncrementCallbacks: function () {
        var e = this;
        return {
          mousedown: function (r) {
            return e.onTimePickerElementMouseDown(r, 2, 1);
          },
          mouseup: function (r) {
            return e.onTimePickerElementMouseUp(r);
          },
          mouseleave: function () {
            return e.onTimePickerElementMouseLeave();
          },
          keydown: function (r) {
            return e.onTimePickerElementKeyDown(r, 2, 1);
          },
          keyup: function (r) {
            return e.onTimePickerElementKeyUp(r);
          },
        };
      },
      secondDecrementCallbacks: function () {
        var e = this;
        return {
          mousedown: function (r) {
            return e.onTimePickerElementMouseDown(r, 2, -1);
          },
          mouseup: function (r) {
            return e.onTimePickerElementMouseUp(r);
          },
          mouseleave: function () {
            return e.onTimePickerElementMouseLeave();
          },
          keydown: function (r) {
            return e.onTimePickerElementKeyDown(r, 2, -1);
          },
          keyup: function (r) {
            return e.onTimePickerElementKeyUp(r);
          },
        };
      },
    },
    components: {
      InputText: yt,
      Button: Ce,
      Portal: ja,
      CalendarIcon: Jv,
      ChevronLeftIcon: Qv,
      ChevronRightIcon: eb,
      ChevronUpIcon: tb,
      ChevronDownIcon: pf,
    },
    directives: { ripple: Ha },
  },
  z$ = ["id", "data-p"],
  B$ = ["disabled", "aria-label", "aria-expanded", "aria-controls"],
  U$ = ["data-p"],
  F$ = ["id", "role", "aria-modal", "aria-label", "data-p"],
  N$ = ["disabled", "aria-label"],
  V$ = ["disabled", "aria-label"],
  H$ = ["disabled", "aria-label"],
  j$ = ["disabled", "aria-label"],
  G$ = ["data-p-disabled"],
  W$ = ["abbr"],
  K$ = ["data-p-disabled"],
  X$ = ["aria-label", "data-p-today", "data-p-other-month"],
  Y$ = ["onClick", "onKeydown", "aria-selected", "aria-disabled", "data-p"],
  q$ = ["onClick", "onKeydown", "data-p-disabled", "data-p-selected"],
  Z$ = ["onClick", "onKeydown", "data-p-disabled", "data-p-selected"],
  J$ = ["data-p"];
function Q$(t, e, n, r, i, o) {
  var s = Mt("InputText"),
    a = Mt("Button"),
    c = Mt("Portal"),
    u = Xn("ripple");
  return (
    E(),
    R(
      "span",
      Q(
        {
          ref: "container",
          id: t.$id,
          class: t.cx("root"),
          style: t.sx("root"),
          "data-p": o.containerDataP,
        },
        t.ptmi("root"),
      ),
      [
        t.inline
          ? le("", !0)
          : (E(),
            Be(
              s,
              {
                key: 0,
                ref: o.inputRef,
                id: t.inputId,
                role: "combobox",
                class: Ie([t.inputClass, t.cx("pcInputText")]),
                style: ir(t.inputStyle),
                defaultValue: o.inputFieldValue,
                placeholder: t.placeholder,
                name: t.name,
                size: t.size,
                invalid: t.invalid,
                variant: t.variant,
                fluid: t.fluid,
                unstyled: t.unstyled,
                autocomplete: "off",
                "aria-autocomplete": "none",
                "aria-haspopup": "dialog",
                "aria-expanded": i.overlayVisible,
                "aria-controls": o.panelId,
                "aria-labelledby": t.ariaLabelledby,
                "aria-label": t.ariaLabel,
                inputmode: "none",
                disabled: t.disabled,
                readonly: !t.manualInput || t.readonly,
                tabindex: 0,
                onInput: o.onInput,
                onClick: o.onInputClick,
                onFocus: o.onFocus,
                onBlur: o.onBlur,
                onKeydown: o.onKeyDown,
                "data-p-has-dropdown":
                  t.showIcon && t.iconDisplay === "button" && !t.inline,
                "data-p-has-e-icon":
                  t.showIcon && t.iconDisplay === "input" && !t.inline,
                pt: t.ptm("pcInputText"),
                formControl: { novalidate: !0 },
              },
              null,
              8,
              [
                "id",
                "class",
                "style",
                "defaultValue",
                "placeholder",
                "name",
                "size",
                "invalid",
                "variant",
                "fluid",
                "unstyled",
                "aria-expanded",
                "aria-controls",
                "aria-labelledby",
                "aria-label",
                "disabled",
                "readonly",
                "onInput",
                "onClick",
                "onFocus",
                "onBlur",
                "onKeydown",
                "data-p-has-dropdown",
                "data-p-has-e-icon",
                "pt",
              ],
            )),
        t.showIcon && t.iconDisplay === "button" && !t.inline
          ? De(
              t.$slots,
              "dropdownbutton",
              { key: 1, toggleCallback: o.onButtonClick },
              function () {
                return [
                  l(
                    "button",
                    Q(
                      {
                        class: t.cx("dropdown"),
                        disabled: t.disabled,
                        onClick:
                          e[0] ||
                          (e[0] = function () {
                            return (
                              o.onButtonClick &&
                              o.onButtonClick.apply(o, arguments)
                            );
                          }),
                        type: "button",
                        "aria-label": t.$primevue.config.locale.chooseDate,
                        "aria-haspopup": "dialog",
                        "aria-expanded": i.overlayVisible,
                        "aria-controls": o.panelId,
                      },
                      t.ptm("dropdown"),
                    ),
                    [
                      De(
                        t.$slots,
                        "dropdownicon",
                        { class: Ie(t.icon) },
                        function () {
                          return [
                            (E(),
                            Be(
                              Dt(t.icon ? "span" : "CalendarIcon"),
                              Q({ class: t.icon }, t.ptm("dropdownIcon")),
                              null,
                              16,
                              ["class"],
                            )),
                          ];
                        },
                      ),
                    ],
                    16,
                    B$,
                  ),
                ];
              },
            )
          : t.showIcon && t.iconDisplay === "input" && !t.inline
            ? (E(),
              R(
                We,
                { key: 2 },
                [
                  t.$slots.inputicon || t.showIcon
                    ? (E(),
                      R(
                        "span",
                        Q(
                          {
                            key: 0,
                            class: t.cx("inputIconContainer"),
                            "data-p": o.inputIconDataP,
                          },
                          t.ptm("inputIconContainer"),
                        ),
                        [
                          De(
                            t.$slots,
                            "inputicon",
                            {
                              class: Ie(t.cx("inputIcon")),
                              clickCallback: o.onButtonClick,
                            },
                            function () {
                              return [
                                (E(),
                                Be(
                                  Dt(t.icon ? "i" : "CalendarIcon"),
                                  Q(
                                    {
                                      class: [t.icon, t.cx("inputIcon")],
                                      onClick: o.onButtonClick,
                                    },
                                    t.ptm("inputicon"),
                                  ),
                                  null,
                                  16,
                                  ["class", "onClick"],
                                )),
                              ];
                            },
                          ),
                        ],
                        16,
                        U$,
                      ))
                    : le("", !0),
                ],
                64,
              ))
            : le("", !0),
        O(
          c,
          { appendTo: t.appendTo, disabled: t.inline },
          {
            default: Ye(function () {
              return [
                O(
                  Fa,
                  Q(
                    {
                      name: "p-connected-overlay",
                      onEnter:
                        e[58] ||
                        (e[58] = function (d) {
                          return o.onOverlayEnter(d);
                        }),
                      onAfterEnter: o.onOverlayEnterComplete,
                      onAfterLeave: o.onOverlayAfterLeave,
                      onLeave: o.onOverlayLeave,
                    },
                    t.ptm("transition"),
                  ),
                  {
                    default: Ye(function () {
                      return [
                        t.inline || i.overlayVisible
                          ? (E(),
                            R(
                              "div",
                              Q(
                                {
                                  key: 0,
                                  ref: o.overlayRef,
                                  id: o.panelId,
                                  class: [t.cx("panel"), t.panelClass],
                                  style: t.panelStyle,
                                  role: t.inline ? null : "dialog",
                                  "aria-modal": t.inline ? null : "true",
                                  "aria-label":
                                    t.$primevue.config.locale.chooseDate,
                                  onClick:
                                    e[55] ||
                                    (e[55] = function () {
                                      return (
                                        o.onOverlayClick &&
                                        o.onOverlayClick.apply(o, arguments)
                                      );
                                    }),
                                  onKeydown:
                                    e[56] ||
                                    (e[56] = function () {
                                      return (
                                        o.onOverlayKeyDown &&
                                        o.onOverlayKeyDown.apply(o, arguments)
                                      );
                                    }),
                                  onMouseup:
                                    e[57] ||
                                    (e[57] = function () {
                                      return (
                                        o.onOverlayMouseUp &&
                                        o.onOverlayMouseUp.apply(o, arguments)
                                      );
                                    }),
                                  "data-p": o.panelDataP,
                                },
                                t.ptm("panel"),
                              ),
                              [
                                t.timeOnly
                                  ? le("", !0)
                                  : (E(),
                                    R(
                                      We,
                                      { key: 0 },
                                      [
                                        l(
                                          "div",
                                          Q(
                                            {
                                              class: t.cx("calendarContainer"),
                                            },
                                            t.ptm("calendarContainer"),
                                          ),
                                          [
                                            (E(!0),
                                            R(
                                              We,
                                              null,
                                              mt(o.months, function (d, f) {
                                                return (
                                                  E(),
                                                  R(
                                                    "div",
                                                    Q(
                                                      {
                                                        key: d.month + d.year,
                                                        class: t.cx("calendar"),
                                                      },
                                                      { ref_for: !0 },
                                                      t.ptm("calendar"),
                                                    ),
                                                    [
                                                      l(
                                                        "div",
                                                        Q(
                                                          {
                                                            class:
                                                              t.cx("header"),
                                                          },
                                                          { ref_for: !0 },
                                                          t.ptm("header"),
                                                        ),
                                                        [
                                                          De(
                                                            t.$slots,
                                                            "header",
                                                          ),
                                                          De(
                                                            t.$slots,
                                                            "prevbutton",
                                                            {
                                                              actionCallback:
                                                                function (h) {
                                                                  return o.onPrevButtonClick(
                                                                    h,
                                                                  );
                                                                },
                                                              keydownCallback:
                                                                function (h) {
                                                                  return o.onContainerButtonKeydown(
                                                                    h,
                                                                  );
                                                                },
                                                            },
                                                            function () {
                                                              return [
                                                                st(
                                                                  O(
                                                                    a,
                                                                    Q(
                                                                      {
                                                                        ref_for:
                                                                          !0,
                                                                        ref: o.previousButtonRef,
                                                                        class:
                                                                          t.cx(
                                                                            "pcPrevButton",
                                                                          ),
                                                                        disabled:
                                                                          t.disabled,
                                                                        "aria-label":
                                                                          i.currentView ===
                                                                          "year"
                                                                            ? t
                                                                                .$primevue
                                                                                .config
                                                                                .locale
                                                                                .prevDecade
                                                                            : i.currentView ===
                                                                                "month"
                                                                              ? t
                                                                                  .$primevue
                                                                                  .config
                                                                                  .locale
                                                                                  .prevYear
                                                                              : t
                                                                                  .$primevue
                                                                                  .config
                                                                                  .locale
                                                                                  .prevMonth,
                                                                        unstyled:
                                                                          t.unstyled,
                                                                        onClick:
                                                                          o.onPrevButtonClick,
                                                                        onKeydown:
                                                                          o.onContainerButtonKeydown,
                                                                      },
                                                                      {
                                                                        ref_for:
                                                                          !0,
                                                                      },
                                                                      t.navigatorButtonProps,
                                                                      {
                                                                        pt: t.ptm(
                                                                          "pcPrevButton",
                                                                        ),
                                                                        "data-pc-group-section":
                                                                          "navigator",
                                                                      },
                                                                    ),
                                                                    {
                                                                      icon: Ye(
                                                                        function (
                                                                          p,
                                                                        ) {
                                                                          return [
                                                                            De(
                                                                              t.$slots,
                                                                              "previcon",
                                                                              {},
                                                                              function () {
                                                                                return [
                                                                                  (E(),
                                                                                  Be(
                                                                                    Dt(
                                                                                      t.prevIcon
                                                                                        ? "span"
                                                                                        : "ChevronLeftIcon",
                                                                                    ),
                                                                                    Q(
                                                                                      {
                                                                                        class:
                                                                                          [
                                                                                            t.prevIcon,
                                                                                            p.class,
                                                                                          ],
                                                                                      },
                                                                                      {
                                                                                        ref_for:
                                                                                          !0,
                                                                                      },
                                                                                      t.ptm(
                                                                                        "pcPrevButton",
                                                                                      )
                                                                                        .icon,
                                                                                    ),
                                                                                    null,
                                                                                    16,
                                                                                    [
                                                                                      "class",
                                                                                    ],
                                                                                  )),
                                                                                ];
                                                                              },
                                                                            ),
                                                                          ];
                                                                        },
                                                                      ),
                                                                      _: 2,
                                                                    },
                                                                    1040,
                                                                    [
                                                                      "class",
                                                                      "disabled",
                                                                      "aria-label",
                                                                      "unstyled",
                                                                      "onClick",
                                                                      "onKeydown",
                                                                      "pt",
                                                                    ],
                                                                  ),
                                                                  [
                                                                    [
                                                                      qu,
                                                                      f === 0,
                                                                    ],
                                                                  ],
                                                                ),
                                                              ];
                                                            },
                                                          ),
                                                          l(
                                                            "div",
                                                            Q(
                                                              {
                                                                class:
                                                                  t.cx("title"),
                                                              },
                                                              { ref_for: !0 },
                                                              t.ptm("title"),
                                                            ),
                                                            [
                                                              t.$primevue.config
                                                                .locale
                                                                .showMonthAfterYear
                                                                ? (E(),
                                                                  R(
                                                                    We,
                                                                    { key: 0 },
                                                                    [
                                                                      i.currentView !==
                                                                      "year"
                                                                        ? (E(),
                                                                          R(
                                                                            "button",
                                                                            Q(
                                                                              {
                                                                                key: 0,
                                                                                type: "button",
                                                                                onClick:
                                                                                  e[1] ||
                                                                                  (e[1] =
                                                                                    function () {
                                                                                      return (
                                                                                        o.switchToYearView &&
                                                                                        o.switchToYearView.apply(
                                                                                          o,
                                                                                          arguments,
                                                                                        )
                                                                                      );
                                                                                    }),
                                                                                onKeydown:
                                                                                  e[2] ||
                                                                                  (e[2] =
                                                                                    function () {
                                                                                      return (
                                                                                        o.onContainerButtonKeydown &&
                                                                                        o.onContainerButtonKeydown.apply(
                                                                                          o,
                                                                                          arguments,
                                                                                        )
                                                                                      );
                                                                                    }),
                                                                                class:
                                                                                  t.cx(
                                                                                    "selectYear",
                                                                                  ),
                                                                                disabled:
                                                                                  o.switchViewButtonDisabled,
                                                                                "aria-label":
                                                                                  t
                                                                                    .$primevue
                                                                                    .config
                                                                                    .locale
                                                                                    .chooseYear,
                                                                              },
                                                                              {
                                                                                ref_for:
                                                                                  !0,
                                                                              },
                                                                              t.ptm(
                                                                                "selectYear",
                                                                              ),
                                                                              {
                                                                                "data-pc-group-section":
                                                                                  "view",
                                                                              },
                                                                            ),
                                                                            z(
                                                                              o.getYear(
                                                                                d,
                                                                              ),
                                                                            ),
                                                                            17,
                                                                            N$,
                                                                          ))
                                                                        : le(
                                                                            "",
                                                                            !0,
                                                                          ),
                                                                      i.currentView ===
                                                                      "date"
                                                                        ? (E(),
                                                                          R(
                                                                            "button",
                                                                            Q(
                                                                              {
                                                                                key: 1,
                                                                                type: "button",
                                                                                onClick:
                                                                                  e[3] ||
                                                                                  (e[3] =
                                                                                    function () {
                                                                                      return (
                                                                                        o.switchToMonthView &&
                                                                                        o.switchToMonthView.apply(
                                                                                          o,
                                                                                          arguments,
                                                                                        )
                                                                                      );
                                                                                    }),
                                                                                onKeydown:
                                                                                  e[4] ||
                                                                                  (e[4] =
                                                                                    function () {
                                                                                      return (
                                                                                        o.onContainerButtonKeydown &&
                                                                                        o.onContainerButtonKeydown.apply(
                                                                                          o,
                                                                                          arguments,
                                                                                        )
                                                                                      );
                                                                                    }),
                                                                                class:
                                                                                  t.cx(
                                                                                    "selectMonth",
                                                                                  ),
                                                                                disabled:
                                                                                  o.switchViewButtonDisabled,
                                                                                "aria-label":
                                                                                  t
                                                                                    .$primevue
                                                                                    .config
                                                                                    .locale
                                                                                    .chooseMonth,
                                                                              },
                                                                              {
                                                                                ref_for:
                                                                                  !0,
                                                                              },
                                                                              t.ptm(
                                                                                "selectMonth",
                                                                              ),
                                                                              {
                                                                                "data-pc-group-section":
                                                                                  "view",
                                                                              },
                                                                            ),
                                                                            z(
                                                                              o.getMonthName(
                                                                                d.month,
                                                                              ),
                                                                            ),
                                                                            17,
                                                                            V$,
                                                                          ))
                                                                        : le(
                                                                            "",
                                                                            !0,
                                                                          ),
                                                                    ],
                                                                    64,
                                                                  ))
                                                                : (E(),
                                                                  R(
                                                                    We,
                                                                    { key: 1 },
                                                                    [
                                                                      i.currentView ===
                                                                      "date"
                                                                        ? (E(),
                                                                          R(
                                                                            "button",
                                                                            Q(
                                                                              {
                                                                                key: 0,
                                                                                type: "button",
                                                                                onClick:
                                                                                  e[5] ||
                                                                                  (e[5] =
                                                                                    function () {
                                                                                      return (
                                                                                        o.switchToMonthView &&
                                                                                        o.switchToMonthView.apply(
                                                                                          o,
                                                                                          arguments,
                                                                                        )
                                                                                      );
                                                                                    }),
                                                                                onKeydown:
                                                                                  e[6] ||
                                                                                  (e[6] =
                                                                                    function () {
                                                                                      return (
                                                                                        o.onContainerButtonKeydown &&
                                                                                        o.onContainerButtonKeydown.apply(
                                                                                          o,
                                                                                          arguments,
                                                                                        )
                                                                                      );
                                                                                    }),
                                                                                class:
                                                                                  t.cx(
                                                                                    "selectMonth",
                                                                                  ),
                                                                                disabled:
                                                                                  o.switchViewButtonDisabled,
                                                                                "aria-label":
                                                                                  t
                                                                                    .$primevue
                                                                                    .config
                                                                                    .locale
                                                                                    .chooseMonth,
                                                                              },
                                                                              {
                                                                                ref_for:
                                                                                  !0,
                                                                              },
                                                                              t.ptm(
                                                                                "selectMonth",
                                                                              ),
                                                                              {
                                                                                "data-pc-group-section":
                                                                                  "view",
                                                                              },
                                                                            ),
                                                                            z(
                                                                              o.getMonthName(
                                                                                d.month,
                                                                              ),
                                                                            ),
                                                                            17,
                                                                            H$,
                                                                          ))
                                                                        : le(
                                                                            "",
                                                                            !0,
                                                                          ),
                                                                      i.currentView !==
                                                                      "year"
                                                                        ? (E(),
                                                                          R(
                                                                            "button",
                                                                            Q(
                                                                              {
                                                                                key: 1,
                                                                                type: "button",
                                                                                onClick:
                                                                                  e[7] ||
                                                                                  (e[7] =
                                                                                    function () {
                                                                                      return (
                                                                                        o.switchToYearView &&
                                                                                        o.switchToYearView.apply(
                                                                                          o,
                                                                                          arguments,
                                                                                        )
                                                                                      );
                                                                                    }),
                                                                                onKeydown:
                                                                                  e[8] ||
                                                                                  (e[8] =
                                                                                    function () {
                                                                                      return (
                                                                                        o.onContainerButtonKeydown &&
                                                                                        o.onContainerButtonKeydown.apply(
                                                                                          o,
                                                                                          arguments,
                                                                                        )
                                                                                      );
                                                                                    }),
                                                                                class:
                                                                                  t.cx(
                                                                                    "selectYear",
                                                                                  ),
                                                                                disabled:
                                                                                  o.switchViewButtonDisabled,
                                                                                "aria-label":
                                                                                  t
                                                                                    .$primevue
                                                                                    .config
                                                                                    .locale
                                                                                    .chooseYear,
                                                                              },
                                                                              {
                                                                                ref_for:
                                                                                  !0,
                                                                              },
                                                                              t.ptm(
                                                                                "selectYear",
                                                                              ),
                                                                              {
                                                                                "data-pc-group-section":
                                                                                  "view",
                                                                              },
                                                                            ),
                                                                            z(
                                                                              o.getYear(
                                                                                d,
                                                                              ),
                                                                            ),
                                                                            17,
                                                                            j$,
                                                                          ))
                                                                        : le(
                                                                            "",
                                                                            !0,
                                                                          ),
                                                                    ],
                                                                    64,
                                                                  )),
                                                              i.currentView ===
                                                              "year"
                                                                ? (E(),
                                                                  R(
                                                                    "span",
                                                                    Q(
                                                                      {
                                                                        key: 2,
                                                                        class:
                                                                          t.cx(
                                                                            "decade",
                                                                          ),
                                                                      },
                                                                      {
                                                                        ref_for:
                                                                          !0,
                                                                      },
                                                                      t.ptm(
                                                                        "decade",
                                                                      ),
                                                                    ),
                                                                    [
                                                                      De(
                                                                        t.$slots,
                                                                        "decade",
                                                                        {
                                                                          years:
                                                                            o.yearPickerValues,
                                                                        },
                                                                        function () {
                                                                          return [
                                                                            Ke(
                                                                              z(
                                                                                o
                                                                                  .yearPickerValues[0]
                                                                                  .value,
                                                                              ) +
                                                                                " - " +
                                                                                z(
                                                                                  o
                                                                                    .yearPickerValues[
                                                                                    o
                                                                                      .yearPickerValues
                                                                                      .length -
                                                                                      1
                                                                                  ]
                                                                                    .value,
                                                                                ),
                                                                              1,
                                                                            ),
                                                                          ];
                                                                        },
                                                                      ),
                                                                    ],
                                                                    16,
                                                                  ))
                                                                : le("", !0),
                                                            ],
                                                            16,
                                                          ),
                                                          De(
                                                            t.$slots,
                                                            "nextbutton",
                                                            {
                                                              actionCallback:
                                                                function (h) {
                                                                  return o.onNextButtonClick(
                                                                    h,
                                                                  );
                                                                },
                                                              keydownCallback:
                                                                function (h) {
                                                                  return o.onContainerButtonKeydown(
                                                                    h,
                                                                  );
                                                                },
                                                            },
                                                            function () {
                                                              return [
                                                                st(
                                                                  O(
                                                                    a,
                                                                    Q(
                                                                      {
                                                                        ref_for:
                                                                          !0,
                                                                        ref: o.nextButtonRef,
                                                                        class:
                                                                          t.cx(
                                                                            "pcNextButton",
                                                                          ),
                                                                        disabled:
                                                                          t.disabled,
                                                                        "aria-label":
                                                                          i.currentView ===
                                                                          "year"
                                                                            ? t
                                                                                .$primevue
                                                                                .config
                                                                                .locale
                                                                                .nextDecade
                                                                            : i.currentView ===
                                                                                "month"
                                                                              ? t
                                                                                  .$primevue
                                                                                  .config
                                                                                  .locale
                                                                                  .nextYear
                                                                              : t
                                                                                  .$primevue
                                                                                  .config
                                                                                  .locale
                                                                                  .nextMonth,
                                                                        unstyled:
                                                                          t.unstyled,
                                                                        onClick:
                                                                          o.onNextButtonClick,
                                                                        onKeydown:
                                                                          o.onContainerButtonKeydown,
                                                                      },
                                                                      {
                                                                        ref_for:
                                                                          !0,
                                                                      },
                                                                      t.navigatorButtonProps,
                                                                      {
                                                                        pt: t.ptm(
                                                                          "pcNextButton",
                                                                        ),
                                                                        "data-pc-group-section":
                                                                          "navigator",
                                                                      },
                                                                    ),
                                                                    {
                                                                      icon: Ye(
                                                                        function (
                                                                          p,
                                                                        ) {
                                                                          return [
                                                                            De(
                                                                              t.$slots,
                                                                              "nexticon",
                                                                              {},
                                                                              function () {
                                                                                return [
                                                                                  (E(),
                                                                                  Be(
                                                                                    Dt(
                                                                                      t.nextIcon
                                                                                        ? "span"
                                                                                        : "ChevronRightIcon",
                                                                                    ),
                                                                                    Q(
                                                                                      {
                                                                                        class:
                                                                                          [
                                                                                            t.nextIcon,
                                                                                            p.class,
                                                                                          ],
                                                                                      },
                                                                                      {
                                                                                        ref_for:
                                                                                          !0,
                                                                                      },
                                                                                      t.ptm(
                                                                                        "pcNextButton",
                                                                                      )
                                                                                        .icon,
                                                                                    ),
                                                                                    null,
                                                                                    16,
                                                                                    [
                                                                                      "class",
                                                                                    ],
                                                                                  )),
                                                                                ];
                                                                              },
                                                                            ),
                                                                          ];
                                                                        },
                                                                      ),
                                                                      _: 2,
                                                                    },
                                                                    1040,
                                                                    [
                                                                      "class",
                                                                      "disabled",
                                                                      "aria-label",
                                                                      "unstyled",
                                                                      "onClick",
                                                                      "onKeydown",
                                                                      "pt",
                                                                    ],
                                                                  ),
                                                                  [
                                                                    [
                                                                      qu,
                                                                      t.numberOfMonths ===
                                                                      1
                                                                        ? !0
                                                                        : f ===
                                                                          t.numberOfMonths -
                                                                            1,
                                                                    ],
                                                                  ],
                                                                ),
                                                              ];
                                                            },
                                                          ),
                                                        ],
                                                        16,
                                                      ),
                                                      i.currentView === "date"
                                                        ? (E(),
                                                          R(
                                                            "table",
                                                            Q(
                                                              {
                                                                key: 0,
                                                                class:
                                                                  t.cx(
                                                                    "dayView",
                                                                  ),
                                                                role: "grid",
                                                              },
                                                              { ref_for: !0 },
                                                              t.ptm("dayView"),
                                                            ),
                                                            [
                                                              l(
                                                                "thead",
                                                                Q(
                                                                  {
                                                                    ref_for: !0,
                                                                  },
                                                                  t.ptm(
                                                                    "tableHeader",
                                                                  ),
                                                                ),
                                                                [
                                                                  l(
                                                                    "tr",
                                                                    Q(
                                                                      {
                                                                        ref_for:
                                                                          !0,
                                                                      },
                                                                      t.ptm(
                                                                        "tableHeaderRow",
                                                                      ),
                                                                    ),
                                                                    [
                                                                      t.showWeek
                                                                        ? (E(),
                                                                          R(
                                                                            "th",
                                                                            Q(
                                                                              {
                                                                                key: 0,
                                                                                scope:
                                                                                  "col",
                                                                                class:
                                                                                  t.cx(
                                                                                    "weekHeader",
                                                                                  ),
                                                                              },
                                                                              {
                                                                                ref_for:
                                                                                  !0,
                                                                              },
                                                                              t.ptm(
                                                                                "weekHeader",
                                                                                {
                                                                                  context:
                                                                                    {
                                                                                      disabled:
                                                                                        t.showWeek,
                                                                                    },
                                                                                },
                                                                              ),
                                                                              {
                                                                                "data-p-disabled":
                                                                                  t.showWeek,
                                                                                "data-pc-group-section":
                                                                                  "tableheadercell",
                                                                              },
                                                                            ),
                                                                            [
                                                                              De(
                                                                                t.$slots,
                                                                                "weekheaderlabel",
                                                                                {},
                                                                                function () {
                                                                                  return [
                                                                                    l(
                                                                                      "span",
                                                                                      Q(
                                                                                        {
                                                                                          ref_for:
                                                                                            !0,
                                                                                        },
                                                                                        t.ptm(
                                                                                          "weekHeaderLabel",
                                                                                          {
                                                                                            context:
                                                                                              {
                                                                                                disabled:
                                                                                                  t.showWeek,
                                                                                              },
                                                                                          },
                                                                                        ),
                                                                                        {
                                                                                          "data-pc-group-section":
                                                                                            "tableheadercelllabel",
                                                                                        },
                                                                                      ),
                                                                                      z(
                                                                                        o.weekHeaderLabel,
                                                                                      ),
                                                                                      17,
                                                                                    ),
                                                                                  ];
                                                                                },
                                                                              ),
                                                                            ],
                                                                            16,
                                                                            G$,
                                                                          ))
                                                                        : le(
                                                                            "",
                                                                            !0,
                                                                          ),
                                                                      (E(!0),
                                                                      R(
                                                                        We,
                                                                        null,
                                                                        mt(
                                                                          o.weekDays,
                                                                          function (
                                                                            p,
                                                                          ) {
                                                                            return (
                                                                              E(),
                                                                              R(
                                                                                "th",
                                                                                Q(
                                                                                  {
                                                                                    key: p,
                                                                                    scope:
                                                                                      "col",
                                                                                    abbr: p,
                                                                                  },
                                                                                  {
                                                                                    ref_for:
                                                                                      !0,
                                                                                  },
                                                                                  t.ptm(
                                                                                    "tableHeaderCell",
                                                                                  ),
                                                                                  {
                                                                                    "data-pc-group-section":
                                                                                      "tableheadercell",
                                                                                    class:
                                                                                      t.cx(
                                                                                        "weekDayCell",
                                                                                      ),
                                                                                  },
                                                                                ),
                                                                                [
                                                                                  l(
                                                                                    "span",
                                                                                    Q(
                                                                                      {
                                                                                        class:
                                                                                          t.cx(
                                                                                            "weekDay",
                                                                                          ),
                                                                                      },
                                                                                      {
                                                                                        ref_for:
                                                                                          !0,
                                                                                      },
                                                                                      t.ptm(
                                                                                        "weekDay",
                                                                                      ),
                                                                                      {
                                                                                        "data-pc-group-section":
                                                                                          "tableheadercelllabel",
                                                                                      },
                                                                                    ),
                                                                                    z(
                                                                                      p,
                                                                                    ),
                                                                                    17,
                                                                                  ),
                                                                                ],
                                                                                16,
                                                                                W$,
                                                                              )
                                                                            );
                                                                          },
                                                                        ),
                                                                        128,
                                                                      )),
                                                                    ],
                                                                    16,
                                                                  ),
                                                                ],
                                                                16,
                                                              ),
                                                              l(
                                                                "tbody",
                                                                Q(
                                                                  {
                                                                    ref_for: !0,
                                                                  },
                                                                  t.ptm(
                                                                    "tableBody",
                                                                  ),
                                                                ),
                                                                [
                                                                  (E(!0),
                                                                  R(
                                                                    We,
                                                                    null,
                                                                    mt(
                                                                      d.dates,
                                                                      function (
                                                                        p,
                                                                        h,
                                                                      ) {
                                                                        return (
                                                                          E(),
                                                                          R(
                                                                            "tr",
                                                                            Q(
                                                                              {
                                                                                key:
                                                                                  p[0]
                                                                                    .day +
                                                                                  "" +
                                                                                  p[0]
                                                                                    .month,
                                                                              },
                                                                              {
                                                                                ref_for:
                                                                                  !0,
                                                                              },
                                                                              t.ptm(
                                                                                "tableBodyRow",
                                                                              ),
                                                                            ),
                                                                            [
                                                                              t.showWeek
                                                                                ? (E(),
                                                                                  R(
                                                                                    "td",
                                                                                    Q(
                                                                                      {
                                                                                        key: 0,
                                                                                        class:
                                                                                          t.cx(
                                                                                            "weekNumber",
                                                                                          ),
                                                                                      },
                                                                                      {
                                                                                        ref_for:
                                                                                          !0,
                                                                                      },
                                                                                      t.ptm(
                                                                                        "weekNumber",
                                                                                      ),
                                                                                      {
                                                                                        "data-pc-group-section":
                                                                                          "tablebodycell",
                                                                                      },
                                                                                    ),
                                                                                    [
                                                                                      l(
                                                                                        "span",
                                                                                        Q(
                                                                                          {
                                                                                            class:
                                                                                              t.cx(
                                                                                                "weekLabelContainer",
                                                                                              ),
                                                                                          },
                                                                                          {
                                                                                            ref_for:
                                                                                              !0,
                                                                                          },
                                                                                          t.ptm(
                                                                                            "weekLabelContainer",
                                                                                            {
                                                                                              context:
                                                                                                {
                                                                                                  disabled:
                                                                                                    t.showWeek,
                                                                                                },
                                                                                            },
                                                                                          ),
                                                                                          {
                                                                                            "data-p-disabled":
                                                                                              t.showWeek,
                                                                                            "data-pc-group-section":
                                                                                              "tablebodycelllabel",
                                                                                          },
                                                                                        ),
                                                                                        [
                                                                                          De(
                                                                                            t.$slots,
                                                                                            "weeklabel",
                                                                                            {
                                                                                              weekNumber:
                                                                                                d
                                                                                                  .weekNumbers[
                                                                                                  h
                                                                                                ],
                                                                                            },
                                                                                            function () {
                                                                                              return [
                                                                                                d
                                                                                                  .weekNumbers[
                                                                                                  h
                                                                                                ] <
                                                                                                10
                                                                                                  ? (E(),
                                                                                                    R(
                                                                                                      "span",
                                                                                                      Q(
                                                                                                        {
                                                                                                          key: 0,
                                                                                                          style:
                                                                                                            {
                                                                                                              visibility:
                                                                                                                "hidden",
                                                                                                            },
                                                                                                        },
                                                                                                        {
                                                                                                          ref_for:
                                                                                                            !0,
                                                                                                        },
                                                                                                        t.ptm(
                                                                                                          "weekLabel",
                                                                                                        ),
                                                                                                      ),
                                                                                                      "0",
                                                                                                      16,
                                                                                                    ))
                                                                                                  : le(
                                                                                                      "",
                                                                                                      !0,
                                                                                                    ),
                                                                                                Ke(
                                                                                                  " " +
                                                                                                    z(
                                                                                                      d
                                                                                                        .weekNumbers[
                                                                                                        h
                                                                                                      ],
                                                                                                    ),
                                                                                                  1,
                                                                                                ),
                                                                                              ];
                                                                                            },
                                                                                          ),
                                                                                        ],
                                                                                        16,
                                                                                        K$,
                                                                                      ),
                                                                                    ],
                                                                                    16,
                                                                                  ))
                                                                                : le(
                                                                                    "",
                                                                                    !0,
                                                                                  ),
                                                                              (E(
                                                                                !0,
                                                                              ),
                                                                              R(
                                                                                We,
                                                                                null,
                                                                                mt(
                                                                                  p,
                                                                                  function (
                                                                                    v,
                                                                                  ) {
                                                                                    return (
                                                                                      E(),
                                                                                      R(
                                                                                        "td",
                                                                                        Q(
                                                                                          {
                                                                                            key:
                                                                                              v.day +
                                                                                              "" +
                                                                                              v.month,
                                                                                            "aria-label":
                                                                                              v.day,
                                                                                            class:
                                                                                              t.cx(
                                                                                                "dayCell",
                                                                                                {
                                                                                                  date: v,
                                                                                                },
                                                                                              ),
                                                                                          },
                                                                                          {
                                                                                            ref_for:
                                                                                              !0,
                                                                                          },
                                                                                          t.ptm(
                                                                                            "dayCell",
                                                                                            {
                                                                                              context:
                                                                                                {
                                                                                                  date: v,
                                                                                                  today:
                                                                                                    v.today,
                                                                                                  otherMonth:
                                                                                                    v.otherMonth,
                                                                                                  selected:
                                                                                                    o.isSelected(
                                                                                                      v,
                                                                                                    ),
                                                                                                  disabled:
                                                                                                    !v.selectable,
                                                                                                },
                                                                                            },
                                                                                          ),
                                                                                          {
                                                                                            "data-p-today":
                                                                                              v.today,
                                                                                            "data-p-other-month":
                                                                                              v.otherMonth,
                                                                                            "data-pc-group-section":
                                                                                              "tablebodycell",
                                                                                          },
                                                                                        ),
                                                                                        [
                                                                                          t.showOtherMonths ||
                                                                                          !v.otherMonth
                                                                                            ? st(
                                                                                                (E(),
                                                                                                R(
                                                                                                  "span",
                                                                                                  Q(
                                                                                                    {
                                                                                                      key: 0,
                                                                                                      class:
                                                                                                        t.cx(
                                                                                                          "day",
                                                                                                          {
                                                                                                            date: v,
                                                                                                          },
                                                                                                        ),
                                                                                                      onClick:
                                                                                                        function (
                                                                                                          g,
                                                                                                        ) {
                                                                                                          return o.onDateSelect(
                                                                                                            g,
                                                                                                            v,
                                                                                                          );
                                                                                                        },
                                                                                                      draggable:
                                                                                                        "false",
                                                                                                      onKeydown:
                                                                                                        function (
                                                                                                          g,
                                                                                                        ) {
                                                                                                          return o.onDateCellKeydown(
                                                                                                            g,
                                                                                                            v,
                                                                                                            f,
                                                                                                          );
                                                                                                        },
                                                                                                      "aria-selected":
                                                                                                        o.isSelected(
                                                                                                          v,
                                                                                                        ),
                                                                                                      "aria-disabled":
                                                                                                        !v.selectable,
                                                                                                    },
                                                                                                    {
                                                                                                      ref_for:
                                                                                                        !0,
                                                                                                    },
                                                                                                    t.ptm(
                                                                                                      "day",
                                                                                                      {
                                                                                                        context:
                                                                                                          {
                                                                                                            date: v,
                                                                                                            today:
                                                                                                              v.today,
                                                                                                            otherMonth:
                                                                                                              v.otherMonth,
                                                                                                            selected:
                                                                                                              o.isSelected(
                                                                                                                v,
                                                                                                              ),
                                                                                                            disabled:
                                                                                                              !v.selectable,
                                                                                                          },
                                                                                                      },
                                                                                                    ),
                                                                                                    {
                                                                                                      "data-p":
                                                                                                        o.dayDataP(
                                                                                                          v,
                                                                                                        ),
                                                                                                      "data-pc-group-section":
                                                                                                        "tablebodycelllabel",
                                                                                                    },
                                                                                                  ),
                                                                                                  [
                                                                                                    De(
                                                                                                      t.$slots,
                                                                                                      "date",
                                                                                                      {
                                                                                                        date: v,
                                                                                                      },
                                                                                                      function () {
                                                                                                        return [
                                                                                                          Ke(
                                                                                                            z(
                                                                                                              v.day,
                                                                                                            ),
                                                                                                            1,
                                                                                                          ),
                                                                                                        ];
                                                                                                      },
                                                                                                    ),
                                                                                                  ],
                                                                                                  16,
                                                                                                  Y$,
                                                                                                )),
                                                                                                [
                                                                                                  [
                                                                                                    u,
                                                                                                  ],
                                                                                                ],
                                                                                              )
                                                                                            : le(
                                                                                                "",
                                                                                                !0,
                                                                                              ),
                                                                                          o.isSelected(
                                                                                            v,
                                                                                          )
                                                                                            ? (E(),
                                                                                              R(
                                                                                                "div",
                                                                                                Q(
                                                                                                  {
                                                                                                    key: 1,
                                                                                                    class:
                                                                                                      "p-hidden-accessible",
                                                                                                    "aria-live":
                                                                                                      "polite",
                                                                                                  },
                                                                                                  {
                                                                                                    ref_for:
                                                                                                      !0,
                                                                                                  },
                                                                                                  t.ptm(
                                                                                                    "hiddenSelectedDay",
                                                                                                  ),
                                                                                                  {
                                                                                                    "data-p-hidden-accessible":
                                                                                                      !0,
                                                                                                  },
                                                                                                ),
                                                                                                z(
                                                                                                  v.day,
                                                                                                ),
                                                                                                17,
                                                                                              ))
                                                                                            : le(
                                                                                                "",
                                                                                                !0,
                                                                                              ),
                                                                                        ],
                                                                                        16,
                                                                                        X$,
                                                                                      )
                                                                                    );
                                                                                  },
                                                                                ),
                                                                                128,
                                                                              )),
                                                                            ],
                                                                            16,
                                                                          )
                                                                        );
                                                                      },
                                                                    ),
                                                                    128,
                                                                  )),
                                                                ],
                                                                16,
                                                              ),
                                                            ],
                                                            16,
                                                          ))
                                                        : le("", !0),
                                                    ],
                                                    16,
                                                  )
                                                );
                                              }),
                                              128,
                                            )),
                                          ],
                                          16,
                                        ),
                                        i.currentView === "month"
                                          ? (E(),
                                            R(
                                              "div",
                                              Q(
                                                {
                                                  key: 0,
                                                  class: t.cx("monthView"),
                                                },
                                                t.ptm("monthView"),
                                              ),
                                              [
                                                (E(!0),
                                                R(
                                                  We,
                                                  null,
                                                  mt(
                                                    o.monthPickerValues,
                                                    function (d, f) {
                                                      return st(
                                                        (E(),
                                                        R(
                                                          "span",
                                                          Q(
                                                            {
                                                              key: d,
                                                              onClick:
                                                                function (h) {
                                                                  return o.onMonthSelect(
                                                                    h,
                                                                    {
                                                                      month: d,
                                                                      index: f,
                                                                    },
                                                                  );
                                                                },
                                                              onKeydown:
                                                                function (h) {
                                                                  return o.onMonthCellKeydown(
                                                                    h,
                                                                    {
                                                                      month: d,
                                                                      index: f,
                                                                    },
                                                                  );
                                                                },
                                                              class: t.cx(
                                                                "month",
                                                                {
                                                                  month: d,
                                                                  index: f,
                                                                },
                                                              ),
                                                            },
                                                            { ref_for: !0 },
                                                            t.ptm("month", {
                                                              context: {
                                                                month: d,
                                                                monthIndex: f,
                                                                selected:
                                                                  o.isMonthSelected(
                                                                    f,
                                                                  ),
                                                                disabled:
                                                                  !d.selectable,
                                                              },
                                                            }),
                                                            {
                                                              "data-p-disabled":
                                                                !d.selectable,
                                                              "data-p-selected":
                                                                o.isMonthSelected(
                                                                  f,
                                                                ),
                                                            },
                                                          ),
                                                          [
                                                            Ke(
                                                              z(d.value) + " ",
                                                              1,
                                                            ),
                                                            o.isMonthSelected(f)
                                                              ? (E(),
                                                                R(
                                                                  "div",
                                                                  Q(
                                                                    {
                                                                      key: 0,
                                                                      class:
                                                                        "p-hidden-accessible",
                                                                      "aria-live":
                                                                        "polite",
                                                                    },
                                                                    {
                                                                      ref_for:
                                                                        !0,
                                                                    },
                                                                    t.ptm(
                                                                      "hiddenMonth",
                                                                    ),
                                                                    {
                                                                      "data-p-hidden-accessible":
                                                                        !0,
                                                                    },
                                                                  ),
                                                                  z(d.value),
                                                                  17,
                                                                ))
                                                              : le("", !0),
                                                          ],
                                                          16,
                                                          q$,
                                                        )),
                                                        [[u]],
                                                      );
                                                    },
                                                  ),
                                                  128,
                                                )),
                                              ],
                                              16,
                                            ))
                                          : le("", !0),
                                        i.currentView === "year"
                                          ? (E(),
                                            R(
                                              "div",
                                              Q(
                                                {
                                                  key: 1,
                                                  class: t.cx("yearView"),
                                                },
                                                t.ptm("yearView"),
                                              ),
                                              [
                                                (E(!0),
                                                R(
                                                  We,
                                                  null,
                                                  mt(
                                                    o.yearPickerValues,
                                                    function (d) {
                                                      return st(
                                                        (E(),
                                                        R(
                                                          "span",
                                                          Q(
                                                            {
                                                              key: d.value,
                                                              onClick:
                                                                function (p) {
                                                                  return o.onYearSelect(
                                                                    p,
                                                                    d,
                                                                  );
                                                                },
                                                              onKeydown:
                                                                function (p) {
                                                                  return o.onYearCellKeydown(
                                                                    p,
                                                                    d,
                                                                  );
                                                                },
                                                              class: t.cx(
                                                                "year",
                                                                { year: d },
                                                              ),
                                                            },
                                                            { ref_for: !0 },
                                                            t.ptm("year", {
                                                              context: {
                                                                year: d,
                                                                selected:
                                                                  o.isYearSelected(
                                                                    d.value,
                                                                  ),
                                                                disabled:
                                                                  !d.selectable,
                                                              },
                                                            }),
                                                            {
                                                              "data-p-disabled":
                                                                !d.selectable,
                                                              "data-p-selected":
                                                                o.isYearSelected(
                                                                  d.value,
                                                                ),
                                                            },
                                                          ),
                                                          [
                                                            Ke(
                                                              z(d.value) + " ",
                                                              1,
                                                            ),
                                                            o.isYearSelected(
                                                              d.value,
                                                            )
                                                              ? (E(),
                                                                R(
                                                                  "div",
                                                                  Q(
                                                                    {
                                                                      key: 0,
                                                                      class:
                                                                        "p-hidden-accessible",
                                                                      "aria-live":
                                                                        "polite",
                                                                    },
                                                                    {
                                                                      ref_for:
                                                                        !0,
                                                                    },
                                                                    t.ptm(
                                                                      "hiddenYear",
                                                                    ),
                                                                    {
                                                                      "data-p-hidden-accessible":
                                                                        !0,
                                                                    },
                                                                  ),
                                                                  z(d.value),
                                                                  17,
                                                                ))
                                                              : le("", !0),
                                                          ],
                                                          16,
                                                          Z$,
                                                        )),
                                                        [[u]],
                                                      );
                                                    },
                                                  ),
                                                  128,
                                                )),
                                              ],
                                              16,
                                            ))
                                          : le("", !0),
                                      ],
                                      64,
                                    )),
                                (t.showTime || t.timeOnly) &&
                                i.currentView === "date"
                                  ? (E(),
                                    R(
                                      "div",
                                      Q(
                                        {
                                          key: 1,
                                          class: t.cx("timePicker"),
                                          "data-p": o.timePickerDataP,
                                        },
                                        t.ptm("timePicker"),
                                      ),
                                      [
                                        l(
                                          "div",
                                          Q(
                                            { class: t.cx("hourPicker") },
                                            t.ptm("hourPicker"),
                                            {
                                              "data-pc-group-section":
                                                "timepickerContainer",
                                            },
                                          ),
                                          [
                                            De(
                                              t.$slots,
                                              "hourincrementbutton",
                                              {
                                                callbacks:
                                                  o.hourIncrementCallbacks,
                                              },
                                              function () {
                                                return [
                                                  O(
                                                    a,
                                                    Q(
                                                      {
                                                        class:
                                                          t.cx(
                                                            "pcIncrementButton",
                                                          ),
                                                        "aria-label":
                                                          t.$primevue.config
                                                            .locale.nextHour,
                                                        unstyled: t.unstyled,
                                                        onMousedown:
                                                          e[9] ||
                                                          (e[9] = function (d) {
                                                            return o.onTimePickerElementMouseDown(
                                                              d,
                                                              0,
                                                              1,
                                                            );
                                                          }),
                                                        onMouseup:
                                                          e[10] ||
                                                          (e[10] = function (
                                                            d,
                                                          ) {
                                                            return o.onTimePickerElementMouseUp(
                                                              d,
                                                            );
                                                          }),
                                                        onKeydown: [
                                                          o.onContainerButtonKeydown,
                                                          e[12] ||
                                                            (e[12] = zt(
                                                              function (d) {
                                                                return o.onTimePickerElementMouseDown(
                                                                  d,
                                                                  0,
                                                                  1,
                                                                );
                                                              },
                                                              ["enter"],
                                                            )),
                                                          e[13] ||
                                                            (e[13] = zt(
                                                              function (d) {
                                                                return o.onTimePickerElementMouseDown(
                                                                  d,
                                                                  0,
                                                                  1,
                                                                );
                                                              },
                                                              ["space"],
                                                            )),
                                                        ],
                                                        onMouseleave:
                                                          e[11] ||
                                                          (e[11] = function (
                                                            d,
                                                          ) {
                                                            return o.onTimePickerElementMouseLeave();
                                                          }),
                                                        onKeyup: [
                                                          e[14] ||
                                                            (e[14] = zt(
                                                              function (d) {
                                                                return o.onTimePickerElementMouseUp(
                                                                  d,
                                                                );
                                                              },
                                                              ["enter"],
                                                            )),
                                                          e[15] ||
                                                            (e[15] = zt(
                                                              function (d) {
                                                                return o.onTimePickerElementMouseUp(
                                                                  d,
                                                                );
                                                              },
                                                              ["space"],
                                                            )),
                                                        ],
                                                      },
                                                      t.timepickerButtonProps,
                                                      {
                                                        pt: t.ptm(
                                                          "pcIncrementButton",
                                                        ),
                                                        "data-pc-group-section":
                                                          "timepickerbutton",
                                                      },
                                                    ),
                                                    {
                                                      icon: Ye(function (d) {
                                                        return [
                                                          De(
                                                            t.$slots,
                                                            "incrementicon",
                                                            {},
                                                            function () {
                                                              return [
                                                                (E(),
                                                                Be(
                                                                  Dt(
                                                                    t.incrementIcon
                                                                      ? "span"
                                                                      : "ChevronUpIcon",
                                                                  ),
                                                                  Q(
                                                                    {
                                                                      class: [
                                                                        t.incrementIcon,
                                                                        d.class,
                                                                      ],
                                                                    },
                                                                    t.ptm(
                                                                      "pcIncrementButton",
                                                                    ).icon,
                                                                    {
                                                                      "data-pc-group-section":
                                                                        "timepickerlabel",
                                                                    },
                                                                  ),
                                                                  null,
                                                                  16,
                                                                  ["class"],
                                                                )),
                                                              ];
                                                            },
                                                          ),
                                                        ];
                                                      }),
                                                      _: 3,
                                                    },
                                                    16,
                                                    [
                                                      "class",
                                                      "aria-label",
                                                      "unstyled",
                                                      "onKeydown",
                                                      "pt",
                                                    ],
                                                  ),
                                                ];
                                              },
                                            ),
                                            l(
                                              "span",
                                              Q(t.ptm("hour"), {
                                                "data-pc-group-section":
                                                  "timepickerlabel",
                                              }),
                                              z(o.formattedCurrentHour),
                                              17,
                                            ),
                                            De(
                                              t.$slots,
                                              "hourdecrementbutton",
                                              {
                                                callbacks:
                                                  o.hourDecrementCallbacks,
                                              },
                                              function () {
                                                return [
                                                  O(
                                                    a,
                                                    Q(
                                                      {
                                                        class:
                                                          t.cx(
                                                            "pcDecrementButton",
                                                          ),
                                                        "aria-label":
                                                          t.$primevue.config
                                                            .locale.prevHour,
                                                        unstyled: t.unstyled,
                                                        onMousedown:
                                                          e[16] ||
                                                          (e[16] = function (
                                                            d,
                                                          ) {
                                                            return o.onTimePickerElementMouseDown(
                                                              d,
                                                              0,
                                                              -1,
                                                            );
                                                          }),
                                                        onMouseup:
                                                          e[17] ||
                                                          (e[17] = function (
                                                            d,
                                                          ) {
                                                            return o.onTimePickerElementMouseUp(
                                                              d,
                                                            );
                                                          }),
                                                        onKeydown: [
                                                          o.onContainerButtonKeydown,
                                                          e[19] ||
                                                            (e[19] = zt(
                                                              function (d) {
                                                                return o.onTimePickerElementMouseDown(
                                                                  d,
                                                                  0,
                                                                  -1,
                                                                );
                                                              },
                                                              ["enter"],
                                                            )),
                                                          e[20] ||
                                                            (e[20] = zt(
                                                              function (d) {
                                                                return o.onTimePickerElementMouseDown(
                                                                  d,
                                                                  0,
                                                                  -1,
                                                                );
                                                              },
                                                              ["space"],
                                                            )),
                                                        ],
                                                        onMouseleave:
                                                          e[18] ||
                                                          (e[18] = function (
                                                            d,
                                                          ) {
                                                            return o.onTimePickerElementMouseLeave();
                                                          }),
                                                        onKeyup: [
                                                          e[21] ||
                                                            (e[21] = zt(
                                                              function (d) {
                                                                return o.onTimePickerElementMouseUp(
                                                                  d,
                                                                );
                                                              },
                                                              ["enter"],
                                                            )),
                                                          e[22] ||
                                                            (e[22] = zt(
                                                              function (d) {
                                                                return o.onTimePickerElementMouseUp(
                                                                  d,
                                                                );
                                                              },
                                                              ["space"],
                                                            )),
                                                        ],
                                                      },
                                                      t.timepickerButtonProps,
                                                      {
                                                        pt: t.ptm(
                                                          "pcDecrementButton",
                                                        ),
                                                        "data-pc-group-section":
                                                          "timepickerbutton",
                                                      },
                                                    ),
                                                    {
                                                      icon: Ye(function (d) {
                                                        return [
                                                          De(
                                                            t.$slots,
                                                            "decrementicon",
                                                            {},
                                                            function () {
                                                              return [
                                                                (E(),
                                                                Be(
                                                                  Dt(
                                                                    t.decrementIcon
                                                                      ? "span"
                                                                      : "ChevronDownIcon",
                                                                  ),
                                                                  Q(
                                                                    {
                                                                      class: [
                                                                        t.decrementIcon,
                                                                        d.class,
                                                                      ],
                                                                    },
                                                                    t.ptm(
                                                                      "pcDecrementButton",
                                                                    ).icon,
                                                                    {
                                                                      "data-pc-group-section":
                                                                        "timepickerlabel",
                                                                    },
                                                                  ),
                                                                  null,
                                                                  16,
                                                                  ["class"],
                                                                )),
                                                              ];
                                                            },
                                                          ),
                                                        ];
                                                      }),
                                                      _: 3,
                                                    },
                                                    16,
                                                    [
                                                      "class",
                                                      "aria-label",
                                                      "unstyled",
                                                      "onKeydown",
                                                      "pt",
                                                    ],
                                                  ),
                                                ];
                                              },
                                            ),
                                          ],
                                          16,
                                        ),
                                        l(
                                          "div",
                                          Q(t.ptm("separatorContainer"), {
                                            "data-pc-group-section":
                                              "timepickerContainer",
                                          }),
                                          [
                                            l(
                                              "span",
                                              Q(t.ptm("separator"), {
                                                "data-pc-group-section":
                                                  "timepickerlabel",
                                              }),
                                              z(t.timeSeparator),
                                              17,
                                            ),
                                          ],
                                          16,
                                        ),
                                        l(
                                          "div",
                                          Q(
                                            { class: t.cx("minutePicker") },
                                            t.ptm("minutePicker"),
                                            {
                                              "data-pc-group-section":
                                                "timepickerContainer",
                                            },
                                          ),
                                          [
                                            De(
                                              t.$slots,
                                              "minuteincrementbutton",
                                              {
                                                callbacks:
                                                  o.minuteIncrementCallbacks,
                                              },
                                              function () {
                                                return [
                                                  O(
                                                    a,
                                                    Q(
                                                      {
                                                        class:
                                                          t.cx(
                                                            "pcIncrementButton",
                                                          ),
                                                        "aria-label":
                                                          t.$primevue.config
                                                            .locale.nextMinute,
                                                        disabled: t.disabled,
                                                        unstyled: t.unstyled,
                                                        onMousedown:
                                                          e[23] ||
                                                          (e[23] = function (
                                                            d,
                                                          ) {
                                                            return o.onTimePickerElementMouseDown(
                                                              d,
                                                              1,
                                                              1,
                                                            );
                                                          }),
                                                        onMouseup:
                                                          e[24] ||
                                                          (e[24] = function (
                                                            d,
                                                          ) {
                                                            return o.onTimePickerElementMouseUp(
                                                              d,
                                                            );
                                                          }),
                                                        onKeydown: [
                                                          o.onContainerButtonKeydown,
                                                          e[26] ||
                                                            (e[26] = zt(
                                                              function (d) {
                                                                return o.onTimePickerElementMouseDown(
                                                                  d,
                                                                  1,
                                                                  1,
                                                                );
                                                              },
                                                              ["enter"],
                                                            )),
                                                          e[27] ||
                                                            (e[27] = zt(
                                                              function (d) {
                                                                return o.onTimePickerElementMouseDown(
                                                                  d,
                                                                  1,
                                                                  1,
                                                                );
                                                              },
                                                              ["space"],
                                                            )),
                                                        ],
                                                        onMouseleave:
                                                          e[25] ||
                                                          (e[25] = function (
                                                            d,
                                                          ) {
                                                            return o.onTimePickerElementMouseLeave();
                                                          }),
                                                        onKeyup: [
                                                          e[28] ||
                                                            (e[28] = zt(
                                                              function (d) {
                                                                return o.onTimePickerElementMouseUp(
                                                                  d,
                                                                );
                                                              },
                                                              ["enter"],
                                                            )),
                                                          e[29] ||
                                                            (e[29] = zt(
                                                              function (d) {
                                                                return o.onTimePickerElementMouseUp(
                                                                  d,
                                                                );
                                                              },
                                                              ["space"],
                                                            )),
                                                        ],
                                                      },
                                                      t.timepickerButtonProps,
                                                      {
                                                        pt: t.ptm(
                                                          "pcIncrementButton",
                                                        ),
                                                        "data-pc-group-section":
                                                          "timepickerbutton",
                                                      },
                                                    ),
                                                    {
                                                      icon: Ye(function (d) {
                                                        return [
                                                          De(
                                                            t.$slots,
                                                            "incrementicon",
                                                            {},
                                                            function () {
                                                              return [
                                                                (E(),
                                                                Be(
                                                                  Dt(
                                                                    t.incrementIcon
                                                                      ? "span"
                                                                      : "ChevronUpIcon",
                                                                  ),
                                                                  Q(
                                                                    {
                                                                      class: [
                                                                        t.incrementIcon,
                                                                        d.class,
                                                                      ],
                                                                    },
                                                                    t.ptm(
                                                                      "pcIncrementButton",
                                                                    ).icon,
                                                                    {
                                                                      "data-pc-group-section":
                                                                        "timepickerlabel",
                                                                    },
                                                                  ),
                                                                  null,
                                                                  16,
                                                                  ["class"],
                                                                )),
                                                              ];
                                                            },
                                                          ),
                                                        ];
                                                      }),
                                                      _: 3,
                                                    },
                                                    16,
                                                    [
                                                      "class",
                                                      "aria-label",
                                                      "disabled",
                                                      "unstyled",
                                                      "onKeydown",
                                                      "pt",
                                                    ],
                                                  ),
                                                ];
                                              },
                                            ),
                                            l(
                                              "span",
                                              Q(t.ptm("minute"), {
                                                "data-pc-group-section":
                                                  "timepickerlabel",
                                              }),
                                              z(o.formattedCurrentMinute),
                                              17,
                                            ),
                                            De(
                                              t.$slots,
                                              "minutedecrementbutton",
                                              {
                                                callbacks:
                                                  o.minuteDecrementCallbacks,
                                              },
                                              function () {
                                                return [
                                                  O(
                                                    a,
                                                    Q(
                                                      {
                                                        class:
                                                          t.cx(
                                                            "pcDecrementButton",
                                                          ),
                                                        "aria-label":
                                                          t.$primevue.config
                                                            .locale.prevMinute,
                                                        disabled: t.disabled,
                                                        unstyled: t.unstyled,
                                                        onMousedown:
                                                          e[30] ||
                                                          (e[30] = function (
                                                            d,
                                                          ) {
                                                            return o.onTimePickerElementMouseDown(
                                                              d,
                                                              1,
                                                              -1,
                                                            );
                                                          }),
                                                        onMouseup:
                                                          e[31] ||
                                                          (e[31] = function (
                                                            d,
                                                          ) {
                                                            return o.onTimePickerElementMouseUp(
                                                              d,
                                                            );
                                                          }),
                                                        onKeydown: [
                                                          o.onContainerButtonKeydown,
                                                          e[33] ||
                                                            (e[33] = zt(
                                                              function (d) {
                                                                return o.onTimePickerElementMouseDown(
                                                                  d,
                                                                  1,
                                                                  -1,
                                                                );
                                                              },
                                                              ["enter"],
                                                            )),
                                                          e[34] ||
                                                            (e[34] = zt(
                                                              function (d) {
                                                                return o.onTimePickerElementMouseDown(
                                                                  d,
                                                                  1,
                                                                  -1,
                                                                );
                                                              },
                                                              ["space"],
                                                            )),
                                                        ],
                                                        onMouseleave:
                                                          e[32] ||
                                                          (e[32] = function (
                                                            d,
                                                          ) {
                                                            return o.onTimePickerElementMouseLeave();
                                                          }),
                                                        onKeyup: [
                                                          e[35] ||
                                                            (e[35] = zt(
                                                              function (d) {
                                                                return o.onTimePickerElementMouseUp(
                                                                  d,
                                                                );
                                                              },
                                                              ["enter"],
                                                            )),
                                                          e[36] ||
                                                            (e[36] = zt(
                                                              function (d) {
                                                                return o.onTimePickerElementMouseUp(
                                                                  d,
                                                                );
                                                              },
                                                              ["space"],
                                                            )),
                                                        ],
                                                      },
                                                      t.timepickerButtonProps,
                                                      {
                                                        pt: t.ptm(
                                                          "pcDecrementButton",
                                                        ),
                                                        "data-pc-group-section":
                                                          "timepickerbutton",
                                                      },
                                                    ),
                                                    {
                                                      icon: Ye(function (d) {
                                                        return [
                                                          De(
                                                            t.$slots,
                                                            "decrementicon",
                                                            {},
                                                            function () {
                                                              return [
                                                                (E(),
                                                                Be(
                                                                  Dt(
                                                                    t.decrementIcon
                                                                      ? "span"
                                                                      : "ChevronDownIcon",
                                                                  ),
                                                                  Q(
                                                                    {
                                                                      class: [
                                                                        t.decrementIcon,
                                                                        d.class,
                                                                      ],
                                                                    },
                                                                    t.ptm(
                                                                      "pcDecrementButton",
                                                                    ).icon,
                                                                    {
                                                                      "data-pc-group-section":
                                                                        "timepickerlabel",
                                                                    },
                                                                  ),
                                                                  null,
                                                                  16,
                                                                  ["class"],
                                                                )),
                                                              ];
                                                            },
                                                          ),
                                                        ];
                                                      }),
                                                      _: 3,
                                                    },
                                                    16,
                                                    [
                                                      "class",
                                                      "aria-label",
                                                      "disabled",
                                                      "unstyled",
                                                      "onKeydown",
                                                      "pt",
                                                    ],
                                                  ),
                                                ];
                                              },
                                            ),
                                          ],
                                          16,
                                        ),
                                        t.showSeconds
                                          ? (E(),
                                            R(
                                              "div",
                                              Q(
                                                {
                                                  key: 0,
                                                  class:
                                                    t.cx("separatorContainer"),
                                                },
                                                t.ptm("separatorContainer"),
                                                {
                                                  "data-pc-group-section":
                                                    "timepickerContainer",
                                                },
                                              ),
                                              [
                                                l(
                                                  "span",
                                                  Q(t.ptm("separator"), {
                                                    "data-pc-group-section":
                                                      "timepickerlabel",
                                                  }),
                                                  z(t.timeSeparator),
                                                  17,
                                                ),
                                              ],
                                              16,
                                            ))
                                          : le("", !0),
                                        t.showSeconds
                                          ? (E(),
                                            R(
                                              "div",
                                              Q(
                                                {
                                                  key: 1,
                                                  class: t.cx("secondPicker"),
                                                },
                                                t.ptm("secondPicker"),
                                                {
                                                  "data-pc-group-section":
                                                    "timepickerContainer",
                                                },
                                              ),
                                              [
                                                De(
                                                  t.$slots,
                                                  "secondincrementbutton",
                                                  {
                                                    callbacks:
                                                      o.secondIncrementCallbacks,
                                                  },
                                                  function () {
                                                    return [
                                                      O(
                                                        a,
                                                        Q(
                                                          {
                                                            class:
                                                              t.cx(
                                                                "pcIncrementButton",
                                                              ),
                                                            "aria-label":
                                                              t.$primevue.config
                                                                .locale
                                                                .nextSecond,
                                                            disabled:
                                                              t.disabled,
                                                            unstyled:
                                                              t.unstyled,
                                                            onMousedown:
                                                              e[37] ||
                                                              (e[37] =
                                                                function (d) {
                                                                  return o.onTimePickerElementMouseDown(
                                                                    d,
                                                                    2,
                                                                    1,
                                                                  );
                                                                }),
                                                            onMouseup:
                                                              e[38] ||
                                                              (e[38] =
                                                                function (d) {
                                                                  return o.onTimePickerElementMouseUp(
                                                                    d,
                                                                  );
                                                                }),
                                                            onKeydown: [
                                                              o.onContainerButtonKeydown,
                                                              e[40] ||
                                                                (e[40] = zt(
                                                                  function (d) {
                                                                    return o.onTimePickerElementMouseDown(
                                                                      d,
                                                                      2,
                                                                      1,
                                                                    );
                                                                  },
                                                                  ["enter"],
                                                                )),
                                                              e[41] ||
                                                                (e[41] = zt(
                                                                  function (d) {
                                                                    return o.onTimePickerElementMouseDown(
                                                                      d,
                                                                      2,
                                                                      1,
                                                                    );
                                                                  },
                                                                  ["space"],
                                                                )),
                                                            ],
                                                            onMouseleave:
                                                              e[39] ||
                                                              (e[39] =
                                                                function (d) {
                                                                  return o.onTimePickerElementMouseLeave();
                                                                }),
                                                            onKeyup: [
                                                              e[42] ||
                                                                (e[42] = zt(
                                                                  function (d) {
                                                                    return o.onTimePickerElementMouseUp(
                                                                      d,
                                                                    );
                                                                  },
                                                                  ["enter"],
                                                                )),
                                                              e[43] ||
                                                                (e[43] = zt(
                                                                  function (d) {
                                                                    return o.onTimePickerElementMouseUp(
                                                                      d,
                                                                    );
                                                                  },
                                                                  ["space"],
                                                                )),
                                                            ],
                                                          },
                                                          t.timepickerButtonProps,
                                                          {
                                                            pt: t.ptm(
                                                              "pcIncrementButton",
                                                            ),
                                                            "data-pc-group-section":
                                                              "timepickerbutton",
                                                          },
                                                        ),
                                                        {
                                                          icon: Ye(
                                                            function (d) {
                                                              return [
                                                                De(
                                                                  t.$slots,
                                                                  "incrementicon",
                                                                  {},
                                                                  function () {
                                                                    return [
                                                                      (E(),
                                                                      Be(
                                                                        Dt(
                                                                          t.incrementIcon
                                                                            ? "span"
                                                                            : "ChevronUpIcon",
                                                                        ),
                                                                        Q(
                                                                          {
                                                                            class:
                                                                              [
                                                                                t.incrementIcon,
                                                                                d.class,
                                                                              ],
                                                                          },
                                                                          t.ptm(
                                                                            "pcIncrementButton",
                                                                          )
                                                                            .icon,
                                                                          {
                                                                            "data-pc-group-section":
                                                                              "timepickerlabel",
                                                                          },
                                                                        ),
                                                                        null,
                                                                        16,
                                                                        [
                                                                          "class",
                                                                        ],
                                                                      )),
                                                                    ];
                                                                  },
                                                                ),
                                                              ];
                                                            },
                                                          ),
                                                          _: 3,
                                                        },
                                                        16,
                                                        [
                                                          "class",
                                                          "aria-label",
                                                          "disabled",
                                                          "unstyled",
                                                          "onKeydown",
                                                          "pt",
                                                        ],
                                                      ),
                                                    ];
                                                  },
                                                ),
                                                l(
                                                  "span",
                                                  Q(t.ptm("second"), {
                                                    "data-pc-group-section":
                                                      "timepickerlabel",
                                                  }),
                                                  z(o.formattedCurrentSecond),
                                                  17,
                                                ),
                                                De(
                                                  t.$slots,
                                                  "seconddecrementbutton",
                                                  {
                                                    callbacks:
                                                      o.secondDecrementCallbacks,
                                                  },
                                                  function () {
                                                    return [
                                                      O(
                                                        a,
                                                        Q(
                                                          {
                                                            class:
                                                              t.cx(
                                                                "pcDecrementButton",
                                                              ),
                                                            "aria-label":
                                                              t.$primevue.config
                                                                .locale
                                                                .prevSecond,
                                                            disabled:
                                                              t.disabled,
                                                            unstyled:
                                                              t.unstyled,
                                                            onMousedown:
                                                              e[44] ||
                                                              (e[44] =
                                                                function (d) {
                                                                  return o.onTimePickerElementMouseDown(
                                                                    d,
                                                                    2,
                                                                    -1,
                                                                  );
                                                                }),
                                                            onMouseup:
                                                              e[45] ||
                                                              (e[45] =
                                                                function (d) {
                                                                  return o.onTimePickerElementMouseUp(
                                                                    d,
                                                                  );
                                                                }),
                                                            onKeydown: [
                                                              o.onContainerButtonKeydown,
                                                              e[47] ||
                                                                (e[47] = zt(
                                                                  function (d) {
                                                                    return o.onTimePickerElementMouseDown(
                                                                      d,
                                                                      2,
                                                                      -1,
                                                                    );
                                                                  },
                                                                  ["enter"],
                                                                )),
                                                              e[48] ||
                                                                (e[48] = zt(
                                                                  function (d) {
                                                                    return o.onTimePickerElementMouseDown(
                                                                      d,
                                                                      2,
                                                                      -1,
                                                                    );
                                                                  },
                                                                  ["space"],
                                                                )),
                                                            ],
                                                            onMouseleave:
                                                              e[46] ||
                                                              (e[46] =
                                                                function (d) {
                                                                  return o.onTimePickerElementMouseLeave();
                                                                }),
                                                            onKeyup: [
                                                              e[49] ||
                                                                (e[49] = zt(
                                                                  function (d) {
                                                                    return o.onTimePickerElementMouseUp(
                                                                      d,
                                                                    );
                                                                  },
                                                                  ["enter"],
                                                                )),
                                                              e[50] ||
                                                                (e[50] = zt(
                                                                  function (d) {
                                                                    return o.onTimePickerElementMouseUp(
                                                                      d,
                                                                    );
                                                                  },
                                                                  ["space"],
                                                                )),
                                                            ],
                                                          },
                                                          t.timepickerButtonProps,
                                                          {
                                                            pt: t.ptm(
                                                              "pcDecrementButton",
                                                            ),
                                                            "data-pc-group-section":
                                                              "timepickerbutton",
                                                          },
                                                        ),
                                                        {
                                                          icon: Ye(
                                                            function (d) {
                                                              return [
                                                                De(
                                                                  t.$slots,
                                                                  "decrementicon",
                                                                  {},
                                                                  function () {
                                                                    return [
                                                                      (E(),
                                                                      Be(
                                                                        Dt(
                                                                          t.decrementIcon
                                                                            ? "span"
                                                                            : "ChevronDownIcon",
                                                                        ),
                                                                        Q(
                                                                          {
                                                                            class:
                                                                              [
                                                                                t.decrementIcon,
                                                                                d.class,
                                                                              ],
                                                                          },
                                                                          t.ptm(
                                                                            "pcDecrementButton",
                                                                          )
                                                                            .icon,
                                                                          {
                                                                            "data-pc-group-section":
                                                                              "timepickerlabel",
                                                                          },
                                                                        ),
                                                                        null,
                                                                        16,
                                                                        [
                                                                          "class",
                                                                        ],
                                                                      )),
                                                                    ];
                                                                  },
                                                                ),
                                                              ];
                                                            },
                                                          ),
                                                          _: 3,
                                                        },
                                                        16,
                                                        [
                                                          "class",
                                                          "aria-label",
                                                          "disabled",
                                                          "unstyled",
                                                          "onKeydown",
                                                          "pt",
                                                        ],
                                                      ),
                                                    ];
                                                  },
                                                ),
                                              ],
                                              16,
                                            ))
                                          : le("", !0),
                                        t.hourFormat == "12"
                                          ? (E(),
                                            R(
                                              "div",
                                              Q(
                                                {
                                                  key: 2,
                                                  class:
                                                    t.cx("separatorContainer"),
                                                },
                                                t.ptm("separatorContainer"),
                                                {
                                                  "data-pc-group-section":
                                                    "timepickerContainer",
                                                },
                                              ),
                                              [
                                                l(
                                                  "span",
                                                  Q(t.ptm("separator"), {
                                                    "data-pc-group-section":
                                                      "timepickerlabel",
                                                  }),
                                                  z(t.timeSeparator),
                                                  17,
                                                ),
                                              ],
                                              16,
                                            ))
                                          : le("", !0),
                                        t.hourFormat == "12"
                                          ? (E(),
                                            R(
                                              "div",
                                              Q(
                                                {
                                                  key: 3,
                                                  class: t.cx("ampmPicker"),
                                                },
                                                t.ptm("ampmPicker"),
                                              ),
                                              [
                                                De(
                                                  t.$slots,
                                                  "ampmincrementbutton",
                                                  {
                                                    toggleCallback: function (
                                                      f,
                                                    ) {
                                                      return o.toggleAMPM(f);
                                                    },
                                                    keydownCallback: function (
                                                      f,
                                                    ) {
                                                      return o.onContainerButtonKeydown(
                                                        f,
                                                      );
                                                    },
                                                  },
                                                  function () {
                                                    return [
                                                      O(
                                                        a,
                                                        Q(
                                                          {
                                                            class:
                                                              t.cx(
                                                                "pcIncrementButton",
                                                              ),
                                                            "aria-label":
                                                              t.$primevue.config
                                                                .locale.am,
                                                            disabled:
                                                              t.disabled,
                                                            unstyled:
                                                              t.unstyled,
                                                            onClick:
                                                              e[51] ||
                                                              (e[51] =
                                                                function (d) {
                                                                  return o.toggleAMPM(
                                                                    d,
                                                                  );
                                                                }),
                                                            onKeydown:
                                                              o.onContainerButtonKeydown,
                                                          },
                                                          t.timepickerButtonProps,
                                                          {
                                                            pt: t.ptm(
                                                              "pcIncrementButton",
                                                            ),
                                                            "data-pc-group-section":
                                                              "timepickerbutton",
                                                          },
                                                        ),
                                                        {
                                                          icon: Ye(
                                                            function (d) {
                                                              return [
                                                                De(
                                                                  t.$slots,
                                                                  "incrementicon",
                                                                  {
                                                                    class: Ie(
                                                                      t.cx(
                                                                        "incrementIcon",
                                                                      ),
                                                                    ),
                                                                  },
                                                                  function () {
                                                                    return [
                                                                      (E(),
                                                                      Be(
                                                                        Dt(
                                                                          t.incrementIcon
                                                                            ? "span"
                                                                            : "ChevronUpIcon",
                                                                        ),
                                                                        Q(
                                                                          {
                                                                            class:
                                                                              [
                                                                                t.cx(
                                                                                  "incrementIcon",
                                                                                ),
                                                                                d.class,
                                                                              ],
                                                                          },
                                                                          t.ptm(
                                                                            "pcIncrementButton",
                                                                          )
                                                                            .icon,
                                                                          {
                                                                            "data-pc-group-section":
                                                                              "timepickerlabel",
                                                                          },
                                                                        ),
                                                                        null,
                                                                        16,
                                                                        [
                                                                          "class",
                                                                        ],
                                                                      )),
                                                                    ];
                                                                  },
                                                                ),
                                                              ];
                                                            },
                                                          ),
                                                          _: 3,
                                                        },
                                                        16,
                                                        [
                                                          "class",
                                                          "aria-label",
                                                          "disabled",
                                                          "unstyled",
                                                          "onKeydown",
                                                          "pt",
                                                        ],
                                                      ),
                                                    ];
                                                  },
                                                ),
                                                l(
                                                  "span",
                                                  Q(t.ptm("ampm"), {
                                                    "data-pc-group-section":
                                                      "timepickerlabel",
                                                  }),
                                                  z(
                                                    i.pm
                                                      ? t.$primevue.config
                                                          .locale.pm
                                                      : t.$primevue.config
                                                          .locale.am,
                                                  ),
                                                  17,
                                                ),
                                                De(
                                                  t.$slots,
                                                  "ampmdecrementbutton",
                                                  {
                                                    toggleCallback: function (
                                                      f,
                                                    ) {
                                                      return o.toggleAMPM(f);
                                                    },
                                                    keydownCallback: function (
                                                      f,
                                                    ) {
                                                      return o.onContainerButtonKeydown(
                                                        f,
                                                      );
                                                    },
                                                  },
                                                  function () {
                                                    return [
                                                      O(
                                                        a,
                                                        Q(
                                                          {
                                                            class:
                                                              t.cx(
                                                                "pcDecrementButton",
                                                              ),
                                                            "aria-label":
                                                              t.$primevue.config
                                                                .locale.pm,
                                                            disabled:
                                                              t.disabled,
                                                            onClick:
                                                              e[52] ||
                                                              (e[52] =
                                                                function (d) {
                                                                  return o.toggleAMPM(
                                                                    d,
                                                                  );
                                                                }),
                                                            onKeydown:
                                                              o.onContainerButtonKeydown,
                                                          },
                                                          t.timepickerButtonProps,
                                                          {
                                                            pt: t.ptm(
                                                              "pcDecrementButton",
                                                            ),
                                                            "data-pc-group-section":
                                                              "timepickerbutton",
                                                          },
                                                        ),
                                                        {
                                                          icon: Ye(
                                                            function (d) {
                                                              return [
                                                                De(
                                                                  t.$slots,
                                                                  "decrementicon",
                                                                  {
                                                                    class: Ie(
                                                                      t.cx(
                                                                        "decrementIcon",
                                                                      ),
                                                                    ),
                                                                  },
                                                                  function () {
                                                                    return [
                                                                      (E(),
                                                                      Be(
                                                                        Dt(
                                                                          t.decrementIcon
                                                                            ? "span"
                                                                            : "ChevronDownIcon",
                                                                        ),
                                                                        Q(
                                                                          {
                                                                            class:
                                                                              [
                                                                                t.cx(
                                                                                  "decrementIcon",
                                                                                ),
                                                                                d.class,
                                                                              ],
                                                                          },
                                                                          t.ptm(
                                                                            "pcDecrementButton",
                                                                          )
                                                                            .icon,
                                                                          {
                                                                            "data-pc-group-section":
                                                                              "timepickerlabel",
                                                                          },
                                                                        ),
                                                                        null,
                                                                        16,
                                                                        [
                                                                          "class",
                                                                        ],
                                                                      )),
                                                                    ];
                                                                  },
                                                                ),
                                                              ];
                                                            },
                                                          ),
                                                          _: 3,
                                                        },
                                                        16,
                                                        [
                                                          "class",
                                                          "aria-label",
                                                          "disabled",
                                                          "onKeydown",
                                                          "pt",
                                                        ],
                                                      ),
                                                    ];
                                                  },
                                                ),
                                              ],
                                              16,
                                            ))
                                          : le("", !0),
                                      ],
                                      16,
                                      J$,
                                    ))
                                  : le("", !0),
                                t.showButtonBar
                                  ? (E(),
                                    R(
                                      "div",
                                      Q(
                                        { key: 2, class: t.cx("buttonbar") },
                                        t.ptm("buttonbar"),
                                      ),
                                      [
                                        De(
                                          t.$slots,
                                          "todaybutton",
                                          {
                                            actionCallback: function (f) {
                                              return o.onTodayButtonClick(f);
                                            },
                                            keydownCallback: function (f) {
                                              return o.onContainerButtonKeydown(
                                                f,
                                              );
                                            },
                                          },
                                          function () {
                                            return [
                                              O(
                                                a,
                                                Q(
                                                  {
                                                    label: o.todayLabel,
                                                    onClick:
                                                      e[53] ||
                                                      (e[53] = function (d) {
                                                        return o.onTodayButtonClick(
                                                          d,
                                                        );
                                                      }),
                                                    class:
                                                      t.cx("pcTodayButton"),
                                                    unstyled: t.unstyled,
                                                    onKeydown:
                                                      o.onContainerButtonKeydown,
                                                  },
                                                  t.todayButtonProps,
                                                  {
                                                    pt: t.ptm("pcTodayButton"),
                                                    "data-pc-group-section":
                                                      "button",
                                                  },
                                                ),
                                                null,
                                                16,
                                                [
                                                  "label",
                                                  "class",
                                                  "unstyled",
                                                  "onKeydown",
                                                  "pt",
                                                ],
                                              ),
                                            ];
                                          },
                                        ),
                                        De(
                                          t.$slots,
                                          "clearbutton",
                                          {
                                            actionCallback: function (f) {
                                              return o.onClearButtonClick(f);
                                            },
                                            keydownCallback: function (f) {
                                              return o.onContainerButtonKeydown(
                                                f,
                                              );
                                            },
                                          },
                                          function () {
                                            return [
                                              O(
                                                a,
                                                Q(
                                                  {
                                                    label: o.clearLabel,
                                                    onClick:
                                                      e[54] ||
                                                      (e[54] = function (d) {
                                                        return o.onClearButtonClick(
                                                          d,
                                                        );
                                                      }),
                                                    class:
                                                      t.cx("pcClearButton"),
                                                    unstyled: t.unstyled,
                                                    onKeydown:
                                                      o.onContainerButtonKeydown,
                                                  },
                                                  t.clearButtonProps,
                                                  {
                                                    pt: t.ptm("pcClearButton"),
                                                    "data-pc-group-section":
                                                      "button",
                                                  },
                                                ),
                                                null,
                                                16,
                                                [
                                                  "label",
                                                  "class",
                                                  "unstyled",
                                                  "onKeydown",
                                                  "pt",
                                                ],
                                              ),
                                            ];
                                          },
                                        ),
                                      ],
                                      16,
                                    ))
                                  : le("", !0),
                                De(t.$slots, "footer"),
                              ],
                              16,
                              F$,
                            ))
                          : le("", !0),
                      ];
                    }),
                    _: 3,
                  },
                  16,
                  ["onAfterEnter", "onAfterLeave", "onLeave"],
                ),
              ];
            }),
            _: 3,
          },
          8,
          ["appendTo", "disabled"],
        ),
      ],
      16,
      z$,
    )
  );
}
rb.render = Q$;
var xd = {
    name: "Calendar",
    extends: rb,
    mounted: function () {
      console.warn("Deprecated since v4. Use DatePicker component instead.");
    },
  },
  ib = { name: "MinusIcon", extends: dn };
function e8(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "svg",
      Q(
        {
          width: "14",
          height: "14",
          viewBox: "0 0 14 14",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        t.pti(),
      ),
      e[0] ||
        (e[0] = [
          l(
            "path",
            {
              d: "M13.2222 7.77778H0.777778C0.571498 7.77778 0.373667 7.69584 0.227806 7.54998C0.0819442 7.40412 0 7.20629 0 7.00001C0 6.79373 0.0819442 6.5959 0.227806 6.45003C0.373667 6.30417 0.571498 6.22223 0.777778 6.22223H13.2222C13.4285 6.22223 13.6263 6.30417 13.7722 6.45003C13.9181 6.5959 14 6.79373 14 7.00001C14 7.20629 13.9181 7.40412 13.7722 7.54998C13.6263 7.69584 13.4285 7.77778 13.2222 7.77778Z",
              fill: "currentColor",
            },
            null,
            -1,
          ),
        ]),
      16,
    )
  );
}
ib.render = e8;
var t8 = `
    .p-checkbox {
        position: relative;
        display: inline-flex;
        user-select: none;
        vertical-align: bottom;
        width: dt('checkbox.width');
        height: dt('checkbox.height');
    }

    .p-checkbox-input {
        cursor: pointer;
        appearance: none;
        position: absolute;
        inset-block-start: 0;
        inset-inline-start: 0;
        width: 100%;
        height: 100%;
        padding: 0;
        margin: 0;
        opacity: 0;
        z-index: 1;
        outline: 0 none;
        border: 1px solid transparent;
        border-radius: dt('checkbox.border.radius');
    }

    .p-checkbox-box {
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: dt('checkbox.border.radius');
        border: 1px solid dt('checkbox.border.color');
        background: dt('checkbox.background');
        width: dt('checkbox.width');
        height: dt('checkbox.height');
        transition:
            background dt('checkbox.transition.duration'),
            color dt('checkbox.transition.duration'),
            border-color dt('checkbox.transition.duration'),
            box-shadow dt('checkbox.transition.duration'),
            outline-color dt('checkbox.transition.duration');
        outline-color: transparent;
        box-shadow: dt('checkbox.shadow');
    }

    .p-checkbox-icon {
        transition-duration: dt('checkbox.transition.duration');
        color: dt('checkbox.icon.color');
        font-size: dt('checkbox.icon.size');
        width: dt('checkbox.icon.size');
        height: dt('checkbox.icon.size');
    }

    .p-checkbox:not(.p-disabled):has(.p-checkbox-input:hover) .p-checkbox-box {
        border-color: dt('checkbox.hover.border.color');
    }

    .p-checkbox-checked .p-checkbox-box {
        border-color: dt('checkbox.checked.border.color');
        background: dt('checkbox.checked.background');
    }

    .p-checkbox-checked .p-checkbox-icon {
        color: dt('checkbox.icon.checked.color');
    }

    .p-checkbox-checked:not(.p-disabled):has(.p-checkbox-input:hover) .p-checkbox-box {
        background: dt('checkbox.checked.hover.background');
        border-color: dt('checkbox.checked.hover.border.color');
    }

    .p-checkbox-checked:not(.p-disabled):has(.p-checkbox-input:hover) .p-checkbox-icon {
        color: dt('checkbox.icon.checked.hover.color');
    }

    .p-checkbox:not(.p-disabled):has(.p-checkbox-input:focus-visible) .p-checkbox-box {
        border-color: dt('checkbox.focus.border.color');
        box-shadow: dt('checkbox.focus.ring.shadow');
        outline: dt('checkbox.focus.ring.width') dt('checkbox.focus.ring.style') dt('checkbox.focus.ring.color');
        outline-offset: dt('checkbox.focus.ring.offset');
    }

    .p-checkbox-checked:not(.p-disabled):has(.p-checkbox-input:focus-visible) .p-checkbox-box {
        border-color: dt('checkbox.checked.focus.border.color');
    }

    .p-checkbox.p-invalid > .p-checkbox-box {
        border-color: dt('checkbox.invalid.border.color');
    }

    .p-checkbox.p-variant-filled .p-checkbox-box {
        background: dt('checkbox.filled.background');
    }

    .p-checkbox-checked.p-variant-filled .p-checkbox-box {
        background: dt('checkbox.checked.background');
    }

    .p-checkbox-checked.p-variant-filled:not(.p-disabled):has(.p-checkbox-input:hover) .p-checkbox-box {
        background: dt('checkbox.checked.hover.background');
    }

    .p-checkbox.p-disabled {
        opacity: 1;
    }

    .p-checkbox.p-disabled .p-checkbox-box {
        background: dt('checkbox.disabled.background');
        border-color: dt('checkbox.checked.disabled.border.color');
    }

    .p-checkbox.p-disabled .p-checkbox-box .p-checkbox-icon {
        color: dt('checkbox.icon.disabled.color');
    }

    .p-checkbox-sm,
    .p-checkbox-sm .p-checkbox-box {
        width: dt('checkbox.sm.width');
        height: dt('checkbox.sm.height');
    }

    .p-checkbox-sm .p-checkbox-icon {
        font-size: dt('checkbox.icon.sm.size');
        width: dt('checkbox.icon.sm.size');
        height: dt('checkbox.icon.sm.size');
    }

    .p-checkbox-lg,
    .p-checkbox-lg .p-checkbox-box {
        width: dt('checkbox.lg.width');
        height: dt('checkbox.lg.height');
    }

    .p-checkbox-lg .p-checkbox-icon {
        font-size: dt('checkbox.icon.lg.size');
        width: dt('checkbox.icon.lg.size');
        height: dt('checkbox.icon.lg.size');
    }
`,
  n8 = {
    root: function (e) {
      var n = e.instance,
        r = e.props;
      return [
        "p-checkbox p-component",
        {
          "p-checkbox-checked": n.checked,
          "p-disabled": r.disabled,
          "p-invalid": n.$pcCheckboxGroup
            ? n.$pcCheckboxGroup.$invalid
            : n.$invalid,
          "p-variant-filled": n.$variant === "filled",
          "p-checkbox-sm p-inputfield-sm": r.size === "small",
          "p-checkbox-lg p-inputfield-lg": r.size === "large",
        },
      ];
    },
    box: "p-checkbox-box",
    input: "p-checkbox-input",
    icon: "p-checkbox-icon",
  },
  r8 = ot.extend({ name: "checkbox", style: t8, classes: n8 }),
  i8 = {
    name: "BaseCheckbox",
    extends: po,
    props: {
      value: null,
      binary: Boolean,
      indeterminate: { type: Boolean, default: !1 },
      trueValue: { type: null, default: !0 },
      falseValue: { type: null, default: !1 },
      readonly: { type: Boolean, default: !1 },
      required: { type: Boolean, default: !1 },
      tabindex: { type: Number, default: null },
      inputId: { type: String, default: null },
      inputClass: { type: [String, Object], default: null },
      inputStyle: { type: Object, default: null },
      ariaLabelledby: { type: String, default: null },
      ariaLabel: { type: String, default: null },
    },
    style: r8,
    provide: function () {
      return { $pcCheckbox: this, $parentInstance: this };
    },
  };
function Aa(t) {
  "@babel/helpers - typeof";
  return (
    (Aa =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    Aa(t)
  );
}
function o8(t, e, n) {
  return (
    (e = s8(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function s8(t) {
  var e = a8(t, "string");
  return Aa(e) == "symbol" ? e : e + "";
}
function a8(t, e) {
  if (Aa(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (Aa(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
function l8(t) {
  return f8(t) || d8(t) || u8(t) || c8();
}
function c8() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function u8(t, e) {
  if (t) {
    if (typeof t == "string") return _d(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return (
      n === "Object" && t.constructor && (n = t.constructor.name),
      n === "Map" || n === "Set"
        ? Array.from(t)
        : n === "Arguments" ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          ? _d(t, e)
          : void 0
    );
  }
}
function d8(t) {
  if (
    (typeof Symbol < "u" && t[Symbol.iterator] != null) ||
    t["@@iterator"] != null
  )
    return Array.from(t);
}
function f8(t) {
  if (Array.isArray(t)) return _d(t);
}
function _d(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, r = Array(e); n < e; n++) r[n] = t[n];
  return r;
}
var vr = {
    name: "Checkbox",
    extends: i8,
    inheritAttrs: !1,
    emits: ["change", "focus", "blur", "update:indeterminate"],
    inject: { $pcCheckboxGroup: { default: void 0 } },
    data: function () {
      return { d_indeterminate: this.indeterminate };
    },
    watch: {
      indeterminate: function (e) {
        this.d_indeterminate = e;
      },
    },
    methods: {
      getPTOptions: function (e) {
        var n = e === "root" ? this.ptmi : this.ptm;
        return n(e, {
          context: {
            checked: this.checked,
            indeterminate: this.d_indeterminate,
            disabled: this.disabled,
          },
        });
      },
      onChange: function (e) {
        var n = this;
        if (!this.disabled && !this.readonly) {
          var r = this.$pcCheckboxGroup
              ? this.$pcCheckboxGroup.d_value
              : this.d_value,
            i;
          (this.binary
            ? (i = this.d_indeterminate
                ? this.trueValue
                : this.checked
                  ? this.falseValue
                  : this.trueValue)
            : this.checked || this.d_indeterminate
              ? (i = r.filter(function (o) {
                  return !kc(o, n.value);
                }))
              : (i = r ? [].concat(l8(r), [this.value]) : [this.value]),
            this.d_indeterminate &&
              ((this.d_indeterminate = !1),
              this.$emit("update:indeterminate", this.d_indeterminate)),
            this.$pcCheckboxGroup
              ? this.$pcCheckboxGroup.writeValue(i, e)
              : this.writeValue(i, e),
            this.$emit("change", e));
        }
      },
      onFocus: function (e) {
        this.$emit("focus", e);
      },
      onBlur: function (e) {
        var n, r;
        (this.$emit("blur", e),
          (n = (r = this.formField).onBlur) === null ||
            n === void 0 ||
            n.call(r, e));
      },
    },
    computed: {
      groupName: function () {
        return this.$pcCheckboxGroup
          ? this.$pcCheckboxGroup.groupName
          : this.$formName;
      },
      checked: function () {
        var e = this.$pcCheckboxGroup
          ? this.$pcCheckboxGroup.d_value
          : this.d_value;
        return this.d_indeterminate
          ? !1
          : this.binary
            ? e === this.trueValue
            : c_(this.value, e);
      },
      dataP: function () {
        return At(
          o8(
            {
              invalid: this.$invalid,
              checked: this.checked,
              disabled: this.disabled,
              filled: this.$variant === "filled",
            },
            this.size,
            this.size,
          ),
        );
      },
    },
    components: { CheckIcon: ff, MinusIcon: ib },
  },
  p8 = ["data-p-checked", "data-p-indeterminate", "data-p-disabled", "data-p"],
  h8 = [
    "id",
    "value",
    "name",
    "checked",
    "tabindex",
    "disabled",
    "readonly",
    "required",
    "aria-labelledby",
    "aria-label",
    "aria-invalid",
    "aria-checked",
  ],
  m8 = ["data-p"];
function g8(t, e, n, r, i, o) {
  var s = Mt("CheckIcon"),
    a = Mt("MinusIcon");
  return (
    E(),
    R(
      "div",
      Q({ class: t.cx("root") }, o.getPTOptions("root"), {
        "data-p-checked": o.checked,
        "data-p-indeterminate": i.d_indeterminate || void 0,
        "data-p-disabled": t.disabled,
        "data-p": o.dataP,
      }),
      [
        l(
          "input",
          Q(
            {
              id: t.inputId,
              type: "checkbox",
              class: [t.cx("input"), t.inputClass],
              style: t.inputStyle,
              value: t.value,
              name: o.groupName,
              checked: o.checked,
              tabindex: t.tabindex,
              disabled: t.disabled,
              readonly: t.readonly,
              required: t.required,
              "aria-labelledby": t.ariaLabelledby,
              "aria-label": t.ariaLabel,
              "aria-invalid": t.invalid || void 0,
              "aria-checked": i.d_indeterminate ? "mixed" : void 0,
              onFocus:
                e[0] ||
                (e[0] = function () {
                  return o.onFocus && o.onFocus.apply(o, arguments);
                }),
              onBlur:
                e[1] ||
                (e[1] = function () {
                  return o.onBlur && o.onBlur.apply(o, arguments);
                }),
              onChange:
                e[2] ||
                (e[2] = function () {
                  return o.onChange && o.onChange.apply(o, arguments);
                }),
            },
            o.getPTOptions("input"),
          ),
          null,
          16,
          h8,
        ),
        l(
          "div",
          Q({ class: t.cx("box") }, o.getPTOptions("box"), {
            "data-p": o.dataP,
          }),
          [
            De(
              t.$slots,
              "icon",
              {
                checked: o.checked,
                indeterminate: i.d_indeterminate,
                class: Ie(t.cx("icon")),
                dataP: o.dataP,
              },
              function () {
                return [
                  o.checked
                    ? (E(),
                      Be(
                        s,
                        Q(
                          { key: 0, class: t.cx("icon") },
                          o.getPTOptions("icon"),
                          { "data-p": o.dataP },
                        ),
                        null,
                        16,
                        ["class", "data-p"],
                      ))
                    : i.d_indeterminate
                      ? (E(),
                        Be(
                          a,
                          Q(
                            { key: 1, class: t.cx("icon") },
                            o.getPTOptions("icon"),
                            { "data-p": o.dataP },
                          ),
                          null,
                          16,
                          ["class", "data-p"],
                        ))
                      : le("", !0),
                ];
              },
            ),
          ],
          16,
          m8,
        ),
      ],
      16,
      p8,
    )
  );
}
vr.render = g8;
const v8 = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  b8 = { key: 0, class: "flex justify-center py-8" },
  y8 = { class: "space-y-4" },
  x8 = { class: "space-y-4 ml-6" },
  _8 = {
    class:
      "flex items-center justify-between p-3 bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  w8 = {
    class:
      "flex items-center justify-between p-3 bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  k8 = {
    class:
      "flex items-center justify-between p-3 bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  S8 = {
    class:
      "flex items-center justify-between p-3 bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  C8 = {
    class:
      "flex items-center justify-between p-3 bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  M8 = { class: "space-y-4" },
  E8 = { class: "flex items-center justify-between" },
  T8 = { class: "flex items-center gap-2" },
  A8 = { class: "text-sm text-surface-500 dark:text-surface-400" },
  P8 = {
    key: 0,
    class:
      "p-4 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg",
  },
  R8 = { key: 1, class: "space-y-4 ml-6" },
  L8 = {
    class:
      "flex items-center justify-between p-3 bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  D8 = {
    class:
      "flex items-center justify-between p-3 bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  I8 = {
    class:
      "flex items-center justify-between p-3 bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  O8 = { class: "space-y-4" },
  $8 = { class: "space-y-4 ml-6" },
  z8 = {
    class:
      "flex items-center justify-between p-3 bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  B8 = {
    class:
      "flex items-center justify-between p-3 bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  U8 = {
    class:
      "flex items-center justify-between p-3 bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  F8 = { class: "space-y-4" },
  N8 = { class: "grid grid-cols-1 md:grid-cols-2 gap-4 ml-6" },
  V8 = { class: "flex flex-col gap-2" },
  H8 = { class: "flex flex-col gap-2" },
  j8 = { class: "ml-6" },
  G8 = {
    class:
      "flex items-center gap-2 p-3 bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  W8 = {
    class:
      "flex justify-end gap-2 pt-4 border-t border-surface-200 dark:border-surface-700",
  },
  K8 = {
    class: "mt-6 pt-6 border-t border-surface-200 dark:border-surface-700",
  },
  X8 = { class: "flex items-center justify-between" },
  Y8 = {
    __name: "NotificationSettings",
    props: { settings: { type: Object, default: () => ({}) } },
    emits: ["settings-updated"],
    setup(t, { emit: e }) {
      const n = t,
        r = e,
        i = N(!0),
        o = N(!1),
        s = N(!1),
        a = N(!1),
        c = N(!1),
        u = N({
          rank_expiry_email: !0,
          coin_purchase_email: !0,
          newsletter_email: !1,
          maintenance_email: !0,
          security_email: !0,
          rank_expiry_discord: !1,
          maintenance_discord: !1,
          events_discord: !1,
          chat_notifications: !0,
          popup_notifications: !0,
          sound_notifications: !1,
        }),
        d = N({
          enabled: !1,
          start: new Date(2024, 0, 1, 22, 0),
          end: new Date(2024, 0, 1, 8, 0),
        }),
        f = N({}),
        p = async () => {
          i.value = !0;
          try {
            const C = await Ve.getNotificationSettings();
            ((u.value = { ...u.value, ...C }),
              (f.value = { ...u.value }),
              C.quiet_hours_enabled &&
                (d.value = {
                  enabled: C.quiet_hours_enabled,
                  start: h(C.quiet_hours_start),
                  end: h(C.quiet_hours_end),
                }));
          } catch {
          } finally {
            i.value = !1;
          }
        },
        h = (C) => {
          if (!C) return new Date(2024, 0, 1, 22, 0);
          const [w, S] = C.split(":").map(Number);
          return new Date(2024, 0, 1, w, S);
        },
        v = (C) => {
          if (!C) return "22:00:00";
          const w = C.getHours().toString().padStart(2, "0"),
            S = C.getMinutes().toString().padStart(2, "0");
          return `${w}:${S}:00`;
        },
        b = Xe(
          () =>
            JSON.stringify(u.value) !== JSON.stringify(f.value) ||
            JSON.stringify(d.value) !==
              JSON.stringify({
                enabled: !1,
                start: new Date(2024, 0, 1, 22, 0),
                end: new Date(2024, 0, 1, 8, 0),
              }),
        );
      Ft(
        () => n.settings,
        (C) => {
          Object.keys(C).length > 0 &&
            ((u.value = { ...u.value, ...C }), (f.value = { ...u.value }));
        },
        { immediate: !0, deep: !0 },
      );
      const g = async () => {
          o.value = !0;
          try {
            const C = {
              ...u.value,
              quiet_hours_enabled: d.value.enabled,
              quiet_hours_start: v(d.value.start),
              quiet_hours_end: v(d.value.end),
            };
            (await Ve.updateNotificationSettings(C),
              (f.value = { ...u.value }),
              r("settings-updated", C));
          } catch {
          } finally {
            o.value = !1;
          }
        },
        m = () => {
          ((u.value = { ...f.value }),
            (d.value = {
              enabled: !1,
              start: new Date(2024, 0, 1, 22, 0),
              end: new Date(2024, 0, 1, 8, 0),
            }));
        },
        _ = async () => {
          a.value = !0;
          try {
            if (c.value)
              (await Ve.disconnectDiscord(),
                (c.value = !1),
                (u.value.rank_expiry_discord = !1),
                (u.value.maintenance_discord = !1),
                (u.value.events_discord = !1));
            else {
              const C = await Ve.connectDiscord();
              C.oauth_url && (window.location.href = C.oauth_url);
            }
          } catch {
          } finally {
            a.value = !1;
          }
        },
        y = async () => {
          s.value = !0;
          try {
            await Ve.sendTestNotification();
          } catch {
          } finally {
            s.value = !1;
          }
        },
        x = async () => {
          try {
            const C = await Ve.getDiscordStatus();
            c.value = C.connected;
          } catch {}
        };
      return (
        $t(async () => {
          await Promise.all([p(), x()]);
        }),
        (C, w) => (
          E(),
          R("div", v8, [
            w[36] ||
              (w[36] = l(
                "div",
                { class: "flex items-center gap-2 mb-6" },
                [
                  l("i", { class: "pi pi-bell text-primary-500" }),
                  l(
                    "h3",
                    {
                      class:
                        "text-lg font-semibold text-surface-900 dark:text-surface-0",
                    },
                    "Értesítési beállítások",
                  ),
                ],
                -1,
              )),
            i.value
              ? (E(),
                R(
                  "div",
                  b8,
                  w[14] ||
                    (w[14] = [
                      l(
                        "div",
                        {
                          class:
                            "flex items-center gap-2 text-surface-500 dark:text-surface-400",
                        },
                        [
                          l("i", { class: "pi pi-spin pi-spinner" }),
                          l("span", null, "Beállítások betöltése..."),
                        ],
                        -1,
                      ),
                    ]),
                ))
              : (E(),
                R(
                  "form",
                  { key: 1, onSubmit: oi(g, ["prevent"]), class: "space-y-6" },
                  [
                    l("div", y8, [
                      w[20] ||
                        (w[20] = l(
                          "h4",
                          {
                            class:
                              "font-medium text-surface-900 dark:text-surface-0 flex items-center gap-2",
                          },
                          [
                            l("i", {
                              class: "pi pi-envelope text-primary-500",
                            }),
                            Ke(" Email értesítések "),
                          ],
                          -1,
                        )),
                      l("div", x8, [
                        l("div", _8, [
                          w[15] ||
                            (w[15] = l(
                              "div",
                              null,
                              [
                                l(
                                  "label",
                                  {
                                    class:
                                      "font-medium text-surface-900 dark:text-surface-0 cursor-pointer",
                                  },
                                  " Rang lejárat figyelmeztetés ",
                                ),
                                l(
                                  "p",
                                  {
                                    class:
                                      "text-sm text-surface-500 dark:text-surface-400",
                                  },
                                  " Értesítés 7 és 1 nappal a rang lejárata előtt ",
                                ),
                              ],
                              -1,
                            )),
                          O(
                            H(Nn),
                            {
                              modelValue: u.value.rank_expiry_email,
                              "onUpdate:modelValue":
                                w[0] ||
                                (w[0] = (S) => (u.value.rank_expiry_email = S)),
                            },
                            null,
                            8,
                            ["modelValue"],
                          ),
                        ]),
                        l("div", w8, [
                          w[16] ||
                            (w[16] = l(
                              "div",
                              null,
                              [
                                l(
                                  "label",
                                  {
                                    class:
                                      "font-medium text-surface-900 dark:text-surface-0 cursor-pointer",
                                  },
                                  " Bányászérme vásárlás visszaigazolás ",
                                ),
                                l(
                                  "p",
                                  {
                                    class:
                                      "text-sm text-surface-500 dark:text-surface-400",
                                  },
                                  " Email minden BÉ vásárlás után ",
                                ),
                              ],
                              -1,
                            )),
                          O(
                            H(Nn),
                            {
                              modelValue: u.value.coin_purchase_email,
                              "onUpdate:modelValue":
                                w[1] ||
                                (w[1] = (S) =>
                                  (u.value.coin_purchase_email = S)),
                            },
                            null,
                            8,
                            ["modelValue"],
                          ),
                        ]),
                        l("div", k8, [
                          w[17] ||
                            (w[17] = l(
                              "div",
                              null,
                              [
                                l(
                                  "label",
                                  {
                                    class:
                                      "font-medium text-surface-900 dark:text-surface-0 cursor-pointer",
                                  },
                                  " Hírlevel és frissítések ",
                                ),
                                l(
                                  "p",
                                  {
                                    class:
                                      "text-sm text-surface-500 dark:text-surface-400",
                                  },
                                  " Havi hírlevelek és fontos szerver frissítések ",
                                ),
                              ],
                              -1,
                            )),
                          O(
                            H(Nn),
                            {
                              modelValue: u.value.newsletter_email,
                              "onUpdate:modelValue":
                                w[2] ||
                                (w[2] = (S) => (u.value.newsletter_email = S)),
                            },
                            null,
                            8,
                            ["modelValue"],
                          ),
                        ]),
                        l("div", S8, [
                          w[18] ||
                            (w[18] = l(
                              "div",
                              null,
                              [
                                l(
                                  "label",
                                  {
                                    class:
                                      "font-medium text-surface-900 dark:text-surface-0 cursor-pointer",
                                  },
                                  " Karbantartás értesítések ",
                                ),
                                l(
                                  "p",
                                  {
                                    class:
                                      "text-sm text-surface-500 dark:text-surface-400",
                                  },
                                  " Szerver karbantartások és leállások előtt ",
                                ),
                              ],
                              -1,
                            )),
                          O(
                            H(Nn),
                            {
                              modelValue: u.value.maintenance_email,
                              "onUpdate:modelValue":
                                w[3] ||
                                (w[3] = (S) => (u.value.maintenance_email = S)),
                            },
                            null,
                            8,
                            ["modelValue"],
                          ),
                        ]),
                        l("div", C8, [
                          w[19] ||
                            (w[19] = l(
                              "div",
                              null,
                              [
                                l(
                                  "label",
                                  {
                                    class:
                                      "font-medium text-surface-900 dark:text-surface-0 cursor-pointer",
                                  },
                                  " Biztonsági riasztások ",
                                ),
                                l(
                                  "p",
                                  {
                                    class:
                                      "text-sm text-surface-500 dark:text-surface-400",
                                  },
                                  " Gyanús bejelentkezések és biztonsági események ",
                                ),
                              ],
                              -1,
                            )),
                          O(
                            H(Nn),
                            {
                              modelValue: u.value.security_email,
                              "onUpdate:modelValue":
                                w[4] ||
                                (w[4] = (S) => (u.value.security_email = S)),
                            },
                            null,
                            8,
                            ["modelValue"],
                          ),
                        ]),
                      ]),
                    ]),
                    l("div", M8, [
                      l("div", E8, [
                        w[21] ||
                          (w[21] = l(
                            "h4",
                            {
                              class:
                                "font-medium text-surface-900 dark:text-surface-0 flex items-center gap-2",
                            },
                            [
                              l("i", {
                                class: "pi pi-discord text-primary-500",
                              }),
                              Ke(" Discord értesítések "),
                            ],
                            -1,
                          )),
                        l("div", T8, [
                          l(
                            "span",
                            A8,
                            z(c.value ? "Kapcsolva" : "Nincs kapcsolva"),
                            1,
                          ),
                          O(
                            H(Ce),
                            {
                              label: c.value ? "Leválasztás" : "Kapcsolás",
                              severity: c.value ? "danger" : "info",
                              outlined: c.value,
                              size: "small",
                              onClick: _,
                              loading: a.value,
                            },
                            null,
                            8,
                            ["label", "severity", "outlined", "loading"],
                          ),
                        ]),
                      ]),
                      c.value
                        ? (E(),
                          R("div", R8, [
                            l("div", L8, [
                              w[23] ||
                                (w[23] = l(
                                  "div",
                                  null,
                                  [
                                    l(
                                      "label",
                                      {
                                        class:
                                          "font-medium text-surface-900 dark:text-surface-0 cursor-pointer",
                                      },
                                      " Rang lejárat DM ",
                                    ),
                                    l(
                                      "p",
                                      {
                                        class:
                                          "text-sm text-surface-500 dark:text-surface-400",
                                      },
                                      " Privát üzenet Discord-on rang lejárat előtt ",
                                    ),
                                  ],
                                  -1,
                                )),
                              O(
                                H(Nn),
                                {
                                  modelValue: u.value.rank_expiry_discord,
                                  "onUpdate:modelValue":
                                    w[5] ||
                                    (w[5] = (S) =>
                                      (u.value.rank_expiry_discord = S)),
                                },
                                null,
                                8,
                                ["modelValue"],
                              ),
                            ]),
                            l("div", D8, [
                              w[24] ||
                                (w[24] = l(
                                  "div",
                                  null,
                                  [
                                    l(
                                      "label",
                                      {
                                        class:
                                          "font-medium text-surface-900 dark:text-surface-0 cursor-pointer",
                                      },
                                      " Karbantartás értesítő ",
                                    ),
                                    l(
                                      "p",
                                      {
                                        class:
                                          "text-sm text-surface-500 dark:text-surface-400",
                                      },
                                      " DM szerver karbantartások előtt ",
                                    ),
                                  ],
                                  -1,
                                )),
                              O(
                                H(Nn),
                                {
                                  modelValue: u.value.maintenance_discord,
                                  "onUpdate:modelValue":
                                    w[6] ||
                                    (w[6] = (S) =>
                                      (u.value.maintenance_discord = S)),
                                },
                                null,
                                8,
                                ["modelValue"],
                              ),
                            ]),
                            l("div", I8, [
                              w[25] ||
                                (w[25] = l(
                                  "div",
                                  null,
                                  [
                                    l(
                                      "label",
                                      {
                                        class:
                                          "font-medium text-surface-900 dark:text-surface-0 cursor-pointer",
                                      },
                                      " Különleges események ",
                                    ),
                                    l(
                                      "p",
                                      {
                                        class:
                                          "text-sm text-surface-500 dark:text-surface-400",
                                      },
                                      " Értesítés eseményekről, versenyek ",
                                    ),
                                  ],
                                  -1,
                                )),
                              O(
                                H(Nn),
                                {
                                  modelValue: u.value.events_discord,
                                  "onUpdate:modelValue":
                                    w[7] ||
                                    (w[7] = (S) =>
                                      (u.value.events_discord = S)),
                                },
                                null,
                                8,
                                ["modelValue"],
                              ),
                            ]),
                          ]))
                        : (E(),
                          R(
                            "div",
                            P8,
                            w[22] ||
                              (w[22] = [
                                Jo(
                                  '<div class="flex items-center gap-2 mb-2"><i class="pi pi-info-circle text-blue-600 dark:text-blue-400"></i><span class="font-medium text-blue-900 dark:text-blue-100">Discord integráció</span></div><p class="text-sm text-blue-800 dark:text-blue-200 mb-3"> Csatlakoztasd a Discord fiókodat, hogy DM-ben kapj értesítéseket és hozzáférj az exkluzív Discord funkciókhoz. </p><ul class="text-sm text-blue-800 dark:text-blue-200 space-y-1 ml-4"><li>• Instant értesítések rang lejáratról</li><li>• Privát üzenetek fontos eseményekről</li><li>• Discord-only rangok és szerepek</li></ul>',
                                  3,
                                ),
                              ]),
                          )),
                    ]),
                    l("div", O8, [
                      w[29] ||
                        (w[29] = l(
                          "h4",
                          {
                            class:
                              "font-medium text-surface-900 dark:text-surface-0 flex items-center gap-2",
                          },
                          [
                            l("i", { class: "pi pi-desktop text-primary-500" }),
                            Ke(" Játékon belüli értesítések "),
                          ],
                          -1,
                        )),
                      l("div", $8, [
                        l("div", z8, [
                          w[26] ||
                            (w[26] = l(
                              "div",
                              null,
                              [
                                l(
                                  "label",
                                  {
                                    class:
                                      "font-medium text-surface-900 dark:text-surface-0 cursor-pointer",
                                  },
                                  " Chat értesítések ",
                                ),
                                l(
                                  "p",
                                  {
                                    class:
                                      "text-sm text-surface-500 dark:text-surface-400",
                                  },
                                  " Fontos üzenetek megjelenítése a chatben ",
                                ),
                              ],
                              -1,
                            )),
                          O(
                            H(Nn),
                            {
                              modelValue: u.value.chat_notifications,
                              "onUpdate:modelValue":
                                w[8] ||
                                (w[8] = (S) =>
                                  (u.value.chat_notifications = S)),
                            },
                            null,
                            8,
                            ["modelValue"],
                          ),
                        ]),
                        l("div", B8, [
                          w[27] ||
                            (w[27] = l(
                              "div",
                              null,
                              [
                                l(
                                  "label",
                                  {
                                    class:
                                      "font-medium text-surface-900 dark:text-surface-0 cursor-pointer",
                                  },
                                  " Popup értesítések ",
                                ),
                                l(
                                  "p",
                                  {
                                    class:
                                      "text-sm text-surface-500 dark:text-surface-400",
                                  },
                                  " Popup üzenetek csatlakozáskor ",
                                ),
                              ],
                              -1,
                            )),
                          O(
                            H(Nn),
                            {
                              modelValue: u.value.popup_notifications,
                              "onUpdate:modelValue":
                                w[9] ||
                                (w[9] = (S) =>
                                  (u.value.popup_notifications = S)),
                            },
                            null,
                            8,
                            ["modelValue"],
                          ),
                        ]),
                        l("div", U8, [
                          w[28] ||
                            (w[28] = l(
                              "div",
                              null,
                              [
                                l(
                                  "label",
                                  {
                                    class:
                                      "font-medium text-surface-900 dark:text-surface-0 cursor-pointer",
                                  },
                                  " Hangjelzések ",
                                ),
                                l(
                                  "p",
                                  {
                                    class:
                                      "text-sm text-surface-500 dark:text-surface-400",
                                  },
                                  " Hang lejátszása fontos események során ",
                                ),
                              ],
                              -1,
                            )),
                          O(
                            H(Nn),
                            {
                              modelValue: u.value.sound_notifications,
                              "onUpdate:modelValue":
                                w[10] ||
                                (w[10] = (S) =>
                                  (u.value.sound_notifications = S)),
                            },
                            null,
                            8,
                            ["modelValue"],
                          ),
                        ]),
                      ]),
                    ]),
                    l("div", F8, [
                      w[34] ||
                        (w[34] = l(
                          "h4",
                          {
                            class:
                              "font-medium text-surface-900 dark:text-surface-0 flex items-center gap-2",
                          },
                          [
                            l("i", { class: "pi pi-clock text-primary-500" }),
                            Ke(" Értesítési időszakok "),
                          ],
                          -1,
                        )),
                      l("div", N8, [
                        l("div", V8, [
                          w[30] ||
                            (w[30] = l(
                              "label",
                              {
                                class:
                                  "text-surface-900 dark:text-surface-0 font-medium",
                              },
                              "Ne zavarj mód kezdete",
                              -1,
                            )),
                          O(
                            H(xd),
                            {
                              modelValue: d.value.start,
                              "onUpdate:modelValue":
                                w[11] || (w[11] = (S) => (d.value.start = S)),
                              "time-only": "",
                              "hour-format": "24",
                              class: "w-full",
                            },
                            null,
                            8,
                            ["modelValue"],
                          ),
                        ]),
                        l("div", H8, [
                          w[31] ||
                            (w[31] = l(
                              "label",
                              {
                                class:
                                  "text-surface-900 dark:text-surface-0 font-medium",
                              },
                              "Ne zavarj mód vége",
                              -1,
                            )),
                          O(
                            H(xd),
                            {
                              modelValue: d.value.end,
                              "onUpdate:modelValue":
                                w[12] || (w[12] = (S) => (d.value.end = S)),
                              "time-only": "",
                              "hour-format": "24",
                              class: "w-full",
                            },
                            null,
                            8,
                            ["modelValue"],
                          ),
                        ]),
                      ]),
                      l("div", j8, [
                        l("div", G8, [
                          O(
                            H(vr),
                            {
                              modelValue: d.value.enabled,
                              "onUpdate:modelValue":
                                w[13] || (w[13] = (S) => (d.value.enabled = S)),
                              binary: "",
                            },
                            null,
                            8,
                            ["modelValue"],
                          ),
                          w[32] ||
                            (w[32] = l(
                              "label",
                              {
                                class:
                                  "font-medium text-surface-900 dark:text-surface-0 cursor-pointer",
                              },
                              " Ne zavarj mód engedélyezése ",
                              -1,
                            )),
                        ]),
                        w[33] ||
                          (w[33] = l(
                            "small",
                            {
                              class:
                                "text-surface-500 dark:text-surface-400 ml-8",
                            },
                            " Ebben az időszakban nem küldjük el az email és Discord értesítéseket ",
                            -1,
                          )),
                      ]),
                    ]),
                    l("div", W8, [
                      O(
                        H(Ce),
                        {
                          label: "Visszaállítás",
                          severity: "secondary",
                          outlined: "",
                          onClick: m,
                          disabled: o.value,
                        },
                        null,
                        8,
                        ["disabled"],
                      ),
                      O(
                        H(Ce),
                        {
                          label: "Beállítások mentése",
                          type: "submit",
                          loading: o.value,
                          disabled: !b.value,
                        },
                        null,
                        8,
                        ["loading", "disabled"],
                      ),
                    ]),
                  ],
                  32,
                )),
            l("div", K8, [
              l("div", X8, [
                w[35] ||
                  (w[35] = l(
                    "div",
                    null,
                    [
                      l(
                        "h4",
                        {
                          class:
                            "font-medium text-surface-900 dark:text-surface-0 mb-1",
                        },
                        "Teszt értesítés",
                      ),
                      l(
                        "p",
                        {
                          class:
                            "text-sm text-surface-500 dark:text-surface-400",
                        },
                        " Küldjön teszt értesítést, hogy ellenőrizd a beállításokat ",
                      ),
                    ],
                    -1,
                  )),
                O(
                  H(Ce),
                  {
                    label: "Teszt küldése",
                    outlined: "",
                    onClick: y,
                    loading: s.value,
                  },
                  null,
                  8,
                  ["loading"],
                ),
              ]),
            ]),
          ])
        )
      );
    },
  },
  q8 = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-red-200 dark:border-red-800",
  },
  Z8 = { class: "space-y-6" },
  J8 = {
    class:
      "p-4 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg",
  },
  Q8 = { class: "space-y-3" },
  e9 = { class: "flex items-start gap-3" },
  t9 = { class: "flex items-start gap-3" },
  n9 = { class: "flex items-start gap-3" },
  r9 = { class: "space-y-4" },
  i9 = { class: "space-y-3" },
  o9 = { class: "flex items-center gap-3" },
  s9 = { class: "flex items-center gap-3" },
  a9 = { class: "flex items-center gap-3" },
  l9 = { class: "flex flex-col gap-2" },
  c9 = {
    key: 0,
    class:
      "p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg",
  },
  u9 = { class: "space-y-3" },
  d9 = { class: "flex flex-col gap-2" },
  f9 = { class: "flex flex-col gap-2" },
  p9 = { class: "flex items-center gap-3" },
  h9 = {
    class:
      "flex justify-between items-center pt-4 border-t border-surface-200 dark:border-surface-700",
  },
  m9 = { class: "flex flex-col gap-4" },
  g9 = { class: "flex justify-between items-center" },
  v9 = { class: "space-y-4" },
  b9 = { class: "flex flex-col gap-2" },
  y9 = { class: "flex flex-col gap-2" },
  x9 = { class: "flex justify-end gap-2" },
  _9 = { class: "text-center space-y-4" },
  w9 = { class: "flex justify-center gap-3" },
  k9 = {
    __name: "AccountDeletion",
    setup(t) {
      const e = Na(),
        n = N(!1),
        r = N(!1),
        i = N(!1),
        o = N({ understoodConsequences: !1, dataBackup: !1, rankTransfer: !1 }),
        s = N(""),
        a = N(""),
        c = N(""),
        u = N(!1),
        d = N(null),
        f = N(""),
        p = N([
          { label: "30 nap", value: 30 },
          { label: "60 nap", value: 60 },
          { label: "90 nap", value: 90 },
        ]),
        h = Xe(
          () =>
            o.value.understoodConsequences &&
            o.value.dataBackup &&
            o.value.rankTransfer,
        ),
        v = Xe(
          () =>
            h.value &&
            a.value.length >= 6 &&
            c.value === "TÖRÖLD A FIÓKOM" &&
            u.value,
        ),
        b = () => {
          e.push("/");
        },
        g = () => {},
        m = () => {},
        _ = async () => {
          try {
            (await new Promise((C) => setTimeout(C, 1500)), (r.value = !1));
          } catch {}
        },
        y = () => {
          i.value = !0;
        },
        x = async () => {
          n.value = !0;
          try {
            (await new Promise((C) => setTimeout(C, 3e3)),
              localStorage.clear(),
              e.push("/login"));
          } catch {
            n.value = !1;
          }
        };
      return (C, w) => (
        E(),
        R("div", q8, [
          w[35] ||
            (w[35] = l(
              "div",
              { class: "flex items-center gap-2 mb-6" },
              [
                l("i", { class: "pi pi-exclamation-triangle text-red-500" }),
                l(
                  "h3",
                  {
                    class:
                      "text-lg font-semibold text-red-900 dark:text-red-100",
                  },
                  "Fiók törlése",
                ),
              ],
              -1,
            )),
          l("div", Z8, [
            w[28] ||
              (w[28] = Jo(
                '<div class="p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg"><div class="flex items-center gap-2 mb-3"><i class="pi pi-exclamation-triangle text-red-600 dark:text-red-400"></i><span class="font-semibold text-red-900 dark:text-red-100">Figyelem! Ez a művelet visszafordíthatatlan!</span></div><p class="text-red-800 dark:text-red-200 text-sm mb-3"> A fiók törlése után minden adatod véglegesen elvész. Kérjük, gondold át alaposan ezt a döntést. </p><div class="bg-red-100 dark:bg-red-900/40 p-3 rounded border border-red-300 dark:border-red-700"><h4 class="font-medium text-red-900 dark:text-red-100 mb-2">Mit veszítesz el:</h4><ul class="text-sm text-red-800 dark:text-red-200 space-y-1"><li>• Minden bányászérme és vásárolt rangod</li><li>• Összes játék statisztikád és eredményed</li><li>• Skin feltöltések és személyre szabások</li><li>• Extrák (HD skin, egyedi névelőtag, stb.)</li><li>• Fiók előzmények és üzenetek</li><li>• Discord integráció és szerepek</li></ul></div></div>',
                1,
              )),
            l("div", J8, [
              w[18] ||
                (w[18] = l(
                  "h4",
                  {
                    class:
                      "font-medium text-blue-900 dark:text-blue-100 mb-3 flex items-center gap-2",
                  },
                  [
                    l("i", { class: "pi pi-lightbulb" }),
                    Ke(" Alternatív megoldások "),
                  ],
                  -1,
                )),
              l("div", Q8, [
                l("div", e9, [
                  O(H(Ce), {
                    label: "Fiók felfüggesztés",
                    outlined: "",
                    size: "small",
                    onClick: w[0] || (w[0] = (S) => (r.value = !0)),
                  }),
                  w[15] ||
                    (w[15] = l(
                      "div",
                      null,
                      [
                        l(
                          "p",
                          {
                            class:
                              "font-medium text-blue-900 dark:text-blue-100 text-sm",
                          },
                          "Ideiglenesen felfüggesztem a fiókom",
                        ),
                        l(
                          "p",
                          { class: "text-blue-800 dark:text-blue-200 text-xs" },
                          "30-90 napig inaktív, de minden megmarad",
                        ),
                      ],
                      -1,
                    )),
                ]),
                l("div", t9, [
                  O(H(Ce), {
                    label: "Jelszó módosítás",
                    outlined: "",
                    size: "small",
                    onClick: g,
                  }),
                  w[16] ||
                    (w[16] = l(
                      "div",
                      null,
                      [
                        l(
                          "p",
                          {
                            class:
                              "font-medium text-blue-900 dark:text-blue-100 text-sm",
                          },
                          "Biztonsági probléma esetén",
                        ),
                        l(
                          "p",
                          { class: "text-blue-800 dark:text-blue-200 text-xs" },
                          "Esetleg csak a jelszót kell módosítani?",
                        ),
                      ],
                      -1,
                    )),
                ]),
                l("div", n9, [
                  O(H(Ce), {
                    label: "Támogatás kérése",
                    outlined: "",
                    size: "small",
                    onClick: m,
                  }),
                  w[17] ||
                    (w[17] = l(
                      "div",
                      null,
                      [
                        l(
                          "p",
                          {
                            class:
                              "font-medium text-blue-900 dark:text-blue-100 text-sm",
                          },
                          "Beszélj a supporttal",
                        ),
                        l(
                          "p",
                          { class: "text-blue-800 dark:text-blue-200 text-xs" },
                          "Hátha megoldható a probléma",
                        ),
                      ],
                      -1,
                    )),
                ]),
              ]),
            ]),
            l("div", r9, [
              w[23] ||
                (w[23] = l(
                  "h4",
                  { class: "font-medium text-surface-900 dark:text-surface-0" },
                  "Ha mégis törölni szeretnéd a fiókodat:",
                  -1,
                )),
              l("div", i9, [
                l("div", o9, [
                  O(
                    H(vr),
                    {
                      modelValue: o.value.understoodConsequences,
                      "onUpdate:modelValue":
                        w[1] ||
                        (w[1] = (S) => (o.value.understoodConsequences = S)),
                      binary: !0,
                    },
                    null,
                    8,
                    ["modelValue"],
                  ),
                  w[19] ||
                    (w[19] = l(
                      "label",
                      {
                        class:
                          "text-surface-900 dark:text-surface-0 cursor-pointer",
                      },
                      " Megértettem, hogy ez a művelet visszafordíthatatlan és minden adatom elvész ",
                      -1,
                    )),
                ]),
                l("div", s9, [
                  O(
                    H(vr),
                    {
                      modelValue: o.value.dataBackup,
                      "onUpdate:modelValue":
                        w[2] || (w[2] = (S) => (o.value.dataBackup = S)),
                      binary: !0,
                    },
                    null,
                    8,
                    ["modelValue"],
                  ),
                  w[20] ||
                    (w[20] = l(
                      "label",
                      {
                        class:
                          "text-surface-900 dark:text-surface-0 cursor-pointer",
                      },
                      " Elmentettem/letöltöttem minden fontos adatomat ",
                      -1,
                    )),
                ]),
                l("div", a9, [
                  O(
                    H(vr),
                    {
                      modelValue: o.value.rankTransfer,
                      "onUpdate:modelValue":
                        w[3] || (w[3] = (S) => (o.value.rankTransfer = S)),
                      binary: !0,
                    },
                    null,
                    8,
                    ["modelValue"],
                  ),
                  w[21] ||
                    (w[21] = l(
                      "label",
                      {
                        class:
                          "text-surface-900 dark:text-surface-0 cursor-pointer",
                      },
                      " Nem szeretném átadni a rangomat másnak (vagy már átadtam) ",
                      -1,
                    )),
                ]),
                l("div", l9, [
                  w[22] ||
                    (w[22] = l(
                      "label",
                      {
                        class:
                          "text-surface-900 dark:text-surface-0 font-medium",
                      },
                      " Miért szeretnéd törölni a fiókodat? (opcionális) ",
                      -1,
                    )),
                  O(
                    H(Lr),
                    {
                      modelValue: s.value,
                      "onUpdate:modelValue":
                        w[4] || (w[4] = (S) => (s.value = S)),
                      placeholder: "Segítene nekünk, ha elmondanád miért...",
                      rows: "3",
                      class: "w-full",
                    },
                    null,
                    8,
                    ["modelValue"],
                  ),
                ]),
              ]),
            ]),
            h.value
              ? (E(),
                R("div", c9, [
                  w[27] ||
                    (w[27] = l(
                      "h4",
                      {
                        class:
                          "font-medium text-red-900 dark:text-red-100 mb-3",
                      },
                      "Végső megerősítés",
                      -1,
                    )),
                  l("div", u9, [
                    l("div", d9, [
                      w[24] ||
                        (w[24] = l(
                          "label",
                          {
                            class: "text-red-900 dark:text-red-100 font-medium",
                          },
                          " Írd be a jelszavadat a megerősítéshez: ",
                          -1,
                        )),
                      O(
                        H(eo),
                        {
                          modelValue: a.value,
                          "onUpdate:modelValue":
                            w[5] || (w[5] = (S) => (a.value = S)),
                          feedback: !1,
                          "toggle-mask": "",
                          class: "w-full",
                          placeholder: "Jelenlegi jelszó",
                        },
                        null,
                        8,
                        ["modelValue"],
                      ),
                    ]),
                    l("div", f9, [
                      w[25] ||
                        (w[25] = l(
                          "label",
                          {
                            class: "text-red-900 dark:text-red-100 font-medium",
                          },
                          [
                            Ke(" Írd be ezt: "),
                            l(
                              "span",
                              {
                                class:
                                  "font-mono bg-red-200 dark:bg-red-800 px-2 py-1 rounded",
                              },
                              "TÖRÖLD A FIÓKOM",
                            ),
                          ],
                          -1,
                        )),
                      O(
                        H(yt),
                        {
                          modelValue: c.value,
                          "onUpdate:modelValue":
                            w[6] || (w[6] = (S) => (c.value = S)),
                          class: "w-full",
                          placeholder: "TÖRÖLD A FIÓKOM",
                        },
                        null,
                        8,
                        ["modelValue"],
                      ),
                    ]),
                    l("div", p9, [
                      O(
                        H(vr),
                        {
                          modelValue: u.value,
                          "onUpdate:modelValue":
                            w[7] || (w[7] = (S) => (u.value = S)),
                          binary: !0,
                        },
                        null,
                        8,
                        ["modelValue"],
                      ),
                      w[26] ||
                        (w[26] = l(
                          "label",
                          {
                            class:
                              "text-red-900 dark:text-red-100 cursor-pointer font-medium",
                          },
                          " Véglegesen törlöm a fiókom és minden adatomat ",
                          -1,
                        )),
                    ]),
                  ]),
                ]))
              : le("", !0),
            l("div", h9, [
              O(H(Ce), {
                label: "Vissza a profilhoz",
                severity: "secondary",
                outlined: "",
                onClick: b,
              }),
              O(
                H(Ce),
                {
                  label: "Fiók végleges törlése",
                  severity: "danger",
                  disabled: !v.value,
                  loading: n.value,
                  onClick: y,
                },
                null,
                8,
                ["disabled", "loading"],
              ),
            ]),
          ]),
          O(
            H(on),
            {
              visible: r.value,
              "onUpdate:visible": w[12] || (w[12] = (S) => (r.value = S)),
              modal: !0,
              "show-header": !1,
              breakpoints: { "960px": "75vw", "640px": "90vw" },
              style: { width: "35rem" },
              class: "shadow-sm rounded-2xl",
              pt: { content: "!p-6" },
            },
            {
              default: Ye(() => [
                l("div", m9, [
                  l("div", g9, [
                    w[29] ||
                      (w[29] = l(
                        "h3",
                        {
                          class:
                            "text-lg font-semibold text-surface-900 dark:text-surface-0",
                        },
                        "Fiók felfüggesztése",
                        -1,
                      )),
                    O(H(Ce), {
                      icon: "pi pi-times",
                      text: "",
                      rounded: "",
                      severity: "secondary",
                      class: "w-8 h-8",
                      onClick: w[8] || (w[8] = (S) => (r.value = !1)),
                    }),
                  ]),
                  l("div", v9, [
                    w[32] ||
                      (w[32] = l(
                        "div",
                        {
                          class:
                            "p-4 bg-orange-50 dark:bg-orange-900/20 border border-orange-200 dark:border-orange-800 rounded-lg",
                        },
                        [
                          l(
                            "h4",
                            {
                              class:
                                "font-medium text-orange-900 dark:text-orange-100 mb-2",
                            },
                            "Fiók felfüggesztés előnyei:",
                          ),
                          l(
                            "ul",
                            {
                              class:
                                "text-sm text-orange-800 dark:text-orange-200 space-y-1",
                            },
                            [
                              l("li", null, "• Minden adatod megmarad"),
                              l(
                                "li",
                                null,
                                "• 30-90 nap után visszaaktiválható",
                              ),
                              l("li", null, "• Rangod és BÉ-id nem vész el"),
                              l("li", null, "• Bármikor meggondolhatod magad"),
                            ],
                          ),
                        ],
                        -1,
                      )),
                    l("div", b9, [
                      w[30] ||
                        (w[30] = l(
                          "label",
                          {
                            class:
                              "text-surface-900 dark:text-surface-0 font-medium",
                          },
                          " Felfüggesztési időszak: ",
                          -1,
                        )),
                      O(
                        H(ic),
                        {
                          modelValue: d.value,
                          "onUpdate:modelValue":
                            w[9] || (w[9] = (S) => (d.value = S)),
                          options: p.value,
                          "option-label": "label",
                          "option-value": "value",
                          placeholder: "Válassz időszakot",
                          class: "w-full",
                        },
                        null,
                        8,
                        ["modelValue", "options"],
                      ),
                    ]),
                    l("div", y9, [
                      w[31] ||
                        (w[31] = l(
                          "label",
                          {
                            class:
                              "text-surface-900 dark:text-surface-0 font-medium",
                          },
                          " Indoklás (opcionális): ",
                          -1,
                        )),
                      O(
                        H(Lr),
                        {
                          modelValue: f.value,
                          "onUpdate:modelValue":
                            w[10] || (w[10] = (S) => (f.value = S)),
                          placeholder:
                            "Miért szeretnéd felfüggeszteni a fiókodat?",
                          rows: "3",
                          class: "w-full",
                        },
                        null,
                        8,
                        ["modelValue"],
                      ),
                    ]),
                  ]),
                  l("div", x9, [
                    O(H(Ce), {
                      label: "Mégse",
                      outlined: "",
                      onClick: w[11] || (w[11] = (S) => (r.value = !1)),
                    }),
                    O(
                      H(Ce),
                      {
                        label: "Fiók felfüggesztése",
                        severity: "warning",
                        disabled: !d.value,
                        onClick: _,
                      },
                      null,
                      8,
                      ["disabled"],
                    ),
                  ]),
                ]),
              ]),
              _: 1,
            },
            8,
            ["visible"],
          ),
          O(
            H(on),
            {
              visible: i.value,
              "onUpdate:visible": w[14] || (w[14] = (S) => (i.value = S)),
              modal: !0,
              "show-header": !1,
              closable: !1,
              style: { width: "30rem" },
              class: "shadow-sm rounded-2xl",
              pt: { content: "!p-6" },
            },
            {
              default: Ye(() => [
                l("div", _9, [
                  w[33] ||
                    (w[33] = l(
                      "div",
                      {
                        class:
                          "w-16 h-16 bg-red-100 dark:bg-red-900/20 rounded-full flex items-center justify-center mx-auto",
                      },
                      [
                        l("i", {
                          class:
                            "pi pi-exclamation-triangle text-red-500 text-2xl",
                        }),
                      ],
                      -1,
                    )),
                  w[34] ||
                    (w[34] = l(
                      "div",
                      null,
                      [
                        l(
                          "h3",
                          {
                            class:
                              "text-xl font-semibold text-surface-900 dark:text-surface-0 mb-2",
                          },
                          "Utolsó figyelmeztetés",
                        ),
                        l(
                          "p",
                          { class: "text-surface-600 dark:text-surface-300" },
                          [
                            Ke(
                              " Biztos vagy benne, hogy véglegesen törölni szeretnéd a fiókodat? Ez a művelet ",
                            ),
                            l("strong", null, "nem visszafordítható"),
                            Ke("! "),
                          ],
                        ),
                      ],
                      -1,
                    )),
                  l("div", w9, [
                    O(H(Ce), {
                      label: "Nem, meggondoltam",
                      outlined: "",
                      onClick: w[13] || (w[13] = (S) => (i.value = !1)),
                    }),
                    O(
                      H(Ce),
                      {
                        label: "Igen, törlöm véglegesen",
                        severity: "danger",
                        onClick: x,
                        loading: n.value,
                      },
                      null,
                      8,
                      ["loading"],
                    ),
                  ]),
                ]),
              ]),
              _: 1,
            },
            8,
            ["visible"],
          ),
        ])
      );
    },
  },
  S9 = { class: "space-y-6" },
  C9 = { key: 0, class: "flex justify-center py-8" },
  M9 = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  E9 = { class: "flex items-center gap-6" },
  T9 = { class: "relative" },
  A9 = ["src", "alt"],
  P9 = { class: "flex-1" },
  R9 = { class: "text-2xl font-bold text-surface-900 dark:text-surface-0" },
  L9 = { class: "text-surface-600 dark:text-surface-300 mb-2" },
  D9 = { class: "flex items-center gap-4 text-sm" },
  I9 = { class: "flex items-center gap-1" },
  O9 = { class: "text-surface-600 dark:text-surface-300" },
  $9 = { class: "flex items-center gap-1" },
  z9 = { class: "text-blue-600 font-medium" },
  B9 = { class: "flex items-center gap-1" },
  U9 = { class: "text-surface-600 dark:text-surface-300" },
  F9 = { class: "grid grid-cols-1 lg:grid-cols-3 gap-6" },
  N9 = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-4 rounded-lg border border-surface-200 dark:border-surface-700 h-fit",
  },
  V9 = { class: "space-y-1" },
  H9 = ["onClick"],
  j9 = { class: "font-medium" },
  G9 = { class: "lg:col-span-2" },
  W9 = { key: 2, class: "fixed top-4 right-4 z-50" },
  K9 = {
    class:
      "bg-green-500 text-white px-6 py-4 rounded-lg shadow-lg flex items-center gap-2 animate-fadeIn",
  },
  X9 = {
    __name: "Profile",
    setup(t) {
      const e = N("personal"),
        n = N(!1),
        r = N(""),
        i = N(!0),
        o = N({}),
        s = N({}),
        a = N([
          { id: "personal", label: "Személyes adatok", icon: "pi pi-user" },
          { id: "security", label: "Biztonság", icon: "pi pi-shield" },
          { id: "notifications", label: "Értesítések", icon: "pi pi-bell" },
          { id: "delete", label: "Fiók törlése", icon: "pi pi-trash" },
        ]),
        c = (b) =>
          new Intl.DateTimeFormat("hu-HU", {
            year: "numeric",
            month: "long",
            day: "numeric",
          }).format(new Date(b)),
        u = () => {
          h("Avatar módosítás funkció hamarosan elérhető!");
        },
        d = async (b) => {
          ((o.value = { ...o.value, ...b }),
            h("Profil sikeresen frissítve!"),
            await v());
        },
        f = () => {
          h("Jelszó sikeresen módosítva!");
        },
        p = (b) => {
          ((s.value = b), h("Értesítési beállítások mentve!"));
        },
        h = (b) => {
          ((r.value = b),
            (n.value = !0),
            setTimeout(() => {
              n.value = !1;
            }, 3e3));
        },
        v = async () => {
          var b;
          i.value = !0;
          try {
            const [g, m, _] = await Promise.all([
              Ve.getUserProfile(),
              Ve.getUserRank().catch(() => ({ current_rank: null })),
              Ve.getNotificationSettings().catch(() => ({})),
            ]);
            ((o.value = {
              ...g,
              current_rank:
                ((b = m.current_rank) == null ? void 0 : b.name) || null,
            }),
              (s.value = _));
          } catch {
            h("Hiba történt a profil betöltésekor!");
          } finally {
            i.value = !1;
          }
        };
      return (
        $t(() => {
          v();
        }),
        (b, g) => (
          E(),
          R("div", S9, [
            g[6] ||
              (g[6] = l(
                "div",
                { class: "flex justify-between items-center" },
                [
                  l(
                    "h2",
                    {
                      class:
                        "text-2xl font-bold text-surface-900 dark:text-surface-0",
                    },
                    "Profil beállítások",
                  ),
                ],
                -1,
              )),
            i.value
              ? (E(),
                R(
                  "div",
                  C9,
                  g[0] ||
                    (g[0] = [
                      l(
                        "div",
                        {
                          class:
                            "flex items-center gap-2 text-surface-500 dark:text-surface-400",
                        },
                        [
                          l("i", { class: "pi pi-spin pi-spinner" }),
                          l("span", null, "Profil betöltése..."),
                        ],
                        -1,
                      ),
                    ]),
                ))
              : (E(),
                R(
                  We,
                  { key: 1 },
                  [
                    l("div", M9, [
                      l("div", E9, [
                        l("div", T9, [
                          l(
                            "img",
                            {
                              src: o.value.avatar_url || "/images/steve.png",
                              alt: o.value.display_name,
                              class:
                                "w-24 h-24 rounded-full border-4 border-surface-200 dark:border-surface-700",
                            },
                            null,
                            8,
                            A9,
                          ),
                          g[1] ||
                            (g[1] = l(
                              "div",
                              {
                                class:
                                  "absolute -bottom-1 -right-1 w-6 h-6 bg-green-500 rounded-full border-4 border-surface-0 dark:border-surface-900",
                              },
                              null,
                              -1,
                            )),
                        ]),
                        l("div", P9, [
                          l("h3", R9, z(o.value.display_name), 1),
                          l("p", L9, "@" + z(o.value.username), 1),
                          l("div", D9, [
                            l("div", I9, [
                              g[2] ||
                                (g[2] = l(
                                  "i",
                                  { class: "pi pi-id-card text-surface-500" },
                                  null,
                                  -1,
                                )),
                              l("span", O9, z(o.value.account_id), 1),
                            ]),
                            l("div", $9, [
                              g[3] ||
                                (g[3] = l(
                                  "i",
                                  { class: "pi pi-crown text-blue-500" },
                                  null,
                                  -1,
                                )),
                              l(
                                "span",
                                z9,
                                z(o.value.current_rank || "Nincs rang"),
                                1,
                              ),
                            ]),
                            l("div", B9, [
                              g[4] ||
                                (g[4] = l(
                                  "i",
                                  { class: "pi pi-calendar text-surface-500" },
                                  null,
                                  -1,
                                )),
                              l(
                                "span",
                                U9,
                                "Regisztráció: " +
                                  z(c(o.value.registration_date)),
                                1,
                              ),
                            ]),
                          ]),
                        ]),
                        O(H(Ce), {
                          label: "Avatar módosítása",
                          icon: "pi pi-camera",
                          outlined: "",
                          disabled: "",
                          onClick: u,
                        }),
                      ]),
                    ]),
                    l("div", F9, [
                      l("div", N9, [
                        l("ul", V9, [
                          (E(!0),
                          R(
                            We,
                            null,
                            mt(
                              a.value,
                              (m) => (
                                E(),
                                R("li", { key: m.id }, [
                                  l(
                                    "button",
                                    {
                                      onClick: (_) => (e.value = m.id),
                                      class: Ie([
                                        "w-full flex items-center gap-3 px-4 py-3 rounded-lg text-left transition-colors",
                                        e.value === m.id
                                          ? "bg-primary-50 dark:bg-primary-900/20 text-primary-600 dark:text-primary-400 border border-primary-200 dark:border-primary-700"
                                          : "text-surface-700 dark:text-surface-300 hover:bg-surface-50 dark:hover:bg-surface-800",
                                      ]),
                                    },
                                    [
                                      l("i", { class: Ie(m.icon) }, null, 2),
                                      l("span", j9, z(m.label), 1),
                                    ],
                                    10,
                                    H9,
                                  ),
                                ])
                              ),
                            ),
                            128,
                          )),
                        ]),
                      ]),
                      l("div", G9, [
                        e.value === "personal"
                          ? (E(),
                            Be(
                              uO,
                              {
                                key: 0,
                                "user-profile": o.value,
                                onProfileUpdated: d,
                              },
                              null,
                              8,
                              ["user-profile"],
                            ))
                          : le("", !0),
                        e.value === "security"
                          ? (E(), Be(f$, { key: 1, onPasswordChanged: f }))
                          : le("", !0),
                        e.value === "notifications"
                          ? (E(),
                            Be(
                              Y8,
                              {
                                key: 2,
                                settings: s.value,
                                onSettingsUpdated: p,
                              },
                              null,
                              8,
                              ["settings"],
                            ))
                          : le("", !0),
                        e.value === "delete"
                          ? (E(), Be(k9, { key: 3 }))
                          : le("", !0),
                      ]),
                    ]),
                  ],
                  64,
                )),
            n.value
              ? (E(),
                R("div", W9, [
                  l("div", K9, [
                    g[5] ||
                      (g[5] = l(
                        "i",
                        { class: "pi pi-check-circle" },
                        null,
                        -1,
                      )),
                    l("span", null, z(r.value), 1),
                  ]),
                ]))
              : le("", !0),
          ])
        )
      );
    },
  },
  Y9 = cr(X9, [["__scopeId", "data-v-34d8bfc1"]]),
  q9 = "/images/logoooo.png";
var Z9 = `
    .p-message {
        border-radius: dt('message.border.radius');
        outline-width: dt('message.border.width');
        outline-style: solid;
    }

    .p-message-content {
        display: flex;
        align-items: center;
        padding: dt('message.content.padding');
        gap: dt('message.content.gap');
        height: 100%;
    }

    .p-message-icon {
        flex-shrink: 0;
    }

    .p-message-close-button {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        margin-inline-start: auto;
        overflow: hidden;
        position: relative;
        width: dt('message.close.button.width');
        height: dt('message.close.button.height');
        border-radius: dt('message.close.button.border.radius');
        background: transparent;
        transition:
            background dt('message.transition.duration'),
            color dt('message.transition.duration'),
            outline-color dt('message.transition.duration'),
            box-shadow dt('message.transition.duration'),
            opacity 0.3s;
        outline-color: transparent;
        color: inherit;
        padding: 0;
        border: none;
        cursor: pointer;
        user-select: none;
    }

    .p-message-close-icon {
        font-size: dt('message.close.icon.size');
        width: dt('message.close.icon.size');
        height: dt('message.close.icon.size');
    }

    .p-message-close-button:focus-visible {
        outline-width: dt('message.close.button.focus.ring.width');
        outline-style: dt('message.close.button.focus.ring.style');
        outline-offset: dt('message.close.button.focus.ring.offset');
    }

    .p-message-info {
        background: dt('message.info.background');
        outline-color: dt('message.info.border.color');
        color: dt('message.info.color');
        box-shadow: dt('message.info.shadow');
    }

    .p-message-info .p-message-close-button:focus-visible {
        outline-color: dt('message.info.close.button.focus.ring.color');
        box-shadow: dt('message.info.close.button.focus.ring.shadow');
    }

    .p-message-info .p-message-close-button:hover {
        background: dt('message.info.close.button.hover.background');
    }

    .p-message-info.p-message-outlined {
        color: dt('message.info.outlined.color');
        outline-color: dt('message.info.outlined.border.color');
    }

    .p-message-info.p-message-simple {
        color: dt('message.info.simple.color');
    }

    .p-message-success {
        background: dt('message.success.background');
        outline-color: dt('message.success.border.color');
        color: dt('message.success.color');
        box-shadow: dt('message.success.shadow');
    }

    .p-message-success .p-message-close-button:focus-visible {
        outline-color: dt('message.success.close.button.focus.ring.color');
        box-shadow: dt('message.success.close.button.focus.ring.shadow');
    }

    .p-message-success .p-message-close-button:hover {
        background: dt('message.success.close.button.hover.background');
    }

    .p-message-success.p-message-outlined {
        color: dt('message.success.outlined.color');
        outline-color: dt('message.success.outlined.border.color');
    }

    .p-message-success.p-message-simple {
        color: dt('message.success.simple.color');
    }

    .p-message-warn {
        background: dt('message.warn.background');
        outline-color: dt('message.warn.border.color');
        color: dt('message.warn.color');
        box-shadow: dt('message.warn.shadow');
    }

    .p-message-warn .p-message-close-button:focus-visible {
        outline-color: dt('message.warn.close.button.focus.ring.color');
        box-shadow: dt('message.warn.close.button.focus.ring.shadow');
    }

    .p-message-warn .p-message-close-button:hover {
        background: dt('message.warn.close.button.hover.background');
    }

    .p-message-warn.p-message-outlined {
        color: dt('message.warn.outlined.color');
        outline-color: dt('message.warn.outlined.border.color');
    }

    .p-message-warn.p-message-simple {
        color: dt('message.warn.simple.color');
    }

    .p-message-error {
        background: dt('message.error.background');
        outline-color: dt('message.error.border.color');
        color: dt('message.error.color');
        box-shadow: dt('message.error.shadow');
    }

    .p-message-error .p-message-close-button:focus-visible {
        outline-color: dt('message.error.close.button.focus.ring.color');
        box-shadow: dt('message.error.close.button.focus.ring.shadow');
    }

    .p-message-error .p-message-close-button:hover {
        background: dt('message.error.close.button.hover.background');
    }

    .p-message-error.p-message-outlined {
        color: dt('message.error.outlined.color');
        outline-color: dt('message.error.outlined.border.color');
    }

    .p-message-error.p-message-simple {
        color: dt('message.error.simple.color');
    }

    .p-message-secondary {
        background: dt('message.secondary.background');
        outline-color: dt('message.secondary.border.color');
        color: dt('message.secondary.color');
        box-shadow: dt('message.secondary.shadow');
    }

    .p-message-secondary .p-message-close-button:focus-visible {
        outline-color: dt('message.secondary.close.button.focus.ring.color');
        box-shadow: dt('message.secondary.close.button.focus.ring.shadow');
    }

    .p-message-secondary .p-message-close-button:hover {
        background: dt('message.secondary.close.button.hover.background');
    }

    .p-message-secondary.p-message-outlined {
        color: dt('message.secondary.outlined.color');
        outline-color: dt('message.secondary.outlined.border.color');
    }

    .p-message-secondary.p-message-simple {
        color: dt('message.secondary.simple.color');
    }

    .p-message-contrast {
        background: dt('message.contrast.background');
        outline-color: dt('message.contrast.border.color');
        color: dt('message.contrast.color');
        box-shadow: dt('message.contrast.shadow');
    }

    .p-message-contrast .p-message-close-button:focus-visible {
        outline-color: dt('message.contrast.close.button.focus.ring.color');
        box-shadow: dt('message.contrast.close.button.focus.ring.shadow');
    }

    .p-message-contrast .p-message-close-button:hover {
        background: dt('message.contrast.close.button.hover.background');
    }

    .p-message-contrast.p-message-outlined {
        color: dt('message.contrast.outlined.color');
        outline-color: dt('message.contrast.outlined.border.color');
    }

    .p-message-contrast.p-message-simple {
        color: dt('message.contrast.simple.color');
    }

    .p-message-text {
        font-size: dt('message.text.font.size');
        font-weight: dt('message.text.font.weight');
    }

    .p-message-icon {
        font-size: dt('message.icon.size');
        width: dt('message.icon.size');
        height: dt('message.icon.size');
    }

    .p-message-enter-from {
        opacity: 0;
    }

    .p-message-enter-active {
        transition: opacity 0.3s;
    }

    .p-message.p-message-leave-from {
        max-height: 1000px;
    }

    .p-message.p-message-leave-to {
        max-height: 0;
        opacity: 0;
        margin: 0;
    }

    .p-message-leave-active {
        overflow: hidden;
        transition:
            max-height 0.45s cubic-bezier(0, 1, 0, 1),
            opacity 0.3s,
            margin 0.3s;
    }

    .p-message-leave-active .p-message-close-button {
        opacity: 0;
    }

    .p-message-sm .p-message-content {
        padding: dt('message.content.sm.padding');
    }

    .p-message-sm .p-message-text {
        font-size: dt('message.text.sm.font.size');
    }

    .p-message-sm .p-message-icon {
        font-size: dt('message.icon.sm.size');
        width: dt('message.icon.sm.size');
        height: dt('message.icon.sm.size');
    }

    .p-message-sm .p-message-close-icon {
        font-size: dt('message.close.icon.sm.size');
        width: dt('message.close.icon.sm.size');
        height: dt('message.close.icon.sm.size');
    }

    .p-message-lg .p-message-content {
        padding: dt('message.content.lg.padding');
    }

    .p-message-lg .p-message-text {
        font-size: dt('message.text.lg.font.size');
    }

    .p-message-lg .p-message-icon {
        font-size: dt('message.icon.lg.size');
        width: dt('message.icon.lg.size');
        height: dt('message.icon.lg.size');
    }

    .p-message-lg .p-message-close-icon {
        font-size: dt('message.close.icon.lg.size');
        width: dt('message.close.icon.lg.size');
        height: dt('message.close.icon.lg.size');
    }

    .p-message-outlined {
        background: transparent;
        outline-width: dt('message.outlined.border.width');
    }

    .p-message-simple {
        background: transparent;
        outline-color: transparent;
        box-shadow: none;
    }

    .p-message-simple .p-message-content {
        padding: dt('message.simple.content.padding');
    }

    .p-message-outlined .p-message-close-button:hover,
    .p-message-simple .p-message-close-button:hover {
        background: transparent;
    }
`,
  J9 = {
    root: function (e) {
      var n = e.props;
      return [
        "p-message p-component p-message-" + n.severity,
        {
          "p-message-outlined": n.variant === "outlined",
          "p-message-simple": n.variant === "simple",
          "p-message-sm": n.size === "small",
          "p-message-lg": n.size === "large",
        },
      ];
    },
    content: "p-message-content",
    icon: "p-message-icon",
    text: "p-message-text",
    closeButton: "p-message-close-button",
    closeIcon: "p-message-close-icon",
  },
  Q9 = ot.extend({ name: "message", style: Z9, classes: J9 }),
  ez = {
    name: "BaseMessage",
    extends: lr,
    props: {
      severity: { type: String, default: "info" },
      closable: { type: Boolean, default: !1 },
      life: { type: Number, default: null },
      icon: { type: String, default: void 0 },
      closeIcon: { type: String, default: void 0 },
      closeButtonProps: { type: null, default: null },
      size: { type: String, default: null },
      variant: { type: String, default: null },
    },
    style: Q9,
    provide: function () {
      return { $pcMessage: this, $parentInstance: this };
    },
  };
function Pa(t) {
  "@babel/helpers - typeof";
  return (
    (Pa =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    Pa(t)
  );
}
function Km(t, e, n) {
  return (
    (e = tz(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function tz(t) {
  var e = nz(t, "string");
  return Pa(e) == "symbol" ? e : e + "";
}
function nz(t, e) {
  if (Pa(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (Pa(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var Ys = {
  name: "Message",
  extends: ez,
  inheritAttrs: !1,
  emits: ["close", "life-end"],
  timeout: null,
  data: function () {
    return { visible: !0 };
  },
  mounted: function () {
    var e = this;
    this.life &&
      setTimeout(function () {
        ((e.visible = !1), e.$emit("life-end"));
      }, this.life);
  },
  methods: {
    close: function (e) {
      ((this.visible = !1), this.$emit("close", e));
    },
  },
  computed: {
    closeAriaLabel: function () {
      return this.$primevue.config.locale.aria
        ? this.$primevue.config.locale.aria.close
        : void 0;
    },
    dataP: function () {
      return At(
        Km(
          Km(
            {
              outlined: this.variant === "outlined",
              simple: this.variant === "simple",
            },
            this.severity,
            this.severity,
          ),
          this.size,
          this.size,
        ),
      );
    },
  },
  directives: { ripple: Ha },
  components: { TimesIcon: Sc },
};
function Ra(t) {
  "@babel/helpers - typeof";
  return (
    (Ra =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    Ra(t)
  );
}
function Xm(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    (e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r));
  }
  return n;
}
function Ym(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? Xm(Object(n), !0).forEach(function (r) {
          rz(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
        : Xm(Object(n)).forEach(function (r) {
            Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
          });
  }
  return t;
}
function rz(t, e, n) {
  return (
    (e = iz(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function iz(t) {
  var e = oz(t, "string");
  return Ra(e) == "symbol" ? e : e + "";
}
function oz(t, e) {
  if (Ra(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (Ra(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var sz = ["data-p"],
  az = ["data-p"],
  lz = ["data-p"],
  cz = ["aria-label", "data-p"],
  uz = ["data-p"];
function dz(t, e, n, r, i, o) {
  var s = Mt("TimesIcon"),
    a = Xn("ripple");
  return (
    E(),
    Be(
      Fa,
      Q({ name: "p-message", appear: "" }, t.ptmi("transition")),
      {
        default: Ye(function () {
          return [
            st(
              l(
                "div",
                Q(
                  {
                    class: t.cx("root"),
                    role: "alert",
                    "aria-live": "assertive",
                    "aria-atomic": "true",
                    "data-p": o.dataP,
                  },
                  t.ptm("root"),
                ),
                [
                  t.$slots.container
                    ? De(t.$slots, "container", {
                        key: 0,
                        closeCallback: o.close,
                      })
                    : (E(),
                      R(
                        "div",
                        Q(
                          { key: 1, class: t.cx("content"), "data-p": o.dataP },
                          t.ptm("content"),
                        ),
                        [
                          De(
                            t.$slots,
                            "icon",
                            { class: Ie(t.cx("icon")) },
                            function () {
                              return [
                                (E(),
                                Be(
                                  Dt(t.icon ? "span" : null),
                                  Q(
                                    {
                                      class: [t.cx("icon"), t.icon],
                                      "data-p": o.dataP,
                                    },
                                    t.ptm("icon"),
                                  ),
                                  null,
                                  16,
                                  ["class", "data-p"],
                                )),
                              ];
                            },
                          ),
                          t.$slots.default
                            ? (E(),
                              R(
                                "div",
                                Q(
                                  {
                                    key: 0,
                                    class: t.cx("text"),
                                    "data-p": o.dataP,
                                  },
                                  t.ptm("text"),
                                ),
                                [De(t.$slots, "default")],
                                16,
                                lz,
                              ))
                            : le("", !0),
                          t.closable
                            ? st(
                                (E(),
                                R(
                                  "button",
                                  Q(
                                    {
                                      key: 1,
                                      class: t.cx("closeButton"),
                                      "aria-label": o.closeAriaLabel,
                                      type: "button",
                                      onClick:
                                        e[0] ||
                                        (e[0] = function (c) {
                                          return o.close(c);
                                        }),
                                      "data-p": o.dataP,
                                    },
                                    Ym(
                                      Ym({}, t.closeButtonProps),
                                      t.ptm("closeButton"),
                                    ),
                                  ),
                                  [
                                    De(t.$slots, "closeicon", {}, function () {
                                      return [
                                        t.closeIcon
                                          ? (E(),
                                            R(
                                              "i",
                                              Q(
                                                {
                                                  key: 0,
                                                  class: [
                                                    t.cx("closeIcon"),
                                                    t.closeIcon,
                                                  ],
                                                  "data-p": o.dataP,
                                                },
                                                t.ptm("closeIcon"),
                                              ),
                                              null,
                                              16,
                                              uz,
                                            ))
                                          : (E(),
                                            Be(
                                              s,
                                              Q(
                                                {
                                                  key: 1,
                                                  class: [
                                                    t.cx("closeIcon"),
                                                    t.closeIcon,
                                                  ],
                                                  "data-p": o.dataP,
                                                },
                                                t.ptm("closeIcon"),
                                              ),
                                              null,
                                              16,
                                              ["class", "data-p"],
                                            )),
                                      ];
                                    }),
                                  ],
                                  16,
                                  cz,
                                )),
                                [[a]],
                              )
                            : le("", !0),
                        ],
                        16,
                        az,
                      )),
                ],
                16,
                sz,
              ),
              [[qu, i.visible]],
            ),
          ];
        }),
        _: 3,
      },
      16,
    )
  );
}
Ys.render = dz;
const fz = {
    class:
      "bg-surface-0 dark:bg-surface-950 w-full md:w-5/12 px-8 py-20 md:px-12 lg:px-16 flex flex-col gap-12 rounded min-h-screen justify-center",
  },
  pz = { class: "flex flex-col gap-4" },
  hz = { class: "flex flex-col gap-2" },
  mz = { class: "mt-2" },
  gz = { class: "flex flex-col gap-6" },
  vz = { class: "flex flex-col gap-2" },
  bz = { key: 0, class: "text-red-500" },
  yz = { class: "flex flex-col gap-2" },
  xz = { key: 0, class: "text-red-500" },
  _z = { class: "flex items-center justify-between" },
  wz = { class: "flex items-center gap-2" },
  kz = { class: "flex flex-col gap-4" },
  Sz = { class: "flex flex-col gap-4" },
  Cz = { class: "flex justify-between items-center" },
  Mz = { class: "space-y-4" },
  Ez = { class: "flex flex-col gap-2" },
  Tz = { class: "flex justify-end gap-2" },
  Az = {
    __name: "LoginForm",
    setup(t) {
      const e = Na(),
        n = Xd(),
        { login: r, isLoading: i } = Va(),
        o = N({ username: "", password: "", rememberMe: !1 }),
        s = N(""),
        a = N(""),
        c = N({}),
        u = N(!1),
        d = N(""),
        f = N(!1),
        p = N(!1),
        h = (y) => {
          switch (((c.value[y] = ""), y)) {
            case "username":
              o.value.username
                ? o.value.username.length < 3 &&
                  (c.value.username = "Legalább 3 karakter szükséges")
                : (c.value.username = "Felhasználónév kötelező");
              break;
            case "password":
              o.value.password
                ? o.value.password.length < 6 &&
                  (c.value.password = "Legalább 6 karakter szükséges")
                : (c.value.password = "Jelszó kötelező");
              break;
          }
        },
        v = Xe(
          () =>
            o.value.username.length >= 3 &&
            o.value.password.length >= 6 &&
            !Object.values(c.value).some((y) => y),
        ),
        b = async () => {
          if (((s.value = ""), h("username"), h("password"), !!v.value))
            try {
              (await r(o.value.username, o.value.password),
                o.value.rememberMe
                  ? localStorage.setItem("remember_user", o.value.username)
                  : localStorage.removeItem("remember_user"));
              const y = n.query.redirect || "/";
              e.push(y);
            } catch (y) {
              s.value = y.message;
            }
        },
        g = () => {},
        m = async () => {
          f.value = !0;
          try {
            (await Ve.post("/auth/forgot-password", { email: d.value }),
              (p.value = !0),
              setTimeout(() => {
                ((u.value = !1), (p.value = !1), (d.value = ""));
              }, 3e3));
          } catch {
          } finally {
            f.value = !1;
          }
        },
        _ = (y) => {
          y.key === "Enter" && v.value && b();
        };
      return (
        $t(() => {
          n.query.registered &&
            (a.value = "Regisztráció sikeres! Most már bejelentkezhetsz.");
          const x = localStorage.getItem("remember_user");
          x && ((o.value.username = x), (o.value.rememberMe = !0));
        }),
        (y, x) => {
          const C = Mt("router-link");
          return (
            E(),
            R("div", fz, [
              l("div", pz, [
                x[13] ||
                  (x[13] = l(
                    "div",
                    { class: "flex items-center gap-4 mb-4" },
                    [
                      l("img", {
                        src: q9,
                        alt: "MesterMC Logo",
                        class: "",
                        style: { width: "300px" },
                      }),
                    ],
                    -1,
                  )),
                l("div", hz, [
                  x[12] ||
                    (x[12] = l(
                      "div",
                      {
                        class:
                          "text-surface-900 dark:text-surface-0 text-2xl font-semibold leading-tight",
                      },
                      "Bányaközpont",
                      -1,
                    )),
                  l("div", mz, [
                    x[11] ||
                      (x[11] = l(
                        "span",
                        { class: "text-surface-700 dark:text-surface-200" },
                        "Nincs még fiókod?",
                        -1,
                      )),
                    O(
                      C,
                      {
                        to: "/register",
                        class:
                          "text-primary-500 font-medium cursor-pointer hover:text-primary-600 ml-1",
                      },
                      {
                        default: Ye(
                          () => x[10] || (x[10] = [Ke("Regisztrálj itt!")]),
                        ),
                        _: 1,
                        __: [10],
                      },
                    ),
                  ]),
                ]),
              ]),
              l("div", gz, [
                s.value
                  ? (E(),
                    Be(
                      H(Ys),
                      {
                        key: 0,
                        severity: "error",
                        closable: !1,
                        class: "mb-4",
                      },
                      { default: Ye(() => [Ke(z(s.value), 1)]), _: 1 },
                    ))
                  : le("", !0),
                a.value
                  ? (E(),
                    Be(
                      H(Ys),
                      {
                        key: 1,
                        severity: "success",
                        closable: !1,
                        class: "mb-4",
                      },
                      { default: Ye(() => [Ke(z(a.value), 1)]), _: 1 },
                    ))
                  : le("", !0),
                l("div", vz, [
                  x[14] ||
                    (x[14] = l(
                      "label",
                      {
                        for: "username",
                        class:
                          "text-surface-900 dark:text-surface-0 font-medium",
                      },
                      "Minecraft felhasználónév",
                      -1,
                    )),
                  O(
                    H(yt),
                    {
                      id: "username",
                      modelValue: o.value.username,
                      "onUpdate:modelValue":
                        x[0] || (x[0] = (w) => (o.value.username = w)),
                      type: "text",
                      placeholder: "Steve_the_Miner",
                      class: Ie([
                        "w-full p-3 rounded-md shadow-sm",
                        { "p-invalid": c.value.username },
                      ]),
                      onKeypress: _,
                      onBlur: x[1] || (x[1] = (w) => h("username")),
                    },
                    null,
                    8,
                    ["modelValue", "class"],
                  ),
                  c.value.username
                    ? (E(), R("small", bz, z(c.value.username), 1))
                    : le("", !0),
                ]),
                l("div", yz, [
                  x[15] ||
                    (x[15] = l(
                      "label",
                      {
                        for: "password",
                        class:
                          "text-surface-900 dark:text-surface-0 font-medium",
                      },
                      "Jelszó",
                      -1,
                    )),
                  O(
                    H(yt),
                    {
                      id: "password",
                      modelValue: o.value.password,
                      "onUpdate:modelValue":
                        x[2] || (x[2] = (w) => (o.value.password = w)),
                      type: "password",
                      placeholder: "••••••••",
                      class: Ie([
                        "w-full p-3 rounded-md shadow-sm",
                        { "p-invalid": c.value.password },
                      ]),
                      onKeypress: _,
                      onBlur: x[3] || (x[3] = (w) => h("password")),
                    },
                    null,
                    8,
                    ["modelValue", "class"],
                  ),
                  c.value.password
                    ? (E(), R("small", xz, z(c.value.password), 1))
                    : le("", !0),
                ]),
                l("div", _z, [
                  l("div", wz, [
                    O(
                      H(vr),
                      {
                        id: "rememberme",
                        modelValue: o.value.rememberMe,
                        "onUpdate:modelValue":
                          x[4] || (x[4] = (w) => (o.value.rememberMe = w)),
                        binary: !0,
                      },
                      null,
                      8,
                      ["modelValue"],
                    ),
                    x[16] ||
                      (x[16] = l(
                        "label",
                        {
                          for: "rememberme",
                          class: "text-surface-900 dark:text-surface-0",
                        },
                        "Emlékezz rám",
                        -1,
                      )),
                  ]),
                  l(
                    "a",
                    {
                      onClick: x[5] || (x[5] = (w) => (u.value = !0)),
                      class:
                        "text-surface-500 dark:text-surface-400 font-medium cursor-pointer hover:text-surface-600 dark:hover:text-surface-300",
                    },
                    " Elfelejtetted a jelszót? ",
                  ),
                ]),
              ]),
              l("div", null, [
                O(
                  H(Ce),
                  {
                    label: "Bejelentkezés a bányaközpontba",
                    onClick: b,
                    loading: H(i),
                    disabled: !v.value,
                    class: "w-full !px-12 !py-3",
                  },
                  null,
                  8,
                  ["loading", "disabled"],
                ),
              ]),
              l("div", kz, [
                x[17] ||
                  (x[17] = l(
                    "div",
                    { class: "flex items-center gap-4" },
                    [
                      l("hr", {
                        class:
                          "flex-1 border-surface-200 dark:border-surface-800",
                      }),
                      l(
                        "span",
                        {
                          class:
                            "text-surface-500 dark:text-surface-400 text-sm",
                        },
                        "vagy",
                      ),
                      l("hr", {
                        class:
                          "flex-1 border-surface-200 dark:border-surface-800",
                      }),
                    ],
                    -1,
                  )),
                O(H(Ce), {
                  label: "Discord bejelentkezés",
                  icon: "pi pi-discord",
                  severity: "secondary",
                  outlined: "",
                  class: "w-full !px-12 !py-3",
                  onClick: g,
                  disabled: !0,
                }),
                x[18] ||
                  (x[18] = l(
                    "small",
                    {
                      class:
                        "text-center text-surface-500 dark:text-surface-400 text-xs",
                    },
                    " Discord bejelentkezés hamarosan elérhető ",
                    -1,
                  )),
              ]),
              O(
                H(on),
                {
                  visible: u.value,
                  "onUpdate:visible": x[9] || (x[9] = (w) => (u.value = w)),
                  modal: !0,
                  "show-header": !1,
                  breakpoints: { "960px": "75vw", "640px": "90vw" },
                  style: { width: "30rem" },
                  class: "shadow-sm rounded-2xl",
                  pt: { content: "!p-6" },
                },
                {
                  default: Ye(() => [
                    l("div", Sz, [
                      l("div", Cz, [
                        x[19] ||
                          (x[19] = l(
                            "h3",
                            {
                              class:
                                "text-lg font-semibold text-surface-900 dark:text-surface-0",
                            },
                            "Jelszó visszaállítása",
                            -1,
                          )),
                        O(H(Ce), {
                          icon: "pi pi-times",
                          text: "",
                          rounded: "",
                          severity: "secondary",
                          class: "w-8 h-8",
                          onClick: x[6] || (x[6] = (w) => (u.value = !1)),
                        }),
                      ]),
                      l("div", Mz, [
                        x[22] ||
                          (x[22] = l(
                            "p",
                            {
                              class:
                                "text-surface-600 dark:text-surface-300 text-sm",
                            },
                            " Add meg az email címedet, és küldünk egy linket a jelszó visszaállításához. ",
                            -1,
                          )),
                        l("div", Ez, [
                          x[20] ||
                            (x[20] = l(
                              "label",
                              {
                                class:
                                  "text-surface-900 dark:text-surface-0 font-medium",
                              },
                              "Email cím",
                              -1,
                            )),
                          O(
                            H(yt),
                            {
                              modelValue: d.value,
                              "onUpdate:modelValue":
                                x[7] || (x[7] = (w) => (d.value = w)),
                              placeholder: "pelda@email.com",
                              class: "w-full",
                              type: "email",
                            },
                            null,
                            8,
                            ["modelValue"],
                          ),
                        ]),
                        p.value
                          ? (E(),
                            Be(
                              H(Ys),
                              { key: 0, severity: "success", closable: !1 },
                              {
                                default: Ye(
                                  () =>
                                    x[21] ||
                                    (x[21] = [
                                      Ke(
                                        " Jelszó visszaállítási email elküldve! Ellenőrizd a postaládádat. ",
                                      ),
                                    ]),
                                ),
                                _: 1,
                                __: [21],
                              },
                            ))
                          : le("", !0),
                      ]),
                      l("div", Tz, [
                        O(H(Ce), {
                          label: "Mégse",
                          outlined: "",
                          onClick: x[8] || (x[8] = (w) => (u.value = !1)),
                        }),
                        O(
                          H(Ce),
                          {
                            label: "Visszaállítási email küldése",
                            disabled: !d.value || p.value,
                            loading: f.value,
                            onClick: m,
                          },
                          null,
                          8,
                          ["disabled", "loading"],
                        ),
                      ]),
                    ]),
                  ]),
                  _: 1,
                },
                8,
                ["visible"],
              ),
            ])
          );
        }
      );
    },
  },
  Pz = {},
  Rz = {
    class: "hidden md:block w-7/12 relative overflow-hidden minecraft-bg",
  };
function Lz(t, e) {
  return (
    E(),
    R(
      "div",
      Rz,
      e[0] ||
        (e[0] = [
          l("div", { class: "absolute inset-0 bg-black/20" }, null, -1),
        ]),
    )
  );
}
const ob = cr(Pz, [
    ["render", Lz],
    ["__scopeId", "data-v-37701dd6"],
  ]),
  Dz = { class: "flex w-full min-h-screen bg-surface-50 dark:bg-surface-950" },
  Iz = {
    __name: "Login",
    setup(t) {
      return (e, n) => (E(), R("div", Dz, [O(Az), O(ob)]));
    },
  },
  Oz = { class: "flex w-full min-h-screen bg-surface-50 dark:bg-surface-950" },
  $z = {
    __name: "Registration",
    setup(t) {
      return (e, n) => (E(), R("div", Oz, [O(ob)]));
    },
  };
var sb = { name: "AngleDownIcon", extends: dn };
function zz(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "svg",
      Q(
        {
          width: "14",
          height: "14",
          viewBox: "0 0 14 14",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        t.pti(),
      ),
      e[0] ||
        (e[0] = [
          l(
            "path",
            {
              d: "M3.58659 4.5007C3.68513 4.50023 3.78277 4.51945 3.87379 4.55723C3.9648 4.59501 4.04735 4.65058 4.11659 4.7207L7.11659 7.7207L10.1166 4.7207C10.2619 4.65055 10.4259 4.62911 10.5843 4.65956C10.7427 4.69002 10.8871 4.77074 10.996 4.88976C11.1049 5.00877 11.1726 5.15973 11.1889 5.32022C11.2052 5.48072 11.1693 5.6422 11.0866 5.7807L7.58659 9.2807C7.44597 9.42115 7.25534 9.50004 7.05659 9.50004C6.85784 9.50004 6.66722 9.42115 6.52659 9.2807L3.02659 5.7807C2.88614 5.64007 2.80725 5.44945 2.80725 5.2507C2.80725 5.05195 2.88614 4.86132 3.02659 4.7207C3.09932 4.64685 3.18675 4.58911 3.28322 4.55121C3.37969 4.51331 3.48305 4.4961 3.58659 4.5007Z",
              fill: "currentColor",
            },
            null,
            -1,
          ),
        ]),
      16,
    )
  );
}
sb.render = zz;
var ab = { name: "AngleUpIcon", extends: dn };
function Bz(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "svg",
      Q(
        {
          width: "14",
          height: "14",
          viewBox: "0 0 14 14",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        t.pti(),
      ),
      e[0] ||
        (e[0] = [
          l(
            "path",
            {
              d: "M10.4134 9.49931C10.3148 9.49977 10.2172 9.48055 10.1262 9.44278C10.0352 9.405 9.95263 9.34942 9.88338 9.27931L6.88338 6.27931L3.88338 9.27931C3.73811 9.34946 3.57409 9.3709 3.41567 9.34044C3.25724 9.30999 3.11286 9.22926 3.00395 9.11025C2.89504 8.99124 2.82741 8.84028 2.8111 8.67978C2.79478 8.51928 2.83065 8.35781 2.91338 8.21931L6.41338 4.71931C6.55401 4.57886 6.74463 4.49997 6.94338 4.49997C7.14213 4.49997 7.33276 4.57886 7.47338 4.71931L10.9734 8.21931C11.1138 8.35994 11.1927 8.55056 11.1927 8.74931C11.1927 8.94806 11.1138 9.13868 10.9734 9.27931C10.9007 9.35315 10.8132 9.41089 10.7168 9.44879C10.6203 9.48669 10.5169 9.5039 10.4134 9.49931Z",
              fill: "currentColor",
            },
            null,
            -1,
          ),
        ]),
      16,
    )
  );
}
ab.render = Bz;
var Uz = `
    .p-inputnumber {
        display: inline-flex;
        position: relative;
    }

    .p-inputnumber-button {
        display: flex;
        align-items: center;
        justify-content: center;
        flex: 0 0 auto;
        cursor: pointer;
        background: dt('inputnumber.button.background');
        color: dt('inputnumber.button.color');
        width: dt('inputnumber.button.width');
        transition:
            background dt('inputnumber.transition.duration'),
            color dt('inputnumber.transition.duration'),
            border-color dt('inputnumber.transition.duration'),
            outline-color dt('inputnumber.transition.duration');
    }

    .p-inputnumber-button:disabled {
        cursor: auto;
    }

    .p-inputnumber-button:not(:disabled):hover {
        background: dt('inputnumber.button.hover.background');
        color: dt('inputnumber.button.hover.color');
    }

    .p-inputnumber-button:not(:disabled):active {
        background: dt('inputnumber.button.active.background');
        color: dt('inputnumber.button.active.color');
    }

    .p-inputnumber-stacked .p-inputnumber-button {
        position: relative;
        border: 0 none;
    }

    .p-inputnumber-stacked .p-inputnumber-button-group {
        display: flex;
        flex-direction: column;
        position: absolute;
        inset-block-start: 1px;
        inset-inline-end: 1px;
        height: calc(100% - 2px);
        z-index: 1;
    }

    .p-inputnumber-stacked .p-inputnumber-increment-button {
        padding: 0;
        border-start-end-radius: calc(dt('inputnumber.button.border.radius') - 1px);
    }

    .p-inputnumber-stacked .p-inputnumber-decrement-button {
        padding: 0;
        border-end-end-radius: calc(dt('inputnumber.button.border.radius') - 1px);
    }

    .p-inputnumber-stacked .p-inputnumber-button {
        flex: 1 1 auto;
        border: 0 none;
    }

    .p-inputnumber-horizontal .p-inputnumber-button {
        border: 1px solid dt('inputnumber.button.border.color');
    }

    .p-inputnumber-horizontal .p-inputnumber-button:hover {
        border-color: dt('inputnumber.button.hover.border.color');
    }

    .p-inputnumber-horizontal .p-inputnumber-button:active {
        border-color: dt('inputnumber.button.active.border.color');
    }

    .p-inputnumber-horizontal .p-inputnumber-increment-button {
        order: 3;
        border-start-end-radius: dt('inputnumber.button.border.radius');
        border-end-end-radius: dt('inputnumber.button.border.radius');
        border-inline-start: 0 none;
    }

    .p-inputnumber-horizontal .p-inputnumber-input {
        order: 2;
        border-radius: 0;
    }

    .p-inputnumber-horizontal .p-inputnumber-decrement-button {
        order: 1;
        border-start-start-radius: dt('inputnumber.button.border.radius');
        border-end-start-radius: dt('inputnumber.button.border.radius');
        border-inline-end: 0 none;
    }

    .p-floatlabel:has(.p-inputnumber-horizontal) label {
        margin-inline-start: dt('inputnumber.button.width');
    }

    .p-inputnumber-vertical {
        flex-direction: column;
    }

    .p-inputnumber-vertical .p-inputnumber-button {
        border: 1px solid dt('inputnumber.button.border.color');
        padding: dt('inputnumber.button.vertical.padding');
    }

    .p-inputnumber-vertical .p-inputnumber-button:hover {
        border-color: dt('inputnumber.button.hover.border.color');
    }

    .p-inputnumber-vertical .p-inputnumber-button:active {
        border-color: dt('inputnumber.button.active.border.color');
    }

    .p-inputnumber-vertical .p-inputnumber-increment-button {
        order: 1;
        border-start-start-radius: dt('inputnumber.button.border.radius');
        border-start-end-radius: dt('inputnumber.button.border.radius');
        width: 100%;
        border-block-end: 0 none;
    }

    .p-inputnumber-vertical .p-inputnumber-input {
        order: 2;
        border-radius: 0;
        text-align: center;
    }

    .p-inputnumber-vertical .p-inputnumber-decrement-button {
        order: 3;
        border-end-start-radius: dt('inputnumber.button.border.radius');
        border-end-end-radius: dt('inputnumber.button.border.radius');
        width: 100%;
        border-block-start: 0 none;
    }

    .p-inputnumber-input {
        flex: 1 1 auto;
    }

    .p-inputnumber-fluid {
        width: 100%;
    }

    .p-inputnumber-fluid .p-inputnumber-input {
        width: 1%;
    }

    .p-inputnumber-fluid.p-inputnumber-vertical .p-inputnumber-input {
        width: 100%;
    }

    .p-inputnumber:has(.p-inputtext-sm) .p-inputnumber-button .p-icon {
        font-size: dt('form.field.sm.font.size');
        width: dt('form.field.sm.font.size');
        height: dt('form.field.sm.font.size');
    }

    .p-inputnumber:has(.p-inputtext-lg) .p-inputnumber-button .p-icon {
        font-size: dt('form.field.lg.font.size');
        width: dt('form.field.lg.font.size');
        height: dt('form.field.lg.font.size');
    }

    .p-inputnumber-clear-icon {
        position: absolute;
        top: 50%;
        margin-top: -0.5rem;
        cursor: pointer;
        inset-inline-end: dt('form.field.padding.x');
        color: dt('form.field.icon.color');
    }

    .p-inputnumber-stacked,.p-inputnumber-clear-icon
    .p-inputnumber-horizontal .p-inputnumber-clear-icon{
        inset-inline-end: calc(dt('inputnumber.button.width') + dt('form.field.padding.x'));
    }
`,
  Fz = {
    root: function (e) {
      var n = e.instance,
        r = e.props;
      return [
        "p-inputnumber p-component p-inputwrapper",
        {
          "p-invalid": n.$invalid,
          "p-inputwrapper-filled": n.$filled || r.allowEmpty === !1,
          "p-inputwrapper-focus": n.focused,
          "p-inputnumber-stacked":
            r.showButtons && r.buttonLayout === "stacked",
          "p-inputnumber-horizontal":
            r.showButtons && r.buttonLayout === "horizontal",
          "p-inputnumber-vertical":
            r.showButtons && r.buttonLayout === "vertical",
          "p-inputnumber-fluid": n.$fluid,
        },
      ];
    },
    pcInputText: "p-inputnumber-input",
    buttonGroup: "p-inputnumber-button-group",
    incrementButton: function (e) {
      var n = e.instance,
        r = e.props;
      return [
        "p-inputnumber-button p-inputnumber-increment-button",
        { "p-disabled": r.showButtons && r.max !== null && n.maxBoundry() },
      ];
    },
    decrementButton: function (e) {
      var n = e.instance,
        r = e.props;
      return [
        "p-inputnumber-button p-inputnumber-decrement-button",
        { "p-disabled": r.showButtons && r.min !== null && n.minBoundry() },
      ];
    },
  },
  Nz = ot.extend({ name: "inputnumber", style: Uz, classes: Fz }),
  Vz = {
    name: "BaseInputNumber",
    extends: po,
    props: {
      format: { type: Boolean, default: !0 },
      showButtons: { type: Boolean, default: !1 },
      buttonLayout: { type: String, default: "stacked" },
      incrementButtonClass: { type: String, default: null },
      decrementButtonClass: { type: String, default: null },
      incrementButtonIcon: { type: String, default: void 0 },
      incrementIcon: { type: String, default: void 0 },
      decrementButtonIcon: { type: String, default: void 0 },
      decrementIcon: { type: String, default: void 0 },
      locale: { type: String, default: void 0 },
      localeMatcher: { type: String, default: void 0 },
      mode: { type: String, default: "decimal" },
      prefix: { type: String, default: null },
      suffix: { type: String, default: null },
      currency: { type: String, default: void 0 },
      currencyDisplay: { type: String, default: void 0 },
      useGrouping: { type: Boolean, default: !0 },
      minFractionDigits: { type: Number, default: void 0 },
      maxFractionDigits: { type: Number, default: void 0 },
      roundingMode: {
        type: String,
        default: "halfExpand",
        validator: function (e) {
          return [
            "ceil",
            "floor",
            "expand",
            "trunc",
            "halfCeil",
            "halfFloor",
            "halfExpand",
            "halfTrunc",
            "halfEven",
          ].includes(e);
        },
      },
      min: { type: Number, default: null },
      max: { type: Number, default: null },
      step: { type: Number, default: 1 },
      allowEmpty: { type: Boolean, default: !0 },
      highlightOnFocus: { type: Boolean, default: !1 },
      readonly: { type: Boolean, default: !1 },
      placeholder: { type: String, default: null },
      inputId: { type: String, default: null },
      inputClass: { type: [String, Object], default: null },
      inputStyle: { type: Object, default: null },
      ariaLabelledby: { type: String, default: null },
      ariaLabel: { type: String, default: null },
      required: { type: Boolean, default: !1 },
    },
    style: Nz,
    provide: function () {
      return { $pcInputNumber: this, $parentInstance: this };
    },
  };
function La(t) {
  "@babel/helpers - typeof";
  return (
    (La =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    La(t)
  );
}
function qm(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    (e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r));
  }
  return n;
}
function Zm(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? qm(Object(n), !0).forEach(function (r) {
          wd(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
        : qm(Object(n)).forEach(function (r) {
            Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
          });
  }
  return t;
}
function wd(t, e, n) {
  return (
    (e = Hz(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function Hz(t) {
  var e = jz(t, "string");
  return La(e) == "symbol" ? e : e + "";
}
function jz(t, e) {
  if (La(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (La(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
function Gz(t) {
  return Yz(t) || Xz(t) || Kz(t) || Wz();
}
function Wz() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Kz(t, e) {
  if (t) {
    if (typeof t == "string") return kd(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return (
      n === "Object" && t.constructor && (n = t.constructor.name),
      n === "Map" || n === "Set"
        ? Array.from(t)
        : n === "Arguments" ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          ? kd(t, e)
          : void 0
    );
  }
}
function Xz(t) {
  if (
    (typeof Symbol < "u" && t[Symbol.iterator] != null) ||
    t["@@iterator"] != null
  )
    return Array.from(t);
}
function Yz(t) {
  if (Array.isArray(t)) return kd(t);
}
function kd(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, r = Array(e); n < e; n++) r[n] = t[n];
  return r;
}
var vf = {
    name: "InputNumber",
    extends: Vz,
    inheritAttrs: !1,
    emits: ["input", "focus", "blur"],
    inject: { $pcFluid: { default: null } },
    numberFormat: null,
    _numeral: null,
    _decimal: null,
    _group: null,
    _minusSign: null,
    _currency: null,
    _suffix: null,
    _prefix: null,
    _index: null,
    groupChar: "",
    isSpecialChar: null,
    prefixChar: null,
    suffixChar: null,
    timer: null,
    data: function () {
      return { d_modelValue: this.d_value, focused: !1 };
    },
    watch: {
      d_value: function (e) {
        this.d_modelValue = e;
      },
      locale: function (e, n) {
        this.updateConstructParser(e, n);
      },
      localeMatcher: function (e, n) {
        this.updateConstructParser(e, n);
      },
      mode: function (e, n) {
        this.updateConstructParser(e, n);
      },
      currency: function (e, n) {
        this.updateConstructParser(e, n);
      },
      currencyDisplay: function (e, n) {
        this.updateConstructParser(e, n);
      },
      useGrouping: function (e, n) {
        this.updateConstructParser(e, n);
      },
      minFractionDigits: function (e, n) {
        this.updateConstructParser(e, n);
      },
      maxFractionDigits: function (e, n) {
        this.updateConstructParser(e, n);
      },
      suffix: function (e, n) {
        this.updateConstructParser(e, n);
      },
      prefix: function (e, n) {
        this.updateConstructParser(e, n);
      },
    },
    created: function () {
      this.constructParser();
    },
    methods: {
      getOptions: function () {
        return {
          localeMatcher: this.localeMatcher,
          style: this.mode,
          currency: this.currency,
          currencyDisplay: this.currencyDisplay,
          useGrouping: this.useGrouping,
          minimumFractionDigits: this.minFractionDigits,
          maximumFractionDigits: this.maxFractionDigits,
          roundingMode: this.roundingMode,
        };
      },
      constructParser: function () {
        this.numberFormat = new Intl.NumberFormat(
          this.locale,
          this.getOptions(),
        );
        var e = Gz(
            new Intl.NumberFormat(this.locale, { useGrouping: !1 }).format(
              9876543210,
            ),
          ).reverse(),
          n = new Map(
            e.map(function (r, i) {
              return [r, i];
            }),
          );
        ((this._numeral = new RegExp("[".concat(e.join(""), "]"), "g")),
          (this._group = this.getGroupingExpression()),
          (this._minusSign = this.getMinusSignExpression()),
          (this._currency = this.getCurrencyExpression()),
          (this._decimal = this.getDecimalExpression()),
          (this._suffix = this.getSuffixExpression()),
          (this._prefix = this.getPrefixExpression()),
          (this._index = function (r) {
            return n.get(r);
          }));
      },
      updateConstructParser: function (e, n) {
        e !== n && this.constructParser();
      },
      escapeRegExp: function (e) {
        return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
      },
      getDecimalExpression: function () {
        var e = new Intl.NumberFormat(
          this.locale,
          Zm(Zm({}, this.getOptions()), {}, { useGrouping: !1 }),
        );
        return new RegExp(
          "[".concat(
            e
              .format(1.1)
              .replace(this._currency, "")
              .trim()
              .replace(this._numeral, ""),
            "]",
          ),
          "g",
        );
      },
      getGroupingExpression: function () {
        var e = new Intl.NumberFormat(this.locale, { useGrouping: !0 });
        return (
          (this.groupChar = e
            .format(1e6)
            .trim()
            .replace(this._numeral, "")
            .charAt(0)),
          new RegExp("[".concat(this.groupChar, "]"), "g")
        );
      },
      getMinusSignExpression: function () {
        var e = new Intl.NumberFormat(this.locale, { useGrouping: !1 });
        return new RegExp(
          "[".concat(e.format(-1).trim().replace(this._numeral, ""), "]"),
          "g",
        );
      },
      getCurrencyExpression: function () {
        if (this.currency) {
          var e = new Intl.NumberFormat(this.locale, {
            style: "currency",
            currency: this.currency,
            currencyDisplay: this.currencyDisplay,
            minimumFractionDigits: 0,
            maximumFractionDigits: 0,
            roundingMode: this.roundingMode,
          });
          return new RegExp(
            "[".concat(
              e
                .format(1)
                .replace(/\s/g, "")
                .replace(this._numeral, "")
                .replace(this._group, ""),
              "]",
            ),
            "g",
          );
        }
        return new RegExp("[]", "g");
      },
      getPrefixExpression: function () {
        if (this.prefix) this.prefixChar = this.prefix;
        else {
          var e = new Intl.NumberFormat(this.locale, {
            style: this.mode,
            currency: this.currency,
            currencyDisplay: this.currencyDisplay,
          });
          this.prefixChar = e.format(1).split("1")[0];
        }
        return new RegExp(
          "".concat(this.escapeRegExp(this.prefixChar || "")),
          "g",
        );
      },
      getSuffixExpression: function () {
        if (this.suffix) this.suffixChar = this.suffix;
        else {
          var e = new Intl.NumberFormat(this.locale, {
            style: this.mode,
            currency: this.currency,
            currencyDisplay: this.currencyDisplay,
            minimumFractionDigits: 0,
            maximumFractionDigits: 0,
            roundingMode: this.roundingMode,
          });
          this.suffixChar = e.format(1).split("1")[1];
        }
        return new RegExp(
          "".concat(this.escapeRegExp(this.suffixChar || "")),
          "g",
        );
      },
      formatValue: function (e) {
        if (e != null) {
          if (e === "-") return e;
          if (this.format) {
            var n = new Intl.NumberFormat(this.locale, this.getOptions()),
              r = n.format(e);
            return (
              this.prefix && (r = this.prefix + r),
              this.suffix && (r = r + this.suffix),
              r
            );
          }
          return e.toString();
        }
        return "";
      },
      parseValue: function (e) {
        var n = e
          .replace(this._suffix, "")
          .replace(this._prefix, "")
          .trim()
          .replace(/\s/g, "")
          .replace(this._currency, "")
          .replace(this._group, "")
          .replace(this._minusSign, "-")
          .replace(this._decimal, ".")
          .replace(this._numeral, this._index);
        if (n) {
          if (n === "-") return n;
          var r = +n;
          return isNaN(r) ? null : r;
        }
        return null;
      },
      repeat: function (e, n, r) {
        var i = this;
        if (!this.readonly) {
          var o = n || 500;
          (this.clearTimer(),
            (this.timer = setTimeout(function () {
              i.repeat(e, 40, r);
            }, o)),
            this.spin(e, r));
        }
      },
      spin: function (e, n) {
        if (this.$refs.input) {
          var r = this.step * n,
            i = this.parseValue(this.$refs.input.$el.value) || 0,
            o = this.validateValue(i + r);
          (this.updateInput(o, null, "spin"),
            this.updateModel(e, o),
            this.handleOnInput(e, i, o));
        }
      },
      onUpButtonMouseDown: function (e) {
        this.disabled ||
          (this.$refs.input.$el.focus(),
          this.repeat(e, null, 1),
          e.preventDefault());
      },
      onUpButtonMouseUp: function () {
        this.disabled || this.clearTimer();
      },
      onUpButtonMouseLeave: function () {
        this.disabled || this.clearTimer();
      },
      onUpButtonKeyUp: function () {
        this.disabled || this.clearTimer();
      },
      onUpButtonKeyDown: function (e) {
        (e.code === "Space" ||
          e.code === "Enter" ||
          e.code === "NumpadEnter") &&
          this.repeat(e, null, 1);
      },
      onDownButtonMouseDown: function (e) {
        this.disabled ||
          (this.$refs.input.$el.focus(),
          this.repeat(e, null, -1),
          e.preventDefault());
      },
      onDownButtonMouseUp: function () {
        this.disabled || this.clearTimer();
      },
      onDownButtonMouseLeave: function () {
        this.disabled || this.clearTimer();
      },
      onDownButtonKeyUp: function () {
        this.disabled || this.clearTimer();
      },
      onDownButtonKeyDown: function (e) {
        (e.code === "Space" ||
          e.code === "Enter" ||
          e.code === "NumpadEnter") &&
          this.repeat(e, null, -1);
      },
      onUserInput: function () {
        (this.isSpecialChar && (this.$refs.input.$el.value = this.lastValue),
          (this.isSpecialChar = !1));
      },
      onInputKeyDown: function (e) {
        if (!this.readonly) {
          if (e.altKey || e.ctrlKey || e.metaKey) {
            ((this.isSpecialChar = !0),
              (this.lastValue = this.$refs.input.$el.value));
            return;
          }
          this.lastValue = e.target.value;
          var n = e.target.selectionStart,
            r = e.target.selectionEnd,
            i = r - n,
            o = e.target.value,
            s = null,
            a = e.code || e.key;
          switch (a) {
            case "ArrowUp":
              (this.spin(e, 1), e.preventDefault());
              break;
            case "ArrowDown":
              (this.spin(e, -1), e.preventDefault());
              break;
            case "ArrowLeft":
              if (i > 1) {
                var c = this.isNumeralChar(o.charAt(n)) ? n + 1 : n + 2;
                this.$refs.input.$el.setSelectionRange(c, c);
              } else this.isNumeralChar(o.charAt(n - 1)) || e.preventDefault();
              break;
            case "ArrowRight":
              if (i > 1) {
                var u = r - 1;
                this.$refs.input.$el.setSelectionRange(u, u);
              } else this.isNumeralChar(o.charAt(n)) || e.preventDefault();
              break;
            case "Tab":
            case "Enter":
            case "NumpadEnter":
              ((s = this.validateValue(this.parseValue(o))),
                (this.$refs.input.$el.value = this.formatValue(s)),
                this.$refs.input.$el.setAttribute("aria-valuenow", s),
                this.updateModel(e, s));
              break;
            case "Backspace": {
              if ((e.preventDefault(), n === r)) {
                var d = o.charAt(n - 1),
                  f = this.getDecimalCharIndexes(o),
                  p = f.decimalCharIndex,
                  h = f.decimalCharIndexWithoutPrefix;
                if (this.isNumeralChar(d)) {
                  var v = this.getDecimalLength(o);
                  if (this._group.test(d))
                    ((this._group.lastIndex = 0),
                      (s = o.slice(0, n - 2) + o.slice(n - 1)));
                  else if (this._decimal.test(d))
                    ((this._decimal.lastIndex = 0),
                      v
                        ? this.$refs.input.$el.setSelectionRange(n - 1, n - 1)
                        : (s = o.slice(0, n - 1) + o.slice(n)));
                  else if (p > 0 && n > p) {
                    var b =
                      this.isDecimalMode() && (this.minFractionDigits || 0) < v
                        ? ""
                        : "0";
                    s = o.slice(0, n - 1) + b + o.slice(n);
                  } else
                    h === 1
                      ? ((s = o.slice(0, n - 1) + "0" + o.slice(n)),
                        (s = this.parseValue(s) > 0 ? s : ""))
                      : (s = o.slice(0, n - 1) + o.slice(n));
                }
                this.updateValue(e, s, null, "delete-single");
              } else
                ((s = this.deleteRange(o, n, r)),
                  this.updateValue(e, s, null, "delete-range"));
              break;
            }
            case "Delete":
              if ((e.preventDefault(), n === r)) {
                var g = o.charAt(n),
                  m = this.getDecimalCharIndexes(o),
                  _ = m.decimalCharIndex,
                  y = m.decimalCharIndexWithoutPrefix;
                if (this.isNumeralChar(g)) {
                  var x = this.getDecimalLength(o);
                  if (this._group.test(g))
                    ((this._group.lastIndex = 0),
                      (s = o.slice(0, n) + o.slice(n + 2)));
                  else if (this._decimal.test(g))
                    ((this._decimal.lastIndex = 0),
                      x
                        ? this.$refs.input.$el.setSelectionRange(n + 1, n + 1)
                        : (s = o.slice(0, n) + o.slice(n + 1)));
                  else if (_ > 0 && n > _) {
                    var C =
                      this.isDecimalMode() && (this.minFractionDigits || 0) < x
                        ? ""
                        : "0";
                    s = o.slice(0, n) + C + o.slice(n + 1);
                  } else
                    y === 1
                      ? ((s = o.slice(0, n) + "0" + o.slice(n + 1)),
                        (s = this.parseValue(s) > 0 ? s : ""))
                      : (s = o.slice(0, n) + o.slice(n + 1));
                }
                this.updateValue(e, s, null, "delete-back-single");
              } else
                ((s = this.deleteRange(o, n, r)),
                  this.updateValue(e, s, null, "delete-range"));
              break;
            case "Home":
              (e.preventDefault(),
                ct(this.min) && this.updateModel(e, this.min));
              break;
            case "End":
              (e.preventDefault(),
                ct(this.max) && this.updateModel(e, this.max));
              break;
          }
        }
      },
      onInputKeyPress: function (e) {
        if (!this.readonly) {
          var n = e.key,
            r = this.isDecimalSign(n),
            i = this.isMinusSign(n);
          (e.code !== "Enter" && e.preventDefault(),
            ((Number(n) >= 0 && Number(n) <= 9) || i || r) &&
              this.insert(e, n, { isDecimalSign: r, isMinusSign: i }));
        }
      },
      onPaste: function (e) {
        e.preventDefault();
        var n = (e.clipboardData || window.clipboardData).getData("Text");
        if (n) {
          var r = this.parseValue(n);
          r != null && this.insert(e, r.toString());
        }
      },
      allowMinusSign: function () {
        return this.min === null || this.min < 0;
      },
      isMinusSign: function (e) {
        return this._minusSign.test(e) || e === "-"
          ? ((this._minusSign.lastIndex = 0), !0)
          : !1;
      },
      isDecimalSign: function (e) {
        var n;
        return ((n = this.locale) !== null &&
          n !== void 0 &&
          n.includes("fr") &&
          [".", ","].includes(e)) ||
          this._decimal.test(e)
          ? ((this._decimal.lastIndex = 0), !0)
          : !1;
      },
      isDecimalMode: function () {
        return this.mode === "decimal";
      },
      getDecimalCharIndexes: function (e) {
        var n = e.search(this._decimal);
        this._decimal.lastIndex = 0;
        var r = e
            .replace(this._prefix, "")
            .trim()
            .replace(/\s/g, "")
            .replace(this._currency, ""),
          i = r.search(this._decimal);
        return (
          (this._decimal.lastIndex = 0),
          { decimalCharIndex: n, decimalCharIndexWithoutPrefix: i }
        );
      },
      getCharIndexes: function (e) {
        var n = e.search(this._decimal);
        this._decimal.lastIndex = 0;
        var r = e.search(this._minusSign);
        this._minusSign.lastIndex = 0;
        var i = e.search(this._suffix);
        this._suffix.lastIndex = 0;
        var o = e.search(this._currency);
        return (
          (this._currency.lastIndex = 0),
          {
            decimalCharIndex: n,
            minusCharIndex: r,
            suffixCharIndex: i,
            currencyCharIndex: o,
          }
        );
      },
      insert: function (e, n) {
        var r =
            arguments.length > 2 && arguments[2] !== void 0
              ? arguments[2]
              : { isDecimalSign: !1, isMinusSign: !1 },
          i = n.search(this._minusSign);
        if (
          ((this._minusSign.lastIndex = 0),
          !(!this.allowMinusSign() && i !== -1))
        ) {
          var o = this.$refs.input.$el.selectionStart,
            s = this.$refs.input.$el.selectionEnd,
            a = this.$refs.input.$el.value.trim(),
            c = this.getCharIndexes(a),
            u = c.decimalCharIndex,
            d = c.minusCharIndex,
            f = c.suffixCharIndex,
            p = c.currencyCharIndex,
            h;
          if (r.isMinusSign) {
            var v = d === -1;
            (o === 0 || o === p + 1) &&
              ((h = a),
              (v || s !== 0) && (h = this.insertText(a, n, 0, s)),
              this.updateValue(e, h, n, "insert"));
          } else if (r.isDecimalSign)
            u > 0 && o === u
              ? this.updateValue(e, a, n, "insert")
              : u > o && u < s
                ? ((h = this.insertText(a, n, o, s)),
                  this.updateValue(e, h, n, "insert"))
                : u === -1 &&
                  this.maxFractionDigits &&
                  ((h = this.insertText(a, n, o, s)),
                  this.updateValue(e, h, n, "insert"));
          else {
            var b = this.numberFormat.resolvedOptions().maximumFractionDigits,
              g = o !== s ? "range-insert" : "insert";
            if (u > 0 && o > u) {
              if (o + n.length - (u + 1) <= b) {
                var m = p >= o ? p - 1 : f >= o ? f : a.length;
                ((h =
                  a.slice(0, o) + n + a.slice(o + n.length, m) + a.slice(m)),
                  this.updateValue(e, h, n, g));
              }
            } else
              ((h = this.insertText(a, n, o, s)), this.updateValue(e, h, n, g));
          }
        }
      },
      insertText: function (e, n, r, i) {
        var o = n === "." ? n : n.split(".");
        if (o.length === 2) {
          var s = e.slice(r, i).search(this._decimal);
          return (
            (this._decimal.lastIndex = 0),
            s > 0
              ? e.slice(0, r) + this.formatValue(n) + e.slice(i)
              : this.formatValue(n) || e
          );
        } else
          return i - r === e.length
            ? this.formatValue(n)
            : r === 0
              ? n + e.slice(i)
              : i === e.length
                ? e.slice(0, r) + n
                : e.slice(0, r) + n + e.slice(i);
      },
      deleteRange: function (e, n, r) {
        var i;
        return (
          r - n === e.length
            ? (i = "")
            : n === 0
              ? (i = e.slice(r))
              : r === e.length
                ? (i = e.slice(0, n))
                : (i = e.slice(0, n) + e.slice(r)),
          i
        );
      },
      initCursor: function () {
        var e = this.$refs.input.$el.selectionStart,
          n = this.$refs.input.$el.value,
          r = n.length,
          i = null,
          o = (this.prefixChar || "").length;
        ((n = n.replace(this._prefix, "")), (e = e - o));
        var s = n.charAt(e);
        if (this.isNumeralChar(s)) return e + o;
        for (var a = e - 1; a >= 0; )
          if (((s = n.charAt(a)), this.isNumeralChar(s))) {
            i = a + o;
            break;
          } else a--;
        if (i !== null) this.$refs.input.$el.setSelectionRange(i + 1, i + 1);
        else {
          for (a = e; a < r; )
            if (((s = n.charAt(a)), this.isNumeralChar(s))) {
              i = a + o;
              break;
            } else a++;
          i !== null && this.$refs.input.$el.setSelectionRange(i, i);
        }
        return i || 0;
      },
      onInputClick: function () {
        var e = this.$refs.input.$el.value;
        !this.readonly && e !== Ep() && this.initCursor();
      },
      isNumeralChar: function (e) {
        return e.length === 1 &&
          (this._numeral.test(e) ||
            this._decimal.test(e) ||
            this._group.test(e) ||
            this._minusSign.test(e))
          ? (this.resetRegex(), !0)
          : !1;
      },
      resetRegex: function () {
        ((this._numeral.lastIndex = 0),
          (this._decimal.lastIndex = 0),
          (this._group.lastIndex = 0),
          (this._minusSign.lastIndex = 0));
      },
      updateValue: function (e, n, r, i) {
        var o = this.$refs.input.$el.value,
          s = null;
        n != null &&
          ((s = this.parseValue(n)),
          (s = !s && !this.allowEmpty ? this.min || 0 : s),
          this.updateInput(s, r, i, n),
          this.handleOnInput(e, o, s));
      },
      handleOnInput: function (e, n, r) {
        if (this.isValueChanged(n, r)) {
          var i, o;
          (this.$emit("input", {
            originalEvent: e,
            value: r,
            formattedValue: n,
          }),
            (i = (o = this.formField).onInput) === null ||
              i === void 0 ||
              i.call(o, { originalEvent: e, value: r }));
        }
      },
      isValueChanged: function (e, n) {
        if (n === null && e !== null) return !0;
        if (n != null) {
          var r = typeof e == "string" ? this.parseValue(e) : e;
          return n !== r;
        }
        return !1;
      },
      validateValue: function (e) {
        return e === "-" || e == null
          ? null
          : this.min != null && e < this.min
            ? this.min
            : this.max != null && e > this.max
              ? this.max
              : e;
      },
      updateInput: function (e, n, r, i) {
        n = n || "";
        var o = this.$refs.input.$el.value,
          s = this.formatValue(e),
          a = o.length;
        if ((s !== i && (s = this.concatValues(s, i)), a === 0)) {
          ((this.$refs.input.$el.value = s),
            this.$refs.input.$el.setSelectionRange(0, 0));
          var c = this.initCursor(),
            u = c + n.length;
          this.$refs.input.$el.setSelectionRange(u, u);
        } else {
          var d = this.$refs.input.$el.selectionStart,
            f = this.$refs.input.$el.selectionEnd;
          this.$refs.input.$el.value = s;
          var p = s.length;
          if (r === "range-insert") {
            var h = this.parseValue((o || "").slice(0, d)),
              v = h !== null ? h.toString() : "",
              b = v.split("").join("(".concat(this.groupChar, ")?")),
              g = new RegExp(b, "g");
            g.test(s);
            var m = n.split("").join("(".concat(this.groupChar, ")?")),
              _ = new RegExp(m, "g");
            (_.test(s.slice(g.lastIndex)),
              (f = g.lastIndex + _.lastIndex),
              this.$refs.input.$el.setSelectionRange(f, f));
          } else if (p === a)
            r === "insert" || r === "delete-back-single"
              ? this.$refs.input.$el.setSelectionRange(f + 1, f + 1)
              : r === "delete-single"
                ? this.$refs.input.$el.setSelectionRange(f - 1, f - 1)
                : (r === "delete-range" || r === "spin") &&
                  this.$refs.input.$el.setSelectionRange(f, f);
          else if (r === "delete-back-single") {
            var y = o.charAt(f - 1),
              x = o.charAt(f),
              C = a - p,
              w = this._group.test(x);
            (w && C === 1
              ? (f += 1)
              : !w && this.isNumeralChar(y) && (f += -1 * C + 1),
              (this._group.lastIndex = 0),
              this.$refs.input.$el.setSelectionRange(f, f));
          } else if (o === "-" && r === "insert") {
            this.$refs.input.$el.setSelectionRange(0, 0);
            var S = this.initCursor(),
              D = S + n.length + 1;
            this.$refs.input.$el.setSelectionRange(D, D);
          } else
            ((f = f + (p - a)), this.$refs.input.$el.setSelectionRange(f, f));
        }
        this.$refs.input.$el.setAttribute("aria-valuenow", e);
      },
      concatValues: function (e, n) {
        if (e && n) {
          var r = n.search(this._decimal);
          return (
            (this._decimal.lastIndex = 0),
            this.suffixChar
              ? r !== -1
                ? e.replace(this.suffixChar, "").split(this._decimal)[0] +
                  n.replace(this.suffixChar, "").slice(r) +
                  this.suffixChar
                : e
              : r !== -1
                ? e.split(this._decimal)[0] + n.slice(r)
                : e
          );
        }
        return e;
      },
      getDecimalLength: function (e) {
        if (e) {
          var n = e.split(this._decimal);
          if (n.length === 2)
            return n[1]
              .replace(this._suffix, "")
              .trim()
              .replace(/\s/g, "")
              .replace(this._currency, "").length;
        }
        return 0;
      },
      updateModel: function (e, n) {
        this.writeValue(n, e);
      },
      onInputFocus: function (e) {
        ((this.focused = !0),
          !this.disabled &&
            !this.readonly &&
            this.$refs.input.$el.value !== Ep() &&
            this.highlightOnFocus &&
            e.target.select(),
          this.$emit("focus", e));
      },
      onInputBlur: function (e) {
        var n, r;
        this.focused = !1;
        var i = e.target,
          o = this.validateValue(this.parseValue(i.value));
        (this.$emit("blur", { originalEvent: e, value: i.value }),
          (n = (r = this.formField).onBlur) === null ||
            n === void 0 ||
            n.call(r, e),
          (i.value = this.formatValue(o)),
          i.setAttribute("aria-valuenow", o),
          this.updateModel(e, o),
          !this.disabled && !this.readonly && this.highlightOnFocus && Qx());
      },
      clearTimer: function () {
        this.timer && clearTimeout(this.timer);
      },
      maxBoundry: function () {
        return this.d_value >= this.max;
      },
      minBoundry: function () {
        return this.d_value <= this.min;
      },
    },
    computed: {
      upButtonListeners: function () {
        var e = this;
        return {
          mousedown: function (r) {
            return e.onUpButtonMouseDown(r);
          },
          mouseup: function (r) {
            return e.onUpButtonMouseUp(r);
          },
          mouseleave: function (r) {
            return e.onUpButtonMouseLeave(r);
          },
          keydown: function (r) {
            return e.onUpButtonKeyDown(r);
          },
          keyup: function (r) {
            return e.onUpButtonKeyUp(r);
          },
        };
      },
      downButtonListeners: function () {
        var e = this;
        return {
          mousedown: function (r) {
            return e.onDownButtonMouseDown(r);
          },
          mouseup: function (r) {
            return e.onDownButtonMouseUp(r);
          },
          mouseleave: function (r) {
            return e.onDownButtonMouseLeave(r);
          },
          keydown: function (r) {
            return e.onDownButtonKeyDown(r);
          },
          keyup: function (r) {
            return e.onDownButtonKeyUp(r);
          },
        };
      },
      formattedValue: function () {
        var e = !this.d_value && !this.allowEmpty ? 0 : this.d_value;
        return this.formatValue(e);
      },
      getFormatter: function () {
        return this.numberFormat;
      },
      dataP: function () {
        return At(
          wd(
            wd(
              {
                invalid: this.$invalid,
                fluid: this.$fluid,
                filled: this.$variant === "filled",
              },
              this.size,
              this.size,
            ),
            this.buttonLayout,
            this.showButtons && this.buttonLayout,
          ),
        );
      },
    },
    components: { InputText: yt, AngleUpIcon: ab, AngleDownIcon: sb },
  },
  qz = ["data-p"],
  Zz = ["data-p"],
  Jz = ["disabled", "data-p"],
  Qz = ["disabled", "data-p"],
  eB = ["disabled", "data-p"],
  tB = ["disabled", "data-p"];
function nB(t, e, n, r, i, o) {
  var s = Mt("InputText");
  return (
    E(),
    R(
      "span",
      Q({ class: t.cx("root") }, t.ptmi("root"), { "data-p": o.dataP }),
      [
        O(
          s,
          {
            ref: "input",
            id: t.inputId,
            name: t.$formName,
            role: "spinbutton",
            class: Ie([t.cx("pcInputText"), t.inputClass]),
            style: ir(t.inputStyle),
            defaultValue: o.formattedValue,
            "aria-valuemin": t.min,
            "aria-valuemax": t.max,
            "aria-valuenow": t.d_value,
            inputmode:
              t.mode === "decimal" && !t.minFractionDigits
                ? "numeric"
                : "decimal",
            disabled: t.disabled,
            readonly: t.readonly,
            placeholder: t.placeholder,
            "aria-labelledby": t.ariaLabelledby,
            "aria-label": t.ariaLabel,
            required: t.required,
            size: t.size,
            invalid: t.invalid,
            variant: t.variant,
            onInput: o.onUserInput,
            onKeydown: o.onInputKeyDown,
            onKeypress: o.onInputKeyPress,
            onPaste: o.onPaste,
            onClick: o.onInputClick,
            onFocus: o.onInputFocus,
            onBlur: o.onInputBlur,
            pt: t.ptm("pcInputText"),
            unstyled: t.unstyled,
            "data-p": o.dataP,
          },
          null,
          8,
          [
            "id",
            "name",
            "class",
            "style",
            "defaultValue",
            "aria-valuemin",
            "aria-valuemax",
            "aria-valuenow",
            "inputmode",
            "disabled",
            "readonly",
            "placeholder",
            "aria-labelledby",
            "aria-label",
            "required",
            "size",
            "invalid",
            "variant",
            "onInput",
            "onKeydown",
            "onKeypress",
            "onPaste",
            "onClick",
            "onFocus",
            "onBlur",
            "pt",
            "unstyled",
            "data-p",
          ],
        ),
        t.showButtons && t.buttonLayout === "stacked"
          ? (E(),
            R(
              "span",
              Q({ key: 0, class: t.cx("buttonGroup") }, t.ptm("buttonGroup"), {
                "data-p": o.dataP,
              }),
              [
                De(
                  t.$slots,
                  "incrementbutton",
                  { listeners: o.upButtonListeners },
                  function () {
                    return [
                      l(
                        "button",
                        Q(
                          {
                            class: [
                              t.cx("incrementButton"),
                              t.incrementButtonClass,
                            ],
                          },
                          Qa(o.upButtonListeners),
                          {
                            disabled: t.disabled,
                            tabindex: -1,
                            "aria-hidden": "true",
                            type: "button",
                          },
                          t.ptm("incrementButton"),
                          { "data-p": o.dataP },
                        ),
                        [
                          De(
                            t.$slots,
                            t.$slots.incrementicon
                              ? "incrementicon"
                              : "incrementbuttonicon",
                            {},
                            function () {
                              return [
                                (E(),
                                Be(
                                  Dt(
                                    t.incrementIcon || t.incrementButtonIcon
                                      ? "span"
                                      : "AngleUpIcon",
                                  ),
                                  Q(
                                    {
                                      class: [
                                        t.incrementIcon,
                                        t.incrementButtonIcon,
                                      ],
                                    },
                                    t.ptm("incrementIcon"),
                                    { "data-pc-section": "incrementicon" },
                                  ),
                                  null,
                                  16,
                                  ["class"],
                                )),
                              ];
                            },
                          ),
                        ],
                        16,
                        Jz,
                      ),
                    ];
                  },
                ),
                De(
                  t.$slots,
                  "decrementbutton",
                  { listeners: o.downButtonListeners },
                  function () {
                    return [
                      l(
                        "button",
                        Q(
                          {
                            class: [
                              t.cx("decrementButton"),
                              t.decrementButtonClass,
                            ],
                          },
                          Qa(o.downButtonListeners),
                          {
                            disabled: t.disabled,
                            tabindex: -1,
                            "aria-hidden": "true",
                            type: "button",
                          },
                          t.ptm("decrementButton"),
                          { "data-p": o.dataP },
                        ),
                        [
                          De(
                            t.$slots,
                            t.$slots.decrementicon
                              ? "decrementicon"
                              : "decrementbuttonicon",
                            {},
                            function () {
                              return [
                                (E(),
                                Be(
                                  Dt(
                                    t.decrementIcon || t.decrementButtonIcon
                                      ? "span"
                                      : "AngleDownIcon",
                                  ),
                                  Q(
                                    {
                                      class: [
                                        t.decrementIcon,
                                        t.decrementButtonIcon,
                                      ],
                                    },
                                    t.ptm("decrementIcon"),
                                    { "data-pc-section": "decrementicon" },
                                  ),
                                  null,
                                  16,
                                  ["class"],
                                )),
                              ];
                            },
                          ),
                        ],
                        16,
                        Qz,
                      ),
                    ];
                  },
                ),
              ],
              16,
              Zz,
            ))
          : le("", !0),
        De(
          t.$slots,
          "incrementbutton",
          { listeners: o.upButtonListeners },
          function () {
            return [
              t.showButtons && t.buttonLayout !== "stacked"
                ? (E(),
                  R(
                    "button",
                    Q(
                      {
                        key: 0,
                        class: [
                          t.cx("incrementButton"),
                          t.incrementButtonClass,
                        ],
                      },
                      Qa(o.upButtonListeners),
                      {
                        disabled: t.disabled,
                        tabindex: -1,
                        "aria-hidden": "true",
                        type: "button",
                      },
                      t.ptm("incrementButton"),
                      { "data-p": o.dataP },
                    ),
                    [
                      De(
                        t.$slots,
                        t.$slots.incrementicon
                          ? "incrementicon"
                          : "incrementbuttonicon",
                        {},
                        function () {
                          return [
                            (E(),
                            Be(
                              Dt(
                                t.incrementIcon || t.incrementButtonIcon
                                  ? "span"
                                  : "AngleUpIcon",
                              ),
                              Q(
                                {
                                  class: [
                                    t.incrementIcon,
                                    t.incrementButtonIcon,
                                  ],
                                },
                                t.ptm("incrementIcon"),
                                { "data-pc-section": "incrementicon" },
                              ),
                              null,
                              16,
                              ["class"],
                            )),
                          ];
                        },
                      ),
                    ],
                    16,
                    eB,
                  ))
                : le("", !0),
            ];
          },
        ),
        De(
          t.$slots,
          "decrementbutton",
          { listeners: o.downButtonListeners },
          function () {
            return [
              t.showButtons && t.buttonLayout !== "stacked"
                ? (E(),
                  R(
                    "button",
                    Q(
                      {
                        key: 0,
                        class: [
                          t.cx("decrementButton"),
                          t.decrementButtonClass,
                        ],
                      },
                      Qa(o.downButtonListeners),
                      {
                        disabled: t.disabled,
                        tabindex: -1,
                        "aria-hidden": "true",
                        type: "button",
                      },
                      t.ptm("decrementButton"),
                      { "data-p": o.dataP },
                    ),
                    [
                      De(
                        t.$slots,
                        t.$slots.decrementicon
                          ? "decrementicon"
                          : "decrementbuttonicon",
                        {},
                        function () {
                          return [
                            (E(),
                            Be(
                              Dt(
                                t.decrementIcon || t.decrementButtonIcon
                                  ? "span"
                                  : "AngleDownIcon",
                              ),
                              Q(
                                {
                                  class: [
                                    t.decrementIcon,
                                    t.decrementButtonIcon,
                                  ],
                                },
                                t.ptm("decrementIcon"),
                                { "data-pc-section": "decrementicon" },
                              ),
                              null,
                              16,
                              ["class"],
                            )),
                          ];
                        },
                      ),
                    ],
                    16,
                    tB,
                  ))
                : le("", !0),
            ];
          },
        ),
      ],
      16,
      qz,
    )
  );
}
vf.render = nB;
const rB = { key: 0, class: "flex flex-col gap-6" },
  iB = { class: "flex justify-between items-center" },
  oB = { class: "flex items-center gap-2" },
  sB = {
    class: "text-surface-900 dark:text-surface-0 font-semibold text-base",
  },
  aB = {
    class:
      "flex items-center gap-6 p-6 bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  lB = ["src", "alt"],
  cB = { class: "flex-1" },
  uB = {
    class: "text-2xl font-bold text-surface-900 dark:text-surface-0 mb-2",
  },
  dB = { class: "flex items-center gap-4 mb-2" },
  fB = { class: "text-surface-500 dark:text-surface-400" },
  pB = { class: "grid grid-cols-2 md:grid-cols-4 gap-4" },
  hB = {
    class: "text-center p-4 bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  mB = { class: "text-xl font-bold text-surface-900 dark:text-surface-0" },
  gB = {
    class: "text-center p-4 bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  vB = { class: "text-xl font-bold text-surface-900 dark:text-surface-0" },
  bB = {
    class: "text-center p-4 bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  yB = { class: "text-xl font-bold text-surface-900 dark:text-surface-0" },
  xB = {
    class: "text-center p-4 bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  _B = { class: "text-xl font-bold text-surface-900 dark:text-surface-0" },
  wB = { class: "grid grid-cols-1 md:grid-cols-2 gap-6" },
  kB = { class: "space-y-4" },
  SB = { class: "space-y-3 text-sm" },
  CB = { class: "flex justify-between" },
  MB = { class: "font-medium text-surface-900 dark:text-surface-0" },
  EB = { class: "flex justify-between" },
  TB = { class: "font-medium text-surface-900 dark:text-surface-0" },
  AB = { class: "flex justify-between" },
  PB = { class: "font-medium text-surface-900 dark:text-surface-0" },
  RB = { class: "flex justify-between" },
  LB = { class: "space-y-4" },
  DB = { class: "space-y-3 text-sm" },
  IB = { class: "flex justify-between" },
  OB = { class: "font-medium text-surface-900 dark:text-surface-0" },
  $B = { class: "flex justify-between" },
  zB = { class: "font-medium text-surface-900 dark:text-surface-0" },
  BB = { class: "flex justify-between" },
  UB = { class: "font-medium text-surface-900 dark:text-surface-0" },
  FB = { class: "flex justify-between" },
  NB = { class: "font-medium text-surface-900 dark:text-surface-0" },
  VB = { key: 0, class: "space-y-4" },
  HB = { class: "space-y-2 max-h-40 overflow-y-auto" },
  jB = { class: "flex items-center gap-3" },
  GB = { class: "text-sm text-surface-700 dark:text-surface-300" },
  WB = { class: "text-xs text-surface-500 dark:text-surface-400" },
  KB = { key: 1, class: "space-y-4" },
  XB = { class: "flex justify-between" },
  YB = { class: "flex gap-2" },
  qB = { class: "flex gap-2" },
  ZB = {
    __name: "UserDetailsDialog",
    props: {
      user: { type: Object, default: null },
      show: { type: Boolean, default: !1 },
    },
    emits: ["close", "change-rank", "ban-user", "unban-user", "send-message"],
    setup(t, { emit: e }) {
      const n = t,
        r = e,
        i = N(!1),
        o = Xe(() => {
          var _, y, x, C, w, S;
          return n.user
            ? {
                playtime:
                  ((_ = n.user.stats) == null ? void 0 : _.playtime) ||
                  n.user.playtime ||
                  0,
                coins:
                  ((y = n.user.stats) == null ? void 0 : y.coins) ||
                  n.user.coins ||
                  0,
                friends:
                  ((x = n.user.stats) == null ? void 0 : x.friends) ||
                  n.user.friends_count ||
                  0,
                warnings:
                  ((C = n.user.stats) == null ? void 0 : C.warnings) ||
                  n.user.warnings_count ||
                  0,
                loginCount:
                  ((w = n.user.stats) == null ? void 0 : w.loginCount) ||
                  n.user.login_count ||
                  0,
                avgPlaytimePerDay:
                  ((S = n.user.stats) == null ? void 0 : S.avgPlaytimePerDay) ||
                  n.user.avg_playtime_per_day ||
                  0,
              }
            : c();
        }),
        s = Xe(() =>
          n.user ? n.user.recentActivity || n.user.recent_activity || [] : [],
        ),
        a = Xe(() =>
          n.user
            ? n.user.isBanned || n.user.is_banned || !n.user.is_active
            : !1,
        );
      (Ft(
        () => n.show,
        (_) => {
          i.value = _;
        },
      ),
        Ft(i, (_) => {
          _ || r("close");
        }));
      const c = () => ({
          playtime: 0,
          coins: 0,
          friends: 0,
          warnings: 0,
          loginCount: 0,
          avgPlaytimePerDay: 0,
        }),
        u = () =>
          "https://primefaces.org/cdn/primevue/images/avatar/amyelsner.png",
        d = (_) => (_ ? `https://crafatar.com/avatars/${_}?size=64` : null),
        f = (_) => {
          if (!_) return "Nincs adat";
          try {
            return new Intl.DateTimeFormat("hu-HU", {
              year: "numeric",
              month: "long",
              day: "numeric",
            }).format(new Date(_));
          } catch {
            return "Hibás dátum";
          }
        },
        p = (_) => {
          if (!_) return "Ismeretlen";
          try {
            const x = Math.floor((new Date() - new Date(_)) / 1e3);
            return x < 60
              ? `${x} másodperce`
              : x < 3600
                ? `${Math.floor(x / 60)} perce`
                : x < 86400
                  ? `${Math.floor(x / 3600)} órája`
                  : `${Math.floor(x / 86400)} napja`;
          } catch {
            return "Ismeretlen";
          }
        },
        h = (_) =>
          (_ &&
            {
              default: "secondary",
              user: "secondary",
              vip: "success",
              elit: "info",
              zsirkiraly: "warning",
              titan: "help",
              felisten: "danger",
              mindenheto: "contrast",
              admin: "danger",
              moderator: "warning",
            }[_.toLowerCase()]) ||
          "secondary",
        v = (_) =>
          (_ &&
            {
              login: "pi pi-sign-in",
              logout: "pi pi-sign-out",
              purchase: "pi pi-shopping-cart",
              rank_change: "pi pi-crown",
              friend_add: "pi pi-user-plus",
              achievement: "pi pi-trophy",
            }[_]) ||
          "pi pi-circle",
        b = () => {
          r("send-message", n.user);
        },
        g = () => {
          r("ban-user", n.user);
        },
        m = () => {
          r("unban-user", n.user);
        };
      return (_, y) => (
        E(),
        Be(
          H(on),
          {
            visible: i.value,
            "onUpdate:visible": y[2] || (y[2] = (x) => (i.value = x)),
            modal: !0,
            "show-header": !1,
            breakpoints: { "960px": "75vw", "640px": "90vw" },
            style: { width: "45rem" },
            class: "shadow-sm rounded-2xl",
            pt: { content: "!p-6" },
            onHide: y[3] || (y[3] = (x) => _.$emit("close")),
          },
          {
            default: Ye(() => [
              t.user
                ? (E(),
                  R("div", rB, [
                    l("div", iB, [
                      l("div", oB, [
                        y[4] ||
                          (y[4] = l(
                            "span",
                            {
                              class:
                                "text-surface-600 dark:text-surface-400 font-medium text-base",
                            },
                            "Felhasználó kezelés",
                            -1,
                          )),
                        y[5] ||
                          (y[5] = l(
                            "span",
                            {
                              class:
                                "text-surface-600 dark:text-surface-400 font-medium text-base",
                            },
                            "/",
                            -1,
                          )),
                        l(
                          "span",
                          sB,
                          z(
                            t.user.username ||
                              t.user.display_name ||
                              "Ismeretlen",
                          ),
                          1,
                        ),
                      ]),
                      O(H(Ce), {
                        type: "button",
                        icon: "pi pi-times",
                        text: "",
                        rounded: "",
                        severity: "secondary",
                        class: "w-10 h-10 !p-2",
                        onClick: y[0] || (y[0] = (x) => (i.value = !1)),
                      }),
                    ]),
                    l("div", aB, [
                      l(
                        "img",
                        {
                          src:
                            t.user.avatar ||
                            t.user.avatar_url ||
                            d(t.user.minecraft_uuid) ||
                            u(),
                          alt: t.user.username || "Felhasználó",
                          class:
                            "w-20 h-20 rounded-full border-4 border-surface-200 dark:border-surface-700",
                        },
                        null,
                        8,
                        lB,
                      ),
                      l("div", cB, [
                        l(
                          "h3",
                          uB,
                          z(
                            t.user.username ||
                              t.user.display_name ||
                              "Ismeretlen",
                          ),
                          1,
                        ),
                        l("div", dB, [
                          O(
                            H(vt),
                            {
                              value:
                                t.user.currentRank || t.user.role || "user",
                              severity: h(t.user.currentRank || t.user.role),
                            },
                            null,
                            8,
                            ["value", "severity"],
                          ),
                          O(
                            H(vt),
                            {
                              value:
                                t.user.isOnline || t.user.is_active
                                  ? "Online"
                                  : "Offline",
                              severity:
                                t.user.isOnline || t.user.is_active
                                  ? "success"
                                  : "secondary",
                            },
                            null,
                            8,
                            ["value", "severity"],
                          ),
                        ]),
                        l(
                          "p",
                          fB,
                          " Utolsó bejelentkezés: " +
                            z(f(t.user.lastLogin || t.user.last_login_at)),
                          1,
                        ),
                      ]),
                    ]),
                    l("div", pB, [
                      l("div", hB, [
                        y[6] ||
                          (y[6] = l(
                            "i",
                            {
                              class: "pi pi-clock text-2xl text-blue-500 mb-2",
                            },
                            null,
                            -1,
                          )),
                        l("p", mB, z(o.value.playtime) + "h", 1),
                        y[7] ||
                          (y[7] = l(
                            "p",
                            {
                              class:
                                "text-sm text-surface-500 dark:text-surface-400",
                            },
                            "Játékidő",
                            -1,
                          )),
                      ]),
                      l("div", gB, [
                        y[8] ||
                          (y[8] = l(
                            "i",
                            {
                              class: "pi pi-star text-2xl text-yellow-500 mb-2",
                            },
                            null,
                            -1,
                          )),
                        l("p", vB, z(o.value.coins.toLocaleString()), 1),
                        y[9] ||
                          (y[9] = l(
                            "p",
                            {
                              class:
                                "text-sm text-surface-500 dark:text-surface-400",
                            },
                            "Bányászérme",
                            -1,
                          )),
                      ]),
                      l("div", bB, [
                        y[10] ||
                          (y[10] = l(
                            "i",
                            {
                              class: "pi pi-users text-2xl text-green-500 mb-2",
                            },
                            null,
                            -1,
                          )),
                        l("p", yB, z(o.value.friends), 1),
                        y[11] ||
                          (y[11] = l(
                            "p",
                            {
                              class:
                                "text-sm text-surface-500 dark:text-surface-400",
                            },
                            "Barátok",
                            -1,
                          )),
                      ]),
                      l("div", xB, [
                        y[12] ||
                          (y[12] = l(
                            "i",
                            {
                              class:
                                "pi pi-exclamation-triangle text-2xl text-red-500 mb-2",
                            },
                            null,
                            -1,
                          )),
                        l("p", _B, z(o.value.warnings), 1),
                        y[13] ||
                          (y[13] = l(
                            "p",
                            {
                              class:
                                "text-sm text-surface-500 dark:text-surface-400",
                            },
                            "Figyelmeztetések",
                            -1,
                          )),
                      ]),
                    ]),
                    l("div", wB, [
                      l("div", kB, [
                        y[18] ||
                          (y[18] = l(
                            "h4",
                            {
                              class:
                                "font-semibold text-surface-900 dark:text-surface-0 flex items-center gap-2",
                            },
                            [
                              l("i", { class: "pi pi-user text-primary-500" }),
                              Ke(" Fiók információk "),
                            ],
                            -1,
                          )),
                        l("div", SB, [
                          l("div", CB, [
                            y[14] ||
                              (y[14] = l(
                                "span",
                                {
                                  class:
                                    "text-surface-600 dark:text-surface-300",
                                },
                                "Regisztráció:",
                                -1,
                              )),
                            l(
                              "span",
                              MB,
                              z(
                                f(
                                  t.user.registrationDate ||
                                    t.user.registration_date ||
                                    t.user.created_at,
                                ),
                              ),
                              1,
                            ),
                          ]),
                          l("div", EB, [
                            y[15] ||
                              (y[15] = l(
                                "span",
                                {
                                  class:
                                    "text-surface-600 dark:text-surface-300",
                                },
                                "Email:",
                                -1,
                              )),
                            l(
                              "span",
                              TB,
                              z(t.user.email || "Nincs megadva"),
                              1,
                            ),
                          ]),
                          l("div", AB, [
                            y[16] ||
                              (y[16] = l(
                                "span",
                                {
                                  class:
                                    "text-surface-600 dark:text-surface-300",
                                },
                                "Discord:",
                                -1,
                              )),
                            l("span", PB, z(t.user.discord || "Nincs"), 1),
                          ]),
                          l("div", RB, [
                            y[17] ||
                              (y[17] = l(
                                "span",
                                {
                                  class:
                                    "text-surface-600 dark:text-surface-300",
                                },
                                "Két faktoros:",
                                -1,
                              )),
                            O(
                              H(vt),
                              {
                                value:
                                  t.user.twoFactorEnabled ||
                                  t.user.two_factor_enabled
                                    ? "Bekapcsolva"
                                    : "Kikapcsolva",
                                severity:
                                  t.user.twoFactorEnabled ||
                                  t.user.two_factor_enabled
                                    ? "success"
                                    : "warning",
                              },
                              null,
                              8,
                              ["value", "severity"],
                            ),
                          ]),
                        ]),
                      ]),
                      l("div", LB, [
                        y[23] ||
                          (y[23] = l(
                            "h4",
                            {
                              class:
                                "font-semibold text-surface-900 dark:text-surface-0 flex items-center gap-2",
                            },
                            [
                              l("i", {
                                class: "pi pi-chart-line text-primary-500",
                              }),
                              Ke(" Aktivitás "),
                            ],
                            -1,
                          )),
                        l("div", DB, [
                          l("div", IB, [
                            y[19] ||
                              (y[19] = l(
                                "span",
                                {
                                  class:
                                    "text-surface-600 dark:text-surface-300",
                                },
                                "Bejelentkezések:",
                                -1,
                              )),
                            l("span", OB, z(o.value.loginCount), 1),
                          ]),
                          l("div", $B, [
                            y[20] ||
                              (y[20] = l(
                                "span",
                                {
                                  class:
                                    "text-surface-600 dark:text-surface-300",
                                },
                                "Kedvenc szerver:",
                                -1,
                              )),
                            l(
                              "span",
                              zB,
                              z(t.user.favoriteServer || "Nincs"),
                              1,
                            ),
                          ]),
                          l("div", BB, [
                            y[21] ||
                              (y[21] = l(
                                "span",
                                {
                                  class:
                                    "text-surface-600 dark:text-surface-300",
                                },
                                "Átlag játékidő/nap:",
                                -1,
                              )),
                            l(
                              "span",
                              UB,
                              z(o.value.avgPlaytimePerDay) + "h",
                              1,
                            ),
                          ]),
                          l("div", FB, [
                            y[22] ||
                              (y[22] = l(
                                "span",
                                {
                                  class:
                                    "text-surface-600 dark:text-surface-300",
                                },
                                "Rang lejárat:",
                                -1,
                              )),
                            l(
                              "span",
                              NB,
                              z(f(t.user.rankExpiry || t.user.rank_expiry)),
                              1,
                            ),
                          ]),
                        ]),
                      ]),
                    ]),
                    s.value.length > 0
                      ? (E(),
                        R("div", VB, [
                          y[24] ||
                            (y[24] = l(
                              "h4",
                              {
                                class:
                                  "font-semibold text-surface-900 dark:text-surface-0 flex items-center gap-2",
                              },
                              [
                                l("i", {
                                  class: "pi pi-history text-primary-500",
                                }),
                                Ke(" Legutóbbi aktivitás "),
                              ],
                              -1,
                            )),
                          l("div", HB, [
                            (E(!0),
                            R(
                              We,
                              null,
                              mt(
                                s.value,
                                (x) => (
                                  E(),
                                  R(
                                    "div",
                                    {
                                      key: x.id || Math.random(),
                                      class:
                                        "flex items-center justify-between p-3 bg-surface-50 dark:bg-surface-800 rounded-lg",
                                    },
                                    [
                                      l("div", jB, [
                                        l(
                                          "i",
                                          {
                                            class: Ie([
                                              v(x.type),
                                              "text-surface-500 dark:text-surface-400",
                                            ]),
                                          },
                                          null,
                                          2,
                                        ),
                                        l(
                                          "span",
                                          GB,
                                          z(
                                            x.description ||
                                              "Ismeretlen aktivitás",
                                          ),
                                          1,
                                        ),
                                      ]),
                                      l(
                                        "span",
                                        WB,
                                        z(p(x.timestamp || x.created_at)),
                                        1,
                                      ),
                                    ],
                                  )
                                ),
                              ),
                              128,
                            )),
                          ]),
                        ]))
                      : (E(),
                        R(
                          "div",
                          KB,
                          y[25] ||
                            (y[25] = [
                              l(
                                "h4",
                                {
                                  class:
                                    "font-semibold text-surface-900 dark:text-surface-0 flex items-center gap-2",
                                },
                                [
                                  l("i", {
                                    class: "pi pi-history text-primary-500",
                                  }),
                                  Ke(" Legutóbbi aktivitás "),
                                ],
                                -1,
                              ),
                              l(
                                "div",
                                {
                                  class:
                                    "text-center p-4 bg-surface-50 dark:bg-surface-800 rounded-lg",
                                },
                                [
                                  l("i", {
                                    class:
                                      "pi pi-info-circle text-surface-400 mb-2",
                                  }),
                                  l(
                                    "p",
                                    {
                                      class:
                                        "text-surface-500 dark:text-surface-400",
                                    },
                                    "Nincs elérhető aktivitás",
                                  ),
                                ],
                                -1,
                              ),
                            ]),
                        )),
                    l("div", XB, [
                      l("div", YB, [
                        O(H(Ce), {
                          label: "Rang módosítása",
                          icon: "pi pi-crown",
                          severity: "primary",
                          onClick:
                            y[1] ||
                            (y[1] = (x) => _.$emit("change-rank", t.user)),
                        }),
                        O(H(Ce), {
                          label: "Üzenet küldése",
                          icon: "pi pi-envelope",
                          severity: "secondary",
                          outlined: "",
                          onClick: b,
                        }),
                      ]),
                      l("div", qB, [
                        a.value
                          ? (E(),
                            Be(H(Ce), {
                              key: 1,
                              label: "Kitiltás feloldása",
                              icon: "pi pi-check",
                              severity: "success",
                              outlined: "",
                              onClick: m,
                            }))
                          : (E(),
                            Be(H(Ce), {
                              key: 0,
                              label: "Kitiltás",
                              icon: "pi pi-ban",
                              severity: "danger",
                              outlined: "",
                              onClick: g,
                            })),
                      ]),
                    ]),
                  ]))
                : le("", !0),
            ]),
            _: 1,
          },
          8,
          ["visible"],
        )
      );
    },
  },
  JB = { key: 0, class: "flex flex-col gap-6" },
  QB = { class: "flex justify-between items-center" },
  e7 = {
    key: 0,
    class:
      "p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg",
  },
  t7 = { class: "flex items-center gap-2 text-red-800 dark:text-red-200" },
  n7 = { class: "text-sm" },
  r7 = {
    class:
      "flex items-center gap-4 p-4 bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  i7 = ["src", "alt"],
  o7 = { class: "text-lg font-semibold text-surface-900 dark:text-surface-0" },
  s7 = { class: "text-sm text-surface-500 dark:text-surface-400" },
  a7 = { key: 1, class: "flex justify-center py-4" },
  l7 = { key: 2, class: "space-y-4" },
  c7 = { class: "grid grid-cols-2 gap-3" },
  u7 = ["onClick"],
  d7 = { class: "text-center" },
  f7 = { class: "flex items-center justify-center mb-2" },
  p7 = { class: "text-xs text-surface-500 dark:text-surface-400" },
  h7 = { key: 3, class: "space-y-3" },
  m7 = { class: "flex flex-wrap gap-2" },
  g7 = {
    class:
      "p-3 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg",
  },
  v7 = { class: "text-sm text-blue-800 dark:text-blue-200" },
  b7 = { class: "space-y-2" },
  y7 = { class: "flex justify-end gap-2" },
  x7 = {
    __name: "RankChangeDialog",
    props: {
      user: { type: Object, default: null },
      show: { type: Boolean, default: !1 },
    },
    emits: ["close", "rank-changed"],
    setup(t, { emit: e }) {
      const n = t,
        r = e,
        i = N(!1),
        o = N(null),
        s = N(30),
        a = N(""),
        c = N(!1),
        u = N(!0),
        d = N(""),
        f = N([]),
        p = N([
          { value: 7, label: "1 hét" },
          { value: 30, label: "1 hónap" },
          { value: 90, label: "3 hónap" },
          { value: 365, label: "1 év" },
          { value: -1, label: "Végtelen" },
        ]);
      (Ft(
        () => n.show,
        (x) => {
          ((i.value = x), x && (b(), h()));
        },
      ),
        Ft(i, (x) => {
          x || r("close");
        }));
      const h = async () => {
          ((u.value = !0), (d.value = ""));
          try {
            const x = await Ve.getRanks();
            if (((f.value = x.data || x), !f.value || f.value.length === 0))
              throw new Error("Nincsenek elérhető rangok");
          } catch (x) {
            ((d.value = "Hiba a rangok betöltése során: " + x.message),
              (f.value = [
                {
                  id: 0,
                  rank_key: "default",
                  name: "Alapértelmezett",
                  price: 0,
                  color_class: "text-gray-600",
                  icon: "user",
                },
              ]));
          } finally {
            u.value = !1;
          }
        },
        v = (x) => {
          ((o.value = x), (d.value = ""));
        },
        b = () => {
          ((o.value = null),
            (s.value = 30),
            (a.value = ""),
            (c.value = !1),
            (d.value = ""));
        },
        g = () => {
          if (s.value === -1) return "Soha";
          const x = new Date();
          return (
            x.setDate(x.getDate() + s.value),
            new Intl.DateTimeFormat("hu-HU", {
              year: "numeric",
              month: "long",
              day: "numeric",
              hour: "2-digit",
              minute: "2-digit",
            }).format(x)
          );
        },
        m = async () => {
          var x, C, w, S, D, k, P;
          if (!o.value) {
            d.value = "Kérlek válassz egy rangot!";
            return;
          }
          ((c.value = !0), (d.value = ""));
          try {
            let I = null;
            for (const [Z, G] of Object.entries(possibleIds))
              if (G != null && typeof G != "object" && !isNaN(G)) {
                I = parseInt(G);
                break;
              }
            if (!I)
              throw new Error(
                "Nem található érvényes felhasználó azonosító! Ellenőrizd a user objektumot a konzolban.",
              );
            const W = {
                rank_id: o.value.id,
                duration_days: s.value,
                reason: a.value || null,
              },
              X = await Ve.changeUserRank(I, W);
            if (!X) throw new Error("Nincs válasz a szervertől");
            if (X.user && X.rank) {
              const Z = {
                userId: I,
                oldRank: n.user.currentRank,
                newRank: X.rank.rank_key,
                newRankName: X.rank.name,
                duration: s.value,
                reason: a.value,
                expiryDate: X.expires_at
                  ? new Date(X.expires_at).toLocaleDateString("hu-HU")
                  : "Végtelen",
                timestamp: new Date(),
              };
              (r("rank-changed", Z), (i.value = !1));
            } else {
              const Z =
                X.message ||
                X.error ||
                ((x = X.data) == null ? void 0 : x.message) ||
                ((C = X.data) == null ? void 0 : C.error) ||
                "Ismeretlen hiba történt a rang módosítás során";
              throw new Error(Z);
            }
          } catch (I) {
            I.message
              ? (d.value = I.message)
              : (S = (w = I.response) == null ? void 0 : w.data) != null &&
                  S.message
                ? (d.value = I.response.data.message)
                : ((D = I.response) == null ? void 0 : D.status) === 403
                  ? (d.value = "Nincs jogosultságod ehhez a művelethez")
                  : ((k = I.response) == null ? void 0 : k.status) === 404
                    ? (d.value = "A felhasználó vagy rang nem található")
                    : ((P = I.response) == null ? void 0 : P.status) >= 500
                      ? (d.value = "Szerver hiba történt. Próbáld újra később.")
                      : (d.value =
                          "Hiba történt a rang módosítás során. Ellenőrizd a konzolt a részletekért.");
          } finally {
            c.value = !1;
          }
        },
        _ = (x) =>
          ({
            user: "pi pi-user",
            star: "pi pi-star",
            zap: "pi pi-bolt",
            crown: "pi pi-crown",
            shield: "pi pi-shield",
            flame: "pi pi-sun",
            sword: "pi pi-send",
          })[x] || "pi pi-user",
        y = (x) =>
          ({
            default: "secondary",
            vip: "success",
            elit: "info",
            zsirkiraly: "warning",
            titan: "help",
            felisten: "danger",
            mindenheto: "contrast",
          })[x] || "secondary";
      return (
        $t(() => {
          n.show && h();
        }),
        (x, C) => (
          E(),
          Be(
            H(on),
            {
              visible: i.value,
              "onUpdate:visible": C[3] || (C[3] = (w) => (i.value = w)),
              modal: !0,
              "show-header": !1,
              breakpoints: { "960px": "75vw", "640px": "90vw" },
              style: { width: "35rem" },
              class: "shadow-sm rounded-2xl",
              pt: { content: "!p-6" },
              onHide: C[4] || (C[4] = (w) => x.$emit("close")),
            },
            {
              default: Ye(() => [
                t.user
                  ? (E(),
                    R("div", JB, [
                      l("div", QB, [
                        C[5] ||
                          (C[5] = l(
                            "div",
                            { class: "flex items-center gap-2" },
                            [
                              l(
                                "span",
                                {
                                  class:
                                    "text-surface-600 dark:text-surface-400 font-medium text-base",
                                },
                                "Felhasználó kezelés",
                              ),
                              l(
                                "span",
                                {
                                  class:
                                    "text-surface-600 dark:text-surface-400 font-medium text-base",
                                },
                                "/",
                              ),
                              l(
                                "span",
                                {
                                  class:
                                    "text-surface-900 dark:text-surface-0 font-semibold text-base",
                                },
                                "Rang módosítása",
                              ),
                            ],
                            -1,
                          )),
                        O(H(Ce), {
                          type: "button",
                          icon: "pi pi-times",
                          text: "",
                          rounded: "",
                          severity: "secondary",
                          class: "w-10 h-10 !p-2",
                          onClick: C[0] || (C[0] = (w) => (i.value = !1)),
                        }),
                      ]),
                      d.value
                        ? (E(),
                          R("div", e7, [
                            l("div", t7, [
                              C[6] ||
                                (C[6] = l(
                                  "i",
                                  { class: "pi pi-exclamation-triangle" },
                                  null,
                                  -1,
                                )),
                              l("span", n7, z(d.value), 1),
                            ]),
                          ]))
                        : le("", !0),
                      l("div", r7, [
                        l(
                          "img",
                          {
                            src: t.user.avatar,
                            alt: t.user.username,
                            class: "w-12 h-12 rounded-full",
                          },
                          null,
                          8,
                          i7,
                        ),
                        l("div", null, [
                          l("h3", o7, z(t.user.username), 1),
                          l("p", s7, [
                            C[7] || (C[7] = Ke(" Jelenlegi rang: ")),
                            O(
                              H(vt),
                              {
                                value: t.user.currentRank,
                                severity: y(t.user.currentRank),
                              },
                              null,
                              8,
                              ["value", "severity"],
                            ),
                          ]),
                        ]),
                      ]),
                      u.value
                        ? (E(),
                          R(
                            "div",
                            a7,
                            C[8] ||
                              (C[8] = [
                                l(
                                  "div",
                                  {
                                    class:
                                      "flex items-center gap-2 text-surface-500 dark:text-surface-400",
                                  },
                                  [
                                    l("i", { class: "pi pi-spin pi-spinner" }),
                                    l("span", null, "Rangok betöltése..."),
                                  ],
                                  -1,
                                ),
                              ]),
                          ))
                        : (E(),
                          R("div", l7, [
                            C[9] ||
                              (C[9] = l(
                                "h4",
                                {
                                  class:
                                    "font-medium text-surface-900 dark:text-surface-0",
                                },
                                "Új rang kiválasztása",
                                -1,
                              )),
                            l("div", c7, [
                              (E(!0),
                              R(
                                We,
                                null,
                                mt(f.value, (w) => {
                                  var S;
                                  return (
                                    E(),
                                    R(
                                      "div",
                                      {
                                        key: w.id,
                                        onClick: (D) => v(w),
                                        class: Ie([
                                          "p-3 border-2 rounded-lg cursor-pointer transition-all",
                                          ((S = o.value) == null
                                            ? void 0
                                            : S.id) === w.id
                                            ? "border-primary-500 bg-primary-50 dark:bg-primary-900/20"
                                            : "border-surface-200 dark:border-surface-700 hover:border-primary-300",
                                        ]),
                                      },
                                      [
                                        l("div", d7, [
                                          l("div", f7, [
                                            l(
                                              "i",
                                              {
                                                class: Ie([
                                                  [_(w.icon), w.color_class],
                                                  "text-xl",
                                                ]),
                                              },
                                              null,
                                              2,
                                            ),
                                          ]),
                                          l(
                                            "h5",
                                            {
                                              class: Ie([
                                                "font-semibold mb-1",
                                                w.color_class,
                                              ]),
                                            },
                                            z(w.name),
                                            3,
                                          ),
                                          l(
                                            "p",
                                            p7,
                                            z(w.price.toLocaleString()) +
                                              " BÉ ",
                                            1,
                                          ),
                                        ]),
                                      ],
                                      10,
                                      u7,
                                    )
                                  );
                                }),
                                128,
                              )),
                            ]),
                          ])),
                      o.value
                        ? (E(),
                          R("div", h7, [
                            C[11] ||
                              (C[11] = l(
                                "h4",
                                {
                                  class:
                                    "font-medium text-surface-900 dark:text-surface-0",
                                },
                                "Érvényesség időtartama",
                                -1,
                              )),
                            l("div", m7, [
                              (E(!0),
                              R(
                                We,
                                null,
                                mt(
                                  p.value,
                                  (w) => (
                                    E(),
                                    Be(
                                      H(Ce),
                                      {
                                        key: w.value,
                                        label: w.label,
                                        severity:
                                          s.value === w.value
                                            ? "primary"
                                            : "secondary",
                                        outlined: s.value !== w.value,
                                        size: "small",
                                        onClick: (S) => (s.value = w.value),
                                      },
                                      null,
                                      8,
                                      [
                                        "label",
                                        "severity",
                                        "outlined",
                                        "onClick",
                                      ],
                                    )
                                  ),
                                ),
                                128,
                              )),
                            ]),
                            l("div", g7, [
                              l("div", v7, [
                                C[10] ||
                                  (C[10] = l(
                                    "strong",
                                    null,
                                    "Lejárati dátum:",
                                    -1,
                                  )),
                                Ke(" " + z(g()), 1),
                              ]),
                            ]),
                          ]))
                        : le("", !0),
                      l("div", b7, [
                        C[12] ||
                          (C[12] = l(
                            "label",
                            {
                              class:
                                "font-medium text-surface-900 dark:text-surface-0",
                            },
                            "Indoklás (opcionális)",
                            -1,
                          )),
                        O(
                          H(Lr),
                          {
                            modelValue: a.value,
                            "onUpdate:modelValue":
                              C[1] || (C[1] = (w) => (a.value = w)),
                            placeholder: "Rang módosításának indoka...",
                            rows: "3",
                            class: "w-full",
                          },
                          null,
                          8,
                          ["modelValue"],
                        ),
                      ]),
                      l("div", y7, [
                        O(H(Ce), {
                          label: "Mégse",
                          severity: "secondary",
                          outlined: "",
                          onClick: C[2] || (C[2] = (w) => (i.value = !1)),
                        }),
                        o.value
                          ? (E(),
                            Be(
                              H(Ce),
                              {
                                key: 0,
                                label: `Rang beállítása: ${o.value.name}`,
                                severity: "primary",
                                icon: "pi pi-check",
                                loading: c.value,
                                onClick: m,
                              },
                              null,
                              8,
                              ["label", "loading"],
                            ))
                          : le("", !0),
                      ]),
                    ]))
                  : le("", !0),
              ]),
              _: 1,
            },
            8,
            ["visible"],
          )
        )
      );
    },
  },
  _7 = { class: "flex flex-col gap-6" },
  w7 = { class: "flex justify-between items-center" },
  k7 = { class: "space-y-2" },
  S7 = { key: 0, class: "text-red-500" },
  C7 = { class: "space-y-2" },
  M7 = { key: 0, class: "text-red-500" },
  E7 = { class: "space-y-2" },
  T7 = { class: "relative" },
  A7 = { key: 0, class: "text-red-500" },
  P7 = { class: "space-y-2" },
  R7 = { key: 0, class: "text-red-500" },
  L7 = { class: "space-y-2" },
  D7 = { class: "space-y-2" },
  I7 = { class: "space-y-3" },
  O7 = { class: "flex items-center gap-2" },
  $7 = { class: "flex items-center gap-2" },
  z7 = { class: "flex justify-end gap-2 pt-4" },
  B7 = {
    __name: "CreateUserDialog",
    props: { show: { type: Boolean, default: !1 } },
    emits: ["close", "user-created"],
    setup(t, { emit: e }) {
      const n = t,
        r = e,
        i = N(!1),
        o = N(!1),
        s = N(!1),
        a = N({
          username: "",
          email: "",
          password: "",
          confirmPassword: "",
          initialRank: "default",
          discord: "",
          sendWelcomeEmail: !0,
          requirePasswordChange: !1,
        }),
        c = N({ username: "", email: "", password: "", confirmPassword: "" });
      (Ft(
        () => n.show,
        (g) => {
          ((i.value = g), g && v());
        },
      ),
        Ft(i, (g) => {
          g || r("close");
        }));
      const u = Xe(
          () =>
            a.value.username &&
            a.value.email &&
            a.value.password &&
            a.value.confirmPassword &&
            !c.value.username &&
            !c.value.email &&
            !c.value.password &&
            !c.value.confirmPassword,
        ),
        d = () => {
          const g = a.value.username;
          return g
            ? g.length < 3 || g.length > 16
              ? ((c.value.username =
                  "A felhasználónév 3-16 karakter hosszú lehet"),
                !1)
              : /^[a-zA-Z0-9_]+$/.test(g)
                ? ["admin", "steve", "alex", "creeper"].includes(
                    g.toLowerCase(),
                  )
                  ? ((c.value.username = "Ez a felhasználónév már foglalt"), !1)
                  : ((c.value.username = ""), !0)
                : ((c.value.username =
                    "Csak betűk, számok és aláhúzás engedélyezett"),
                  !1)
            : ((c.value.username = "A felhasználónév kötelező"), !1);
        },
        f = () => {
          const g = a.value.email;
          return g
            ? /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(g)
              ? ((c.value.email = ""), !0)
              : ((c.value.email = "Érvénytelen email cím formátum"), !1)
            : ((c.value.email = "Az email cím kötelező"), !1);
        },
        p = () => {
          const g = a.value.password;
          return g
            ? g.length < 8
              ? ((c.value.password =
                  "A jelszó minimum 8 karakter hosszú kell legyen"),
                !1)
              : /(?=.*[a-z])(?=.*[A-Z])(?=.*\d)/.test(g)
                ? ((c.value.password = ""), a.value.confirmPassword && h(), !0)
                : ((c.value.password =
                    "A jelszónak tartalmaznia kell kis- és nagybetűt, valamint számot"),
                  !1)
            : ((c.value.password = "A jelszó kötelező"), !1);
        },
        h = () => {
          const g = a.value.confirmPassword;
          return g
            ? g !== a.value.password
              ? ((c.value.confirmPassword = "A jelszavak nem egyeznek"), !1)
              : ((c.value.confirmPassword = ""), !0)
            : ((c.value.confirmPassword = "A jelszó megerősítése kötelező"),
              !1);
        },
        v = () => {
          ((a.value = {
            username: "",
            email: "",
            password: "",
            confirmPassword: "",
            initialRank: "default",
            discord: "",
            sendWelcomeEmail: !0,
            requirePasswordChange: !1,
          }),
            (c.value = {
              username: "",
              email: "",
              password: "",
              confirmPassword: "",
            }),
            (o.value = !1),
            (s.value = !1));
        },
        b = async () => {
          if (d() && f() && p() && h()) {
            o.value = !0;
            try {
              await new Promise((_) => setTimeout(_, 2e3));
              const m = {
                username: a.value.username,
                email: a.value.email,
                initialRank: a.value.initialRank,
                discord: a.value.discord || null,
                sendWelcomeEmail: a.value.sendWelcomeEmail,
                requirePasswordChange: a.value.requirePasswordChange,
                avatar: `https://api.dicebear.com/7.x/pixel-art/svg?seed=${a.value.username}`,
              };
              (r("user-created", m), (i.value = !1));
            } catch {
            } finally {
              o.value = !1;
            }
          }
        };
      return (g, m) => (
        E(),
        Be(
          H(on),
          {
            visible: i.value,
            "onUpdate:visible": m[11] || (m[11] = (_) => (i.value = _)),
            modal: !0,
            "show-header": !1,
            breakpoints: { "960px": "75vw", "640px": "90vw" },
            style: { width: "35rem" },
            class: "shadow-sm rounded-2xl",
            pt: { content: "!p-6" },
            onHide: m[12] || (m[12] = (_) => g.$emit("close")),
          },
          {
            default: Ye(() => [
              l("div", _7, [
                l("div", w7, [
                  m[13] ||
                    (m[13] = l(
                      "div",
                      { class: "flex items-center gap-2" },
                      [
                        l(
                          "span",
                          {
                            class:
                              "text-surface-600 dark:text-surface-400 font-medium text-base",
                          },
                          "Felhasználó kezelés",
                        ),
                        l(
                          "span",
                          {
                            class:
                              "text-surface-600 dark:text-surface-400 font-medium text-base",
                          },
                          "/",
                        ),
                        l(
                          "span",
                          {
                            class:
                              "text-surface-900 dark:text-surface-0 font-semibold text-base",
                          },
                          "Új felhasználó",
                        ),
                      ],
                      -1,
                    )),
                  O(H(Ce), {
                    type: "button",
                    icon: "pi pi-times",
                    text: "",
                    rounded: "",
                    severity: "secondary",
                    class: "w-10 h-10 !p-2",
                    onClick: m[0] || (m[0] = (_) => (i.value = !1)),
                  }),
                ]),
                l(
                  "form",
                  { onSubmit: oi(b, ["prevent"]), class: "space-y-4" },
                  [
                    l("div", k7, [
                      m[14] ||
                        (m[14] = l(
                          "label",
                          {
                            for: "username",
                            class:
                              "font-medium text-surface-900 dark:text-surface-0",
                          },
                          " Felhasználónév * ",
                          -1,
                        )),
                      O(
                        H(yt),
                        {
                          id: "username",
                          modelValue: a.value.username,
                          "onUpdate:modelValue":
                            m[1] || (m[1] = (_) => (a.value.username = _)),
                          placeholder: "MinecraftPlayer123",
                          class: Ie([
                            "w-full",
                            { "p-invalid": c.value.username },
                          ]),
                          onBlur: d,
                        },
                        null,
                        8,
                        ["modelValue", "class"],
                      ),
                      c.value.username
                        ? (E(), R("small", S7, z(c.value.username), 1))
                        : le("", !0),
                      m[15] ||
                        (m[15] = l(
                          "small",
                          { class: "text-surface-500 dark:text-surface-400" },
                          " 3-16 karakter, csak betűk, számok és aláhúzás ",
                          -1,
                        )),
                    ]),
                    l("div", C7, [
                      m[16] ||
                        (m[16] = l(
                          "label",
                          {
                            for: "email",
                            class:
                              "font-medium text-surface-900 dark:text-surface-0",
                          },
                          " Email cím * ",
                          -1,
                        )),
                      O(
                        H(yt),
                        {
                          id: "email",
                          modelValue: a.value.email,
                          "onUpdate:modelValue":
                            m[2] || (m[2] = (_) => (a.value.email = _)),
                          type: "email",
                          placeholder: "player@example.com",
                          class: Ie(["w-full", { "p-invalid": c.value.email }]),
                          onBlur: f,
                        },
                        null,
                        8,
                        ["modelValue", "class"],
                      ),
                      c.value.email
                        ? (E(), R("small", M7, z(c.value.email), 1))
                        : le("", !0),
                    ]),
                    l("div", E7, [
                      m[17] ||
                        (m[17] = l(
                          "label",
                          {
                            for: "password",
                            class:
                              "font-medium text-surface-900 dark:text-surface-0",
                          },
                          " Jelszó * ",
                          -1,
                        )),
                      l("div", T7, [
                        O(
                          H(yt),
                          {
                            id: "password",
                            modelValue: a.value.password,
                            "onUpdate:modelValue":
                              m[3] || (m[3] = (_) => (a.value.password = _)),
                            type: s.value ? "text" : "password",
                            placeholder: "••••••••",
                            class: Ie([
                              "w-full pr-10",
                              { "p-invalid": c.value.password },
                            ]),
                            onBlur: p,
                          },
                          null,
                          8,
                          ["modelValue", "type", "class"],
                        ),
                        l(
                          "button",
                          {
                            type: "button",
                            onClick:
                              m[4] || (m[4] = (_) => (s.value = !s.value)),
                            class:
                              "absolute right-3 top-1/2 transform -translate-y-1/2 text-surface-400 hover:text-surface-600",
                          },
                          [
                            l(
                              "i",
                              {
                                class: Ie(
                                  s.value ? "pi pi-eye-slash" : "pi pi-eye",
                                ),
                              },
                              null,
                              2,
                            ),
                          ],
                        ),
                      ]),
                      c.value.password
                        ? (E(), R("small", A7, z(c.value.password), 1))
                        : le("", !0),
                      m[18] ||
                        (m[18] = l(
                          "small",
                          { class: "text-surface-500 dark:text-surface-400" },
                          " Minimum 8 karakter, legalább 1 szám és 1 nagybetű ",
                          -1,
                        )),
                    ]),
                    l("div", P7, [
                      m[19] ||
                        (m[19] = l(
                          "label",
                          {
                            for: "confirmPassword",
                            class:
                              "font-medium text-surface-900 dark:text-surface-0",
                          },
                          " Jelszó megerősítése * ",
                          -1,
                        )),
                      O(
                        H(yt),
                        {
                          id: "confirmPassword",
                          modelValue: a.value.confirmPassword,
                          "onUpdate:modelValue":
                            m[5] ||
                            (m[5] = (_) => (a.value.confirmPassword = _)),
                          type: "password",
                          placeholder: "••••••••",
                          class: Ie([
                            "w-full",
                            { "p-invalid": c.value.confirmPassword },
                          ]),
                          onBlur: h,
                        },
                        null,
                        8,
                        ["modelValue", "class"],
                      ),
                      c.value.confirmPassword
                        ? (E(), R("small", R7, z(c.value.confirmPassword), 1))
                        : le("", !0),
                    ]),
                    l("div", L7, [
                      m[21] ||
                        (m[21] = l(
                          "label",
                          {
                            for: "initialRank",
                            class:
                              "font-medium text-surface-900 dark:text-surface-0",
                          },
                          " Kezdő rang ",
                          -1,
                        )),
                      st(
                        l(
                          "select",
                          {
                            id: "initialRank",
                            "onUpdate:modelValue":
                              m[6] || (m[6] = (_) => (a.value.initialRank = _)),
                            class:
                              "w-full px-3 py-2 border border-surface-300 dark:border-surface-600 rounded-md bg-surface-0 dark:bg-surface-800 text-surface-900 dark:text-surface-0",
                          },
                          m[20] ||
                            (m[20] = [
                              l(
                                "option",
                                { value: "default" },
                                "Alapértelmezett",
                                -1,
                              ),
                              l("option", { value: "vip" }, "VIP", -1),
                              l("option", { value: "elit" }, "ELIT", -1),
                              l(
                                "option",
                                { value: "zsirkiraly" },
                                "ZSÍRKIRÁLY",
                                -1,
                              ),
                            ]),
                          512,
                        ),
                        [[ei, a.value.initialRank]],
                      ),
                      m[22] ||
                        (m[22] = l(
                          "small",
                          { class: "text-surface-500 dark:text-surface-400" },
                          " Az új felhasználó ezzel a ranggal kezd ",
                          -1,
                        )),
                    ]),
                    l("div", D7, [
                      m[23] ||
                        (m[23] = l(
                          "label",
                          {
                            for: "discord",
                            class:
                              "font-medium text-surface-900 dark:text-surface-0",
                          },
                          " Discord felhasználónév (opcionális) ",
                          -1,
                        )),
                      O(
                        H(yt),
                        {
                          id: "discord",
                          modelValue: a.value.discord,
                          "onUpdate:modelValue":
                            m[7] || (m[7] = (_) => (a.value.discord = _)),
                          placeholder: "username#1234",
                          class: "w-full",
                        },
                        null,
                        8,
                        ["modelValue"],
                      ),
                    ]),
                    l("div", I7, [
                      l("div", O7, [
                        O(
                          H(vr),
                          {
                            id: "sendWelcomeEmail",
                            modelValue: a.value.sendWelcomeEmail,
                            "onUpdate:modelValue":
                              m[8] ||
                              (m[8] = (_) => (a.value.sendWelcomeEmail = _)),
                            binary: !0,
                          },
                          null,
                          8,
                          ["modelValue"],
                        ),
                        m[24] ||
                          (m[24] = l(
                            "label",
                            {
                              for: "sendWelcomeEmail",
                              class: "text-surface-900 dark:text-surface-0",
                            },
                            " Üdvözlő email küldése ",
                            -1,
                          )),
                      ]),
                      l("div", $7, [
                        O(
                          H(vr),
                          {
                            id: "requirePasswordChange",
                            modelValue: a.value.requirePasswordChange,
                            "onUpdate:modelValue":
                              m[9] ||
                              (m[9] = (_) =>
                                (a.value.requirePasswordChange = _)),
                            binary: !0,
                          },
                          null,
                          8,
                          ["modelValue"],
                        ),
                        m[25] ||
                          (m[25] = l(
                            "label",
                            {
                              for: "requirePasswordChange",
                              class: "text-surface-900 dark:text-surface-0",
                            },
                            " Jelszó változtatás kérése első bejelentkezéskor ",
                            -1,
                          )),
                      ]),
                    ]),
                    l("div", z7, [
                      O(H(Ce), {
                        type: "button",
                        label: "Mégse",
                        severity: "secondary",
                        outlined: "",
                        onClick: m[10] || (m[10] = (_) => (i.value = !1)),
                      }),
                      O(
                        H(Ce),
                        {
                          type: "submit",
                          label: "Felhasználó létrehozása",
                          disabled: !u.value,
                          loading: o.value,
                        },
                        null,
                        8,
                        ["disabled", "loading"],
                      ),
                    ]),
                  ],
                  32,
                ),
              ]),
            ]),
            _: 1,
          },
          8,
          ["visible"],
        )
      );
    },
  },
  U7 = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  F7 = { class: "flex items-center justify-between mb-6" },
  N7 = { class: "flex items-center gap-3" },
  V7 = { class: "relative" },
  H7 = { key: 0, class: "flex justify-center py-8" },
  j7 = {
    key: 1,
    class:
      "p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg",
  },
  G7 = { class: "flex items-center gap-2 text-red-700 dark:text-red-300" },
  W7 = { class: "flex flex-wrap gap-3 mb-4" },
  K7 = { class: "flex items-center gap-2" },
  X7 = ["value"],
  Y7 = { class: "flex items-center gap-2" },
  q7 = { class: "flex items-center gap-2" },
  Z7 = { class: "overflow-x-auto" },
  J7 = { class: "w-full" },
  Q7 = { class: "border-b border-surface-200 dark:border-surface-700" },
  eU = {
    class:
      "text-left py-3 px-2 font-semibold text-surface-700 dark:text-surface-300",
  },
  tU = {
    class:
      "text-left py-3 px-2 font-semibold text-surface-700 dark:text-surface-300",
  },
  nU = { class: "py-4 px-2" },
  rU = { class: "flex items-center gap-3" },
  iU = ["src", "alt"],
  oU = { class: "font-semibold text-surface-900 dark:text-surface-0" },
  sU = { class: "text-sm text-surface-500 dark:text-surface-400" },
  aU = { class: "py-4 px-2" },
  lU = { class: "text-surface-700 dark:text-surface-300" },
  cU = { class: "py-4 px-2" },
  uU = { class: "flex flex-col gap-1" },
  dU = { class: "py-4 px-2" },
  fU = { class: "py-4 px-2" },
  pU = { class: "text-surface-700 dark:text-surface-300" },
  hU = { class: "py-4 px-2" },
  mU = { class: "flex items-center gap-2" },
  gU = { key: 0, class: "text-center py-8" },
  vU = { class: "text-surface-500 dark:text-surface-400" },
  bU = { key: 0, class: "flex justify-between items-center mt-6" },
  yU = { class: "text-sm text-surface-500 dark:text-surface-400" },
  xU = { class: "flex gap-2" },
  _U = { class: "px-3 py-2 text-surface-700 dark:text-surface-300" },
  wU = { key: 0, class: "flex flex-col gap-4" },
  kU = { class: "flex justify-between items-center" },
  SU = { class: "text-lg font-semibold text-surface-900 dark:text-surface-0" },
  CU = { class: "space-y-2" },
  MU = { class: "space-y-2" },
  EU = { class: "flex justify-end gap-2" },
  TU = {
    __name: "UserManagement",
    setup(t) {
      const e = N([]),
        n = N(!1),
        r = N(null),
        i = N(""),
        o = N(""),
        s = N(""),
        a = N(""),
        c = N("registration_date"),
        u = N("desc"),
        d = N(1),
        f = N(15),
        p = N(0),
        h = N([]),
        v = N(!1),
        b = N(!1),
        g = N(!1),
        m = N(!1),
        _ = N(null),
        y = N(!1),
        x = N({ amount: null, description: "" });
      let C = null;
      const w = () => {
          (clearTimeout(C),
            (C = setTimeout(() => {
              ((d.value = 1), I());
            }, 500)));
        },
        S = Xe(() => Math.ceil(p.value / f.value)),
        D = Xe(() => (d.value - 1) * f.value),
        k = Xe(() => Math.min(D.value + f.value, p.value)),
        P = () => {
          const L = new Set(),
            F = new Map();
          (e.value.forEach((te) => {
            const q = te.currentGameRank || te.current_game_rank;
            if (q && q !== "user" && q !== "") {
              L.add(q);
              const ye =
                te.currentGameRankName ||
                te.current_game_rank_name ||
                te.gameRankDisplayName ||
                ge(q);
              F.set(q, ye);
            }
          }),
            (h.value = Array.from(L)
              .map((te) => ({ rank_key: te, name: F.get(te) || ge(te) }))
              .sort((te, q) => te.name.localeCompare(q.name))));
        },
        I = async () => {
          var L, F;
          ((n.value = !0), (r.value = null));
          try {
            const te = {
              page: d.value,
              per_page: f.value,
              search: i.value,
              role: s.value,
              game_rank: o.value,
              is_active: a.value,
              sort_by: c.value,
              sort_order: u.value,
            };
            if (
              (Object.keys(te).forEach((q) => {
                (te[q] === "" || te[q] === null) && delete te[q];
              }),
              Array.isArray(response))
            )
              ((e.value = response), (p.value = response.length));
            else if (response && response.success)
              ((e.value = response.data || []),
                (p.value =
                  response.total ||
                  ((L = response.pagination) == null ? void 0 : L.total) ||
                  0));
            else if (response && typeof response == "object" && response.data)
              ((e.value = response.data || []),
                (p.value =
                  response.total ||
                  ((F = response.pagination) == null ? void 0 : F.total) ||
                  (response.data ? response.data.length : 0)));
            else if (
              response &&
              typeof response == "object" &&
              !response.success &&
              !response.data
            ) {
              const q = Object.values(response).filter(
                (ye) => ye && typeof ye == "object" && ye.id,
              );
              if (q.length > 0) ((e.value = q), (p.value = q.length));
              else throw new Error("No valid user data found in response");
            } else
              throw new Error(
                (response == null ? void 0 : response.message) ||
                  "Invalid response format",
              );
            P();
          } catch (te) {
            ((r.value =
              te.message || "Nem sikerült betölteni a felhasználókat"),
              (e.value = []),
              (p.value = 0));
          } finally {
            n.value = !1;
          }
        },
        W = () => {
          ((i.value = ""),
            (o.value = ""),
            (s.value = ""),
            (a.value = ""),
            (d.value = 1),
            I());
        },
        X = (L) => {
          (c.value === L
            ? (u.value = u.value === "asc" ? "desc" : "asc")
            : ((c.value = L), (u.value = "asc")),
            I());
        },
        Z = () => {
          d.value > 1 && (d.value--, I());
        },
        G = () => {
          d.value < S.value && (d.value++, I());
        },
        $ = (L) => {
          var F, te, q, ye, xe, Se, Me, ae, M, T, K, ue;
          return {
            id: L.id,
            username: L.username || L.display_name || "Ismeretlen",
            display_name: L.display_name || L.username,
            email: L.email || "nincs@megadva.hu",
            avatar: L.avatar || L.avatar_url,
            avatar_url: L.avatar_url || L.avatar,
            minecraft_uuid: L.minecraft_uuid,
            role: L.role || "user",
            currentRank: L.currentGameRank || L.currentRank || L.role || "user",
            currentGameRank: L.currentGameRank || L.current_game_rank || "user",
            is_active: L.is_active !== void 0 ? L.is_active : !0,
            isOnline: L.isOnline || L.is_active || !1,
            isBanned: L.isBanned || L.is_banned || !L.is_active,
            registration_date:
              L.registration_date || L.registrationDate || L.created_at,
            registrationDate:
              L.registrationDate || L.registration_date || L.created_at,
            lastLogin: L.lastLogin || L.last_login_at,
            last_login_at: L.last_login_at || L.lastLogin,
            rankExpiry: L.rankExpiry || L.rank_expiry || L.gameRankExpiry,
            rank_expiry: L.rank_expiry || L.rankExpiry || L.gameRankExpiry,
            discord: L.discord,
            twoFactorEnabled: L.twoFactorEnabled || L.two_factor_enabled || !1,
            two_factor_enabled:
              L.two_factor_enabled || L.twoFactorEnabled || !1,
            favoriteServer: L.favoriteServer || "Survival",
            stats: {
              playtime:
                ((F = L.stats) == null ? void 0 : F.playtime) ||
                L.playtime ||
                0,
              coins:
                ((te = L.stats) == null ? void 0 : te.coins) || L.coins || 0,
              friends:
                ((q = L.stats) == null ? void 0 : q.friends) ||
                L.friends_count ||
                0,
              warnings:
                ((ye = L.stats) == null ? void 0 : ye.warnings) ||
                L.warnings_count ||
                0,
              loginCount:
                ((xe = L.stats) == null ? void 0 : xe.loginCount) ||
                L.login_count ||
                0,
              avgPlaytimePerDay:
                ((Se = L.stats) == null ? void 0 : Se.avgPlaytimePerDay) ||
                L.avg_playtime_per_day ||
                0,
            },
            playtime:
              L.playtime ||
              ((Me = L.stats) == null ? void 0 : Me.playtime) ||
              0,
            coins: L.coins || ((ae = L.stats) == null ? void 0 : ae.coins) || 0,
            friends_count:
              L.friends_count ||
              ((M = L.stats) == null ? void 0 : M.friends) ||
              0,
            warnings_count:
              L.warnings_count ||
              ((T = L.stats) == null ? void 0 : T.warnings) ||
              0,
            login_count:
              L.login_count ||
              ((K = L.stats) == null ? void 0 : K.loginCount) ||
              0,
            avg_playtime_per_day:
              L.avg_playtime_per_day ||
              ((ue = L.stats) == null ? void 0 : ue.avgPlaytimePerDay) ||
              0,
            recentActivity: L.recentActivity || L.recent_activity || [],
            recent_activity: L.recent_activity || L.recentActivity || [],
            ...L,
          };
        },
        ne = async (L) => {
          try {
            let F = null;
            try {
              const q = await Ve.getAdminUserDetails(L.id);
              q && q.success && q.data
                ? (F = q.data)
                : q && typeof q == "object" && (F = q);
            } catch {}
            const te = F || L;
            ((_.value = $(te)), (v.value = !0));
          } catch {
            ((_.value = $(L)), (v.value = !0));
          }
        },
        U = (L) => {
          ((_.value = $(L)), (b.value = !0));
        },
        ie = (L) => {
          ((_.value = $(L)),
            (x.value = { amount: null, description: "" }),
            (m.value = !0));
        },
        J = (L) => {},
        V = (L) => {
          U(L);
        },
        re = (L) => {
          I();
        },
        Ee = async (L) => {
          try {
            (await Ve.updateAdminUser(L.id, { is_active: !1 }), I());
          } catch {}
        },
        Pe = async (L) => {
          try {
            (await Ve.updateAdminUser(L.id, { is_active: !0 }), I());
          } catch {}
        },
        be = (L) => {},
        ce = (L) => {
          I();
        },
        oe = async () => {
          if (!(!x.value.amount || !x.value.description)) {
            y.value = !0;
            try {
              (await Ve.addCoinsToUser(_.value.id, {
                amount: x.value.amount,
                description: x.value.description,
              }),
                (m.value = !1),
                I());
            } catch {
            } finally {
              y.value = !1;
            }
          }
        },
        me = (L) => {
          if (!L) return "-";
          try {
            return new Intl.DateTimeFormat("hu-HU", {
              year: "numeric",
              month: "short",
              day: "numeric",
            }).format(new Date(L));
          } catch {
            return "-";
          }
        },
        ge = (L) => {
          if (!L) return "Alapértelmezett";
          const F = h.value.find((q) => q.rank_key === L);
          return F
            ? F.name
            : {
                vip: "VIP",
                elit: "ELIT",
                zsirkiraly: "ZSÍRKIRÁLY",
                titan: "TITÁN",
                felisten: "FÉLISTEN",
                mindenheto: "MINDENHATÓ",
                user: "Alapértelmezett",
              }[L] || L;
        },
        Oe = (L) => {
          if (!L) return "secondary";
          const F = h.value.find((q) => q.rank_key === L);
          if (F && F.color_class) {
            if (F.color_class.includes("green")) return "success";
            if (F.color_class.includes("blue")) return "info";
            if (F.color_class.includes("purple")) return "help";
            if (F.color_class.includes("orange")) return "warning";
            if (F.color_class.includes("red")) return "danger";
            if (F.color_class.includes("gray")) return "contrast";
          }
          return (
            {
              user: "secondary",
              vip: "success",
              elit: "info",
              zsirkiraly: "help",
              titan: "info",
              felisten: "warning",
              mindenheto: "contrast",
            }[L] || "secondary"
          );
        },
        He = (L) =>
          (L &&
            { admin: "danger", moderator: "warning", user: "secondary" }[
              L.toLowerCase()
            ]) ||
          "secondary",
        A = (L) =>
          ({ admin: "Admin", moderator: "Moderátor", user: "Felhasználó" })[
            L
          ] || L,
        j = (L) =>
          L
            ? `https://crafatar.com/avatars/${L}?size=64`
            : "https://primefaces.org/cdn/primevue/images/avatar/amyelsner.png";
      return (
        $t(() => {
          I();
        }),
        (L, F) => {
          const te = Xn("tooltip");
          return (
            E(),
            R("div", U7, [
              l("div", F7, [
                F[16] ||
                  (F[16] = l(
                    "h3",
                    {
                      class:
                        "text-lg font-semibold text-surface-900 dark:text-surface-0 flex items-center gap-2",
                    },
                    [
                      l("i", { class: "pi pi-users text-primary-500" }),
                      Ke(" Felhasználó kezelés "),
                    ],
                    -1,
                  )),
                l("div", N7, [
                  l("div", V7, [
                    F[15] ||
                      (F[15] = l(
                        "i",
                        {
                          class:
                            "pi pi-search absolute left-3 top-1/2 transform -translate-y-1/2 text-surface-400",
                        },
                        null,
                        -1,
                      )),
                    O(
                      H(yt),
                      {
                        modelValue: i.value,
                        "onUpdate:modelValue":
                          F[0] || (F[0] = (q) => (i.value = q)),
                        placeholder: "Keresés felhasználó neve alapján...",
                        class: "pl-10 w-64",
                        onInput: w,
                      },
                      null,
                      8,
                      ["modelValue"],
                    ),
                  ]),
                  O(H(Ce), {
                    label: "Új felhasználó",
                    icon: "pi pi-plus",
                    onClick: F[1] || (F[1] = (q) => (g.value = !0)),
                  }),
                ]),
              ]),
              n.value
                ? (E(),
                  R(
                    "div",
                    H7,
                    F[17] ||
                      (F[17] = [
                        l(
                          "div",
                          {
                            class:
                              "flex items-center gap-2 text-surface-500 dark:text-surface-400",
                          },
                          [
                            l("i", { class: "pi pi-spin pi-spinner" }),
                            l("span", null, "Felhasználók betöltése..."),
                          ],
                          -1,
                        ),
                      ]),
                  ))
                : r.value
                  ? (E(),
                    R("div", j7, [
                      l("div", G7, [
                        F[18] ||
                          (F[18] = l(
                            "i",
                            { class: "pi pi-exclamation-triangle" },
                            null,
                            -1,
                          )),
                        l("span", null, z(r.value), 1),
                      ]),
                      l(
                        "button",
                        {
                          onClick: I,
                          class:
                            "mt-2 text-red-600 dark:text-red-400 hover:text-red-800 dark:hover:text-red-200 text-sm underline",
                        },
                        " Újra próbálkozás ",
                      ),
                    ]))
                  : (E(),
                    R(
                      We,
                      { key: 2 },
                      [
                        l("div", W7, [
                          l("div", K7, [
                            F[20] ||
                              (F[20] = l(
                                "label",
                                {
                                  class:
                                    "text-sm font-medium text-surface-700 dark:text-surface-300",
                                },
                                "Prémium rang:",
                                -1,
                              )),
                            st(
                              l(
                                "select",
                                {
                                  "onUpdate:modelValue":
                                    F[2] || (F[2] = (q) => (o.value = q)),
                                  onChange: I,
                                  class:
                                    "px-3 py-1 border border-surface-300 dark:border-surface-600 rounded-md bg-surface-0 dark:bg-surface-800 text-surface-900 dark:text-surface-0",
                                },
                                [
                                  F[19] ||
                                    (F[19] = l(
                                      "option",
                                      { value: "" },
                                      "Összes",
                                      -1,
                                    )),
                                  (E(!0),
                                  R(
                                    We,
                                    null,
                                    mt(
                                      h.value,
                                      (q) => (
                                        E(),
                                        R(
                                          "option",
                                          {
                                            key: q.rank_key,
                                            value: q.rank_key,
                                          },
                                          z(q.name),
                                          9,
                                          X7,
                                        )
                                      ),
                                    ),
                                    128,
                                  )),
                                ],
                                544,
                              ),
                              [[ei, o.value]],
                            ),
                          ]),
                          l("div", Y7, [
                            F[22] ||
                              (F[22] = l(
                                "label",
                                {
                                  class:
                                    "text-sm font-medium text-surface-700 dark:text-surface-300",
                                },
                                "Rendszer jogosultság:",
                                -1,
                              )),
                            st(
                              l(
                                "select",
                                {
                                  "onUpdate:modelValue":
                                    F[3] || (F[3] = (q) => (s.value = q)),
                                  onChange: I,
                                  class:
                                    "px-3 py-1 border border-surface-300 dark:border-surface-600 rounded-md bg-surface-0 dark:bg-surface-800 text-surface-900 dark:text-surface-0",
                                },
                                F[21] ||
                                  (F[21] = [
                                    l("option", { value: "" }, "Összes", -1),
                                    l(
                                      "option",
                                      { value: "user" },
                                      "Felhasználó",
                                      -1,
                                    ),
                                    l(
                                      "option",
                                      { value: "moderator" },
                                      "Moderátor",
                                      -1,
                                    ),
                                    l(
                                      "option",
                                      { value: "admin" },
                                      "Admin",
                                      -1,
                                    ),
                                  ]),
                                544,
                              ),
                              [[ei, s.value]],
                            ),
                          ]),
                          l("div", q7, [
                            F[24] ||
                              (F[24] = l(
                                "label",
                                {
                                  class:
                                    "text-sm font-medium text-surface-700 dark:text-surface-300",
                                },
                                "Státusz:",
                                -1,
                              )),
                            st(
                              l(
                                "select",
                                {
                                  "onUpdate:modelValue":
                                    F[4] || (F[4] = (q) => (a.value = q)),
                                  onChange: I,
                                  class:
                                    "px-3 py-1 border border-surface-300 dark:border-surface-600 rounded-md bg-surface-0 dark:bg-surface-800 text-surface-900 dark:text-surface-0",
                                },
                                F[23] ||
                                  (F[23] = [
                                    l("option", { value: "" }, "Összes", -1),
                                    l("option", { value: "1" }, "Aktív", -1),
                                    l("option", { value: "0" }, "Inaktív", -1),
                                  ]),
                                544,
                              ),
                              [[ei, a.value]],
                            ),
                          ]),
                          O(H(Ce), {
                            label: "Szűrők törlése",
                            icon: "pi pi-filter-slash",
                            text: "",
                            onClick: W,
                          }),
                        ]),
                        l("div", Z7, [
                          l("table", J7, [
                            l("thead", null, [
                              l("tr", Q7, [
                                l("th", eU, [
                                  O(H(Ce), {
                                    label: "Felhasználó",
                                    text: "",
                                    icon: "pi pi-sort",
                                    iconPos: "right",
                                    class: "!p-0 !text-left !justify-start",
                                    onClick:
                                      F[5] || (F[5] = (q) => X("username")),
                                  }),
                                ]),
                                F[25] ||
                                  (F[25] = l(
                                    "th",
                                    {
                                      class:
                                        "text-left py-3 px-2 font-semibold text-surface-700 dark:text-surface-300",
                                    },
                                    "Email",
                                    -1,
                                  )),
                                F[26] ||
                                  (F[26] = l(
                                    "th",
                                    {
                                      class:
                                        "text-left py-3 px-2 font-semibold text-surface-700 dark:text-surface-300",
                                    },
                                    "Rang",
                                    -1,
                                  )),
                                F[27] ||
                                  (F[27] = l(
                                    "th",
                                    {
                                      class:
                                        "text-left py-3 px-2 font-semibold text-surface-700 dark:text-surface-300",
                                    },
                                    "Státusz",
                                    -1,
                                  )),
                                l("th", tU, [
                                  O(H(Ce), {
                                    label: "Regisztráció",
                                    text: "",
                                    icon: "pi pi-sort",
                                    iconPos: "right",
                                    class: "!p-0 !text-left !justify-start",
                                    onClick:
                                      F[6] ||
                                      (F[6] = (q) => X("registration_date")),
                                  }),
                                ]),
                                F[28] ||
                                  (F[28] = l(
                                    "th",
                                    {
                                      class:
                                        "text-left py-3 px-2 font-semibold text-surface-700 dark:text-surface-300",
                                    },
                                    "Műveletek",
                                    -1,
                                  )),
                              ]),
                            ]),
                            l("tbody", null, [
                              (E(!0),
                              R(
                                We,
                                null,
                                mt(
                                  e.value,
                                  (q) => (
                                    E(),
                                    R(
                                      "tr",
                                      {
                                        key: q.id,
                                        class:
                                          "border-b border-surface-100 dark:border-surface-800 hover:bg-surface-50 dark:hover:bg-surface-800 transition-colors",
                                      },
                                      [
                                        l("td", nU, [
                                          l("div", rU, [
                                            l(
                                              "img",
                                              {
                                                src:
                                                  q.avatar_url ||
                                                  j(q.minecraft_uuid),
                                                alt: q.username,
                                                class: "w-10 h-10 rounded-full",
                                              },
                                              null,
                                              8,
                                              iU,
                                            ),
                                            l("div", null, [
                                              l(
                                                "p",
                                                oU,
                                                z(q.display_name || q.username),
                                                1,
                                              ),
                                              l(
                                                "p",
                                                sU,
                                                "@" + z(q.username),
                                                1,
                                              ),
                                            ]),
                                          ]),
                                        ]),
                                        l("td", aU, [
                                          l("span", lU, z(q.email), 1),
                                        ]),
                                        l("td", cU, [
                                          l("div", uU, [
                                            q.currentGameRank &&
                                            q.currentGameRank !== "user"
                                              ? (E(),
                                                Be(
                                                  H(vt),
                                                  {
                                                    key: 0,
                                                    value: ge(
                                                      q.currentGameRank,
                                                    ),
                                                    severity: Oe(
                                                      q.currentGameRank,
                                                    ),
                                                  },
                                                  null,
                                                  8,
                                                  ["value", "severity"],
                                                ))
                                              : le("", !0),
                                            q.role && q.role !== "user"
                                              ? (E(),
                                                Be(
                                                  H(vt),
                                                  {
                                                    key: 1,
                                                    value: A(q.role),
                                                    severity: He(q.role),
                                                  },
                                                  null,
                                                  8,
                                                  ["value", "severity"],
                                                ))
                                              : le("", !0),
                                            (!q.currentGameRank ||
                                              q.currentGameRank === "user") &&
                                            (!q.role || q.role === "user")
                                              ? (E(),
                                                Be(H(vt), {
                                                  key: 2,
                                                  value: "Alapértelmezett",
                                                  severity: "secondary",
                                                }))
                                              : le("", !0),
                                          ]),
                                        ]),
                                        l("td", dU, [
                                          O(
                                            H(vt),
                                            {
                                              value: q.is_active
                                                ? "Aktív"
                                                : "Inaktív",
                                              severity: q.is_active
                                                ? "success"
                                                : "secondary",
                                            },
                                            null,
                                            8,
                                            ["value", "severity"],
                                          ),
                                        ]),
                                        l("td", fU, [
                                          l(
                                            "span",
                                            pU,
                                            z(me(q.registration_date)),
                                            1,
                                          ),
                                        ]),
                                        l("td", hU, [
                                          l("div", mU, [
                                            st(
                                              O(
                                                H(Ce),
                                                {
                                                  icon: "pi pi-eye",
                                                  size: "small",
                                                  text: "",
                                                  rounded: "",
                                                  severity: "secondary",
                                                  onClick: (ye) => ne(q),
                                                },
                                                null,
                                                8,
                                                ["onClick"],
                                              ),
                                              [[te, "Részletek"]],
                                            ),
                                            st(
                                              O(
                                                H(Ce),
                                                {
                                                  icon: "pi pi-crown",
                                                  size: "small",
                                                  text: "",
                                                  rounded: "",
                                                  severity: "primary",
                                                  onClick: (ye) => U(q),
                                                },
                                                null,
                                                8,
                                                ["onClick"],
                                              ),
                                              [[te, "Rang módosítása"]],
                                            ),
                                            st(
                                              O(
                                                H(Ce),
                                                {
                                                  icon: "pi pi-star",
                                                  size: "small",
                                                  text: "",
                                                  rounded: "",
                                                  severity: "warning",
                                                  onClick: (ye) => ie(q),
                                                },
                                                null,
                                                8,
                                                ["onClick"],
                                              ),
                                              [[te, "BÉ hozzáadása"]],
                                            ),
                                            st(
                                              O(
                                                H(Ce),
                                                {
                                                  icon: "pi pi-pencil",
                                                  size: "small",
                                                  text: "",
                                                  rounded: "",
                                                  severity: "info",
                                                  onClick: (ye) => J(),
                                                },
                                                null,
                                                8,
                                                ["onClick"],
                                              ),
                                              [[te, "Szerkesztés"]],
                                            ),
                                          ]),
                                        ]),
                                      ],
                                    )
                                  ),
                                ),
                                128,
                              )),
                            ]),
                          ]),
                          e.value.length === 0 && !n.value
                            ? (E(),
                              R("div", gU, [
                                F[29] ||
                                  (F[29] = l(
                                    "i",
                                    {
                                      class:
                                        "pi pi-users text-4xl text-surface-400 dark:text-surface-500 mb-4",
                                    },
                                    null,
                                    -1,
                                  )),
                                l(
                                  "p",
                                  vU,
                                  z(
                                    i.value
                                      ? "Nincsenek felhasználók a keresési feltételnek megfelelően"
                                      : "Nincsenek felhasználók",
                                  ),
                                  1,
                                ),
                              ]))
                            : le("", !0),
                        ]),
                        p.value > 0
                          ? (E(),
                            R("div", bU, [
                              l(
                                "span",
                                yU,
                                z(D.value + 1) +
                                  "-" +
                                  z(k.value) +
                                  " / " +
                                  z(p.value) +
                                  " felhasználó ",
                                1,
                              ),
                              l("div", xU, [
                                O(
                                  H(Ce),
                                  {
                                    icon: "pi pi-angle-left",
                                    disabled: d.value === 1,
                                    onClick: Z,
                                  },
                                  null,
                                  8,
                                  ["disabled"],
                                ),
                                l(
                                  "span",
                                  _U,
                                  z(d.value) + " / " + z(S.value),
                                  1,
                                ),
                                O(
                                  H(Ce),
                                  {
                                    icon: "pi pi-angle-right",
                                    disabled: d.value === S.value,
                                    onClick: G,
                                  },
                                  null,
                                  8,
                                  ["disabled"],
                                ),
                              ]),
                            ]))
                          : le("", !0),
                      ],
                      64,
                    )),
              O(
                ZB,
                {
                  user: _.value,
                  show: v.value,
                  onClose: F[7] || (F[7] = (q) => (v.value = !1)),
                  onChangeRank: V,
                  onBanUser: Ee,
                  onUnbanUser: Pe,
                  onSendMessage: be,
                },
                null,
                8,
                ["user", "show"],
              ),
              O(
                x7,
                {
                  user: _.value,
                  show: b.value,
                  onClose: F[8] || (F[8] = (q) => (b.value = !1)),
                  onRankChanged: re,
                },
                null,
                8,
                ["user", "show"],
              ),
              O(
                B7,
                {
                  show: g.value,
                  onClose: F[9] || (F[9] = (q) => (g.value = !1)),
                  onUserCreated: ce,
                },
                null,
                8,
                ["show"],
              ),
              O(
                H(on),
                {
                  visible: m.value,
                  "onUpdate:visible": F[14] || (F[14] = (q) => (m.value = q)),
                  modal: !0,
                  "show-header": !1,
                  breakpoints: { "960px": "75vw", "640px": "90vw" },
                  style: { width: "30rem" },
                  class: "shadow-sm rounded-2xl",
                  pt: { content: "!p-6" },
                },
                {
                  default: Ye(() => [
                    _.value
                      ? (E(),
                        R("div", wU, [
                          l("div", kU, [
                            l(
                              "h3",
                              SU,
                              " BÉ hozzáadása - " + z(_.value.username),
                              1,
                            ),
                            O(H(Ce), {
                              icon: "pi pi-times",
                              text: "",
                              rounded: "",
                              severity: "secondary",
                              class: "w-8 h-8",
                              onClick: F[10] || (F[10] = (q) => (m.value = !1)),
                            }),
                          ]),
                          l(
                            "form",
                            {
                              onSubmit: oi(oe, ["prevent"]),
                              class: "space-y-4",
                            },
                            [
                              l("div", CU, [
                                F[30] ||
                                  (F[30] = l(
                                    "label",
                                    {
                                      class:
                                        "font-medium text-surface-900 dark:text-surface-0",
                                    },
                                    " Mennyiség * ",
                                    -1,
                                  )),
                                O(
                                  H(vf),
                                  {
                                    modelValue: x.value.amount,
                                    "onUpdate:modelValue":
                                      F[11] ||
                                      (F[11] = (q) => (x.value.amount = q)),
                                    placeholder: "1000",
                                    class: "w-full",
                                    min: 1,
                                    max: 1e6,
                                  },
                                  null,
                                  8,
                                  ["modelValue"],
                                ),
                              ]),
                              l("div", MU, [
                                F[31] ||
                                  (F[31] = l(
                                    "label",
                                    {
                                      class:
                                        "font-medium text-surface-900 dark:text-surface-0",
                                    },
                                    " Indoklás * ",
                                    -1,
                                  )),
                                O(
                                  H(Lr),
                                  {
                                    modelValue: x.value.description,
                                    "onUpdate:modelValue":
                                      F[12] ||
                                      (F[12] = (q) =>
                                        (x.value.description = q)),
                                    placeholder:
                                      "Például: Kompenzáció a szerver leállás miatt",
                                    rows: "3",
                                    class: "w-full",
                                  },
                                  null,
                                  8,
                                  ["modelValue"],
                                ),
                              ]),
                              l("div", EU, [
                                O(H(Ce), {
                                  label: "Mégse",
                                  outlined: "",
                                  onClick:
                                    F[13] || (F[13] = (q) => (m.value = !1)),
                                }),
                                O(
                                  H(Ce),
                                  {
                                    type: "submit",
                                    label: "BÉ hozzáadása",
                                    disabled:
                                      !x.value.amount || !x.value.description,
                                    loading: y.value,
                                  },
                                  null,
                                  8,
                                  ["disabled", "loading"],
                                ),
                              ]),
                            ],
                            32,
                          ),
                        ]))
                      : le("", !0),
                  ]),
                  _: 1,
                },
                8,
                ["visible"],
              ),
            ])
          );
        }
      );
    },
  },
  AU = { class: "space-y-6" },
  PU = { class: "flex items-center justify-between" },
  RU = { class: "space-y-4" },
  LU = { class: "flex items-start justify-between" },
  DU = { class: "flex-1" },
  IU = { class: "flex items-center gap-3 mb-2" },
  OU = { class: "font-semibold text-surface-900 dark:text-surface-0" },
  $U = {
    class: "text-surface-600 dark:text-surface-300 text-sm mb-3 line-clamp-2",
  },
  zU = {
    class:
      "flex items-center gap-4 text-xs text-surface-500 dark:text-surface-400",
  },
  BU = { class: "flex items-center gap-2 ml-4" },
  UU = { key: 0, class: "text-center py-8" },
  FU = { class: "flex flex-col gap-6" },
  NU = { class: "flex justify-between items-center" },
  VU = { class: "text-lg font-semibold text-surface-900 dark:text-surface-0" },
  HU = { class: "space-y-2" },
  jU = { class: "grid grid-cols-2 gap-4" },
  GU = { class: "space-y-2" },
  WU = { class: "space-y-2" },
  KU = { class: "flex items-center gap-4" },
  XU = { class: "flex items-center gap-2" },
  YU = { class: "space-y-2" },
  qU = { class: "space-y-2" },
  ZU = { class: "space-y-2" },
  JU = { class: "space-y-2" },
  QU = { class: "flex justify-end gap-2 pt-4" },
  eF = {
    __name: "NewsManagement",
    setup(t) {
      const e = N(!1),
        n = N(null),
        r = N(!1),
        i = N({
          title: "",
          category: "",
          description: "",
          fullDescription: "",
          location: "",
          actionsText: "",
          isImportant: !1,
        }),
        o = N([
          {
            id: 1,
            title: "Új gyémánt lelőhely felfedezve!",
            category: "Felfedezés",
            description:
              "A 15-ös szintű területen jelentős gyémánt lelőhelyet találtak a bányászaink.",
            fullDescription:
              "A mai napok során hihetetlen felfedezést tettünk...",
            location: "Gyémánt Bánya #3 - 15-ös szint",
            isImportant: !0,
            status: "published",
            author: {
              name: "Kovács Péter",
              avatar:
                "https://primefaces.org/cdn/primevue/images/avatar/amyelsner.png",
            },
            createdAt: new Date(Date.now() - 1e3 * 60 * 30),
            views: 247,
            actions: [
              "Biztonsági felszerelés ellenőrzése",
              "Geológiai térképek frissítése",
            ],
          },
          {
            id: 2,
            title: "Redstone bánya karbantartás befejezve",
            category: "Karbantartás",
            description:
              "A #2-es redstone bánya karbantartási munkálatai sikeresen befejeződtek.",
            isImportant: !1,
            status: "published",
            author: {
              name: "Nagy Tamás",
              avatar:
                "https://primefaces.org/cdn/primevue/images/avatar/ionibowcher.png",
            },
            createdAt: new Date(Date.now() - 1e3 * 60 * 60 * 2),
            views: 156,
            actions: [],
          },
          {
            id: 3,
            title: "Biztonsági protokoll frissítés",
            category: "Biztonság",
            description: "Új biztonsági előírások lépnek életbe holnaptól.",
            isImportant: !0,
            status: "draft",
            author: {
              name: "Szabó Katalin",
              avatar:
                "https://primefaces.org/cdn/primevue/images/avatar/xuxuefeng.png",
            },
            createdAt: new Date(Date.now() - 1e3 * 60 * 60 * 5),
            views: 0,
            actions: [
              "Új védőfelszerelések kiosztása",
              "Biztonsági tréningek megszervezése",
            ],
          },
        ]),
        s = (b) => {},
        a = (b) => {
          ((n.value = b),
            (i.value = {
              title: b.title,
              category: b.category,
              description: b.description,
              fullDescription: b.fullDescription || "",
              location: b.location || "",
              actionsText: b.actions
                ? b.actions.join(`
`)
                : "",
              isImportant: b.isImportant,
            }),
            (e.value = !0));
        },
        c = (b) => {
          b.status = b.status === "published" ? "draft" : "published";
        },
        u = (b) => {
          if (confirm(`Biztosan törlöd a "${b.title}" hírt?`)) {
            const g = o.value.findIndex((m) => m.id === b.id);
            g !== -1 && o.value.splice(g, 1);
          }
        },
        d = async () => {
          r.value = !0;
          try {
            await new Promise((m) => setTimeout(m, 1e3));
            const b = i.value.actionsText
                ? i.value.actionsText
                    .split(
                      `
`,
                    )
                    .filter((m) => m.trim())
                : [],
              g = {
                title: i.value.title,
                category: i.value.category,
                description: i.value.description,
                fullDescription: i.value.fullDescription,
                location: i.value.location,
                isImportant: i.value.isImportant,
                actions: b,
                author: {
                  name: "Admin",
                  avatar:
                    "https://primefaces.org/cdn/primevue/images/avatar/amyelsner.png",
                },
                status: "draft",
                views: 0,
              };
            if (n.value) {
              const m = o.value.findIndex((_) => _.id === n.value.id);
              m !== -1 && (o.value[m] = { ...o.value[m], ...g });
            } else
              o.value.unshift({ id: Date.now(), ...g, createdAt: new Date() });
            f();
          } catch {
          } finally {
            r.value = !1;
          }
        },
        f = () => {
          ((e.value = !1),
            (n.value = null),
            (i.value = {
              title: "",
              category: "",
              description: "",
              fullDescription: "",
              location: "",
              actionsText: "",
              isImportant: !1,
            }));
        },
        p = (b) =>
          new Intl.DateTimeFormat("hu-HU", {
            year: "numeric",
            month: "short",
            day: "numeric",
            hour: "2-digit",
            minute: "2-digit",
          }).format(b),
        h = (b) =>
          ({
            Felfedezés: "warning",
            Karbantartás: "info",
            Biztonság: "danger",
            Teljesítmény: "success",
            Felszerelés: "secondary",
            Esemény: "help",
          })[b] || "secondary",
        v = (b) => (b === "published" ? "success" : "secondary");
      return (b, g) => {
        const m = Xn("tooltip");
        return (
          E(),
          R("div", AU, [
            l("div", PU, [
              g[9] ||
                (g[9] = l(
                  "h3",
                  {
                    class:
                      "text-lg font-semibold text-surface-900 dark:text-surface-0 flex items-center gap-2",
                  },
                  [
                    l("i", { class: "pi pi-megaphone text-primary-500" }),
                    Ke(" Hírek kezelése "),
                  ],
                  -1,
                )),
              O(H(Ce), {
                label: "Új hír",
                icon: "pi pi-plus",
                onClick: g[0] || (g[0] = (_) => (e.value = !0)),
              }),
            ]),
            l("div", RU, [
              (E(!0),
              R(
                We,
                null,
                mt(
                  o.value,
                  (_) => (
                    E(),
                    R(
                      "div",
                      {
                        key: _.id,
                        class:
                          "bg-surface-50 dark:bg-surface-800 p-4 rounded-lg border border-surface-200 dark:border-surface-700",
                      },
                      [
                        l("div", LU, [
                          l("div", DU, [
                            l("div", IU, [
                              l("h4", OU, z(_.title), 1),
                              O(
                                H(vt),
                                { value: _.category, severity: h(_.category) },
                                null,
                                8,
                                ["value", "severity"],
                              ),
                              _.isImportant
                                ? (E(),
                                  Be(H(vt), {
                                    key: 0,
                                    value: "Fontos",
                                    severity: "danger",
                                  }))
                                : le("", !0),
                              O(
                                H(vt),
                                { value: _.status, severity: v(_.status) },
                                null,
                                8,
                                ["value", "severity"],
                              ),
                            ]),
                            l("p", $U, z(_.description), 1),
                            l("div", zU, [
                              l("span", null, "Szerző: " + z(_.author.name), 1),
                              l(
                                "span",
                                null,
                                "Létrehozva: " + z(p(_.createdAt)),
                                1,
                              ),
                              l(
                                "span",
                                null,
                                "Megtekintések: " + z(_.views),
                                1,
                              ),
                            ]),
                          ]),
                          l("div", BU, [
                            st(
                              O(
                                H(Ce),
                                {
                                  icon: "pi pi-eye",
                                  size: "small",
                                  text: "",
                                  rounded: "",
                                  severity: "secondary",
                                  onClick: (y) => s(),
                                },
                                null,
                                8,
                                ["onClick"],
                              ),
                              [[m, "Előnézet"]],
                            ),
                            st(
                              O(
                                H(Ce),
                                {
                                  icon: "pi pi-pencil",
                                  size: "small",
                                  text: "",
                                  rounded: "",
                                  severity: "primary",
                                  onClick: (y) => a(_),
                                },
                                null,
                                8,
                                ["onClick"],
                              ),
                              [[m, "Szerkesztés"]],
                            ),
                            O(
                              H(Ce),
                              {
                                icon:
                                  _.status === "published"
                                    ? "pi pi-eye-slash"
                                    : "pi pi-eye",
                                size: "small",
                                text: "",
                                rounded: "",
                                severity:
                                  _.status === "published"
                                    ? "warning"
                                    : "success",
                                "v-tooltip":
                                  _.status === "published"
                                    ? "Elrejtés"
                                    : "Közzététel",
                                onClick: (y) => c(_),
                              },
                              null,
                              8,
                              ["icon", "severity", "v-tooltip", "onClick"],
                            ),
                            st(
                              O(
                                H(Ce),
                                {
                                  icon: "pi pi-trash",
                                  size: "small",
                                  text: "",
                                  rounded: "",
                                  severity: "danger",
                                  onClick: (y) => u(_),
                                },
                                null,
                                8,
                                ["onClick"],
                              ),
                              [[m, "Törlés"]],
                            ),
                          ]),
                        ]),
                      ],
                    )
                  ),
                ),
                128,
              )),
            ]),
            o.value.length === 0
              ? (E(),
                R(
                  "div",
                  UU,
                  g[10] ||
                    (g[10] = [
                      l(
                        "i",
                        {
                          class:
                            "pi pi-megaphone text-4xl text-surface-400 dark:text-surface-500 mb-4",
                        },
                        null,
                        -1,
                      ),
                      l(
                        "p",
                        { class: "text-surface-500 dark:text-surface-400" },
                        "Még nincsenek hírek",
                        -1,
                      ),
                    ]),
                ))
              : le("", !0),
            O(
              H(on),
              {
                visible: e.value,
                "onUpdate:visible": g[8] || (g[8] = (_) => (e.value = _)),
                modal: !0,
                "show-header": !1,
                breakpoints: { "960px": "75vw", "640px": "90vw" },
                style: { width: "50rem" },
                class: "shadow-sm rounded-2xl",
                pt: { content: "!p-6" },
              },
              {
                default: Ye(() => [
                  l("div", FU, [
                    l("div", NU, [
                      l(
                        "h3",
                        VU,
                        z(n.value ? "Hír szerkesztése" : "Új hír létrehozása"),
                        1,
                      ),
                      O(H(Ce), {
                        icon: "pi pi-times",
                        text: "",
                        rounded: "",
                        severity: "secondary",
                        class: "w-8 h-8",
                        onClick: f,
                      }),
                    ]),
                    l(
                      "form",
                      { onSubmit: oi(d, ["prevent"]), class: "space-y-4" },
                      [
                        l("div", HU, [
                          g[11] ||
                            (g[11] = l(
                              "label",
                              {
                                class:
                                  "font-medium text-surface-900 dark:text-surface-0",
                              },
                              "Cím *",
                              -1,
                            )),
                          O(
                            H(yt),
                            {
                              modelValue: i.value.title,
                              "onUpdate:modelValue":
                                g[1] || (g[1] = (_) => (i.value.title = _)),
                              placeholder: "Hír címe...",
                              class: "w-full",
                              required: "",
                            },
                            null,
                            8,
                            ["modelValue"],
                          ),
                        ]),
                        l("div", jU, [
                          l("div", GU, [
                            g[13] ||
                              (g[13] = l(
                                "label",
                                {
                                  class:
                                    "font-medium text-surface-900 dark:text-surface-0",
                                },
                                "Kategória *",
                                -1,
                              )),
                            st(
                              l(
                                "select",
                                {
                                  "onUpdate:modelValue":
                                    g[2] ||
                                    (g[2] = (_) => (i.value.category = _)),
                                  class:
                                    "w-full px-3 py-2 border border-surface-300 dark:border-surface-600 rounded-md bg-surface-0 dark:bg-surface-800 text-surface-900 dark:text-surface-0",
                                  required: "",
                                },
                                g[12] ||
                                  (g[12] = [
                                    l(
                                      "option",
                                      { value: "" },
                                      "Válassz kategóriát",
                                      -1,
                                    ),
                                    l(
                                      "option",
                                      { value: "Felfedezés" },
                                      "Felfedezés",
                                      -1,
                                    ),
                                    l(
                                      "option",
                                      { value: "Karbantartás" },
                                      "Karbantartás",
                                      -1,
                                    ),
                                    l(
                                      "option",
                                      { value: "Biztonság" },
                                      "Biztonság",
                                      -1,
                                    ),
                                    l(
                                      "option",
                                      { value: "Teljesítmény" },
                                      "Teljesítmény",
                                      -1,
                                    ),
                                    l(
                                      "option",
                                      { value: "Felszerelés" },
                                      "Felszerelés",
                                      -1,
                                    ),
                                    l(
                                      "option",
                                      { value: "Esemény" },
                                      "Esemény",
                                      -1,
                                    ),
                                  ]),
                                512,
                              ),
                              [[ei, i.value.category]],
                            ),
                          ]),
                          l("div", WU, [
                            g[15] ||
                              (g[15] = l(
                                "label",
                                {
                                  class:
                                    "font-medium text-surface-900 dark:text-surface-0",
                                },
                                "Beállítások",
                                -1,
                              )),
                            l("div", KU, [
                              l("div", XU, [
                                O(
                                  H(vr),
                                  {
                                    id: "isImportant",
                                    modelValue: i.value.isImportant,
                                    "onUpdate:modelValue":
                                      g[3] ||
                                      (g[3] = (_) => (i.value.isImportant = _)),
                                    binary: !0,
                                  },
                                  null,
                                  8,
                                  ["modelValue"],
                                ),
                                g[14] ||
                                  (g[14] = l(
                                    "label",
                                    {
                                      for: "isImportant",
                                      class:
                                        "text-surface-900 dark:text-surface-0",
                                    },
                                    "Fontos",
                                    -1,
                                  )),
                              ]),
                            ]),
                          ]),
                        ]),
                        l("div", YU, [
                          g[16] ||
                            (g[16] = l(
                              "label",
                              {
                                class:
                                  "font-medium text-surface-900 dark:text-surface-0",
                              },
                              "Rövid leírás *",
                              -1,
                            )),
                          O(
                            H(Lr),
                            {
                              modelValue: i.value.description,
                              "onUpdate:modelValue":
                                g[4] ||
                                (g[4] = (_) => (i.value.description = _)),
                              placeholder: "Rövid összefoglaló a hírről...",
                              rows: "3",
                              class: "w-full",
                              required: "",
                            },
                            null,
                            8,
                            ["modelValue"],
                          ),
                        ]),
                        l("div", qU, [
                          g[17] ||
                            (g[17] = l(
                              "label",
                              {
                                class:
                                  "font-medium text-surface-900 dark:text-surface-0",
                              },
                              "Teljes tartalom",
                              -1,
                            )),
                          O(
                            H(Lr),
                            {
                              modelValue: i.value.fullDescription,
                              "onUpdate:modelValue":
                                g[5] ||
                                (g[5] = (_) => (i.value.fullDescription = _)),
                              placeholder: "Részletes leírás...",
                              rows: "6",
                              class: "w-full",
                            },
                            null,
                            8,
                            ["modelValue"],
                          ),
                        ]),
                        l("div", ZU, [
                          g[18] ||
                            (g[18] = l(
                              "label",
                              {
                                class:
                                  "font-medium text-surface-900 dark:text-surface-0",
                              },
                              "Helyszín",
                              -1,
                            )),
                          O(
                            H(yt),
                            {
                              modelValue: i.value.location,
                              "onUpdate:modelValue":
                                g[6] || (g[6] = (_) => (i.value.location = _)),
                              placeholder: "Például: Gyémánt Bánya #3",
                              class: "w-full",
                            },
                            null,
                            8,
                            ["modelValue"],
                          ),
                        ]),
                        l("div", JU, [
                          g[19] ||
                            (g[19] = l(
                              "label",
                              {
                                class:
                                  "font-medium text-surface-900 dark:text-surface-0",
                              },
                              "Teendők (egy soronként)",
                              -1,
                            )),
                          O(
                            H(Lr),
                            {
                              modelValue: i.value.actionsText,
                              "onUpdate:modelValue":
                                g[7] ||
                                (g[7] = (_) => (i.value.actionsText = _)),
                              placeholder: `Teendő 1
Teendő 2
Teendő 3`,
                              rows: "4",
                              class: "w-full",
                            },
                            null,
                            8,
                            ["modelValue"],
                          ),
                          g[20] ||
                            (g[20] = l(
                              "small",
                              {
                                class: "text-surface-500 dark:text-surface-400",
                              },
                              " Minden sort külön teendőként kezel a rendszer ",
                              -1,
                            )),
                        ]),
                        l("div", QU, [
                          O(H(Ce), {
                            type: "button",
                            label: "Mégse",
                            severity: "secondary",
                            outlined: "",
                            onClick: f,
                          }),
                          O(
                            H(Ce),
                            {
                              type: "submit",
                              label: n.value ? "Mentés" : "Létrehozás",
                              loading: r.value,
                            },
                            null,
                            8,
                            ["label", "loading"],
                          ),
                        ]),
                      ],
                      32,
                    ),
                  ]),
                ]),
                _: 1,
              },
              8,
              ["visible"],
            ),
          ])
        );
      };
    },
  },
  tF = cr(eF, [["__scopeId", "data-v-46b5d329"]]),
  nF = { class: "space-y-6" },
  rF = { class: "flex items-center justify-between" },
  iF = { class: "flex items-center gap-3" },
  oF = { class: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4" },
  sF = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-4 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  aF = { class: "text-2xl font-bold text-surface-900 dark:text-surface-0" },
  lF = { class: "flex items-center gap-1 mt-1" },
  cF = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-4 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  uF = { class: "text-2xl font-bold text-surface-900 dark:text-surface-0" },
  dF = { class: "flex items-center gap-1 mt-1" },
  fF = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-4 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  pF = { class: "text-2xl font-bold text-surface-900 dark:text-surface-0" },
  hF = { class: "flex items-center gap-1 mt-1" },
  mF = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-4 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  gF = { class: "text-2xl font-bold text-surface-900 dark:text-surface-0" },
  vF = { class: "flex items-center gap-1 mt-1" },
  bF = { class: "grid grid-cols-1 lg:grid-cols-2 gap-6" },
  yF = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  xF = {
    class:
      "h-64 flex items-center justify-center bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  _F = { class: "text-center" },
  wF = { class: "text-surface-400 dark:text-surface-500" },
  kF = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  SF = {
    class:
      "h-64 flex items-center justify-center bg-surface-50 dark:bg-surface-800 rounded-lg",
  },
  CF = { class: "text-center" },
  MF = { class: "text-surface-400 dark:text-surface-500" },
  EF = { class: "grid grid-cols-1 lg:grid-cols-2 gap-6" },
  TF = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  AF = { class: "space-y-3" },
  PF = { class: "flex items-center gap-3" },
  RF = { class: "text-sm text-surface-500 dark:text-surface-400" },
  LF = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  DF = { class: "space-y-4" },
  IF = { class: "flex justify-between mb-2" },
  OF = { class: "font-semibold text-surface-900 dark:text-surface-0" },
  $F = { class: "w-full bg-surface-200 dark:bg-surface-700 rounded-full h-2" },
  zF = { class: "flex justify-between mb-2" },
  BF = { class: "font-semibold text-surface-900 dark:text-surface-0" },
  UF = { class: "w-full bg-surface-200 dark:bg-surface-700 rounded-full h-2" },
  FF = { class: "flex justify-between mb-2" },
  NF = { class: "font-semibold text-surface-900 dark:text-surface-0" },
  VF = { class: "w-full bg-surface-200 dark:bg-surface-700 rounded-full h-2" },
  HF = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  jF = { class: "space-y-3" },
  GF = { class: "flex items-center gap-3" },
  WF = { class: "font-medium text-surface-900 dark:text-surface-0" },
  KF = { class: "text-sm text-surface-500 dark:text-surface-400" },
  XF = { class: "text-xs text-surface-500 dark:text-surface-400" },
  YF = {
    __name: "AnalyticsDashboard",
    setup(t) {
      const e = N("30d"),
        n = N({
          activeUsers: 1247,
          activeUsersChange: 12.5,
          revenue: 8950,
          revenueChange: 8.3,
          avgPlaytime: 4.2,
          playtimeChange: -2.1,
          rankPurchases: 89,
          rankPurchasesChange: 15.7,
        }),
        r = N([
          {
            name: "VIP",
            icon: "star",
            color: "text-green-600",
            purchases: 234,
            percentage: 35,
          },
          {
            name: "ELIT",
            icon: "zap",
            color: "text-blue-600",
            purchases: 156,
            percentage: 23,
          },
          {
            name: "ZSÍRKIRÁLY",
            icon: "crown",
            color: "text-purple-600",
            purchases: 98,
            percentage: 15,
          },
          {
            name: "TITÁN",
            icon: "shield",
            color: "text-cyan-600",
            purchases: 67,
            percentage: 10,
          },
        ]),
        i = N({ newUsers: 35, returningUsers: 52, premiumUsers: 28 }),
        o = N([
          {
            id: 1,
            type: "purchase",
            description: "Nagy rang vásárlási hullám",
            details: "45 VIP rang vásárlás az elmúlt órában",
            timestamp: new Date(Date.now() - 1e3 * 60 * 30),
          },
          {
            id: 2,
            type: "user",
            description: "Rekord napi bejelentkezés",
            details: "1,847 egyedi felhasználó ma",
            timestamp: new Date(Date.now() - 1e3 * 60 * 60 * 2),
          },
          {
            id: 3,
            type: "server",
            description: "Szerver teljesítmény optimalizálás",
            details: "TPS javult 19.2-ről 19.8-ra",
            timestamp: new Date(Date.now() - 1e3 * 60 * 60 * 4),
          },
          {
            id: 4,
            type: "revenue",
            description: "Havi bevételi cél elérve",
            details: "105% teljesítmény a tervezett bevételhez képest",
            timestamp: new Date(Date.now() - 1e3 * 60 * 60 * 6),
          },
        ]),
        s = () => {
          n.value = {
            ...n.value,
            activeUsers: Math.floor(Math.random() * 2e3) + 1e3,
            revenue: Math.floor(Math.random() * 15e3) + 5e3,
          };
        },
        a = () => {
          const p = {
              period: e.value,
              metrics: n.value,
              topRanks: r.value,
              demographics: i.value,
              generatedAt: new Date(),
            },
            h = JSON.stringify(p, null, 2),
            v = new Blob([h], { type: "application/json" }),
            b = URL.createObjectURL(v),
            g = document.createElement("a");
          ((g.href = b),
            (g.download = `analytics-report-${e.value}-${new Date().toISOString().split("T")[0]}.json`),
            document.body.appendChild(g),
            g.click(),
            document.body.removeChild(g),
            URL.revokeObjectURL(b));
        },
        c = (p) =>
          ({
            star: "pi pi-star",
            zap: "pi pi-bolt",
            crown: "pi pi-crown",
            shield: "pi pi-shield",
            flame: "pi pi-sun",
            sword: "pi pi-send",
          })[p] || "pi pi-star",
        u = (p) =>
          ({
            purchase: "pi pi-shopping-cart",
            user: "pi pi-users",
            server: "pi pi-server",
            revenue: "pi pi-dollar",
          })[p] || "pi pi-circle",
        d = (p) => {
          const v = Math.floor((new Date() - p) / 1e3);
          return v < 60
            ? `${v} másodperce`
            : v < 3600
              ? `${Math.floor(v / 60)} perce`
              : v < 86400
                ? `${Math.floor(v / 3600)} órája`
                : `${Math.floor(v / 86400)} napja`;
        },
        f = () => {
          const p = () => (Math.random() - 0.5) * 10;
          n.value = {
            activeUsers: Math.max(
              1e3,
              n.value.activeUsers + Math.floor(p() * 10),
            ),
            activeUsersChange: p(),
            revenue: Math.max(5e3, n.value.revenue + Math.floor(p() * 100)),
            revenueChange: p(),
            avgPlaytime: Math.max(3, n.value.avgPlaytime + p() * 0.1),
            playtimeChange: p(),
            rankPurchases: Math.max(
              50,
              n.value.rankPurchases + Math.floor(p()),
            ),
            rankPurchasesChange: p(),
          };
        };
      return (
        $t(() => {
          setInterval(f, 5 * 60 * 1e3);
        }),
        (p, h) => (
          E(),
          R("div", nF, [
            l("div", rF, [
              h[2] ||
                (h[2] = l(
                  "h3",
                  {
                    class:
                      "text-lg font-semibold text-surface-900 dark:text-surface-0 flex items-center gap-2",
                  },
                  [
                    l("i", { class: "pi pi-chart-line text-primary-500" }),
                    Ke(" Analitikai jelentések "),
                  ],
                  -1,
                )),
              l("div", iF, [
                st(
                  l(
                    "select",
                    {
                      "onUpdate:modelValue":
                        h[0] || (h[0] = (v) => (e.value = v)),
                      class:
                        "px-3 py-2 border border-surface-300 dark:border-surface-600 rounded-md bg-surface-0 dark:bg-surface-800 text-surface-900 dark:text-surface-0",
                      onChange: s,
                    },
                    h[1] ||
                      (h[1] = [
                        l("option", { value: "7d" }, "Utolsó 7 nap", -1),
                        l("option", { value: "30d" }, "Utolsó 30 nap", -1),
                        l("option", { value: "90d" }, "Utolsó 90 nap", -1),
                        l("option", { value: "1y" }, "Utolsó év", -1),
                      ]),
                    544,
                  ),
                  [[ei, e.value]],
                ),
                O(H(Ce), {
                  label: "Jelentés exportálása",
                  icon: "pi pi-download",
                  severity: "secondary",
                  outlined: "",
                  onClick: a,
                }),
              ]),
            ]),
            l("div", oF, [
              l("div", sF, [
                h[4] ||
                  (h[4] = l(
                    "div",
                    { class: "flex items-center justify-between mb-2" },
                    [
                      l(
                        "h4",
                        {
                          class:
                            "font-medium text-surface-700 dark:text-surface-300",
                        },
                        "Aktív felhasználók",
                      ),
                      l("i", { class: "pi pi-users text-blue-500" }),
                    ],
                    -1,
                  )),
                l("p", aF, z(n.value.activeUsers.toLocaleString()), 1),
                l("div", lF, [
                  l(
                    "i",
                    {
                      class: Ie(
                        n.value.activeUsersChange >= 0
                          ? "pi pi-arrow-up text-green-500"
                          : "pi pi-arrow-down text-red-500",
                      ),
                    },
                    null,
                    2,
                  ),
                  l(
                    "span",
                    {
                      class: Ie([
                        n.value.activeUsersChange >= 0
                          ? "text-green-600"
                          : "text-red-600",
                        "text-sm font-medium",
                      ]),
                    },
                    z(Math.abs(n.value.activeUsersChange)) + "% ",
                    3,
                  ),
                  h[3] ||
                    (h[3] = l(
                      "span",
                      {
                        class: "text-sm text-surface-500 dark:text-surface-400",
                      },
                      "vs előző időszak",
                      -1,
                    )),
                ]),
              ]),
              l("div", cF, [
                h[6] ||
                  (h[6] = l(
                    "div",
                    { class: "flex items-center justify-between mb-2" },
                    [
                      l(
                        "h4",
                        {
                          class:
                            "font-medium text-surface-700 dark:text-surface-300",
                        },
                        "Bevételek",
                      ),
                      l("i", { class: "pi pi-dollar text-green-500" }),
                    ],
                    -1,
                  )),
                l("p", uF, "$" + z(n.value.revenue.toLocaleString()), 1),
                l("div", dF, [
                  l(
                    "i",
                    {
                      class: Ie(
                        n.value.revenueChange >= 0
                          ? "pi pi-arrow-up text-green-500"
                          : "pi pi-arrow-down text-red-500",
                      ),
                    },
                    null,
                    2,
                  ),
                  l(
                    "span",
                    {
                      class: Ie([
                        n.value.revenueChange >= 0
                          ? "text-green-600"
                          : "text-red-600",
                        "text-sm font-medium",
                      ]),
                    },
                    z(Math.abs(n.value.revenueChange)) + "% ",
                    3,
                  ),
                  h[5] ||
                    (h[5] = l(
                      "span",
                      {
                        class: "text-sm text-surface-500 dark:text-surface-400",
                      },
                      "vs előző időszak",
                      -1,
                    )),
                ]),
              ]),
              l("div", fF, [
                h[8] ||
                  (h[8] = l(
                    "div",
                    { class: "flex items-center justify-between mb-2" },
                    [
                      l(
                        "h4",
                        {
                          class:
                            "font-medium text-surface-700 dark:text-surface-300",
                        },
                        "Átlag játékidő",
                      ),
                      l("i", { class: "pi pi-clock text-orange-500" }),
                    ],
                    -1,
                  )),
                l("p", pF, z(n.value.avgPlaytime) + "h", 1),
                l("div", hF, [
                  l(
                    "i",
                    {
                      class: Ie(
                        n.value.playtimeChange >= 0
                          ? "pi pi-arrow-up text-green-500"
                          : "pi pi-arrow-down text-red-500",
                      ),
                    },
                    null,
                    2,
                  ),
                  l(
                    "span",
                    {
                      class: Ie([
                        n.value.playtimeChange >= 0
                          ? "text-green-600"
                          : "text-red-600",
                        "text-sm font-medium",
                      ]),
                    },
                    z(Math.abs(n.value.playtimeChange)) + "% ",
                    3,
                  ),
                  h[7] ||
                    (h[7] = l(
                      "span",
                      {
                        class: "text-sm text-surface-500 dark:text-surface-400",
                      },
                      "vs előző időszak",
                      -1,
                    )),
                ]),
              ]),
              l("div", mF, [
                h[10] ||
                  (h[10] = l(
                    "div",
                    { class: "flex items-center justify-between mb-2" },
                    [
                      l(
                        "h4",
                        {
                          class:
                            "font-medium text-surface-700 dark:text-surface-300",
                        },
                        "Rang vásárlások",
                      ),
                      l("i", { class: "pi pi-crown text-purple-500" }),
                    ],
                    -1,
                  )),
                l("p", gF, z(n.value.rankPurchases), 1),
                l("div", vF, [
                  l(
                    "i",
                    {
                      class: Ie(
                        n.value.rankPurchasesChange >= 0
                          ? "pi pi-arrow-up text-green-500"
                          : "pi pi-arrow-down text-red-500",
                      ),
                    },
                    null,
                    2,
                  ),
                  l(
                    "span",
                    {
                      class: Ie([
                        n.value.rankPurchasesChange >= 0
                          ? "text-green-600"
                          : "text-red-600",
                        "text-sm font-medium",
                      ]),
                    },
                    z(Math.abs(n.value.rankPurchasesChange)) + "% ",
                    3,
                  ),
                  h[9] ||
                    (h[9] = l(
                      "span",
                      {
                        class: "text-sm text-surface-500 dark:text-surface-400",
                      },
                      "vs előző időszak",
                      -1,
                    )),
                ]),
              ]),
            ]),
            l("div", bF, [
              l("div", yF, [
                h[13] ||
                  (h[13] = l(
                    "h4",
                    {
                      class:
                        "font-semibold text-surface-900 dark:text-surface-0 mb-4",
                    },
                    "Felhasználói aktivitás",
                    -1,
                  )),
                l("div", xF, [
                  l("div", _F, [
                    h[11] ||
                      (h[11] = l(
                        "i",
                        {
                          class:
                            "pi pi-chart-line text-4xl text-surface-400 dark:text-surface-500 mb-2",
                        },
                        null,
                        -1,
                      )),
                    h[12] ||
                      (h[12] = l(
                        "p",
                        { class: "text-surface-500 dark:text-surface-400" },
                        "Grafikon placeholder",
                        -1,
                      )),
                    l("small", wF, z(e.value) + " adatok", 1),
                  ]),
                ]),
              ]),
              l("div", kF, [
                h[16] ||
                  (h[16] = l(
                    "h4",
                    {
                      class:
                        "font-semibold text-surface-900 dark:text-surface-0 mb-4",
                    },
                    "Bevétel alakulása",
                    -1,
                  )),
                l("div", SF, [
                  l("div", CF, [
                    h[14] ||
                      (h[14] = l(
                        "i",
                        {
                          class:
                            "pi pi-chart-bar text-4xl text-surface-400 dark:text-surface-500 mb-2",
                        },
                        null,
                        -1,
                      )),
                    h[15] ||
                      (h[15] = l(
                        "p",
                        { class: "text-surface-500 dark:text-surface-400" },
                        "Bevétel grafikon",
                        -1,
                      )),
                    l("small", MF, z(e.value) + " adatok", 1),
                  ]),
                ]),
              ]),
            ]),
            l("div", EF, [
              l("div", TF, [
                h[17] ||
                  (h[17] = l(
                    "h4",
                    {
                      class:
                        "font-semibold text-surface-900 dark:text-surface-0 mb-4",
                    },
                    "Legnépszerűbb rangok",
                    -1,
                  )),
                l("div", AF, [
                  (E(!0),
                  R(
                    We,
                    null,
                    mt(
                      r.value,
                      (v) => (
                        E(),
                        R(
                          "div",
                          {
                            key: v.name,
                            class:
                              "flex items-center justify-between p-3 bg-surface-50 dark:bg-surface-800 rounded-lg",
                          },
                          [
                            l("div", PF, [
                              l(
                                "i",
                                {
                                  class: Ie([[c(v.icon), v.color], "text-xl"]),
                                },
                                null,
                                2,
                              ),
                              l("div", null, [
                                l(
                                  "p",
                                  { class: Ie(["font-semibold", v.color]) },
                                  z(v.name),
                                  3,
                                ),
                                l("p", RF, z(v.purchases) + " vásárlás", 1),
                              ]),
                            ]),
                            O(
                              H(vt),
                              { value: `${v.percentage}%`, severity: "info" },
                              null,
                              8,
                              ["value"],
                            ),
                          ],
                        )
                      ),
                    ),
                    128,
                  )),
                ]),
              ]),
              l("div", LF, [
                h[21] ||
                  (h[21] = l(
                    "h4",
                    {
                      class:
                        "font-semibold text-surface-900 dark:text-surface-0 mb-4",
                    },
                    "Felhasználói demográfia",
                    -1,
                  )),
                l("div", DF, [
                  l("div", null, [
                    l("div", IF, [
                      h[18] ||
                        (h[18] = l(
                          "span",
                          { class: "text-surface-700 dark:text-surface-300" },
                          "Új felhasználók",
                          -1,
                        )),
                      l("span", OF, z(i.value.newUsers) + "%", 1),
                    ]),
                    l("div", $F, [
                      l(
                        "div",
                        {
                          class: "bg-blue-500 h-2 rounded-full",
                          style: ir({ width: i.value.newUsers + "%" }),
                        },
                        null,
                        4,
                      ),
                    ]),
                  ]),
                  l("div", null, [
                    l("div", zF, [
                      h[19] ||
                        (h[19] = l(
                          "span",
                          { class: "text-surface-700 dark:text-surface-300" },
                          "Visszatérő felhasználók",
                          -1,
                        )),
                      l("span", BF, z(i.value.returningUsers) + "%", 1),
                    ]),
                    l("div", UF, [
                      l(
                        "div",
                        {
                          class: "bg-green-500 h-2 rounded-full",
                          style: ir({ width: i.value.returningUsers + "%" }),
                        },
                        null,
                        4,
                      ),
                    ]),
                  ]),
                  l("div", null, [
                    l("div", FF, [
                      h[20] ||
                        (h[20] = l(
                          "span",
                          { class: "text-surface-700 dark:text-surface-300" },
                          "Premium felhasználók",
                          -1,
                        )),
                      l("span", NF, z(i.value.premiumUsers) + "%", 1),
                    ]),
                    l("div", VF, [
                      l(
                        "div",
                        {
                          class: "bg-purple-500 h-2 rounded-full",
                          style: ir({ width: i.value.premiumUsers + "%" }),
                        },
                        null,
                        4,
                      ),
                    ]),
                  ]),
                ]),
              ]),
            ]),
            l("div", HF, [
              h[22] ||
                (h[22] = l(
                  "h4",
                  {
                    class:
                      "font-semibold text-surface-900 dark:text-surface-0 mb-4",
                  },
                  "Legutóbbi események",
                  -1,
                )),
              l("div", jF, [
                (E(!0),
                R(
                  We,
                  null,
                  mt(
                    o.value,
                    (v) => (
                      E(),
                      R(
                        "div",
                        {
                          key: v.id,
                          class:
                            "flex items-center justify-between p-3 bg-surface-50 dark:bg-surface-800 rounded-lg",
                        },
                        [
                          l("div", GF, [
                            l(
                              "i",
                              {
                                class: Ie([
                                  u(v.type),
                                  "text-surface-500 dark:text-surface-400",
                                ]),
                              },
                              null,
                              2,
                            ),
                            l("div", null, [
                              l("p", WF, z(v.description), 1),
                              l("p", KF, z(v.details), 1),
                            ]),
                          ]),
                          l("span", XF, z(d(v.timestamp)), 1),
                        ],
                      )
                    ),
                  ),
                  128,
                )),
              ]),
            ]),
          ])
        )
      );
    },
  },
  qF = { class: "space-y-6" },
  ZF = { class: "flex items-center justify-between" },
  JF = { class: "flex items-center gap-3" },
  QF = { class: "relative" },
  eN = { class: "grid grid-cols-1 md:grid-cols-4 gap-4" },
  tN = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-4 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  nN = { class: "flex items-center gap-3" },
  rN = { class: "text-xl font-bold text-surface-900 dark:text-surface-0" },
  iN = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-4 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  oN = { class: "flex items-center gap-3" },
  sN = { class: "text-xl font-bold text-surface-900 dark:text-surface-0" },
  aN = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-4 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  lN = { class: "flex items-center gap-3" },
  cN = { class: "text-xl font-bold text-surface-900 dark:text-surface-0" },
  uN = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-4 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  dN = { class: "flex items-center gap-3" },
  fN = { class: "text-xl font-bold text-surface-900 dark:text-surface-0" },
  pN = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-4 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  hN = { class: "flex flex-wrap gap-4 items-center" },
  mN = { class: "flex items-center gap-2" },
  gN = { class: "flex items-center gap-2" },
  vN = { class: "flex items-center gap-2" },
  bN = {
    class:
      "bg-surface-0 dark:bg-surface-900 rounded-lg border border-surface-200 dark:border-surface-700 overflow-hidden",
  },
  yN = { class: "overflow-x-auto" },
  xN = { class: "w-full" },
  _N = { class: "bg-surface-50 dark:bg-surface-800" },
  wN = {
    class:
      "text-left py-3 px-4 font-semibold text-surface-700 dark:text-surface-300",
  },
  kN = {
    class:
      "text-left py-3 px-4 font-semibold text-surface-700 dark:text-surface-300",
  },
  SN = {
    class:
      "text-left py-3 px-4 font-semibold text-surface-700 dark:text-surface-300",
  },
  CN = { class: "py-3 px-4" },
  MN = { class: "font-mono text-sm text-surface-900 dark:text-surface-0" },
  EN = { class: "py-3 px-4" },
  TN = { class: "flex items-center gap-2" },
  AN = ["src", "alt"],
  PN = { class: "font-medium text-surface-900 dark:text-surface-0" },
  RN = { class: "py-3 px-4" },
  LN = { class: "flex items-center gap-2" },
  DN = { class: "text-surface-700 dark:text-surface-300" },
  IN = { class: "py-3 px-4" },
  ON = { class: "font-semibold text-surface-900 dark:text-surface-0" },
  $N = { class: "py-3 px-4" },
  zN = { class: "py-3 px-4" },
  BN = { class: "text-surface-700 dark:text-surface-300" },
  UN = { class: "py-3 px-4" },
  FN = { class: "flex items-center gap-1" },
  NN = { key: 0, class: "text-center py-8" },
  VN = {
    class:
      "flex justify-between items-center p-4 border-t border-surface-200 dark:border-surface-700",
  },
  HN = { class: "text-sm text-surface-500 dark:text-surface-400" },
  jN = { class: "flex gap-2" },
  GN = { class: "px-3 py-2 text-surface-700 dark:text-surface-300 text-sm" },
  WN = { key: 0, class: "flex flex-col gap-4" },
  KN = { class: "flex justify-between items-center" },
  XN = { class: "space-y-4" },
  YN = { class: "grid grid-cols-2 gap-4 text-sm" },
  qN = { class: "font-mono ml-2" },
  ZN = { class: "font-semibold ml-2" },
  JN = { class: "ml-2" },
  QN = { key: 0, class: "p-3 bg-surface-50 dark:bg-surface-800 rounded-lg" },
  eV = {
    class: "text-sm text-surface-700 dark:text-surface-300 whitespace-pre-wrap",
  },
  tV = {
    __name: "TransactionManagement",
    setup(t) {
      const e = N(""),
        n = N(""),
        r = N(""),
        i = N(""),
        o = N("date"),
        s = N(-1),
        a = N(1),
        c = N(15),
        u = N(!1),
        d = N(null),
        f = N({ successful: 1247, pending: 23, failed: 45, totalValue: 89540 }),
        p = N([
          {
            id: "TXN-2024-001234",
            user: {
              username: "Steve_Master",
              avatar:
                "https://primefaces.org/cdn/primevue/images/avatar/amyelsner.png",
            },
            type: "rank_purchase",
            amount: 20,
            status: "completed",
            date: new Date(Date.now() - 1e3 * 60 * 30),
            details: {
              rank: "VIP",
              duration: "30 days",
              paymentMethod: "PayPal",
            },
          },
          {
            id: "TXN-2024-001235",
            user: {
              username: "CreeperKing",
              avatar:
                "https://primefaces.org/cdn/primevue/images/avatar/ionibowcher.png",
            },
            type: "coin_purchase",
            amount: 15,
            status: "pending",
            date: new Date(Date.now() - 1e3 * 60 * 45),
            details: { coins: 3e3, paymentMethod: "Credit Card" },
          },
          {
            id: "TXN-2024-001236",
            user: {
              username: "DiamondMiner",
              avatar:
                "https://primefaces.org/cdn/primevue/images/avatar/xuxuefeng.png",
            },
            type: "extra_purchase",
            amount: 10,
            status: "completed",
            date: new Date(Date.now() - 1e3 * 60 * 60 * 2),
            details: { extra: "HD Skin Upload", paymentMethod: "PayPal" },
          },
          {
            id: "TXN-2024-001237",
            user: {
              username: "BuilderPro",
              avatar:
                "https://primefaces.org/cdn/primevue/images/avatar/asiyajavayant.png",
            },
            type: "rank_purchase",
            amount: 50,
            status: "failed",
            date: new Date(Date.now() - 1e3 * 60 * 60 * 3),
            details: {
              rank: "TITÁN",
              duration: "30 days",
              paymentMethod: "Credit Card",
              errorCode: "INSUFFICIENT_FUNDS",
            },
          },
          {
            id: "TXN-2024-001238",
            user: {
              username: "RedstoneExpert",
              avatar:
                "https://primefaces.org/cdn/primevue/images/avatar/onyamalimba.png",
            },
            type: "refund",
            amount: -25,
            status: "completed",
            date: new Date(Date.now() - 1e3 * 60 * 60 * 4),
            details: {
              originalTransaction: "TXN-2024-001200",
              reason: "Customer request",
            },
          },
        ]),
        h = Xe(() => {
          let G = p.value;
          if (
            (e.value &&
              (G = G.filter(
                (U) =>
                  U.id.toLowerCase().includes(e.value.toLowerCase()) ||
                  U.user.username.toLowerCase().includes(e.value.toLowerCase()),
              )),
            n.value && (G = G.filter((U) => U.status === n.value)),
            r.value && (G = G.filter((U) => U.type === r.value)),
            i.value)
          ) {
            const U = new Date();
            G = G.filter((ie) => {
              const J = new Date(ie.date);
              switch (i.value) {
                case "today":
                  return J.toDateString() === U.toDateString();
                case "week":
                  const V = new Date(U.getTime() - 7 * 24 * 60 * 60 * 1e3);
                  return J >= V;
                case "month":
                  return (
                    J.getMonth() === U.getMonth() &&
                    J.getFullYear() === U.getFullYear()
                  );
                case "quarter":
                  const re = Math.floor(U.getMonth() / 3);
                  return (
                    Math.floor(J.getMonth() / 3) === re &&
                    J.getFullYear() === U.getFullYear()
                  );
                default:
                  return !0;
              }
            });
          }
          G.sort((U, ie) => {
            let J = U[o.value],
              V = ie[o.value];
            return (
              o.value === "date" &&
                ((J = new Date(J).getTime()), (V = new Date(V).getTime())),
              J < V ? -1 * s.value : J > V ? 1 * s.value : 0
            );
          });
          const $ = (a.value - 1) * c.value,
            ne = $ + c.value;
          return G.slice($, ne);
        }),
        v = Xe(() => p.value.length),
        b = Xe(() => Math.ceil(v.value / c.value)),
        g = Xe(() => (a.value - 1) * c.value),
        m = Xe(() => Math.min(g.value + c.value, v.value)),
        _ = (G) => {
          o.value === G ? (s.value *= -1) : ((o.value = G), (s.value = 1));
        },
        y = () => {
          ((e.value = ""),
            (n.value = ""),
            (r.value = ""),
            (i.value = ""),
            (a.value = 1));
        },
        x = () => {
          a.value > 1 && a.value--;
        },
        C = () => {
          a.value < b.value && a.value++;
        },
        w = (G) => {
          ((d.value = G), (u.value = !0));
        },
        S = (G) => {
          G.status = "completed";
        },
        D = (G) => {
          confirm(`Biztosan visszatéríted a ${G.id} tranzakciót?`) &&
            (G.status = "refunded");
        },
        k = () => {
          const G = h.value.map((J) => ({
              id: J.id,
              username: J.user.username,
              type: I(J.type),
              amount: J.amount,
              status: W(J.status),
              date: Z(J.date),
            })),
            $ = [
              Object.keys(G[0]).join(","),
              ...G.map((J) => Object.values(J).join(",")),
            ].join(`
`),
            ne = new Blob([$], { type: "text/csv" }),
            U = URL.createObjectURL(ne),
            ie = document.createElement("a");
          ((ie.href = U),
            (ie.download = `transactions-${new Date().toISOString().split("T")[0]}.csv`),
            document.body.appendChild(ie),
            ie.click(),
            document.body.removeChild(ie),
            URL.revokeObjectURL(U));
        },
        P = (G) =>
          ({
            rank_purchase: "pi pi-crown",
            coin_purchase: "pi pi-star",
            extra_purchase: "pi pi-gift",
            refund: "pi pi-undo",
          })[G] || "pi pi-circle",
        I = (G) =>
          ({
            rank_purchase: "Rang vásárlás",
            coin_purchase: "BÉ vásárlás",
            extra_purchase: "Extra vásárlás",
            refund: "Visszatérítés",
          })[G] || G,
        W = (G) =>
          ({
            completed: "Sikeres",
            pending: "Függőben",
            failed: "Sikertelen",
            refunded: "Visszatérítve",
          })[G] || G,
        X = (G) =>
          ({
            completed: "success",
            pending: "warning",
            failed: "danger",
            refunded: "info",
          })[G] || "secondary",
        Z = (G) =>
          new Intl.DateTimeFormat("hu-HU", {
            year: "numeric",
            month: "short",
            day: "numeric",
            hour: "2-digit",
            minute: "2-digit",
          }).format(new Date(G));
      return (G, $) => {
        const ne = Xn("tooltip");
        return (
          E(),
          R("div", qF, [
            l("div", ZF, [
              $[10] ||
                ($[10] = l(
                  "h3",
                  {
                    class:
                      "text-lg font-semibold text-surface-900 dark:text-surface-0 flex items-center gap-2",
                  },
                  [
                    l("i", { class: "pi pi-credit-card text-primary-500" }),
                    Ke(" Tranzakció kezelés "),
                  ],
                  -1,
                )),
              l("div", JF, [
                l("div", QF, [
                  $[9] ||
                    ($[9] = l(
                      "i",
                      {
                        class:
                          "pi pi-search absolute left-3 top-1/2 transform -translate-y-1/2 text-surface-400",
                      },
                      null,
                      -1,
                    )),
                  O(
                    H(yt),
                    {
                      modelValue: e.value,
                      "onUpdate:modelValue":
                        $[0] || ($[0] = (U) => (e.value = U)),
                      placeholder: "Keresés tranzakció ID vagy felhasználó...",
                      class: "pl-10 w-64",
                    },
                    null,
                    8,
                    ["modelValue"],
                  ),
                ]),
                O(H(Ce), {
                  label: "Exportálás",
                  icon: "pi pi-download",
                  severity: "secondary",
                  outlined: "",
                  onClick: k,
                }),
              ]),
            ]),
            l("div", eN, [
              l("div", tN, [
                l("div", nN, [
                  $[12] ||
                    ($[12] = l(
                      "div",
                      {
                        class:
                          "p-2 bg-green-100 dark:bg-green-500/20 rounded-lg",
                      },
                      [
                        l("i", {
                          class:
                            "pi pi-check-circle text-xl text-green-600 dark:text-green-300",
                        }),
                      ],
                      -1,
                    )),
                  l("div", null, [
                    $[11] ||
                      ($[11] = l(
                        "p",
                        {
                          class:
                            "text-xs text-surface-500 dark:text-surface-400",
                        },
                        "Sikeres",
                        -1,
                      )),
                    l("p", rN, z(f.value.successful), 1),
                  ]),
                ]),
              ]),
              l("div", iN, [
                l("div", oN, [
                  $[14] ||
                    ($[14] = l(
                      "div",
                      {
                        class:
                          "p-2 bg-yellow-100 dark:bg-yellow-500/20 rounded-lg",
                      },
                      [
                        l("i", {
                          class:
                            "pi pi-clock text-xl text-yellow-600 dark:text-yellow-300",
                        }),
                      ],
                      -1,
                    )),
                  l("div", null, [
                    $[13] ||
                      ($[13] = l(
                        "p",
                        {
                          class:
                            "text-xs text-surface-500 dark:text-surface-400",
                        },
                        "Függőben",
                        -1,
                      )),
                    l("p", sN, z(f.value.pending), 1),
                  ]),
                ]),
              ]),
              l("div", aN, [
                l("div", lN, [
                  $[16] ||
                    ($[16] = l(
                      "div",
                      { class: "p-2 bg-red-100 dark:bg-red-500/20 rounded-lg" },
                      [
                        l("i", {
                          class:
                            "pi pi-times-circle text-xl text-red-600 dark:text-red-300",
                        }),
                      ],
                      -1,
                    )),
                  l("div", null, [
                    $[15] ||
                      ($[15] = l(
                        "p",
                        {
                          class:
                            "text-xs text-surface-500 dark:text-surface-400",
                        },
                        "Sikertelen",
                        -1,
                      )),
                    l("p", cN, z(f.value.failed), 1),
                  ]),
                ]),
              ]),
              l("div", uN, [
                l("div", dN, [
                  $[18] ||
                    ($[18] = l(
                      "div",
                      {
                        class: "p-2 bg-blue-100 dark:bg-blue-500/20 rounded-lg",
                      },
                      [
                        l("i", {
                          class:
                            "pi pi-dollar text-xl text-blue-600 dark:text-blue-300",
                        }),
                      ],
                      -1,
                    )),
                  l("div", null, [
                    $[17] ||
                      ($[17] = l(
                        "p",
                        {
                          class:
                            "text-xs text-surface-500 dark:text-surface-400",
                        },
                        "Összérték",
                        -1,
                      )),
                    l("p", fN, "$" + z(f.value.totalValue.toLocaleString()), 1),
                  ]),
                ]),
              ]),
            ]),
            l("div", pN, [
              l("div", hN, [
                l("div", mN, [
                  $[20] ||
                    ($[20] = l(
                      "label",
                      {
                        class:
                          "text-sm font-medium text-surface-700 dark:text-surface-300",
                      },
                      "Státusz:",
                      -1,
                    )),
                  st(
                    l(
                      "select",
                      {
                        "onUpdate:modelValue":
                          $[1] || ($[1] = (U) => (n.value = U)),
                        class:
                          "px-3 py-1 border border-surface-300 dark:border-surface-600 rounded-md bg-surface-0 dark:bg-surface-800 text-surface-900 dark:text-surface-0",
                      },
                      $[19] ||
                        ($[19] = [
                          Jo(
                            '<option value="">Összes</option><option value="completed">Sikeres</option><option value="pending">Függőben</option><option value="failed">Sikertelen</option><option value="refunded">Visszatérítve</option>',
                            5,
                          ),
                        ]),
                      512,
                    ),
                    [[ei, n.value]],
                  ),
                ]),
                l("div", gN, [
                  $[22] ||
                    ($[22] = l(
                      "label",
                      {
                        class:
                          "text-sm font-medium text-surface-700 dark:text-surface-300",
                      },
                      "Típus:",
                      -1,
                    )),
                  st(
                    l(
                      "select",
                      {
                        "onUpdate:modelValue":
                          $[2] || ($[2] = (U) => (r.value = U)),
                        class:
                          "px-3 py-1 border border-surface-300 dark:border-surface-600 rounded-md bg-surface-0 dark:bg-surface-800 text-surface-900 dark:text-surface-0",
                      },
                      $[21] ||
                        ($[21] = [
                          Jo(
                            '<option value="">Összes</option><option value="rank_purchase">Rang vásárlás</option><option value="coin_purchase">BÉ vásárlás</option><option value="extra_purchase">Extra vásárlás</option><option value="refund">Visszatérítés</option>',
                            5,
                          ),
                        ]),
                      512,
                    ),
                    [[ei, r.value]],
                  ),
                ]),
                l("div", vN, [
                  $[24] ||
                    ($[24] = l(
                      "label",
                      {
                        class:
                          "text-sm font-medium text-surface-700 dark:text-surface-300",
                      },
                      "Dátum:",
                      -1,
                    )),
                  st(
                    l(
                      "select",
                      {
                        "onUpdate:modelValue":
                          $[3] || ($[3] = (U) => (i.value = U)),
                        class:
                          "px-3 py-1 border border-surface-300 dark:border-surface-600 rounded-md bg-surface-0 dark:bg-surface-800 text-surface-900 dark:text-surface-0",
                      },
                      $[23] ||
                        ($[23] = [
                          Jo(
                            '<option value="">Összes idő</option><option value="today">Ma</option><option value="week">Ezen a héten</option><option value="month">Ebben a hónapban</option><option value="quarter">Ebben a negyedévben</option>',
                            5,
                          ),
                        ]),
                      512,
                    ),
                    [[ei, i.value]],
                  ),
                ]),
                O(H(Ce), {
                  label: "Szűrők törlése",
                  icon: "pi pi-filter-slash",
                  text: "",
                  onClick: y,
                }),
              ]),
            ]),
            l("div", bN, [
              l("div", yN, [
                l("table", xN, [
                  l("thead", _N, [
                    l("tr", null, [
                      l("th", wN, [
                        O(H(Ce), {
                          label: "Tranzakció ID",
                          text: "",
                          icon: "pi pi-sort",
                          iconPos: "right",
                          class: "!p-0 !text-left !justify-start",
                          onClick: $[4] || ($[4] = (U) => _("id")),
                        }),
                      ]),
                      $[25] ||
                        ($[25] = l(
                          "th",
                          {
                            class:
                              "text-left py-3 px-4 font-semibold text-surface-700 dark:text-surface-300",
                          },
                          "Felhasználó",
                          -1,
                        )),
                      $[26] ||
                        ($[26] = l(
                          "th",
                          {
                            class:
                              "text-left py-3 px-4 font-semibold text-surface-700 dark:text-surface-300",
                          },
                          "Típus",
                          -1,
                        )),
                      l("th", kN, [
                        O(H(Ce), {
                          label: "Összeg",
                          text: "",
                          icon: "pi pi-sort",
                          iconPos: "right",
                          class: "!p-0 !text-left !justify-start",
                          onClick: $[5] || ($[5] = (U) => _("amount")),
                        }),
                      ]),
                      $[27] ||
                        ($[27] = l(
                          "th",
                          {
                            class:
                              "text-left py-3 px-4 font-semibold text-surface-700 dark:text-surface-300",
                          },
                          "Státusz",
                          -1,
                        )),
                      l("th", SN, [
                        O(H(Ce), {
                          label: "Dátum",
                          text: "",
                          icon: "pi pi-sort",
                          iconPos: "right",
                          class: "!p-0 !text-left !justify-start",
                          onClick: $[6] || ($[6] = (U) => _("date")),
                        }),
                      ]),
                      $[28] ||
                        ($[28] = l(
                          "th",
                          {
                            class:
                              "text-left py-3 px-4 font-semibold text-surface-700 dark:text-surface-300",
                          },
                          "Műveletek",
                          -1,
                        )),
                    ]),
                  ]),
                  l("tbody", null, [
                    (E(!0),
                    R(
                      We,
                      null,
                      mt(
                        h.value,
                        (U) => (
                          E(),
                          R(
                            "tr",
                            {
                              key: U.id,
                              class:
                                "border-b border-surface-100 dark:border-surface-800 hover:bg-surface-50 dark:hover:bg-surface-800 transition-colors",
                            },
                            [
                              l("td", CN, [l("span", MN, z(U.id), 1)]),
                              l("td", EN, [
                                l("div", TN, [
                                  l(
                                    "img",
                                    {
                                      src: U.user.avatar,
                                      alt: U.user.username,
                                      class: "w-8 h-8 rounded-full",
                                    },
                                    null,
                                    8,
                                    AN,
                                  ),
                                  l("span", PN, z(U.user.username), 1),
                                ]),
                              ]),
                              l("td", RN, [
                                l("div", LN, [
                                  l(
                                    "i",
                                    {
                                      class: Ie([
                                        P(U.type),
                                        "text-surface-500 dark:text-surface-400",
                                      ]),
                                    },
                                    null,
                                    2,
                                  ),
                                  l("span", DN, z(I(U.type)), 1),
                                ]),
                              ]),
                              l("td", IN, [
                                l("span", ON, " $" + z(U.amount.toFixed(2)), 1),
                              ]),
                              l("td", $N, [
                                O(
                                  H(vt),
                                  { value: W(U.status), severity: X(U.status) },
                                  null,
                                  8,
                                  ["value", "severity"],
                                ),
                              ]),
                              l("td", zN, [l("span", BN, z(Z(U.date)), 1)]),
                              l("td", UN, [
                                l("div", FN, [
                                  st(
                                    O(
                                      H(Ce),
                                      {
                                        icon: "pi pi-eye",
                                        size: "small",
                                        text: "",
                                        rounded: "",
                                        severity: "secondary",
                                        onClick: (ie) => w(U),
                                      },
                                      null,
                                      8,
                                      ["onClick"],
                                    ),
                                    [[ne, "Részletek"]],
                                  ),
                                  U.status === "pending"
                                    ? st(
                                        (E(),
                                        Be(
                                          H(Ce),
                                          {
                                            key: 0,
                                            icon: "pi pi-check",
                                            size: "small",
                                            text: "",
                                            rounded: "",
                                            severity: "success",
                                            onClick: (ie) => S(U),
                                          },
                                          null,
                                          8,
                                          ["onClick"],
                                        )),
                                        [[ne, "Jóváhagyás"]],
                                      )
                                    : le("", !0),
                                  U.status === "completed"
                                    ? st(
                                        (E(),
                                        Be(
                                          H(Ce),
                                          {
                                            key: 1,
                                            icon: "pi pi-undo",
                                            size: "small",
                                            text: "",
                                            rounded: "",
                                            severity: "warning",
                                            onClick: (ie) => D(U),
                                          },
                                          null,
                                          8,
                                          ["onClick"],
                                        )),
                                        [[ne, "Visszatérítés"]],
                                      )
                                    : le("", !0),
                                ]),
                              ]),
                            ],
                          )
                        ),
                      ),
                      128,
                    )),
                  ]),
                ]),
                h.value.length === 0
                  ? (E(),
                    R(
                      "div",
                      NN,
                      $[29] ||
                        ($[29] = [
                          l(
                            "i",
                            {
                              class:
                                "pi pi-credit-card text-4xl text-surface-400 dark:text-surface-500 mb-4",
                            },
                            null,
                            -1,
                          ),
                          l(
                            "p",
                            { class: "text-surface-500 dark:text-surface-400" },
                            "Nincsenek tranzakciók a szűrési feltételeknek megfelelően",
                            -1,
                          ),
                        ]),
                    ))
                  : le("", !0),
              ]),
              l("div", VN, [
                l(
                  "span",
                  HN,
                  z(g.value + 1) +
                    "-" +
                    z(m.value) +
                    " / " +
                    z(v.value) +
                    " tranzakció ",
                  1,
                ),
                l("div", jN, [
                  O(
                    H(Ce),
                    {
                      icon: "pi pi-angle-left",
                      size: "small",
                      disabled: a.value === 1,
                      onClick: x,
                    },
                    null,
                    8,
                    ["disabled"],
                  ),
                  l("span", GN, z(a.value) + " / " + z(b.value), 1),
                  O(
                    H(Ce),
                    {
                      icon: "pi pi-angle-right",
                      size: "small",
                      disabled: a.value === b.value,
                      onClick: C,
                    },
                    null,
                    8,
                    ["disabled"],
                  ),
                ]),
              ]),
            ]),
            O(
              H(on),
              {
                visible: u.value,
                "onUpdate:visible": $[8] || ($[8] = (U) => (u.value = U)),
                modal: !0,
                "show-header": !1,
                breakpoints: { "960px": "75vw", "640px": "90vw" },
                style: { width: "40rem" },
                class: "shadow-sm rounded-2xl",
                pt: { content: "!p-6" },
              },
              {
                default: Ye(() => [
                  d.value
                    ? (E(),
                      R("div", WN, [
                        l("div", KN, [
                          $[30] ||
                            ($[30] = l(
                              "h3",
                              {
                                class:
                                  "text-lg font-semibold text-surface-900 dark:text-surface-0",
                              },
                              " Tranzakció részletei ",
                              -1,
                            )),
                          O(H(Ce), {
                            icon: "pi pi-times",
                            text: "",
                            rounded: "",
                            severity: "secondary",
                            class: "w-8 h-8",
                            onClick: $[7] || ($[7] = (U) => (u.value = !1)),
                          }),
                        ]),
                        l("div", XN, [
                          l("div", YN, [
                            l("div", null, [
                              $[31] ||
                                ($[31] = l(
                                  "span",
                                  {
                                    class:
                                      "text-surface-600 dark:text-surface-300",
                                  },
                                  "Tranzakció ID:",
                                  -1,
                                )),
                              l("span", qN, z(d.value.id), 1),
                            ]),
                            l("div", null, [
                              $[32] ||
                                ($[32] = l(
                                  "span",
                                  {
                                    class:
                                      "text-surface-600 dark:text-surface-300",
                                  },
                                  "Státusz:",
                                  -1,
                                )),
                              O(
                                H(vt),
                                {
                                  value: W(d.value.status),
                                  severity: X(d.value.status),
                                  class: "ml-2",
                                },
                                null,
                                8,
                                ["value", "severity"],
                              ),
                            ]),
                            l("div", null, [
                              $[33] ||
                                ($[33] = l(
                                  "span",
                                  {
                                    class:
                                      "text-surface-600 dark:text-surface-300",
                                  },
                                  "Összeg:",
                                  -1,
                                )),
                              l(
                                "span",
                                ZN,
                                "$" + z(d.value.amount.toFixed(2)),
                                1,
                              ),
                            ]),
                            l("div", null, [
                              $[34] ||
                                ($[34] = l(
                                  "span",
                                  {
                                    class:
                                      "text-surface-600 dark:text-surface-300",
                                  },
                                  "Dátum:",
                                  -1,
                                )),
                              l("span", JN, z(Z(d.value.date)), 1),
                            ]),
                          ]),
                          d.value.details
                            ? (E(),
                              R("div", QN, [
                                $[35] ||
                                  ($[35] = l(
                                    "h4",
                                    {
                                      class:
                                        "font-medium text-surface-900 dark:text-surface-0 mb-2",
                                    },
                                    "Részletek",
                                    -1,
                                  )),
                                l(
                                  "pre",
                                  eV,
                                  z(JSON.stringify(d.value.details, null, 2)),
                                  1,
                                ),
                              ]))
                            : le("", !0),
                        ]),
                      ]))
                    : le("", !0),
                ]),
                _: 1,
              },
              8,
              ["visible"],
            ),
          ])
        );
      };
    },
  },
  nV = { class: "space-y-6" },
  rV = { class: "flex justify-between items-center" },
  iV = { class: "flex items-center gap-3" },
  oV = { class: "text-right" },
  sV = { class: "text-sm font-medium text-surface-900 dark:text-surface-0" },
  aV = { class: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" },
  lV = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  cV = { class: "flex items-center gap-4" },
  uV = { class: "text-2xl font-bold text-surface-900 dark:text-surface-0" },
  dV = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  fV = { class: "flex items-center gap-4" },
  pV = { class: "text-2xl font-bold text-surface-900 dark:text-surface-0" },
  hV = {
    class:
      "bg-surface-0 dark:bg-surface-900 p-6 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  mV = { class: "flex items-center gap-4" },
  gV = { class: "text-2xl font-bold text-surface-900 dark:text-surface-0" },
  vV = {
    class:
      "bg-surface-0 dark:bg-surface-900 rounded-lg border border-surface-200 dark:border-surface-700",
  },
  bV = { class: "flex border-b border-surface-200 dark:border-surface-700" },
  yV = ["onClick"],
  xV = { class: "p-6" },
  _V = { key: 0 },
  wV = { key: 1 },
  kV = { key: 2 },
  SV = { key: 3 },
  CV = {
    __name: "AdminDashboard",
    setup(t) {
      const e = N("users"),
        n = N(""),
        r = N([
          { key: "users", label: "Felhasználók", icon: "pi pi-users" },
          { key: "news", label: "Hírek", icon: "pi pi-megaphone" },
          { key: "analytics", label: "Analitika", icon: "pi pi-chart-line" },
          {
            key: "transactions",
            label: "Tranzakciók",
            icon: "pi pi-credit-card",
          },
        ]),
        i = N({ totalUsers: 1247, monthlyRevenue: 8950, pendingReports: 12 }),
        o = () => {
          n.value = new Intl.DateTimeFormat("hu-HU", {
            hour: "2-digit",
            minute: "2-digit",
            second: "2-digit",
          }).format(new Date());
        },
        s = () => {
          ((i.value = {
            totalUsers: i.value.totalUsers + Math.floor(Math.random() * 3),
            monthlyRevenue:
              i.value.monthlyRevenue + Math.floor(Math.random() * 100),
            pendingReports: Math.max(
              0,
              i.value.pendingReports + Math.floor(Math.random() * 3) - 1,
            ),
          }),
            o());
        };
      return (
        $t(() => {
          (o(), setInterval(s, 3e4), setInterval(o, 1e3));
        }),
        (a, c) => (
          E(),
          R("div", nV, [
            l("div", rV, [
              c[1] ||
                (c[1] = l(
                  "h2",
                  {
                    class:
                      "text-2xl font-bold text-surface-900 dark:text-surface-0",
                  },
                  "Admin Vezérlőpult",
                  -1,
                )),
              l("div", iV, [
                O(H(vt), { value: "Admin", severity: "danger" }),
                l("div", oV, [
                  c[0] ||
                    (c[0] = l(
                      "p",
                      {
                        class: "text-sm text-surface-500 dark:text-surface-400",
                      },
                      "Utolsó frissítés",
                      -1,
                    )),
                  l("p", sV, z(n.value), 1),
                ]),
              ]),
            ]),
            l("div", aV, [
              l("div", lV, [
                l("div", cV, [
                  c[3] ||
                    (c[3] = l(
                      "div",
                      {
                        class: "p-3 bg-blue-100 dark:bg-blue-500/20 rounded-lg",
                      },
                      [
                        l("i", {
                          class:
                            "pi pi-users text-2xl text-blue-600 dark:text-blue-300",
                        }),
                      ],
                      -1,
                    )),
                  l("div", null, [
                    c[2] ||
                      (c[2] = l(
                        "p",
                        {
                          class:
                            "text-sm text-surface-500 dark:text-surface-400",
                        },
                        "Összes felhasználó",
                        -1,
                      )),
                    l("p", uV, z(i.value.totalUsers), 1),
                  ]),
                ]),
              ]),
              l("div", dV, [
                l("div", fV, [
                  c[5] ||
                    (c[5] = l(
                      "div",
                      {
                        class:
                          "p-3 bg-green-100 dark:bg-green-500/20 rounded-lg",
                      },
                      [
                        l("i", {
                          class:
                            "pi pi-dollar text-2xl text-green-600 dark:text-green-300",
                        }),
                      ],
                      -1,
                    )),
                  l("div", null, [
                    c[4] ||
                      (c[4] = l(
                        "p",
                        {
                          class:
                            "text-sm text-surface-500 dark:text-surface-400",
                        },
                        "Havi bevétel",
                        -1,
                      )),
                    l(
                      "p",
                      pV,
                      "$" + z(i.value.monthlyRevenue.toLocaleString()),
                      1,
                    ),
                  ]),
                ]),
              ]),
              l("div", hV, [
                l("div", mV, [
                  c[7] ||
                    (c[7] = l(
                      "div",
                      {
                        class:
                          "p-3 bg-orange-100 dark:bg-orange-500/20 rounded-lg",
                      },
                      [
                        l("i", {
                          class:
                            "pi pi-exclamation-triangle text-2xl text-orange-600 dark:text-orange-300",
                        }),
                      ],
                      -1,
                    )),
                  l("div", null, [
                    c[6] ||
                      (c[6] = l(
                        "p",
                        {
                          class:
                            "text-sm text-surface-500 dark:text-surface-400",
                        },
                        "Függő jelentések",
                        -1,
                      )),
                    l("p", gV, z(i.value.pendingReports), 1),
                  ]),
                ]),
              ]),
            ]),
            l("div", vV, [
              l("div", bV, [
                (E(!0),
                R(
                  We,
                  null,
                  mt(
                    r.value,
                    (u) => (
                      E(),
                      R(
                        "button",
                        {
                          key: u.key,
                          onClick: (d) => (e.value = u.key),
                          class: Ie([
                            "px-6 py-4 font-medium transition-colors",
                            e.value === u.key
                              ? "text-primary-500 border-b-2 border-primary-500"
                              : "text-surface-600 dark:text-surface-300 hover:text-surface-900 dark:hover:text-surface-0",
                          ]),
                        },
                        [
                          l("i", { class: Ie([u.icon, "mr-2"]) }, null, 2),
                          Ke(" " + z(u.label), 1),
                        ],
                        10,
                        yV,
                      )
                    ),
                  ),
                  128,
                )),
              ]),
              l("div", xV, [
                e.value === "users" ? (E(), R("div", _V, [O(TU)])) : le("", !0),
                e.value === "news" ? (E(), R("div", wV, [O(tF)])) : le("", !0),
                e.value === "analytics"
                  ? (E(), R("div", kV, [O(YF)]))
                  : le("", !0),
                e.value === "transactions"
                  ? (E(), R("div", SV, [O(tV)]))
                  : le("", !0),
              ]),
            ]),
          ])
        )
      );
    },
  },
  MV = [
    {
      path: "/login",
      name: "Login",
      component: Iz,
      meta: { layout: "none", requiresAuth: !1, title: "Bejelentkezés" },
    },
    {
      path: "/register",
      name: "Registration",
      component: $z,
      meta: { layout: "none", requiresAuth: !1, title: "Regisztráció" },
    },
    {
      path: "/",
      name: "Dashboard",
      component: sM,
      meta: { requiresAuth: !0, title: "Vezérlőpult" },
    },
    {
      path: "/ranks",
      name: "RankManagement",
      component: vE,
      meta: { requiresAuth: !0, title: "Rangkezelés" },
    },
    {
      path: "/extras",
      name: "Extras",
      component: bT,
      meta: { requiresAuth: !0, title: "Extrák" },
    },
    {
      path: "/lucky-wheel",
      name: "LuckyWheel",
      component: M3,
      meta: { requiresAuth: !0, title: "Szerencsekerék" },
    },
    {
      path: "/messages",
      name: "Messages",
      component: n5,
      meta: { requiresAuth: !0, title: "Jelentések" },
    },
    {
      path: "/skin-upload",
      name: "SkinUpload",
      component: OI,
      meta: { requiresAuth: !0, title: "Skin Feltöltés" },
    },
    {
      path: "/profile",
      name: "Profile",
      component: Y9,
      meta: { requiresAuth: !0, title: "Profil beállítások" },
    },
    {
      path: "/admin",
      name: "AdminDashboard",
      component: CV,
      meta: { requiresAuth: !0, requiresAdmin: !0, title: "Admin Vezérlőpult" },
    },
    {
      path: "/reset-password/:token",
      name: "ResetPassword",
      component: () => sh(() => import("./ResetPassword-CoQ4lA9f.js"), []),
      meta: {
        layout: "none",
        requiresAuth: !1,
        title: "Jelszó visszaállítása",
      },
    },
    {
      path: "/:pathMatch(.*)*",
      name: "NotFound",
      component: () => sh(() => import("./NotFound-DY4mXtCh.js"), []),
      meta: { layout: "none", requiresAuth: !1, title: "Oldal nem található" },
    },
  ],
  Dc = Gx({
    history: xx(),
    routes: MV,
    scrollBehavior(t, e, n) {
      return n || { top: 0 };
    },
  });
let Al = !1,
  Bo = null;
Dc.beforeEach(async (t, e, n) => {
  const { isLoggedIn: r, isAdmin: i, restoreSession: o, isLoading: s } = Va();
  if (
    ((document.title = t.meta.title
      ? `${t.meta.title} - MesterMC Bányaközpont`
      : "MesterMC Bányaközpont"),
    !r.value && !Al && !s.value)
  ) {
    ((Al = !0),
      Bo ||
        (Bo = o()
          .then((a) => a)
          .catch((a) => !1)
          .finally(() => {
            ((Al = !1), (Bo = null));
          })));
    try {
      if (!(await Bo) && t.meta.requiresAuth)
        return n({ name: "Login", query: { redirect: t.fullPath } });
    } catch {
      if (t.meta.requiresAuth)
        return n({ name: "Login", query: { redirect: t.fullPath } });
    }
  }
  if ((Al || s.value) && t.meta.requiresAuth && Bo)
    try {
      if (!(await Bo))
        return n({ name: "Login", query: { redirect: t.fullPath } });
    } catch {
      return n({ name: "Login", query: { redirect: t.fullPath } });
    }
  if (t.meta.requiresAuth && !r.value)
    return n({ name: "Login", query: { redirect: t.fullPath } });
  if (t.meta.requiresAdmin && !i.value)
    return n({
      name: "Dashboard",
      query: { error: "Nincs jogosultságod ehhez az oldalhoz" },
    });
  if ((t.name === "Login" || t.name === "Registration") && r.value) {
    const a = t.query.redirect || "/";
    return n(a);
  }
  if (
    t.name === "ResetPassword" &&
    (!t.params.token || t.params.token.length < 10)
  )
    return n({
      name: "Login",
      query: { error: "Érvénytelen visszaállítási token" },
    });
  if (t.name === "VerifyEmail" && t.params.token && t.params.token.length < 10)
    return n({
      name: "Login",
      query: { error: "Érvénytelen megerősítési token" },
    });
  n();
});
Dc.afterEach((t, e) => {
  typeof gtag < "u" &&
    gtag("config", "GA_TRACKING_ID", {
      page_title: t.meta.title,
      page_location: window.location.href,
    });
  const n = document.querySelector(".page-loading");
  n && n.remove();
});
Dc.onError((t) => {
  t.message.includes("Loading chunk")
    ? window.location.reload()
    : t.message.includes("Failed to fetch");
});
function Da(t) {
  "@babel/helpers - typeof";
  return (
    (Da =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    Da(t)
  );
}
function Jm(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    (e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r));
  }
  return n;
}
function Pl(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? Jm(Object(n), !0).forEach(function (r) {
          EV(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
        : Jm(Object(n)).forEach(function (r) {
            Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
          });
  }
  return t;
}
function EV(t, e, n) {
  return (
    (e = TV(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function TV(t) {
  var e = AV(t, "string");
  return Da(e) == "symbol" ? e : e + "";
}
function AV(t, e) {
  if (Da(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (Da(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var PV = {
    ripple: !1,
    inputStyle: null,
    inputVariant: null,
    locale: {
      startsWith: "Starts with",
      contains: "Contains",
      notContains: "Not contains",
      endsWith: "Ends with",
      equals: "Equals",
      notEquals: "Not equals",
      noFilter: "No Filter",
      lt: "Less than",
      lte: "Less than or equal to",
      gt: "Greater than",
      gte: "Greater than or equal to",
      dateIs: "Date is",
      dateIsNot: "Date is not",
      dateBefore: "Date is before",
      dateAfter: "Date is after",
      clear: "Clear",
      apply: "Apply",
      matchAll: "Match All",
      matchAny: "Match Any",
      addRule: "Add Rule",
      removeRule: "Remove Rule",
      accept: "Yes",
      reject: "No",
      choose: "Choose",
      upload: "Upload",
      cancel: "Cancel",
      completed: "Completed",
      pending: "Pending",
      fileSizeTypes: ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
      dayNames: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
      ],
      dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
      monthNames: [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December",
      ],
      monthNamesShort: [
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec",
      ],
      chooseYear: "Choose Year",
      chooseMonth: "Choose Month",
      chooseDate: "Choose Date",
      prevDecade: "Previous Decade",
      nextDecade: "Next Decade",
      prevYear: "Previous Year",
      nextYear: "Next Year",
      prevMonth: "Previous Month",
      nextMonth: "Next Month",
      prevHour: "Previous Hour",
      nextHour: "Next Hour",
      prevMinute: "Previous Minute",
      nextMinute: "Next Minute",
      prevSecond: "Previous Second",
      nextSecond: "Next Second",
      am: "am",
      pm: "pm",
      today: "Today",
      weekHeader: "Wk",
      firstDayOfWeek: 0,
      showMonthAfterYear: !1,
      dateFormat: "mm/dd/yy",
      weak: "Weak",
      medium: "Medium",
      strong: "Strong",
      passwordPrompt: "Enter a password",
      emptyFilterMessage: "No results found",
      searchMessage: "{0} results are available",
      selectionMessage: "{0} items selected",
      emptySelectionMessage: "No selected item",
      emptySearchMessage: "No results found",
      fileChosenMessage: "{0} files",
      noFileChosenMessage: "No file chosen",
      emptyMessage: "No available options",
      aria: {
        trueLabel: "True",
        falseLabel: "False",
        nullLabel: "Not Selected",
        star: "1 star",
        stars: "{star} stars",
        selectAll: "All items selected",
        unselectAll: "All items unselected",
        close: "Close",
        previous: "Previous",
        next: "Next",
        navigation: "Navigation",
        scrollTop: "Scroll Top",
        moveTop: "Move Top",
        moveUp: "Move Up",
        moveDown: "Move Down",
        moveBottom: "Move Bottom",
        moveToTarget: "Move to Target",
        moveToSource: "Move to Source",
        moveAllToTarget: "Move All to Target",
        moveAllToSource: "Move All to Source",
        pageLabel: "Page {page}",
        firstPageLabel: "First Page",
        lastPageLabel: "Last Page",
        nextPageLabel: "Next Page",
        prevPageLabel: "Previous Page",
        rowsPerPageLabel: "Rows per page",
        jumpToPageDropdownLabel: "Jump to Page Dropdown",
        jumpToPageInputLabel: "Jump to Page Input",
        selectRow: "Row Selected",
        unselectRow: "Row Unselected",
        expandRow: "Row Expanded",
        collapseRow: "Row Collapsed",
        showFilterMenu: "Show Filter Menu",
        hideFilterMenu: "Hide Filter Menu",
        filterOperator: "Filter Operator",
        filterConstraint: "Filter Constraint",
        editRow: "Row Edit",
        saveEdit: "Save Edit",
        cancelEdit: "Cancel Edit",
        listView: "List View",
        gridView: "Grid View",
        slide: "Slide",
        slideNumber: "{slideNumber}",
        zoomImage: "Zoom Image",
        zoomIn: "Zoom In",
        zoomOut: "Zoom Out",
        rotateRight: "Rotate Right",
        rotateLeft: "Rotate Left",
        listLabel: "Option List",
      },
    },
    filterMatchModeOptions: {
      text: [
        hn.STARTS_WITH,
        hn.CONTAINS,
        hn.NOT_CONTAINS,
        hn.ENDS_WITH,
        hn.EQUALS,
        hn.NOT_EQUALS,
      ],
      numeric: [
        hn.EQUALS,
        hn.NOT_EQUALS,
        hn.LESS_THAN,
        hn.LESS_THAN_OR_EQUAL_TO,
        hn.GREATER_THAN,
        hn.GREATER_THAN_OR_EQUAL_TO,
      ],
      date: [hn.DATE_IS, hn.DATE_IS_NOT, hn.DATE_BEFORE, hn.DATE_AFTER],
    },
    zIndex: { modal: 1100, overlay: 1e3, menu: 1e3, tooltip: 1100 },
    theme: void 0,
    unstyled: !1,
    pt: void 0,
    ptOptions: { mergeSections: !0, mergeProps: !1 },
    csp: { nonce: void 0 },
  },
  RV = Symbol();
function LV(t, e) {
  var n = { config: za(e) };
  return (
    (t.config.globalProperties.$primevue = n),
    t.provide(RV, n),
    DV(),
    IV(t, n),
    n
  );
}
var Go = [];
function DV() {
  (an.clear(),
    Go.forEach(function (t) {
      return t == null ? void 0 : t();
    }),
    (Go = []));
}
function IV(t, e) {
  var n = N(!1),
    r = function () {
      var u;
      if (
        ((u = e.config) === null || u === void 0 ? void 0 : u.theme) !==
          "none" &&
        !Ct.isStyleNameLoaded("common")
      ) {
        var d,
          f,
          p =
            ((d = ot.getCommonTheme) === null || d === void 0
              ? void 0
              : d.call(ot)) || {},
          h = p.primitive,
          v = p.semantic,
          b = p.global,
          g = p.style,
          m = {
            nonce:
              (f = e.config) === null ||
              f === void 0 ||
              (f = f.csp) === null ||
              f === void 0
                ? void 0
                : f.nonce,
          };
        (ot.load(
          h == null ? void 0 : h.css,
          Pl({ name: "primitive-variables" }, m),
        ),
          ot.load(
            v == null ? void 0 : v.css,
            Pl({ name: "semantic-variables" }, m),
          ),
          ot.load(
            b == null ? void 0 : b.css,
            Pl({ name: "global-variables" }, m),
          ),
          ot.loadStyle(Pl({ name: "global-style" }, m), g),
          Ct.setLoadedStyleName("common"));
      }
    };
  an.on("theme:change", function (c) {
    n.value ||
      ((t.config.globalProperties.$primevue.config.theme = c), (n.value = !0));
  });
  var i = Ft(
      e.config,
      function (c, u) {
        Ci.emit("config:change", { newValue: c, oldValue: u });
      },
      { immediate: !0, deep: !0 },
    ),
    o = Ft(
      function () {
        return e.config.ripple;
      },
      function (c, u) {
        Ci.emit("config:ripple:change", { newValue: c, oldValue: u });
      },
      { immediate: !0, deep: !0 },
    ),
    s = Ft(
      function () {
        return e.config.theme;
      },
      function (c, u) {
        (n.value || Ct.setTheme(c),
          e.config.unstyled || r(),
          (n.value = !1),
          Ci.emit("config:theme:change", { newValue: c, oldValue: u }));
      },
      { immediate: !0, deep: !1 },
    ),
    a = Ft(
      function () {
        return e.config.unstyled;
      },
      function (c, u) {
        (!c && e.config.theme && r(),
          Ci.emit("config:unstyled:change", { newValue: c, oldValue: u }));
      },
      { immediate: !0, deep: !0 },
    );
  (Go.push(i), Go.push(o), Go.push(s), Go.push(a));
}
var OV = {
    install: function (e, n) {
      var r = h_(PV, n);
      LV(e, r);
    },
  },
  $V = { transitionDuration: "{transition.duration}" },
  zV = { borderWidth: "0 0 1px 0", borderColor: "{content.border.color}" },
  BV = {
    color: "{text.muted.color}",
    hoverColor: "{text.color}",
    activeColor: "{text.color}",
    padding: "1.125rem",
    fontWeight: "600",
    borderRadius: "0",
    borderWidth: "0",
    borderColor: "{content.border.color}",
    background: "{content.background}",
    hoverBackground: "{content.background}",
    activeBackground: "{content.background}",
    activeHoverBackground: "{content.background}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "-1px",
      shadow: "{focus.ring.shadow}",
    },
    toggleIcon: {
      color: "{text.muted.color}",
      hoverColor: "{text.color}",
      activeColor: "{text.color}",
      activeHoverColor: "{text.color}",
    },
    first: { topBorderRadius: "{content.border.radius}", borderWidth: "0" },
    last: {
      bottomBorderRadius: "{content.border.radius}",
      activeBottomBorderRadius: "0",
    },
  },
  UV = {
    borderWidth: "0",
    borderColor: "{content.border.color}",
    background: "{content.background}",
    color: "{text.color}",
    padding: "0 1.125rem 1.125rem 1.125rem",
  },
  FV = { root: $V, panel: zV, header: BV, content: UV },
  NV = {
    background: "{form.field.background}",
    disabledBackground: "{form.field.disabled.background}",
    filledBackground: "{form.field.filled.background}",
    filledHoverBackground: "{form.field.filled.hover.background}",
    filledFocusBackground: "{form.field.filled.focus.background}",
    borderColor: "{form.field.border.color}",
    hoverBorderColor: "{form.field.hover.border.color}",
    focusBorderColor: "{form.field.focus.border.color}",
    invalidBorderColor: "{form.field.invalid.border.color}",
    color: "{form.field.color}",
    disabledColor: "{form.field.disabled.color}",
    placeholderColor: "{form.field.placeholder.color}",
    invalidPlaceholderColor: "{form.field.invalid.placeholder.color}",
    shadow: "{form.field.shadow}",
    paddingX: "{form.field.padding.x}",
    paddingY: "{form.field.padding.y}",
    borderRadius: "{form.field.border.radius}",
    focusRing: {
      width: "{form.field.focus.ring.width}",
      style: "{form.field.focus.ring.style}",
      color: "{form.field.focus.ring.color}",
      offset: "{form.field.focus.ring.offset}",
      shadow: "{form.field.focus.ring.shadow}",
    },
    transitionDuration: "{form.field.transition.duration}",
  },
  VV = {
    background: "{overlay.select.background}",
    borderColor: "{overlay.select.border.color}",
    borderRadius: "{overlay.select.border.radius}",
    color: "{overlay.select.color}",
    shadow: "{overlay.select.shadow}",
  },
  HV = { padding: "{list.padding}", gap: "{list.gap}" },
  jV = {
    focusBackground: "{list.option.focus.background}",
    selectedBackground: "{list.option.selected.background}",
    selectedFocusBackground: "{list.option.selected.focus.background}",
    color: "{list.option.color}",
    focusColor: "{list.option.focus.color}",
    selectedColor: "{list.option.selected.color}",
    selectedFocusColor: "{list.option.selected.focus.color}",
    padding: "{list.option.padding}",
    borderRadius: "{list.option.border.radius}",
  },
  GV = {
    background: "{list.option.group.background}",
    color: "{list.option.group.color}",
    fontWeight: "{list.option.group.font.weight}",
    padding: "{list.option.group.padding}",
  },
  WV = {
    width: "2.5rem",
    sm: { width: "2rem" },
    lg: { width: "3rem" },
    borderColor: "{form.field.border.color}",
    hoverBorderColor: "{form.field.border.color}",
    activeBorderColor: "{form.field.border.color}",
    borderRadius: "{form.field.border.radius}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  KV = { borderRadius: "{border.radius.sm}" },
  XV = { padding: "{list.option.padding}" },
  YV = {
    light: {
      chip: { focusBackground: "{surface.200}", focusColor: "{surface.800}" },
      dropdown: {
        background: "{surface.100}",
        hoverBackground: "{surface.200}",
        activeBackground: "{surface.300}",
        color: "{surface.600}",
        hoverColor: "{surface.700}",
        activeColor: "{surface.800}",
      },
    },
    dark: {
      chip: { focusBackground: "{surface.700}", focusColor: "{surface.0}" },
      dropdown: {
        background: "{surface.800}",
        hoverBackground: "{surface.700}",
        activeBackground: "{surface.600}",
        color: "{surface.300}",
        hoverColor: "{surface.200}",
        activeColor: "{surface.100}",
      },
    },
  },
  qV = {
    root: NV,
    overlay: VV,
    list: HV,
    option: jV,
    optionGroup: GV,
    dropdown: WV,
    chip: KV,
    emptyMessage: XV,
    colorScheme: YV,
  },
  ZV = {
    width: "2rem",
    height: "2rem",
    fontSize: "1rem",
    background: "{content.border.color}",
    color: "{content.color}",
    borderRadius: "{content.border.radius}",
  },
  JV = { size: "1rem" },
  QV = { borderColor: "{content.background}", offset: "-0.75rem" },
  eH = {
    width: "3rem",
    height: "3rem",
    fontSize: "1.5rem",
    icon: { size: "1.5rem" },
    group: { offset: "-1rem" },
  },
  tH = {
    width: "4rem",
    height: "4rem",
    fontSize: "2rem",
    icon: { size: "2rem" },
    group: { offset: "-1.5rem" },
  },
  nH = { root: ZV, icon: JV, group: QV, lg: eH, xl: tH },
  rH = {
    borderRadius: "{border.radius.md}",
    padding: "0 0.5rem",
    fontSize: "0.75rem",
    fontWeight: "700",
    minWidth: "1.5rem",
    height: "1.5rem",
  },
  iH = { size: "0.5rem" },
  oH = { fontSize: "0.625rem", minWidth: "1.25rem", height: "1.25rem" },
  sH = { fontSize: "0.875rem", minWidth: "1.75rem", height: "1.75rem" },
  aH = { fontSize: "1rem", minWidth: "2rem", height: "2rem" },
  lH = {
    light: {
      primary: {
        background: "{primary.color}",
        color: "{primary.contrast.color}",
      },
      secondary: { background: "{surface.100}", color: "{surface.600}" },
      success: { background: "{green.500}", color: "{surface.0}" },
      info: { background: "{sky.500}", color: "{surface.0}" },
      warn: { background: "{orange.500}", color: "{surface.0}" },
      danger: { background: "{red.500}", color: "{surface.0}" },
      contrast: { background: "{surface.950}", color: "{surface.0}" },
    },
    dark: {
      primary: {
        background: "{primary.color}",
        color: "{primary.contrast.color}",
      },
      secondary: { background: "{surface.800}", color: "{surface.300}" },
      success: { background: "{green.400}", color: "{green.950}" },
      info: { background: "{sky.400}", color: "{sky.950}" },
      warn: { background: "{orange.400}", color: "{orange.950}" },
      danger: { background: "{red.400}", color: "{red.950}" },
      contrast: { background: "{surface.0}", color: "{surface.950}" },
    },
  },
  cH = { root: rH, dot: iH, sm: oH, lg: sH, xl: aH, colorScheme: lH },
  uH = {
    borderRadius: {
      none: "0",
      xs: "2px",
      sm: "4px",
      md: "6px",
      lg: "8px",
      xl: "12px",
    },
    emerald: {
      50: "#ecfdf5",
      100: "#d1fae5",
      200: "#a7f3d0",
      300: "#6ee7b7",
      400: "#34d399",
      500: "#10b981",
      600: "#059669",
      700: "#047857",
      800: "#065f46",
      900: "#064e3b",
      950: "#022c22",
    },
    green: {
      50: "#f0fdf4",
      100: "#dcfce7",
      200: "#bbf7d0",
      300: "#86efac",
      400: "#4ade80",
      500: "#22c55e",
      600: "#16a34a",
      700: "#15803d",
      800: "#166534",
      900: "#14532d",
      950: "#052e16",
    },
    lime: {
      50: "#f7fee7",
      100: "#ecfccb",
      200: "#d9f99d",
      300: "#bef264",
      400: "#a3e635",
      500: "#84cc16",
      600: "#65a30d",
      700: "#4d7c0f",
      800: "#3f6212",
      900: "#365314",
      950: "#1a2e05",
    },
    red: {
      50: "#fef2f2",
      100: "#fee2e2",
      200: "#fecaca",
      300: "#fca5a5",
      400: "#f87171",
      500: "#ef4444",
      600: "#dc2626",
      700: "#b91c1c",
      800: "#991b1b",
      900: "#7f1d1d",
      950: "#450a0a",
    },
    orange: {
      50: "#fff7ed",
      100: "#ffedd5",
      200: "#fed7aa",
      300: "#fdba74",
      400: "#fb923c",
      500: "#f97316",
      600: "#ea580c",
      700: "#c2410c",
      800: "#9a3412",
      900: "#7c2d12",
      950: "#431407",
    },
    amber: {
      50: "#fffbeb",
      100: "#fef3c7",
      200: "#fde68a",
      300: "#fcd34d",
      400: "#fbbf24",
      500: "#f59e0b",
      600: "#d97706",
      700: "#b45309",
      800: "#92400e",
      900: "#78350f",
      950: "#451a03",
    },
    yellow: {
      50: "#fefce8",
      100: "#fef9c3",
      200: "#fef08a",
      300: "#fde047",
      400: "#facc15",
      500: "#eab308",
      600: "#ca8a04",
      700: "#a16207",
      800: "#854d0e",
      900: "#713f12",
      950: "#422006",
    },
    teal: {
      50: "#f0fdfa",
      100: "#ccfbf1",
      200: "#99f6e4",
      300: "#5eead4",
      400: "#2dd4bf",
      500: "#14b8a6",
      600: "#0d9488",
      700: "#0f766e",
      800: "#115e59",
      900: "#134e4a",
      950: "#042f2e",
    },
    cyan: {
      50: "#ecfeff",
      100: "#cffafe",
      200: "#a5f3fc",
      300: "#67e8f9",
      400: "#22d3ee",
      500: "#06b6d4",
      600: "#0891b2",
      700: "#0e7490",
      800: "#155e75",
      900: "#164e63",
      950: "#083344",
    },
    sky: {
      50: "#f0f9ff",
      100: "#e0f2fe",
      200: "#bae6fd",
      300: "#7dd3fc",
      400: "#38bdf8",
      500: "#0ea5e9",
      600: "#0284c7",
      700: "#0369a1",
      800: "#075985",
      900: "#0c4a6e",
      950: "#082f49",
    },
    blue: {
      50: "#eff6ff",
      100: "#dbeafe",
      200: "#bfdbfe",
      300: "#93c5fd",
      400: "#60a5fa",
      500: "#3b82f6",
      600: "#2563eb",
      700: "#1d4ed8",
      800: "#1e40af",
      900: "#1e3a8a",
      950: "#172554",
    },
    indigo: {
      50: "#eef2ff",
      100: "#e0e7ff",
      200: "#c7d2fe",
      300: "#a5b4fc",
      400: "#818cf8",
      500: "#6366f1",
      600: "#4f46e5",
      700: "#4338ca",
      800: "#3730a3",
      900: "#312e81",
      950: "#1e1b4b",
    },
    violet: {
      50: "#f5f3ff",
      100: "#ede9fe",
      200: "#ddd6fe",
      300: "#c4b5fd",
      400: "#a78bfa",
      500: "#8b5cf6",
      600: "#7c3aed",
      700: "#6d28d9",
      800: "#5b21b6",
      900: "#4c1d95",
      950: "#2e1065",
    },
    purple: {
      50: "#faf5ff",
      100: "#f3e8ff",
      200: "#e9d5ff",
      300: "#d8b4fe",
      400: "#c084fc",
      500: "#a855f7",
      600: "#9333ea",
      700: "#7e22ce",
      800: "#6b21a8",
      900: "#581c87",
      950: "#3b0764",
    },
    fuchsia: {
      50: "#fdf4ff",
      100: "#fae8ff",
      200: "#f5d0fe",
      300: "#f0abfc",
      400: "#e879f9",
      500: "#d946ef",
      600: "#c026d3",
      700: "#a21caf",
      800: "#86198f",
      900: "#701a75",
      950: "#4a044e",
    },
    pink: {
      50: "#fdf2f8",
      100: "#fce7f3",
      200: "#fbcfe8",
      300: "#f9a8d4",
      400: "#f472b6",
      500: "#ec4899",
      600: "#db2777",
      700: "#be185d",
      800: "#9d174d",
      900: "#831843",
      950: "#500724",
    },
    rose: {
      50: "#fff1f2",
      100: "#ffe4e6",
      200: "#fecdd3",
      300: "#fda4af",
      400: "#fb7185",
      500: "#f43f5e",
      600: "#e11d48",
      700: "#be123c",
      800: "#9f1239",
      900: "#881337",
      950: "#4c0519",
    },
    slate: {
      50: "#f8fafc",
      100: "#f1f5f9",
      200: "#e2e8f0",
      300: "#cbd5e1",
      400: "#94a3b8",
      500: "#64748b",
      600: "#475569",
      700: "#334155",
      800: "#1e293b",
      900: "#0f172a",
      950: "#020617",
    },
    gray: {
      50: "#f9fafb",
      100: "#f3f4f6",
      200: "#e5e7eb",
      300: "#d1d5db",
      400: "#9ca3af",
      500: "#6b7280",
      600: "#4b5563",
      700: "#374151",
      800: "#1f2937",
      900: "#111827",
      950: "#030712",
    },
    zinc: {
      50: "#fafafa",
      100: "#f4f4f5",
      200: "#e4e4e7",
      300: "#d4d4d8",
      400: "#a1a1aa",
      500: "#71717a",
      600: "#52525b",
      700: "#3f3f46",
      800: "#27272a",
      900: "#18181b",
      950: "#09090b",
    },
    neutral: {
      50: "#fafafa",
      100: "#f5f5f5",
      200: "#e5e5e5",
      300: "#d4d4d4",
      400: "#a3a3a3",
      500: "#737373",
      600: "#525252",
      700: "#404040",
      800: "#262626",
      900: "#171717",
      950: "#0a0a0a",
    },
    stone: {
      50: "#fafaf9",
      100: "#f5f5f4",
      200: "#e7e5e4",
      300: "#d6d3d1",
      400: "#a8a29e",
      500: "#78716c",
      600: "#57534e",
      700: "#44403c",
      800: "#292524",
      900: "#1c1917",
      950: "#0c0a09",
    },
  },
  dH = {
    transitionDuration: "0.2s",
    focusRing: {
      width: "1px",
      style: "solid",
      color: "{primary.color}",
      offset: "2px",
      shadow: "none",
    },
    disabledOpacity: "0.6",
    iconSize: "1rem",
    anchorGutter: "2px",
    primary: {
      50: "{emerald.50}",
      100: "{emerald.100}",
      200: "{emerald.200}",
      300: "{emerald.300}",
      400: "{emerald.400}",
      500: "{emerald.500}",
      600: "{emerald.600}",
      700: "{emerald.700}",
      800: "{emerald.800}",
      900: "{emerald.900}",
      950: "{emerald.950}",
    },
    formField: {
      paddingX: "0.75rem",
      paddingY: "0.5rem",
      sm: { fontSize: "0.875rem", paddingX: "0.625rem", paddingY: "0.375rem" },
      lg: { fontSize: "1.125rem", paddingX: "0.875rem", paddingY: "0.625rem" },
      borderRadius: "{border.radius.md}",
      focusRing: {
        width: "0",
        style: "none",
        color: "transparent",
        offset: "0",
        shadow: "none",
      },
      transitionDuration: "{transition.duration}",
    },
    list: {
      padding: "0.25rem 0.25rem",
      gap: "2px",
      header: { padding: "0.5rem 1rem 0.25rem 1rem" },
      option: { padding: "0.5rem 0.75rem", borderRadius: "{border.radius.sm}" },
      optionGroup: { padding: "0.5rem 0.75rem", fontWeight: "600" },
    },
    content: { borderRadius: "{border.radius.md}" },
    mask: { transitionDuration: "0.15s" },
    navigation: {
      list: { padding: "0.25rem 0.25rem", gap: "2px" },
      item: {
        padding: "0.5rem 0.75rem",
        borderRadius: "{border.radius.sm}",
        gap: "0.5rem",
      },
      submenuLabel: { padding: "0.5rem 0.75rem", fontWeight: "600" },
      submenuIcon: { size: "0.875rem" },
    },
    overlay: {
      select: {
        borderRadius: "{border.radius.md}",
        shadow:
          "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1)",
      },
      popover: {
        borderRadius: "{border.radius.md}",
        padding: "0.75rem",
        shadow:
          "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1)",
      },
      modal: {
        borderRadius: "{border.radius.xl}",
        padding: "1.25rem",
        shadow:
          "0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1)",
      },
      navigation: {
        shadow:
          "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1)",
      },
    },
    colorScheme: {
      light: {
        surface: {
          0: "#ffffff",
          50: "{slate.50}",
          100: "{slate.100}",
          200: "{slate.200}",
          300: "{slate.300}",
          400: "{slate.400}",
          500: "{slate.500}",
          600: "{slate.600}",
          700: "{slate.700}",
          800: "{slate.800}",
          900: "{slate.900}",
          950: "{slate.950}",
        },
        primary: {
          color: "{primary.500}",
          contrastColor: "#ffffff",
          hoverColor: "{primary.600}",
          activeColor: "{primary.700}",
        },
        highlight: {
          background: "{primary.50}",
          focusBackground: "{primary.100}",
          color: "{primary.700}",
          focusColor: "{primary.800}",
        },
        mask: { background: "rgba(0,0,0,0.4)", color: "{surface.200}" },
        formField: {
          background: "{surface.0}",
          disabledBackground: "{surface.200}",
          filledBackground: "{surface.50}",
          filledHoverBackground: "{surface.50}",
          filledFocusBackground: "{surface.50}",
          borderColor: "{surface.300}",
          hoverBorderColor: "{surface.400}",
          focusBorderColor: "{primary.color}",
          invalidBorderColor: "{red.400}",
          color: "{surface.700}",
          disabledColor: "{surface.500}",
          placeholderColor: "{surface.500}",
          invalidPlaceholderColor: "{red.600}",
          floatLabelColor: "{surface.500}",
          floatLabelFocusColor: "{primary.600}",
          floatLabelActiveColor: "{surface.500}",
          floatLabelInvalidColor: "{form.field.invalid.placeholder.color}",
          iconColor: "{surface.400}",
          shadow: "0 0 #0000, 0 0 #0000, 0 1px 2px 0 rgba(18, 18, 23, 0.05)",
        },
        text: {
          color: "{surface.700}",
          hoverColor: "{surface.800}",
          mutedColor: "{surface.500}",
          hoverMutedColor: "{surface.600}",
        },
        content: {
          background: "{surface.0}",
          hoverBackground: "{surface.100}",
          borderColor: "{surface.200}",
          color: "{text.color}",
          hoverColor: "{text.hover.color}",
        },
        overlay: {
          select: {
            background: "{surface.0}",
            borderColor: "{surface.200}",
            color: "{text.color}",
          },
          popover: {
            background: "{surface.0}",
            borderColor: "{surface.200}",
            color: "{text.color}",
          },
          modal: {
            background: "{surface.0}",
            borderColor: "{surface.200}",
            color: "{text.color}",
          },
        },
        list: {
          option: {
            focusBackground: "{surface.100}",
            selectedBackground: "{highlight.background}",
            selectedFocusBackground: "{highlight.focus.background}",
            color: "{text.color}",
            focusColor: "{text.hover.color}",
            selectedColor: "{highlight.color}",
            selectedFocusColor: "{highlight.focus.color}",
            icon: { color: "{surface.400}", focusColor: "{surface.500}" },
          },
          optionGroup: {
            background: "transparent",
            color: "{text.muted.color}",
          },
        },
        navigation: {
          item: {
            focusBackground: "{surface.100}",
            activeBackground: "{surface.100}",
            color: "{text.color}",
            focusColor: "{text.hover.color}",
            activeColor: "{text.hover.color}",
            icon: {
              color: "{surface.400}",
              focusColor: "{surface.500}",
              activeColor: "{surface.500}",
            },
          },
          submenuLabel: {
            background: "transparent",
            color: "{text.muted.color}",
          },
          submenuIcon: {
            color: "{surface.400}",
            focusColor: "{surface.500}",
            activeColor: "{surface.500}",
          },
        },
      },
      dark: {
        surface: {
          0: "#ffffff",
          50: "{zinc.50}",
          100: "{zinc.100}",
          200: "{zinc.200}",
          300: "{zinc.300}",
          400: "{zinc.400}",
          500: "{zinc.500}",
          600: "{zinc.600}",
          700: "{zinc.700}",
          800: "{zinc.800}",
          900: "{zinc.900}",
          950: "{zinc.950}",
        },
        primary: {
          color: "{primary.400}",
          contrastColor: "{surface.900}",
          hoverColor: "{primary.300}",
          activeColor: "{primary.200}",
        },
        highlight: {
          background: "color-mix(in srgb, {primary.400}, transparent 84%)",
          focusBackground: "color-mix(in srgb, {primary.400}, transparent 76%)",
          color: "rgba(255,255,255,.87)",
          focusColor: "rgba(255,255,255,.87)",
        },
        mask: { background: "rgba(0,0,0,0.6)", color: "{surface.200}" },
        formField: {
          background: "{surface.950}",
          disabledBackground: "{surface.700}",
          filledBackground: "{surface.800}",
          filledHoverBackground: "{surface.800}",
          filledFocusBackground: "{surface.800}",
          borderColor: "{surface.600}",
          hoverBorderColor: "{surface.500}",
          focusBorderColor: "{primary.color}",
          invalidBorderColor: "{red.300}",
          color: "{surface.0}",
          disabledColor: "{surface.400}",
          placeholderColor: "{surface.400}",
          invalidPlaceholderColor: "{red.400}",
          floatLabelColor: "{surface.400}",
          floatLabelFocusColor: "{primary.color}",
          floatLabelActiveColor: "{surface.400}",
          floatLabelInvalidColor: "{form.field.invalid.placeholder.color}",
          iconColor: "{surface.400}",
          shadow: "0 0 #0000, 0 0 #0000, 0 1px 2px 0 rgba(18, 18, 23, 0.05)",
        },
        text: {
          color: "{surface.0}",
          hoverColor: "{surface.0}",
          mutedColor: "{surface.400}",
          hoverMutedColor: "{surface.300}",
        },
        content: {
          background: "{surface.900}",
          hoverBackground: "{surface.800}",
          borderColor: "{surface.700}",
          color: "{text.color}",
          hoverColor: "{text.hover.color}",
        },
        overlay: {
          select: {
            background: "{surface.900}",
            borderColor: "{surface.700}",
            color: "{text.color}",
          },
          popover: {
            background: "{surface.900}",
            borderColor: "{surface.700}",
            color: "{text.color}",
          },
          modal: {
            background: "{surface.900}",
            borderColor: "{surface.700}",
            color: "{text.color}",
          },
        },
        list: {
          option: {
            focusBackground: "{surface.800}",
            selectedBackground: "{highlight.background}",
            selectedFocusBackground: "{highlight.focus.background}",
            color: "{text.color}",
            focusColor: "{text.hover.color}",
            selectedColor: "{highlight.color}",
            selectedFocusColor: "{highlight.focus.color}",
            icon: { color: "{surface.500}", focusColor: "{surface.400}" },
          },
          optionGroup: {
            background: "transparent",
            color: "{text.muted.color}",
          },
        },
        navigation: {
          item: {
            focusBackground: "{surface.800}",
            activeBackground: "{surface.800}",
            color: "{text.color}",
            focusColor: "{text.hover.color}",
            activeColor: "{text.hover.color}",
            icon: {
              color: "{surface.500}",
              focusColor: "{surface.400}",
              activeColor: "{surface.400}",
            },
          },
          submenuLabel: {
            background: "transparent",
            color: "{text.muted.color}",
          },
          submenuIcon: {
            color: "{surface.500}",
            focusColor: "{surface.400}",
            activeColor: "{surface.400}",
          },
        },
      },
    },
  },
  fH = { primitive: uH, semantic: dH },
  pH = { borderRadius: "{content.border.radius}" },
  hH = { root: pH },
  mH = {
    padding: "1rem",
    background: "{content.background}",
    gap: "0.5rem",
    transitionDuration: "{transition.duration}",
  },
  gH = {
    color: "{text.muted.color}",
    hoverColor: "{text.color}",
    borderRadius: "{content.border.radius}",
    gap: "{navigation.item.gap}",
    icon: {
      color: "{navigation.item.icon.color}",
      hoverColor: "{navigation.item.icon.focus.color}",
    },
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  vH = { color: "{navigation.item.icon.color}" },
  bH = { root: mH, item: gH, separator: vH },
  yH = {
    borderRadius: "{form.field.border.radius}",
    roundedBorderRadius: "2rem",
    gap: "0.5rem",
    paddingX: "{form.field.padding.x}",
    paddingY: "{form.field.padding.y}",
    iconOnlyWidth: "2.5rem",
    sm: {
      fontSize: "{form.field.sm.font.size}",
      paddingX: "{form.field.sm.padding.x}",
      paddingY: "{form.field.sm.padding.y}",
      iconOnlyWidth: "2rem",
    },
    lg: {
      fontSize: "{form.field.lg.font.size}",
      paddingX: "{form.field.lg.padding.x}",
      paddingY: "{form.field.lg.padding.y}",
      iconOnlyWidth: "3rem",
    },
    label: { fontWeight: "500" },
    raisedShadow:
      "0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12)",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      offset: "{focus.ring.offset}",
    },
    badgeSize: "1rem",
    transitionDuration: "{form.field.transition.duration}",
  },
  xH = {
    light: {
      root: {
        primary: {
          background: "{primary.color}",
          hoverBackground: "{primary.hover.color}",
          activeBackground: "{primary.active.color}",
          borderColor: "{primary.color}",
          hoverBorderColor: "{primary.hover.color}",
          activeBorderColor: "{primary.active.color}",
          color: "{primary.contrast.color}",
          hoverColor: "{primary.contrast.color}",
          activeColor: "{primary.contrast.color}",
          focusRing: { color: "{primary.color}", shadow: "none" },
        },
        secondary: {
          background: "{surface.100}",
          hoverBackground: "{surface.200}",
          activeBackground: "{surface.300}",
          borderColor: "{surface.100}",
          hoverBorderColor: "{surface.200}",
          activeBorderColor: "{surface.300}",
          color: "{surface.600}",
          hoverColor: "{surface.700}",
          activeColor: "{surface.800}",
          focusRing: { color: "{surface.600}", shadow: "none" },
        },
        info: {
          background: "{sky.500}",
          hoverBackground: "{sky.600}",
          activeBackground: "{sky.700}",
          borderColor: "{sky.500}",
          hoverBorderColor: "{sky.600}",
          activeBorderColor: "{sky.700}",
          color: "#ffffff",
          hoverColor: "#ffffff",
          activeColor: "#ffffff",
          focusRing: { color: "{sky.500}", shadow: "none" },
        },
        success: {
          background: "{green.500}",
          hoverBackground: "{green.600}",
          activeBackground: "{green.700}",
          borderColor: "{green.500}",
          hoverBorderColor: "{green.600}",
          activeBorderColor: "{green.700}",
          color: "#ffffff",
          hoverColor: "#ffffff",
          activeColor: "#ffffff",
          focusRing: { color: "{green.500}", shadow: "none" },
        },
        warn: {
          background: "{orange.500}",
          hoverBackground: "{orange.600}",
          activeBackground: "{orange.700}",
          borderColor: "{orange.500}",
          hoverBorderColor: "{orange.600}",
          activeBorderColor: "{orange.700}",
          color: "#ffffff",
          hoverColor: "#ffffff",
          activeColor: "#ffffff",
          focusRing: { color: "{orange.500}", shadow: "none" },
        },
        help: {
          background: "{purple.500}",
          hoverBackground: "{purple.600}",
          activeBackground: "{purple.700}",
          borderColor: "{purple.500}",
          hoverBorderColor: "{purple.600}",
          activeBorderColor: "{purple.700}",
          color: "#ffffff",
          hoverColor: "#ffffff",
          activeColor: "#ffffff",
          focusRing: { color: "{purple.500}", shadow: "none" },
        },
        danger: {
          background: "{red.500}",
          hoverBackground: "{red.600}",
          activeBackground: "{red.700}",
          borderColor: "{red.500}",
          hoverBorderColor: "{red.600}",
          activeBorderColor: "{red.700}",
          color: "#ffffff",
          hoverColor: "#ffffff",
          activeColor: "#ffffff",
          focusRing: { color: "{red.500}", shadow: "none" },
        },
        contrast: {
          background: "{surface.950}",
          hoverBackground: "{surface.900}",
          activeBackground: "{surface.800}",
          borderColor: "{surface.950}",
          hoverBorderColor: "{surface.900}",
          activeBorderColor: "{surface.800}",
          color: "{surface.0}",
          hoverColor: "{surface.0}",
          activeColor: "{surface.0}",
          focusRing: { color: "{surface.950}", shadow: "none" },
        },
      },
      outlined: {
        primary: {
          hoverBackground: "{primary.50}",
          activeBackground: "{primary.100}",
          borderColor: "{primary.200}",
          color: "{primary.color}",
        },
        secondary: {
          hoverBackground: "{surface.50}",
          activeBackground: "{surface.100}",
          borderColor: "{surface.200}",
          color: "{surface.500}",
        },
        success: {
          hoverBackground: "{green.50}",
          activeBackground: "{green.100}",
          borderColor: "{green.200}",
          color: "{green.500}",
        },
        info: {
          hoverBackground: "{sky.50}",
          activeBackground: "{sky.100}",
          borderColor: "{sky.200}",
          color: "{sky.500}",
        },
        warn: {
          hoverBackground: "{orange.50}",
          activeBackground: "{orange.100}",
          borderColor: "{orange.200}",
          color: "{orange.500}",
        },
        help: {
          hoverBackground: "{purple.50}",
          activeBackground: "{purple.100}",
          borderColor: "{purple.200}",
          color: "{purple.500}",
        },
        danger: {
          hoverBackground: "{red.50}",
          activeBackground: "{red.100}",
          borderColor: "{red.200}",
          color: "{red.500}",
        },
        contrast: {
          hoverBackground: "{surface.50}",
          activeBackground: "{surface.100}",
          borderColor: "{surface.700}",
          color: "{surface.950}",
        },
        plain: {
          hoverBackground: "{surface.50}",
          activeBackground: "{surface.100}",
          borderColor: "{surface.200}",
          color: "{surface.700}",
        },
      },
      text: {
        primary: {
          hoverBackground: "{primary.50}",
          activeBackground: "{primary.100}",
          color: "{primary.color}",
        },
        secondary: {
          hoverBackground: "{surface.50}",
          activeBackground: "{surface.100}",
          color: "{surface.500}",
        },
        success: {
          hoverBackground: "{green.50}",
          activeBackground: "{green.100}",
          color: "{green.500}",
        },
        info: {
          hoverBackground: "{sky.50}",
          activeBackground: "{sky.100}",
          color: "{sky.500}",
        },
        warn: {
          hoverBackground: "{orange.50}",
          activeBackground: "{orange.100}",
          color: "{orange.500}",
        },
        help: {
          hoverBackground: "{purple.50}",
          activeBackground: "{purple.100}",
          color: "{purple.500}",
        },
        danger: {
          hoverBackground: "{red.50}",
          activeBackground: "{red.100}",
          color: "{red.500}",
        },
        contrast: {
          hoverBackground: "{surface.50}",
          activeBackground: "{surface.100}",
          color: "{surface.950}",
        },
        plain: {
          hoverBackground: "{surface.50}",
          activeBackground: "{surface.100}",
          color: "{surface.700}",
        },
      },
      link: {
        color: "{primary.color}",
        hoverColor: "{primary.color}",
        activeColor: "{primary.color}",
      },
    },
    dark: {
      root: {
        primary: {
          background: "{primary.color}",
          hoverBackground: "{primary.hover.color}",
          activeBackground: "{primary.active.color}",
          borderColor: "{primary.color}",
          hoverBorderColor: "{primary.hover.color}",
          activeBorderColor: "{primary.active.color}",
          color: "{primary.contrast.color}",
          hoverColor: "{primary.contrast.color}",
          activeColor: "{primary.contrast.color}",
          focusRing: { color: "{primary.color}", shadow: "none" },
        },
        secondary: {
          background: "{surface.800}",
          hoverBackground: "{surface.700}",
          activeBackground: "{surface.600}",
          borderColor: "{surface.800}",
          hoverBorderColor: "{surface.700}",
          activeBorderColor: "{surface.600}",
          color: "{surface.300}",
          hoverColor: "{surface.200}",
          activeColor: "{surface.100}",
          focusRing: { color: "{surface.300}", shadow: "none" },
        },
        info: {
          background: "{sky.400}",
          hoverBackground: "{sky.300}",
          activeBackground: "{sky.200}",
          borderColor: "{sky.400}",
          hoverBorderColor: "{sky.300}",
          activeBorderColor: "{sky.200}",
          color: "{sky.950}",
          hoverColor: "{sky.950}",
          activeColor: "{sky.950}",
          focusRing: { color: "{sky.400}", shadow: "none" },
        },
        success: {
          background: "{green.400}",
          hoverBackground: "{green.300}",
          activeBackground: "{green.200}",
          borderColor: "{green.400}",
          hoverBorderColor: "{green.300}",
          activeBorderColor: "{green.200}",
          color: "{green.950}",
          hoverColor: "{green.950}",
          activeColor: "{green.950}",
          focusRing: { color: "{green.400}", shadow: "none" },
        },
        warn: {
          background: "{orange.400}",
          hoverBackground: "{orange.300}",
          activeBackground: "{orange.200}",
          borderColor: "{orange.400}",
          hoverBorderColor: "{orange.300}",
          activeBorderColor: "{orange.200}",
          color: "{orange.950}",
          hoverColor: "{orange.950}",
          activeColor: "{orange.950}",
          focusRing: { color: "{orange.400}", shadow: "none" },
        },
        help: {
          background: "{purple.400}",
          hoverBackground: "{purple.300}",
          activeBackground: "{purple.200}",
          borderColor: "{purple.400}",
          hoverBorderColor: "{purple.300}",
          activeBorderColor: "{purple.200}",
          color: "{purple.950}",
          hoverColor: "{purple.950}",
          activeColor: "{purple.950}",
          focusRing: { color: "{purple.400}", shadow: "none" },
        },
        danger: {
          background: "{red.400}",
          hoverBackground: "{red.300}",
          activeBackground: "{red.200}",
          borderColor: "{red.400}",
          hoverBorderColor: "{red.300}",
          activeBorderColor: "{red.200}",
          color: "{red.950}",
          hoverColor: "{red.950}",
          activeColor: "{red.950}",
          focusRing: { color: "{red.400}", shadow: "none" },
        },
        contrast: {
          background: "{surface.0}",
          hoverBackground: "{surface.100}",
          activeBackground: "{surface.200}",
          borderColor: "{surface.0}",
          hoverBorderColor: "{surface.100}",
          activeBorderColor: "{surface.200}",
          color: "{surface.950}",
          hoverColor: "{surface.950}",
          activeColor: "{surface.950}",
          focusRing: { color: "{surface.0}", shadow: "none" },
        },
      },
      outlined: {
        primary: {
          hoverBackground:
            "color-mix(in srgb, {primary.color}, transparent 96%)",
          activeBackground:
            "color-mix(in srgb, {primary.color}, transparent 84%)",
          borderColor: "{primary.700}",
          color: "{primary.color}",
        },
        secondary: {
          hoverBackground: "rgba(255,255,255,0.04)",
          activeBackground: "rgba(255,255,255,0.16)",
          borderColor: "{surface.700}",
          color: "{surface.400}",
        },
        success: {
          hoverBackground: "color-mix(in srgb, {green.400}, transparent 96%)",
          activeBackground: "color-mix(in srgb, {green.400}, transparent 84%)",
          borderColor: "{green.700}",
          color: "{green.400}",
        },
        info: {
          hoverBackground: "color-mix(in srgb, {sky.400}, transparent 96%)",
          activeBackground: "color-mix(in srgb, {sky.400}, transparent 84%)",
          borderColor: "{sky.700}",
          color: "{sky.400}",
        },
        warn: {
          hoverBackground: "color-mix(in srgb, {orange.400}, transparent 96%)",
          activeBackground: "color-mix(in srgb, {orange.400}, transparent 84%)",
          borderColor: "{orange.700}",
          color: "{orange.400}",
        },
        help: {
          hoverBackground: "color-mix(in srgb, {purple.400}, transparent 96%)",
          activeBackground: "color-mix(in srgb, {purple.400}, transparent 84%)",
          borderColor: "{purple.700}",
          color: "{purple.400}",
        },
        danger: {
          hoverBackground: "color-mix(in srgb, {red.400}, transparent 96%)",
          activeBackground: "color-mix(in srgb, {red.400}, transparent 84%)",
          borderColor: "{red.700}",
          color: "{red.400}",
        },
        contrast: {
          hoverBackground: "{surface.800}",
          activeBackground: "{surface.700}",
          borderColor: "{surface.500}",
          color: "{surface.0}",
        },
        plain: {
          hoverBackground: "{surface.800}",
          activeBackground: "{surface.700}",
          borderColor: "{surface.600}",
          color: "{surface.0}",
        },
      },
      text: {
        primary: {
          hoverBackground:
            "color-mix(in srgb, {primary.color}, transparent 96%)",
          activeBackground:
            "color-mix(in srgb, {primary.color}, transparent 84%)",
          color: "{primary.color}",
        },
        secondary: {
          hoverBackground: "{surface.800}",
          activeBackground: "{surface.700}",
          color: "{surface.400}",
        },
        success: {
          hoverBackground: "color-mix(in srgb, {green.400}, transparent 96%)",
          activeBackground: "color-mix(in srgb, {green.400}, transparent 84%)",
          color: "{green.400}",
        },
        info: {
          hoverBackground: "color-mix(in srgb, {sky.400}, transparent 96%)",
          activeBackground: "color-mix(in srgb, {sky.400}, transparent 84%)",
          color: "{sky.400}",
        },
        warn: {
          hoverBackground: "color-mix(in srgb, {orange.400}, transparent 96%)",
          activeBackground: "color-mix(in srgb, {orange.400}, transparent 84%)",
          color: "{orange.400}",
        },
        help: {
          hoverBackground: "color-mix(in srgb, {purple.400}, transparent 96%)",
          activeBackground: "color-mix(in srgb, {purple.400}, transparent 84%)",
          color: "{purple.400}",
        },
        danger: {
          hoverBackground: "color-mix(in srgb, {red.400}, transparent 96%)",
          activeBackground: "color-mix(in srgb, {red.400}, transparent 84%)",
          color: "{red.400}",
        },
        contrast: {
          hoverBackground: "{surface.800}",
          activeBackground: "{surface.700}",
          color: "{surface.0}",
        },
        plain: {
          hoverBackground: "{surface.800}",
          activeBackground: "{surface.700}",
          color: "{surface.0}",
        },
      },
      link: {
        color: "{primary.color}",
        hoverColor: "{primary.color}",
        activeColor: "{primary.color}",
      },
    },
  },
  _H = { root: yH, colorScheme: xH },
  wH = {
    background: "{content.background}",
    borderRadius: "{border.radius.xl}",
    color: "{content.color}",
    shadow: "0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1)",
  },
  kH = { padding: "1.25rem", gap: "0.5rem" },
  SH = { gap: "0.5rem" },
  CH = { fontSize: "1.25rem", fontWeight: "500" },
  MH = { color: "{text.muted.color}" },
  EH = { root: wH, body: kH, caption: SH, title: CH, subtitle: MH },
  TH = { transitionDuration: "{transition.duration}" },
  AH = { gap: "0.25rem" },
  PH = { padding: "1rem", gap: "0.5rem" },
  RH = {
    width: "2rem",
    height: "0.5rem",
    borderRadius: "{content.border.radius}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  LH = {
    light: {
      indicator: {
        background: "{surface.200}",
        hoverBackground: "{surface.300}",
        activeBackground: "{primary.color}",
      },
    },
    dark: {
      indicator: {
        background: "{surface.700}",
        hoverBackground: "{surface.600}",
        activeBackground: "{primary.color}",
      },
    },
  },
  DH = {
    root: TH,
    content: AH,
    indicatorList: PH,
    indicator: RH,
    colorScheme: LH,
  },
  IH = {
    background: "{form.field.background}",
    disabledBackground: "{form.field.disabled.background}",
    filledBackground: "{form.field.filled.background}",
    filledHoverBackground: "{form.field.filled.hover.background}",
    filledFocusBackground: "{form.field.filled.focus.background}",
    borderColor: "{form.field.border.color}",
    hoverBorderColor: "{form.field.hover.border.color}",
    focusBorderColor: "{form.field.focus.border.color}",
    invalidBorderColor: "{form.field.invalid.border.color}",
    color: "{form.field.color}",
    disabledColor: "{form.field.disabled.color}",
    placeholderColor: "{form.field.placeholder.color}",
    invalidPlaceholderColor: "{form.field.invalid.placeholder.color}",
    shadow: "{form.field.shadow}",
    paddingX: "{form.field.padding.x}",
    paddingY: "{form.field.padding.y}",
    borderRadius: "{form.field.border.radius}",
    focusRing: {
      width: "{form.field.focus.ring.width}",
      style: "{form.field.focus.ring.style}",
      color: "{form.field.focus.ring.color}",
      offset: "{form.field.focus.ring.offset}",
      shadow: "{form.field.focus.ring.shadow}",
    },
    transitionDuration: "{form.field.transition.duration}",
    sm: {
      fontSize: "{form.field.sm.font.size}",
      paddingX: "{form.field.sm.padding.x}",
      paddingY: "{form.field.sm.padding.y}",
    },
    lg: {
      fontSize: "{form.field.lg.font.size}",
      paddingX: "{form.field.lg.padding.x}",
      paddingY: "{form.field.lg.padding.y}",
    },
  },
  OH = { width: "2.5rem", color: "{form.field.icon.color}" },
  $H = {
    background: "{overlay.select.background}",
    borderColor: "{overlay.select.border.color}",
    borderRadius: "{overlay.select.border.radius}",
    color: "{overlay.select.color}",
    shadow: "{overlay.select.shadow}",
  },
  zH = { padding: "{list.padding}", gap: "{list.gap}", mobileIndent: "1rem" },
  BH = {
    focusBackground: "{list.option.focus.background}",
    selectedBackground: "{list.option.selected.background}",
    selectedFocusBackground: "{list.option.selected.focus.background}",
    color: "{list.option.color}",
    focusColor: "{list.option.focus.color}",
    selectedColor: "{list.option.selected.color}",
    selectedFocusColor: "{list.option.selected.focus.color}",
    padding: "{list.option.padding}",
    borderRadius: "{list.option.border.radius}",
    icon: {
      color: "{list.option.icon.color}",
      focusColor: "{list.option.icon.focus.color}",
      size: "0.875rem",
    },
  },
  UH = { color: "{form.field.icon.color}" },
  FH = {
    root: IH,
    dropdown: OH,
    overlay: $H,
    list: zH,
    option: BH,
    clearIcon: UH,
  },
  NH = {
    borderRadius: "{border.radius.sm}",
    width: "1.25rem",
    height: "1.25rem",
    background: "{form.field.background}",
    checkedBackground: "{primary.color}",
    checkedHoverBackground: "{primary.hover.color}",
    disabledBackground: "{form.field.disabled.background}",
    filledBackground: "{form.field.filled.background}",
    borderColor: "{form.field.border.color}",
    hoverBorderColor: "{form.field.hover.border.color}",
    focusBorderColor: "{form.field.border.color}",
    checkedBorderColor: "{primary.color}",
    checkedHoverBorderColor: "{primary.hover.color}",
    checkedFocusBorderColor: "{primary.color}",
    checkedDisabledBorderColor: "{form.field.border.color}",
    invalidBorderColor: "{form.field.invalid.border.color}",
    shadow: "{form.field.shadow}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
    transitionDuration: "{form.field.transition.duration}",
    sm: { width: "1rem", height: "1rem" },
    lg: { width: "1.5rem", height: "1.5rem" },
  },
  VH = {
    size: "0.875rem",
    color: "{form.field.color}",
    checkedColor: "{primary.contrast.color}",
    checkedHoverColor: "{primary.contrast.color}",
    disabledColor: "{form.field.disabled.color}",
    sm: { size: "0.75rem" },
    lg: { size: "1rem" },
  },
  HH = { root: NH, icon: VH },
  jH = {
    borderRadius: "16px",
    paddingX: "0.75rem",
    paddingY: "0.5rem",
    gap: "0.5rem",
    transitionDuration: "{transition.duration}",
  },
  GH = { width: "2rem", height: "2rem" },
  WH = { size: "1rem" },
  KH = {
    size: "1rem",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{form.field.focus.ring.shadow}",
    },
  },
  XH = {
    light: {
      root: { background: "{surface.100}", color: "{surface.800}" },
      icon: { color: "{surface.800}" },
      removeIcon: { color: "{surface.800}" },
    },
    dark: {
      root: { background: "{surface.800}", color: "{surface.0}" },
      icon: { color: "{surface.0}" },
      removeIcon: { color: "{surface.0}" },
    },
  },
  YH = { root: jH, image: GH, icon: WH, removeIcon: KH, colorScheme: XH },
  qH = { transitionDuration: "{transition.duration}" },
  ZH = {
    width: "1.5rem",
    height: "1.5rem",
    borderRadius: "{form.field.border.radius}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  JH = {
    shadow: "{overlay.popover.shadow}",
    borderRadius: "{overlay.popover.borderRadius}",
  },
  QH = {
    light: {
      panel: { background: "{surface.800}", borderColor: "{surface.900}" },
      handle: { color: "{surface.0}" },
    },
    dark: {
      panel: { background: "{surface.900}", borderColor: "{surface.700}" },
      handle: { color: "{surface.0}" },
    },
  },
  ej = { root: qH, preview: ZH, panel: JH, colorScheme: QH },
  tj = { size: "2rem", color: "{overlay.modal.color}" },
  nj = { gap: "1rem" },
  rj = { icon: tj, content: nj },
  ij = {
    background: "{overlay.popover.background}",
    borderColor: "{overlay.popover.border.color}",
    color: "{overlay.popover.color}",
    borderRadius: "{overlay.popover.border.radius}",
    shadow: "{overlay.popover.shadow}",
    gutter: "10px",
    arrowOffset: "1.25rem",
  },
  oj = { padding: "{overlay.popover.padding}", gap: "1rem" },
  sj = { size: "1.5rem", color: "{overlay.popover.color}" },
  aj = {
    gap: "0.5rem",
    padding:
      "0 {overlay.popover.padding} {overlay.popover.padding} {overlay.popover.padding}",
  },
  lj = { root: ij, content: oj, icon: sj, footer: aj },
  cj = {
    background: "{content.background}",
    borderColor: "{content.border.color}",
    color: "{content.color}",
    borderRadius: "{content.border.radius}",
    shadow: "{overlay.navigation.shadow}",
    transitionDuration: "{transition.duration}",
  },
  uj = { padding: "{navigation.list.padding}", gap: "{navigation.list.gap}" },
  dj = {
    focusBackground: "{navigation.item.focus.background}",
    activeBackground: "{navigation.item.active.background}",
    color: "{navigation.item.color}",
    focusColor: "{navigation.item.focus.color}",
    activeColor: "{navigation.item.active.color}",
    padding: "{navigation.item.padding}",
    borderRadius: "{navigation.item.border.radius}",
    gap: "{navigation.item.gap}",
    icon: {
      color: "{navigation.item.icon.color}",
      focusColor: "{navigation.item.icon.focus.color}",
      activeColor: "{navigation.item.icon.active.color}",
    },
  },
  fj = { mobileIndent: "1rem" },
  pj = {
    size: "{navigation.submenu.icon.size}",
    color: "{navigation.submenu.icon.color}",
    focusColor: "{navigation.submenu.icon.focus.color}",
    activeColor: "{navigation.submenu.icon.active.color}",
  },
  hj = { borderColor: "{content.border.color}" },
  mj = {
    root: cj,
    list: uj,
    item: dj,
    submenu: fj,
    submenuIcon: pj,
    separator: hj,
  },
  gj = { transitionDuration: "{transition.duration}" },
  vj = {
    background: "{content.background}",
    borderColor: "{datatable.border.color}",
    color: "{content.color}",
    borderWidth: "0 0 1px 0",
    padding: "0.75rem 1rem",
    sm: { padding: "0.375rem 0.5rem" },
    lg: { padding: "1rem 1.25rem" },
  },
  bj = {
    background: "{content.background}",
    hoverBackground: "{content.hover.background}",
    selectedBackground: "{highlight.background}",
    borderColor: "{datatable.border.color}",
    color: "{content.color}",
    hoverColor: "{content.hover.color}",
    selectedColor: "{highlight.color}",
    gap: "0.5rem",
    padding: "0.75rem 1rem",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "-1px",
      shadow: "{focus.ring.shadow}",
    },
    sm: { padding: "0.375rem 0.5rem" },
    lg: { padding: "1rem 1.25rem" },
  },
  yj = { fontWeight: "600" },
  xj = {
    background: "{content.background}",
    hoverBackground: "{content.hover.background}",
    selectedBackground: "{highlight.background}",
    color: "{content.color}",
    hoverColor: "{content.hover.color}",
    selectedColor: "{highlight.color}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "-1px",
      shadow: "{focus.ring.shadow}",
    },
  },
  _j = {
    borderColor: "{datatable.border.color}",
    padding: "0.75rem 1rem",
    sm: { padding: "0.375rem 0.5rem" },
    lg: { padding: "1rem 1.25rem" },
  },
  wj = {
    background: "{content.background}",
    borderColor: "{datatable.border.color}",
    color: "{content.color}",
    padding: "0.75rem 1rem",
    sm: { padding: "0.375rem 0.5rem" },
    lg: { padding: "1rem 1.25rem" },
  },
  kj = { fontWeight: "600" },
  Sj = {
    background: "{content.background}",
    borderColor: "{datatable.border.color}",
    color: "{content.color}",
    borderWidth: "0 0 1px 0",
    padding: "0.75rem 1rem",
    sm: { padding: "0.375rem 0.5rem" },
    lg: { padding: "1rem 1.25rem" },
  },
  Cj = { color: "{primary.color}" },
  Mj = { width: "0.5rem" },
  Ej = { width: "1px", color: "{primary.color}" },
  Tj = {
    color: "{text.muted.color}",
    hoverColor: "{text.hover.muted.color}",
    size: "0.875rem",
  },
  Aj = { size: "2rem" },
  Pj = {
    hoverBackground: "{content.hover.background}",
    selectedHoverBackground: "{content.background}",
    color: "{text.muted.color}",
    hoverColor: "{text.color}",
    selectedHoverColor: "{primary.color}",
    size: "1.75rem",
    borderRadius: "50%",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  Rj = {
    inlineGap: "0.5rem",
    overlaySelect: {
      background: "{overlay.select.background}",
      borderColor: "{overlay.select.border.color}",
      borderRadius: "{overlay.select.border.radius}",
      color: "{overlay.select.color}",
      shadow: "{overlay.select.shadow}",
    },
    overlayPopover: {
      background: "{overlay.popover.background}",
      borderColor: "{overlay.popover.border.color}",
      borderRadius: "{overlay.popover.border.radius}",
      color: "{overlay.popover.color}",
      shadow: "{overlay.popover.shadow}",
      padding: "{overlay.popover.padding}",
      gap: "0.5rem",
    },
    rule: { borderColor: "{content.border.color}" },
    constraintList: { padding: "{list.padding}", gap: "{list.gap}" },
    constraint: {
      focusBackground: "{list.option.focus.background}",
      selectedBackground: "{list.option.selected.background}",
      selectedFocusBackground: "{list.option.selected.focus.background}",
      color: "{list.option.color}",
      focusColor: "{list.option.focus.color}",
      selectedColor: "{list.option.selected.color}",
      selectedFocusColor: "{list.option.selected.focus.color}",
      separator: { borderColor: "{content.border.color}" },
      padding: "{list.option.padding}",
      borderRadius: "{list.option.border.radius}",
    },
  },
  Lj = { borderColor: "{datatable.border.color}", borderWidth: "0 0 1px 0" },
  Dj = { borderColor: "{datatable.border.color}", borderWidth: "0 0 1px 0" },
  Ij = {
    light: {
      root: { borderColor: "{content.border.color}" },
      row: { stripedBackground: "{surface.50}" },
      bodyCell: { selectedBorderColor: "{primary.100}" },
    },
    dark: {
      root: { borderColor: "{surface.800}" },
      row: { stripedBackground: "{surface.950}" },
      bodyCell: { selectedBorderColor: "{primary.900}" },
    },
  },
  Oj = {
    root: gj,
    header: vj,
    headerCell: bj,
    columnTitle: yj,
    row: xj,
    bodyCell: _j,
    footerCell: wj,
    columnFooter: kj,
    footer: Sj,
    dropPoint: Cj,
    columnResizer: Mj,
    resizeIndicator: Ej,
    sortIcon: Tj,
    loadingIcon: Aj,
    rowToggleButton: Pj,
    filter: Rj,
    paginatorTop: Lj,
    paginatorBottom: Dj,
    colorScheme: Ij,
  },
  $j = {
    borderColor: "transparent",
    borderWidth: "0",
    borderRadius: "0",
    padding: "0",
  },
  zj = {
    background: "{content.background}",
    color: "{content.color}",
    borderColor: "{content.border.color}",
    borderWidth: "0 0 1px 0",
    padding: "0.75rem 1rem",
    borderRadius: "0",
  },
  Bj = {
    background: "{content.background}",
    color: "{content.color}",
    borderColor: "transparent",
    borderWidth: "0",
    padding: "0",
    borderRadius: "0",
  },
  Uj = {
    background: "{content.background}",
    color: "{content.color}",
    borderColor: "{content.border.color}",
    borderWidth: "1px 0 0 0",
    padding: "0.75rem 1rem",
    borderRadius: "0",
  },
  Fj = { borderColor: "{content.border.color}", borderWidth: "0 0 1px 0" },
  Nj = { borderColor: "{content.border.color}", borderWidth: "1px 0 0 0" },
  Vj = {
    root: $j,
    header: zj,
    content: Bj,
    footer: Uj,
    paginatorTop: Fj,
    paginatorBottom: Nj,
  },
  Hj = { transitionDuration: "{transition.duration}" },
  jj = {
    background: "{content.background}",
    borderColor: "{content.border.color}",
    color: "{content.color}",
    borderRadius: "{content.border.radius}",
    shadow: "{overlay.popover.shadow}",
    padding: "{overlay.popover.padding}",
  },
  Gj = {
    background: "{content.background}",
    borderColor: "{content.border.color}",
    color: "{content.color}",
    padding: "0 0 0.5rem 0",
  },
  Wj = { gap: "0.5rem", fontWeight: "500" },
  Kj = {
    width: "2.5rem",
    sm: { width: "2rem" },
    lg: { width: "3rem" },
    borderColor: "{form.field.border.color}",
    hoverBorderColor: "{form.field.border.color}",
    activeBorderColor: "{form.field.border.color}",
    borderRadius: "{form.field.border.radius}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  Xj = { color: "{form.field.icon.color}" },
  Yj = {
    hoverBackground: "{content.hover.background}",
    color: "{content.color}",
    hoverColor: "{content.hover.color}",
    padding: "0.25rem 0.5rem",
    borderRadius: "{content.border.radius}",
  },
  qj = {
    hoverBackground: "{content.hover.background}",
    color: "{content.color}",
    hoverColor: "{content.hover.color}",
    padding: "0.25rem 0.5rem",
    borderRadius: "{content.border.radius}",
  },
  Zj = {
    borderColor: "{content.border.color}",
    gap: "{overlay.popover.padding}",
  },
  Jj = { margin: "0.5rem 0 0 0" },
  Qj = { padding: "0.25rem", fontWeight: "500", color: "{content.color}" },
  eG = {
    hoverBackground: "{content.hover.background}",
    selectedBackground: "{primary.color}",
    rangeSelectedBackground: "{highlight.background}",
    color: "{content.color}",
    hoverColor: "{content.hover.color}",
    selectedColor: "{primary.contrast.color}",
    rangeSelectedColor: "{highlight.color}",
    width: "2rem",
    height: "2rem",
    borderRadius: "50%",
    padding: "0.25rem",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  tG = { margin: "0.5rem 0 0 0" },
  nG = { padding: "0.375rem", borderRadius: "{content.border.radius}" },
  rG = { margin: "0.5rem 0 0 0" },
  iG = { padding: "0.375rem", borderRadius: "{content.border.radius}" },
  oG = { padding: "0.5rem 0 0 0", borderColor: "{content.border.color}" },
  sG = {
    padding: "0.5rem 0 0 0",
    borderColor: "{content.border.color}",
    gap: "0.5rem",
    buttonGap: "0.25rem",
  },
  aG = {
    light: {
      dropdown: {
        background: "{surface.100}",
        hoverBackground: "{surface.200}",
        activeBackground: "{surface.300}",
        color: "{surface.600}",
        hoverColor: "{surface.700}",
        activeColor: "{surface.800}",
      },
      today: { background: "{surface.200}", color: "{surface.900}" },
    },
    dark: {
      dropdown: {
        background: "{surface.800}",
        hoverBackground: "{surface.700}",
        activeBackground: "{surface.600}",
        color: "{surface.300}",
        hoverColor: "{surface.200}",
        activeColor: "{surface.100}",
      },
      today: { background: "{surface.700}", color: "{surface.0}" },
    },
  },
  lG = {
    root: Hj,
    panel: jj,
    header: Gj,
    title: Wj,
    dropdown: Kj,
    inputIcon: Xj,
    selectMonth: Yj,
    selectYear: qj,
    group: Zj,
    dayView: Jj,
    weekDay: Qj,
    date: eG,
    monthView: tG,
    month: nG,
    yearView: rG,
    year: iG,
    buttonbar: oG,
    timePicker: sG,
    colorScheme: aG,
  },
  cG = {
    background: "{overlay.modal.background}",
    borderColor: "{overlay.modal.border.color}",
    color: "{overlay.modal.color}",
    borderRadius: "{overlay.modal.border.radius}",
    shadow: "{overlay.modal.shadow}",
  },
  uG = { padding: "{overlay.modal.padding}", gap: "0.5rem" },
  dG = { fontSize: "1.25rem", fontWeight: "600" },
  fG = {
    padding:
      "0 {overlay.modal.padding} {overlay.modal.padding} {overlay.modal.padding}",
  },
  pG = {
    padding:
      "0 {overlay.modal.padding} {overlay.modal.padding} {overlay.modal.padding}",
    gap: "0.5rem",
  },
  hG = { root: cG, header: uG, title: dG, content: fG, footer: pG },
  mG = { borderColor: "{content.border.color}" },
  gG = { background: "{content.background}", color: "{text.color}" },
  vG = {
    margin: "1rem 0",
    padding: "0 1rem",
    content: { padding: "0 0.5rem" },
  },
  bG = {
    margin: "0 1rem",
    padding: "0.5rem 0",
    content: { padding: "0.5rem 0" },
  },
  yG = { root: mG, content: gG, horizontal: vG, vertical: bG },
  xG = {
    background: "rgba(255, 255, 255, 0.1)",
    borderColor: "rgba(255, 255, 255, 0.2)",
    padding: "0.5rem",
    borderRadius: "{border.radius.xl}",
  },
  _G = {
    borderRadius: "{content.border.radius}",
    padding: "0.5rem",
    size: "3rem",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  wG = { root: xG, item: _G },
  kG = {
    background: "{overlay.modal.background}",
    borderColor: "{overlay.modal.border.color}",
    color: "{overlay.modal.color}",
    shadow: "{overlay.modal.shadow}",
  },
  SG = { padding: "{overlay.modal.padding}" },
  CG = { fontSize: "1.5rem", fontWeight: "600" },
  MG = {
    padding:
      "0 {overlay.modal.padding} {overlay.modal.padding} {overlay.modal.padding}",
  },
  EG = { padding: "{overlay.modal.padding}" },
  TG = { root: kG, header: SG, title: CG, content: MG, footer: EG },
  AG = {
    background: "{content.background}",
    borderColor: "{content.border.color}",
    borderRadius: "{content.border.radius}",
  },
  PG = {
    color: "{text.muted.color}",
    hoverColor: "{text.color}",
    activeColor: "{primary.color}",
  },
  RG = {
    background: "{overlay.select.background}",
    borderColor: "{overlay.select.border.color}",
    borderRadius: "{overlay.select.border.radius}",
    color: "{overlay.select.color}",
    shadow: "{overlay.select.shadow}",
    padding: "{list.padding}",
  },
  LG = {
    focusBackground: "{list.option.focus.background}",
    color: "{list.option.color}",
    focusColor: "{list.option.focus.color}",
    padding: "{list.option.padding}",
    borderRadius: "{list.option.border.radius}",
  },
  DG = {
    background: "{content.background}",
    borderColor: "{content.border.color}",
    color: "{content.color}",
    borderRadius: "{content.border.radius}",
  },
  IG = {
    toolbar: AG,
    toolbarItem: PG,
    overlay: RG,
    overlayOption: LG,
    content: DG,
  },
  OG = {
    background: "{content.background}",
    borderColor: "{content.border.color}",
    borderRadius: "{content.border.radius}",
    color: "{content.color}",
    padding: "0 1.125rem 1.125rem 1.125rem",
    transitionDuration: "{transition.duration}",
  },
  $G = {
    background: "{content.background}",
    hoverBackground: "{content.hover.background}",
    color: "{content.color}",
    hoverColor: "{content.hover.color}",
    borderRadius: "{content.border.radius}",
    borderWidth: "1px",
    borderColor: "transparent",
    padding: "0.5rem 0.75rem",
    gap: "0.5rem",
    fontWeight: "600",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  zG = { color: "{text.muted.color}", hoverColor: "{text.hover.muted.color}" },
  BG = { padding: "0" },
  UG = { root: OG, legend: $G, toggleIcon: zG, content: BG },
  FG = {
    background: "{content.background}",
    borderColor: "{content.border.color}",
    color: "{content.color}",
    borderRadius: "{content.border.radius}",
    transitionDuration: "{transition.duration}",
  },
  NG = {
    background: "transparent",
    color: "{text.color}",
    padding: "1.125rem",
    borderColor: "unset",
    borderWidth: "0",
    borderRadius: "0",
    gap: "0.5rem",
  },
  VG = {
    highlightBorderColor: "{primary.color}",
    padding: "0 1.125rem 1.125rem 1.125rem",
    gap: "1rem",
  },
  HG = {
    padding: "1rem",
    gap: "1rem",
    borderColor: "{content.border.color}",
    info: { gap: "0.5rem" },
  },
  jG = { gap: "0.5rem" },
  GG = { height: "0.25rem" },
  WG = { gap: "0.5rem" },
  KG = {
    root: FG,
    header: NG,
    content: VG,
    file: HG,
    fileList: jG,
    progressbar: GG,
    basic: WG,
  },
  XG = {
    color: "{form.field.float.label.color}",
    focusColor: "{form.field.float.label.focus.color}",
    activeColor: "{form.field.float.label.active.color}",
    invalidColor: "{form.field.float.label.invalid.color}",
    transitionDuration: "0.2s",
    positionX: "{form.field.padding.x}",
    positionY: "{form.field.padding.y}",
    fontWeight: "500",
    active: { fontSize: "0.75rem", fontWeight: "400" },
  },
  YG = { active: { top: "-1.25rem" } },
  qG = {
    input: { paddingTop: "1.5rem", paddingBottom: "{form.field.padding.y}" },
    active: { top: "{form.field.padding.y}" },
  },
  ZG = {
    borderRadius: "{border.radius.xs}",
    active: { background: "{form.field.background}", padding: "0 0.125rem" },
  },
  JG = { root: XG, over: YG, in: qG, on: ZG },
  QG = {
    borderWidth: "1px",
    borderColor: "{content.border.color}",
    borderRadius: "{content.border.radius}",
    transitionDuration: "{transition.duration}",
  },
  eW = {
    background: "rgba(255, 255, 255, 0.1)",
    hoverBackground: "rgba(255, 255, 255, 0.2)",
    color: "{surface.100}",
    hoverColor: "{surface.0}",
    size: "3rem",
    gutter: "0.5rem",
    prev: { borderRadius: "50%" },
    next: { borderRadius: "50%" },
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  tW = { size: "1.5rem" },
  nW = { background: "{content.background}", padding: "1rem 0.25rem" },
  rW = {
    size: "2rem",
    borderRadius: "{content.border.radius}",
    gutter: "0.5rem",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  iW = { size: "1rem" },
  oW = {
    background: "rgba(0, 0, 0, 0.5)",
    color: "{surface.100}",
    padding: "1rem",
  },
  sW = { gap: "0.5rem", padding: "1rem" },
  aW = {
    width: "1rem",
    height: "1rem",
    activeBackground: "{primary.color}",
    borderRadius: "50%",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  lW = { background: "rgba(0, 0, 0, 0.5)" },
  cW = {
    background: "rgba(255, 255, 255, 0.4)",
    hoverBackground: "rgba(255, 255, 255, 0.6)",
    activeBackground: "rgba(255, 255, 255, 0.9)",
  },
  uW = {
    size: "3rem",
    gutter: "0.5rem",
    background: "rgba(255, 255, 255, 0.1)",
    hoverBackground: "rgba(255, 255, 255, 0.2)",
    color: "{surface.50}",
    hoverColor: "{surface.0}",
    borderRadius: "50%",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  dW = { size: "1.5rem" },
  fW = {
    light: {
      thumbnailNavButton: {
        hoverBackground: "{surface.100}",
        color: "{surface.600}",
        hoverColor: "{surface.700}",
      },
      indicatorButton: {
        background: "{surface.200}",
        hoverBackground: "{surface.300}",
      },
    },
    dark: {
      thumbnailNavButton: {
        hoverBackground: "{surface.700}",
        color: "{surface.400}",
        hoverColor: "{surface.0}",
      },
      indicatorButton: {
        background: "{surface.700}",
        hoverBackground: "{surface.600}",
      },
    },
  },
  pW = {
    root: QG,
    navButton: eW,
    navIcon: tW,
    thumbnailsContent: nW,
    thumbnailNavButton: rW,
    thumbnailNavButtonIcon: iW,
    caption: oW,
    indicatorList: sW,
    indicatorButton: aW,
    insetIndicatorList: lW,
    insetIndicatorButton: cW,
    closeButton: uW,
    closeButtonIcon: dW,
    colorScheme: fW,
  },
  hW = { color: "{form.field.icon.color}" },
  mW = { icon: hW },
  gW = {
    color: "{form.field.float.label.color}",
    focusColor: "{form.field.float.label.focus.color}",
    invalidColor: "{form.field.float.label.invalid.color}",
    transitionDuration: "0.2s",
    positionX: "{form.field.padding.x}",
    top: "{form.field.padding.y}",
    fontSize: "0.75rem",
    fontWeight: "400",
  },
  vW = { paddingTop: "1.5rem", paddingBottom: "{form.field.padding.y}" },
  bW = { root: gW, input: vW },
  yW = { transitionDuration: "{transition.duration}" },
  xW = {
    icon: { size: "1.5rem" },
    mask: { background: "{mask.background}", color: "{mask.color}" },
  },
  _W = {
    position: { left: "auto", right: "1rem", top: "1rem", bottom: "auto" },
    blur: "8px",
    background: "rgba(255,255,255,0.1)",
    borderColor: "rgba(255,255,255,0.2)",
    borderWidth: "1px",
    borderRadius: "30px",
    padding: ".5rem",
    gap: "0.5rem",
  },
  wW = {
    hoverBackground: "rgba(255,255,255,0.1)",
    color: "{surface.50}",
    hoverColor: "{surface.0}",
    size: "3rem",
    iconSize: "1.5rem",
    borderRadius: "50%",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  kW = { root: yW, preview: xW, toolbar: _W, action: wW },
  SW = {
    size: "15px",
    hoverSize: "30px",
    background: "rgba(255,255,255,0.3)",
    hoverBackground: "rgba(255,255,255,0.3)",
    borderColor: "unset",
    hoverBorderColor: "unset",
    borderWidth: "0",
    borderRadius: "50%",
    transitionDuration: "{transition.duration}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "rgba(255,255,255,0.3)",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  CW = { handle: SW },
  MW = {
    padding: "{form.field.padding.y} {form.field.padding.x}",
    borderRadius: "{content.border.radius}",
    gap: "0.5rem",
  },
  EW = { fontWeight: "500" },
  TW = { size: "1rem" },
  AW = {
    light: {
      info: {
        background: "color-mix(in srgb, {blue.50}, transparent 5%)",
        borderColor: "{blue.200}",
        color: "{blue.600}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {blue.500}, transparent 96%)",
      },
      success: {
        background: "color-mix(in srgb, {green.50}, transparent 5%)",
        borderColor: "{green.200}",
        color: "{green.600}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {green.500}, transparent 96%)",
      },
      warn: {
        background: "color-mix(in srgb,{yellow.50}, transparent 5%)",
        borderColor: "{yellow.200}",
        color: "{yellow.600}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {yellow.500}, transparent 96%)",
      },
      error: {
        background: "color-mix(in srgb, {red.50}, transparent 5%)",
        borderColor: "{red.200}",
        color: "{red.600}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {red.500}, transparent 96%)",
      },
      secondary: {
        background: "{surface.100}",
        borderColor: "{surface.200}",
        color: "{surface.600}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {surface.500}, transparent 96%)",
      },
      contrast: {
        background: "{surface.900}",
        borderColor: "{surface.950}",
        color: "{surface.50}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {surface.950}, transparent 96%)",
      },
    },
    dark: {
      info: {
        background: "color-mix(in srgb, {blue.500}, transparent 84%)",
        borderColor: "color-mix(in srgb, {blue.700}, transparent 64%)",
        color: "{blue.500}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {blue.500}, transparent 96%)",
      },
      success: {
        background: "color-mix(in srgb, {green.500}, transparent 84%)",
        borderColor: "color-mix(in srgb, {green.700}, transparent 64%)",
        color: "{green.500}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {green.500}, transparent 96%)",
      },
      warn: {
        background: "color-mix(in srgb, {yellow.500}, transparent 84%)",
        borderColor: "color-mix(in srgb, {yellow.700}, transparent 64%)",
        color: "{yellow.500}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {yellow.500}, transparent 96%)",
      },
      error: {
        background: "color-mix(in srgb, {red.500}, transparent 84%)",
        borderColor: "color-mix(in srgb, {red.700}, transparent 64%)",
        color: "{red.500}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {red.500}, transparent 96%)",
      },
      secondary: {
        background: "{surface.800}",
        borderColor: "{surface.700}",
        color: "{surface.300}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {surface.500}, transparent 96%)",
      },
      contrast: {
        background: "{surface.0}",
        borderColor: "{surface.100}",
        color: "{surface.950}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {surface.950}, transparent 96%)",
      },
    },
  },
  PW = { root: MW, text: EW, icon: TW, colorScheme: AW },
  RW = {
    padding: "{form.field.padding.y} {form.field.padding.x}",
    borderRadius: "{content.border.radius}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
    transitionDuration: "{transition.duration}",
  },
  LW = {
    hoverBackground: "{content.hover.background}",
    hoverColor: "{content.hover.color}",
  },
  DW = { root: RW, display: LW },
  IW = {
    background: "{form.field.background}",
    disabledBackground: "{form.field.disabled.background}",
    filledBackground: "{form.field.filled.background}",
    filledFocusBackground: "{form.field.filled.focus.background}",
    borderColor: "{form.field.border.color}",
    hoverBorderColor: "{form.field.hover.border.color}",
    focusBorderColor: "{form.field.focus.border.color}",
    invalidBorderColor: "{form.field.invalid.border.color}",
    color: "{form.field.color}",
    disabledColor: "{form.field.disabled.color}",
    placeholderColor: "{form.field.placeholder.color}",
    shadow: "{form.field.shadow}",
    paddingX: "{form.field.padding.x}",
    paddingY: "{form.field.padding.y}",
    borderRadius: "{form.field.border.radius}",
    focusRing: {
      width: "{form.field.focus.ring.width}",
      style: "{form.field.focus.ring.style}",
      color: "{form.field.focus.ring.color}",
      offset: "{form.field.focus.ring.offset}",
      shadow: "{form.field.focus.ring.shadow}",
    },
    transitionDuration: "{form.field.transition.duration}",
  },
  OW = { borderRadius: "{border.radius.sm}" },
  $W = {
    light: {
      chip: { focusBackground: "{surface.200}", color: "{surface.800}" },
    },
    dark: { chip: { focusBackground: "{surface.700}", color: "{surface.0}" } },
  },
  zW = { root: IW, chip: OW, colorScheme: $W },
  BW = {
    background: "{form.field.background}",
    borderColor: "{form.field.border.color}",
    color: "{form.field.icon.color}",
    borderRadius: "{form.field.border.radius}",
    padding: "0.5rem",
    minWidth: "2.5rem",
  },
  UW = { addon: BW },
  FW = { transitionDuration: "{transition.duration}" },
  NW = {
    width: "2.5rem",
    borderRadius: "{form.field.border.radius}",
    verticalPadding: "{form.field.padding.y}",
  },
  VW = {
    light: {
      button: {
        background: "transparent",
        hoverBackground: "{surface.100}",
        activeBackground: "{surface.200}",
        borderColor: "{form.field.border.color}",
        hoverBorderColor: "{form.field.border.color}",
        activeBorderColor: "{form.field.border.color}",
        color: "{surface.400}",
        hoverColor: "{surface.500}",
        activeColor: "{surface.600}",
      },
    },
    dark: {
      button: {
        background: "transparent",
        hoverBackground: "{surface.800}",
        activeBackground: "{surface.700}",
        borderColor: "{form.field.border.color}",
        hoverBorderColor: "{form.field.border.color}",
        activeBorderColor: "{form.field.border.color}",
        color: "{surface.400}",
        hoverColor: "{surface.300}",
        activeColor: "{surface.200}",
      },
    },
  },
  HW = { root: FW, button: NW, colorScheme: VW },
  jW = { gap: "0.5rem" },
  GW = { width: "2.5rem", sm: { width: "2rem" }, lg: { width: "3rem" } },
  WW = { root: jW, input: GW },
  KW = {
    background: "{form.field.background}",
    disabledBackground: "{form.field.disabled.background}",
    filledBackground: "{form.field.filled.background}",
    filledHoverBackground: "{form.field.filled.hover.background}",
    filledFocusBackground: "{form.field.filled.focus.background}",
    borderColor: "{form.field.border.color}",
    hoverBorderColor: "{form.field.hover.border.color}",
    focusBorderColor: "{form.field.focus.border.color}",
    invalidBorderColor: "{form.field.invalid.border.color}",
    color: "{form.field.color}",
    disabledColor: "{form.field.disabled.color}",
    placeholderColor: "{form.field.placeholder.color}",
    invalidPlaceholderColor: "{form.field.invalid.placeholder.color}",
    shadow: "{form.field.shadow}",
    paddingX: "{form.field.padding.x}",
    paddingY: "{form.field.padding.y}",
    borderRadius: "{form.field.border.radius}",
    focusRing: {
      width: "{form.field.focus.ring.width}",
      style: "{form.field.focus.ring.style}",
      color: "{form.field.focus.ring.color}",
      offset: "{form.field.focus.ring.offset}",
      shadow: "{form.field.focus.ring.shadow}",
    },
    transitionDuration: "{form.field.transition.duration}",
    sm: {
      fontSize: "{form.field.sm.font.size}",
      paddingX: "{form.field.sm.padding.x}",
      paddingY: "{form.field.sm.padding.y}",
    },
    lg: {
      fontSize: "{form.field.lg.font.size}",
      paddingX: "{form.field.lg.padding.x}",
      paddingY: "{form.field.lg.padding.y}",
    },
  },
  XW = { root: KW },
  YW = {
    transitionDuration: "{transition.duration}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  qW = { background: "{primary.color}" },
  ZW = { background: "{content.border.color}" },
  JW = { color: "{text.muted.color}" },
  QW = { root: YW, value: qW, range: ZW, text: JW },
  eK = {
    background: "{form.field.background}",
    disabledBackground: "{form.field.disabled.background}",
    borderColor: "{form.field.border.color}",
    invalidBorderColor: "{form.field.invalid.border.color}",
    color: "{form.field.color}",
    disabledColor: "{form.field.disabled.color}",
    shadow: "{form.field.shadow}",
    borderRadius: "{form.field.border.radius}",
    transitionDuration: "{form.field.transition.duration}",
  },
  tK = {
    padding: "{list.padding}",
    gap: "{list.gap}",
    header: { padding: "{list.header.padding}" },
  },
  nK = {
    focusBackground: "{list.option.focus.background}",
    selectedBackground: "{list.option.selected.background}",
    selectedFocusBackground: "{list.option.selected.focus.background}",
    color: "{list.option.color}",
    focusColor: "{list.option.focus.color}",
    selectedColor: "{list.option.selected.color}",
    selectedFocusColor: "{list.option.selected.focus.color}",
    padding: "{list.option.padding}",
    borderRadius: "{list.option.border.radius}",
  },
  rK = {
    background: "{list.option.group.background}",
    color: "{list.option.group.color}",
    fontWeight: "{list.option.group.font.weight}",
    padding: "{list.option.group.padding}",
  },
  iK = {
    color: "{list.option.color}",
    gutterStart: "-0.375rem",
    gutterEnd: "0.375rem",
  },
  oK = { padding: "{list.option.padding}" },
  sK = {
    light: { option: { stripedBackground: "{surface.50}" } },
    dark: { option: { stripedBackground: "{surface.900}" } },
  },
  aK = {
    root: eK,
    list: tK,
    option: nK,
    optionGroup: rK,
    checkmark: iK,
    emptyMessage: oK,
    colorScheme: sK,
  },
  lK = {
    background: "{content.background}",
    borderColor: "{content.border.color}",
    borderRadius: "{content.border.radius}",
    color: "{content.color}",
    gap: "0.5rem",
    verticalOrientation: {
      padding: "{navigation.list.padding}",
      gap: "{navigation.list.gap}",
    },
    horizontalOrientation: { padding: "0.5rem 0.75rem", gap: "0.5rem" },
    transitionDuration: "{transition.duration}",
  },
  cK = {
    borderRadius: "{content.border.radius}",
    padding: "{navigation.item.padding}",
  },
  uK = {
    focusBackground: "{navigation.item.focus.background}",
    activeBackground: "{navigation.item.active.background}",
    color: "{navigation.item.color}",
    focusColor: "{navigation.item.focus.color}",
    activeColor: "{navigation.item.active.color}",
    padding: "{navigation.item.padding}",
    borderRadius: "{navigation.item.border.radius}",
    gap: "{navigation.item.gap}",
    icon: {
      color: "{navigation.item.icon.color}",
      focusColor: "{navigation.item.icon.focus.color}",
      activeColor: "{navigation.item.icon.active.color}",
    },
  },
  dK = {
    padding: "0",
    background: "{content.background}",
    borderColor: "{content.border.color}",
    borderRadius: "{content.border.radius}",
    color: "{content.color}",
    shadow: "{overlay.navigation.shadow}",
    gap: "0.5rem",
  },
  fK = { padding: "{navigation.list.padding}", gap: "{navigation.list.gap}" },
  pK = {
    padding: "{navigation.submenu.label.padding}",
    fontWeight: "{navigation.submenu.label.font.weight}",
    background: "{navigation.submenu.label.background.}",
    color: "{navigation.submenu.label.color}",
  },
  hK = {
    size: "{navigation.submenu.icon.size}",
    color: "{navigation.submenu.icon.color}",
    focusColor: "{navigation.submenu.icon.focus.color}",
    activeColor: "{navigation.submenu.icon.active.color}",
  },
  mK = { borderColor: "{content.border.color}" },
  gK = {
    borderRadius: "50%",
    size: "1.75rem",
    color: "{text.muted.color}",
    hoverColor: "{text.hover.muted.color}",
    hoverBackground: "{content.hover.background}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  vK = {
    root: lK,
    baseItem: cK,
    item: uK,
    overlay: dK,
    submenu: fK,
    submenuLabel: pK,
    submenuIcon: hK,
    separator: mK,
    mobileButton: gK,
  },
  bK = {
    background: "{content.background}",
    borderColor: "{content.border.color}",
    color: "{content.color}",
    borderRadius: "{content.border.radius}",
    shadow: "{overlay.navigation.shadow}",
    transitionDuration: "{transition.duration}",
  },
  yK = { padding: "{navigation.list.padding}", gap: "{navigation.list.gap}" },
  xK = {
    focusBackground: "{navigation.item.focus.background}",
    color: "{navigation.item.color}",
    focusColor: "{navigation.item.focus.color}",
    padding: "{navigation.item.padding}",
    borderRadius: "{navigation.item.border.radius}",
    gap: "{navigation.item.gap}",
    icon: {
      color: "{navigation.item.icon.color}",
      focusColor: "{navigation.item.icon.focus.color}",
    },
  },
  _K = {
    padding: "{navigation.submenu.label.padding}",
    fontWeight: "{navigation.submenu.label.font.weight}",
    background: "{navigation.submenu.label.background}",
    color: "{navigation.submenu.label.color}",
  },
  wK = { borderColor: "{content.border.color}" },
  kK = { root: bK, list: yK, item: xK, submenuLabel: _K, separator: wK },
  SK = {
    background: "{content.background}",
    borderColor: "{content.border.color}",
    borderRadius: "{content.border.radius}",
    color: "{content.color}",
    gap: "0.5rem",
    padding: "0.5rem 0.75rem",
    transitionDuration: "{transition.duration}",
  },
  CK = {
    borderRadius: "{content.border.radius}",
    padding: "{navigation.item.padding}",
  },
  MK = {
    focusBackground: "{navigation.item.focus.background}",
    activeBackground: "{navigation.item.active.background}",
    color: "{navigation.item.color}",
    focusColor: "{navigation.item.focus.color}",
    activeColor: "{navigation.item.active.color}",
    padding: "{navigation.item.padding}",
    borderRadius: "{navigation.item.border.radius}",
    gap: "{navigation.item.gap}",
    icon: {
      color: "{navigation.item.icon.color}",
      focusColor: "{navigation.item.icon.focus.color}",
      activeColor: "{navigation.item.icon.active.color}",
    },
  },
  EK = {
    padding: "{navigation.list.padding}",
    gap: "{navigation.list.gap}",
    background: "{content.background}",
    borderColor: "{content.border.color}",
    borderRadius: "{content.border.radius}",
    shadow: "{overlay.navigation.shadow}",
    mobileIndent: "1rem",
    icon: {
      size: "{navigation.submenu.icon.size}",
      color: "{navigation.submenu.icon.color}",
      focusColor: "{navigation.submenu.icon.focus.color}",
      activeColor: "{navigation.submenu.icon.active.color}",
    },
  },
  TK = { borderColor: "{content.border.color}" },
  AK = {
    borderRadius: "50%",
    size: "1.75rem",
    color: "{text.muted.color}",
    hoverColor: "{text.hover.muted.color}",
    hoverBackground: "{content.hover.background}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  PK = {
    root: SK,
    baseItem: CK,
    item: MK,
    submenu: EK,
    separator: TK,
    mobileButton: AK,
  },
  RK = {
    borderRadius: "{content.border.radius}",
    borderWidth: "1px",
    transitionDuration: "{transition.duration}",
  },
  LK = {
    padding: "0.5rem 0.75rem",
    gap: "0.5rem",
    sm: { padding: "0.375rem 0.625rem" },
    lg: { padding: "0.625rem 0.875rem" },
  },
  DK = {
    fontSize: "1rem",
    fontWeight: "500",
    sm: { fontSize: "0.875rem" },
    lg: { fontSize: "1.125rem" },
  },
  IK = { size: "1.125rem", sm: { size: "1rem" }, lg: { size: "1.25rem" } },
  OK = {
    width: "1.75rem",
    height: "1.75rem",
    borderRadius: "50%",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      offset: "{focus.ring.offset}",
    },
  },
  $K = { size: "1rem", sm: { size: "0.875rem" }, lg: { size: "1.125rem" } },
  zK = { root: { borderWidth: "1px" } },
  BK = { content: { padding: "0" } },
  UK = {
    light: {
      info: {
        background: "color-mix(in srgb, {blue.50}, transparent 5%)",
        borderColor: "{blue.200}",
        color: "{blue.600}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {blue.500}, transparent 96%)",
        closeButton: {
          hoverBackground: "{blue.100}",
          focusRing: { color: "{blue.600}", shadow: "none" },
        },
        outlined: { color: "{blue.600}", borderColor: "{blue.600}" },
        simple: { color: "{blue.600}" },
      },
      success: {
        background: "color-mix(in srgb, {green.50}, transparent 5%)",
        borderColor: "{green.200}",
        color: "{green.600}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {green.500}, transparent 96%)",
        closeButton: {
          hoverBackground: "{green.100}",
          focusRing: { color: "{green.600}", shadow: "none" },
        },
        outlined: { color: "{green.600}", borderColor: "{green.600}" },
        simple: { color: "{green.600}" },
      },
      warn: {
        background: "color-mix(in srgb,{yellow.50}, transparent 5%)",
        borderColor: "{yellow.200}",
        color: "{yellow.600}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {yellow.500}, transparent 96%)",
        closeButton: {
          hoverBackground: "{yellow.100}",
          focusRing: { color: "{yellow.600}", shadow: "none" },
        },
        outlined: { color: "{yellow.600}", borderColor: "{yellow.600}" },
        simple: { color: "{yellow.600}" },
      },
      error: {
        background: "color-mix(in srgb, {red.50}, transparent 5%)",
        borderColor: "{red.200}",
        color: "{red.600}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {red.500}, transparent 96%)",
        closeButton: {
          hoverBackground: "{red.100}",
          focusRing: { color: "{red.600}", shadow: "none" },
        },
        outlined: { color: "{red.600}", borderColor: "{red.600}" },
        simple: { color: "{red.600}" },
      },
      secondary: {
        background: "{surface.100}",
        borderColor: "{surface.200}",
        color: "{surface.600}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {surface.500}, transparent 96%)",
        closeButton: {
          hoverBackground: "{surface.200}",
          focusRing: { color: "{surface.600}", shadow: "none" },
        },
        outlined: { color: "{surface.500}", borderColor: "{surface.500}" },
        simple: { color: "{surface.500}" },
      },
      contrast: {
        background: "{surface.900}",
        borderColor: "{surface.950}",
        color: "{surface.50}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {surface.950}, transparent 96%)",
        closeButton: {
          hoverBackground: "{surface.800}",
          focusRing: { color: "{surface.50}", shadow: "none" },
        },
        outlined: { color: "{surface.950}", borderColor: "{surface.950}" },
        simple: { color: "{surface.950}" },
      },
    },
    dark: {
      info: {
        background: "color-mix(in srgb, {blue.500}, transparent 84%)",
        borderColor: "color-mix(in srgb, {blue.700}, transparent 64%)",
        color: "{blue.500}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {blue.500}, transparent 96%)",
        closeButton: {
          hoverBackground: "rgba(255, 255, 255, 0.05)",
          focusRing: { color: "{blue.500}", shadow: "none" },
        },
        outlined: { color: "{blue.500}", borderColor: "{blue.500}" },
        simple: { color: "{blue.500}" },
      },
      success: {
        background: "color-mix(in srgb, {green.500}, transparent 84%)",
        borderColor: "color-mix(in srgb, {green.700}, transparent 64%)",
        color: "{green.500}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {green.500}, transparent 96%)",
        closeButton: {
          hoverBackground: "rgba(255, 255, 255, 0.05)",
          focusRing: { color: "{green.500}", shadow: "none" },
        },
        outlined: { color: "{green.500}", borderColor: "{green.500}" },
        simple: { color: "{green.500}" },
      },
      warn: {
        background: "color-mix(in srgb, {yellow.500}, transparent 84%)",
        borderColor: "color-mix(in srgb, {yellow.700}, transparent 64%)",
        color: "{yellow.500}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {yellow.500}, transparent 96%)",
        closeButton: {
          hoverBackground: "rgba(255, 255, 255, 0.05)",
          focusRing: { color: "{yellow.500}", shadow: "none" },
        },
        outlined: { color: "{yellow.500}", borderColor: "{yellow.500}" },
        simple: { color: "{yellow.500}" },
      },
      error: {
        background: "color-mix(in srgb, {red.500}, transparent 84%)",
        borderColor: "color-mix(in srgb, {red.700}, transparent 64%)",
        color: "{red.500}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {red.500}, transparent 96%)",
        closeButton: {
          hoverBackground: "rgba(255, 255, 255, 0.05)",
          focusRing: { color: "{red.500}", shadow: "none" },
        },
        outlined: { color: "{red.500}", borderColor: "{red.500}" },
        simple: { color: "{red.500}" },
      },
      secondary: {
        background: "{surface.800}",
        borderColor: "{surface.700}",
        color: "{surface.300}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {surface.500}, transparent 96%)",
        closeButton: {
          hoverBackground: "{surface.700}",
          focusRing: { color: "{surface.300}", shadow: "none" },
        },
        outlined: { color: "{surface.400}", borderColor: "{surface.400}" },
        simple: { color: "{surface.400}" },
      },
      contrast: {
        background: "{surface.0}",
        borderColor: "{surface.100}",
        color: "{surface.950}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {surface.950}, transparent 96%)",
        closeButton: {
          hoverBackground: "{surface.100}",
          focusRing: { color: "{surface.950}", shadow: "none" },
        },
        outlined: { color: "{surface.0}", borderColor: "{surface.0}" },
        simple: { color: "{surface.0}" },
      },
    },
  },
  FK = {
    root: RK,
    content: LK,
    text: DK,
    icon: IK,
    closeButton: OK,
    closeIcon: $K,
    outlined: zK,
    simple: BK,
    colorScheme: UK,
  },
  NK = { borderRadius: "{content.border.radius}", gap: "1rem" },
  VK = { background: "{content.border.color}", size: "0.5rem" },
  HK = { gap: "0.5rem" },
  jK = { size: "0.5rem" },
  GK = { size: "1rem" },
  WK = { verticalGap: "0.5rem", horizontalGap: "1rem" },
  KK = {
    root: NK,
    meters: VK,
    label: HK,
    labelMarker: jK,
    labelIcon: GK,
    labelList: WK,
  },
  XK = {
    background: "{form.field.background}",
    disabledBackground: "{form.field.disabled.background}",
    filledBackground: "{form.field.filled.background}",
    filledHoverBackground: "{form.field.filled.hover.background}",
    filledFocusBackground: "{form.field.filled.focus.background}",
    borderColor: "{form.field.border.color}",
    hoverBorderColor: "{form.field.hover.border.color}",
    focusBorderColor: "{form.field.focus.border.color}",
    invalidBorderColor: "{form.field.invalid.border.color}",
    color: "{form.field.color}",
    disabledColor: "{form.field.disabled.color}",
    placeholderColor: "{form.field.placeholder.color}",
    invalidPlaceholderColor: "{form.field.invalid.placeholder.color}",
    shadow: "{form.field.shadow}",
    paddingX: "{form.field.padding.x}",
    paddingY: "{form.field.padding.y}",
    borderRadius: "{form.field.border.radius}",
    focusRing: {
      width: "{form.field.focus.ring.width}",
      style: "{form.field.focus.ring.style}",
      color: "{form.field.focus.ring.color}",
      offset: "{form.field.focus.ring.offset}",
      shadow: "{form.field.focus.ring.shadow}",
    },
    transitionDuration: "{form.field.transition.duration}",
    sm: {
      fontSize: "{form.field.sm.font.size}",
      paddingX: "{form.field.sm.padding.x}",
      paddingY: "{form.field.sm.padding.y}",
    },
    lg: {
      fontSize: "{form.field.lg.font.size}",
      paddingX: "{form.field.lg.padding.x}",
      paddingY: "{form.field.lg.padding.y}",
    },
  },
  YK = { width: "2.5rem", color: "{form.field.icon.color}" },
  qK = {
    background: "{overlay.select.background}",
    borderColor: "{overlay.select.border.color}",
    borderRadius: "{overlay.select.border.radius}",
    color: "{overlay.select.color}",
    shadow: "{overlay.select.shadow}",
  },
  ZK = {
    padding: "{list.padding}",
    gap: "{list.gap}",
    header: { padding: "{list.header.padding}" },
  },
  JK = {
    focusBackground: "{list.option.focus.background}",
    selectedBackground: "{list.option.selected.background}",
    selectedFocusBackground: "{list.option.selected.focus.background}",
    color: "{list.option.color}",
    focusColor: "{list.option.focus.color}",
    selectedColor: "{list.option.selected.color}",
    selectedFocusColor: "{list.option.selected.focus.color}",
    padding: "{list.option.padding}",
    borderRadius: "{list.option.border.radius}",
    gap: "0.5rem",
  },
  QK = {
    background: "{list.option.group.background}",
    color: "{list.option.group.color}",
    fontWeight: "{list.option.group.font.weight}",
    padding: "{list.option.group.padding}",
  },
  eX = { color: "{form.field.icon.color}" },
  tX = { borderRadius: "{border.radius.sm}" },
  nX = { padding: "{list.option.padding}" },
  rX = {
    root: XK,
    dropdown: YK,
    overlay: qK,
    list: ZK,
    option: JK,
    optionGroup: QK,
    chip: tX,
    clearIcon: eX,
    emptyMessage: nX,
  },
  iX = { gap: "1.125rem" },
  oX = { gap: "0.5rem" },
  sX = { root: iX, controls: oX },
  aX = { gutter: "0.75rem", transitionDuration: "{transition.duration}" },
  lX = {
    background: "{content.background}",
    hoverBackground: "{content.hover.background}",
    selectedBackground: "{highlight.background}",
    borderColor: "{content.border.color}",
    color: "{content.color}",
    selectedColor: "{highlight.color}",
    hoverColor: "{content.hover.color}",
    padding: "0.75rem 1rem",
    toggleablePadding: "0.75rem 1rem 1.25rem 1rem",
    borderRadius: "{content.border.radius}",
  },
  cX = {
    background: "{content.background}",
    hoverBackground: "{content.hover.background}",
    borderColor: "{content.border.color}",
    color: "{text.muted.color}",
    hoverColor: "{text.color}",
    size: "1.5rem",
    borderRadius: "50%",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  uX = {
    color: "{content.border.color}",
    borderRadius: "{content.border.radius}",
    height: "24px",
  },
  dX = { root: aX, node: lX, nodeToggleButton: cX, connector: uX },
  fX = { outline: { width: "2px", color: "{content.background}" } },
  pX = { root: fX },
  hX = {
    padding: "0.5rem 1rem",
    gap: "0.25rem",
    borderRadius: "{content.border.radius}",
    background: "{content.background}",
    color: "{content.color}",
    transitionDuration: "{transition.duration}",
  },
  mX = {
    background: "transparent",
    hoverBackground: "{content.hover.background}",
    selectedBackground: "{highlight.background}",
    color: "{text.muted.color}",
    hoverColor: "{text.hover.muted.color}",
    selectedColor: "{highlight.color}",
    width: "2.5rem",
    height: "2.5rem",
    borderRadius: "50%",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  gX = { color: "{text.muted.color}" },
  vX = { maxWidth: "2.5rem" },
  bX = { root: hX, navButton: mX, currentPageReport: gX, jumpToPageInput: vX },
  yX = {
    background: "{content.background}",
    borderColor: "{content.border.color}",
    color: "{content.color}",
    borderRadius: "{content.border.radius}",
  },
  xX = {
    background: "transparent",
    color: "{text.color}",
    padding: "1.125rem",
    borderColor: "{content.border.color}",
    borderWidth: "0",
    borderRadius: "0",
  },
  _X = { padding: "0.375rem 1.125rem" },
  wX = { fontWeight: "600" },
  kX = { padding: "0 1.125rem 1.125rem 1.125rem" },
  SX = { padding: "0 1.125rem 1.125rem 1.125rem" },
  CX = {
    root: yX,
    header: xX,
    toggleableHeader: _X,
    title: wX,
    content: kX,
    footer: SX,
  },
  MX = { gap: "0.5rem", transitionDuration: "{transition.duration}" },
  EX = {
    background: "{content.background}",
    borderColor: "{content.border.color}",
    borderWidth: "1px",
    color: "{content.color}",
    padding: "0.25rem 0.25rem",
    borderRadius: "{content.border.radius}",
    first: { borderWidth: "1px", topBorderRadius: "{content.border.radius}" },
    last: { borderWidth: "1px", bottomBorderRadius: "{content.border.radius}" },
  },
  TX = {
    focusBackground: "{navigation.item.focus.background}",
    color: "{navigation.item.color}",
    focusColor: "{navigation.item.focus.color}",
    gap: "0.5rem",
    padding: "{navigation.item.padding}",
    borderRadius: "{content.border.radius}",
    icon: {
      color: "{navigation.item.icon.color}",
      focusColor: "{navigation.item.icon.focus.color}",
    },
  },
  AX = { indent: "1rem" },
  PX = {
    color: "{navigation.submenu.icon.color}",
    focusColor: "{navigation.submenu.icon.focus.color}",
  },
  RX = { root: MX, panel: EX, item: TX, submenu: AX, submenuIcon: PX },
  LX = {
    background: "{content.border.color}",
    borderRadius: "{content.border.radius}",
    height: ".75rem",
  },
  DX = { color: "{form.field.icon.color}" },
  IX = {
    background: "{overlay.popover.background}",
    borderColor: "{overlay.popover.border.color}",
    borderRadius: "{overlay.popover.border.radius}",
    color: "{overlay.popover.color}",
    padding: "{overlay.popover.padding}",
    shadow: "{overlay.popover.shadow}",
  },
  OX = { gap: "0.5rem" },
  $X = {
    light: {
      strength: {
        weakBackground: "{red.500}",
        mediumBackground: "{amber.500}",
        strongBackground: "{green.500}",
      },
    },
    dark: {
      strength: {
        weakBackground: "{red.400}",
        mediumBackground: "{amber.400}",
        strongBackground: "{green.400}",
      },
    },
  },
  zX = { meter: LX, icon: DX, overlay: IX, content: OX, colorScheme: $X },
  BX = { gap: "1.125rem" },
  UX = { gap: "0.5rem" },
  FX = { root: BX, controls: UX },
  NX = {
    background: "{overlay.popover.background}",
    borderColor: "{overlay.popover.border.color}",
    color: "{overlay.popover.color}",
    borderRadius: "{overlay.popover.border.radius}",
    shadow: "{overlay.popover.shadow}",
    gutter: "10px",
    arrowOffset: "1.25rem",
  },
  VX = { padding: "{overlay.popover.padding}" },
  HX = { root: NX, content: VX },
  jX = {
    background: "{content.border.color}",
    borderRadius: "{content.border.radius}",
    height: "1.25rem",
  },
  GX = { background: "{primary.color}" },
  WX = {
    color: "{primary.contrast.color}",
    fontSize: "0.75rem",
    fontWeight: "600",
  },
  KX = { root: jX, value: GX, label: WX },
  XX = {
    light: {
      root: {
        colorOne: "{red.500}",
        colorTwo: "{blue.500}",
        colorThree: "{green.500}",
        colorFour: "{yellow.500}",
      },
    },
    dark: {
      root: {
        colorOne: "{red.400}",
        colorTwo: "{blue.400}",
        colorThree: "{green.400}",
        colorFour: "{yellow.400}",
      },
    },
  },
  YX = { colorScheme: XX },
  qX = {
    width: "1.25rem",
    height: "1.25rem",
    background: "{form.field.background}",
    checkedBackground: "{primary.color}",
    checkedHoverBackground: "{primary.hover.color}",
    disabledBackground: "{form.field.disabled.background}",
    filledBackground: "{form.field.filled.background}",
    borderColor: "{form.field.border.color}",
    hoverBorderColor: "{form.field.hover.border.color}",
    focusBorderColor: "{form.field.border.color}",
    checkedBorderColor: "{primary.color}",
    checkedHoverBorderColor: "{primary.hover.color}",
    checkedFocusBorderColor: "{primary.color}",
    checkedDisabledBorderColor: "{form.field.border.color}",
    invalidBorderColor: "{form.field.invalid.border.color}",
    shadow: "{form.field.shadow}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
    transitionDuration: "{form.field.transition.duration}",
    sm: { width: "1rem", height: "1rem" },
    lg: { width: "1.5rem", height: "1.5rem" },
  },
  ZX = {
    size: "0.75rem",
    checkedColor: "{primary.contrast.color}",
    checkedHoverColor: "{primary.contrast.color}",
    disabledColor: "{form.field.disabled.color}",
    sm: { size: "0.5rem" },
    lg: { size: "1rem" },
  },
  JX = { root: qX, icon: ZX },
  QX = {
    gap: "0.25rem",
    transitionDuration: "{transition.duration}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  eY = {
    size: "1rem",
    color: "{text.muted.color}",
    hoverColor: "{primary.color}",
    activeColor: "{primary.color}",
  },
  tY = { root: QX, icon: eY },
  nY = {
    light: { root: { background: "rgba(0,0,0,0.1)" } },
    dark: { root: { background: "rgba(255,255,255,0.3)" } },
  },
  rY = { colorScheme: nY },
  iY = { transitionDuration: "{transition.duration}" },
  oY = {
    size: "9px",
    borderRadius: "{border.radius.sm}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  sY = {
    light: { bar: { background: "{surface.100}" } },
    dark: { bar: { background: "{surface.800}" } },
  },
  aY = { root: iY, bar: oY, colorScheme: sY },
  lY = {
    background: "{form.field.background}",
    disabledBackground: "{form.field.disabled.background}",
    filledBackground: "{form.field.filled.background}",
    filledHoverBackground: "{form.field.filled.hover.background}",
    filledFocusBackground: "{form.field.filled.focus.background}",
    borderColor: "{form.field.border.color}",
    hoverBorderColor: "{form.field.hover.border.color}",
    focusBorderColor: "{form.field.focus.border.color}",
    invalidBorderColor: "{form.field.invalid.border.color}",
    color: "{form.field.color}",
    disabledColor: "{form.field.disabled.color}",
    placeholderColor: "{form.field.placeholder.color}",
    invalidPlaceholderColor: "{form.field.invalid.placeholder.color}",
    shadow: "{form.field.shadow}",
    paddingX: "{form.field.padding.x}",
    paddingY: "{form.field.padding.y}",
    borderRadius: "{form.field.border.radius}",
    focusRing: {
      width: "{form.field.focus.ring.width}",
      style: "{form.field.focus.ring.style}",
      color: "{form.field.focus.ring.color}",
      offset: "{form.field.focus.ring.offset}",
      shadow: "{form.field.focus.ring.shadow}",
    },
    transitionDuration: "{form.field.transition.duration}",
    sm: {
      fontSize: "{form.field.sm.font.size}",
      paddingX: "{form.field.sm.padding.x}",
      paddingY: "{form.field.sm.padding.y}",
    },
    lg: {
      fontSize: "{form.field.lg.font.size}",
      paddingX: "{form.field.lg.padding.x}",
      paddingY: "{form.field.lg.padding.y}",
    },
  },
  cY = { width: "2.5rem", color: "{form.field.icon.color}" },
  uY = {
    background: "{overlay.select.background}",
    borderColor: "{overlay.select.border.color}",
    borderRadius: "{overlay.select.border.radius}",
    color: "{overlay.select.color}",
    shadow: "{overlay.select.shadow}",
  },
  dY = {
    padding: "{list.padding}",
    gap: "{list.gap}",
    header: { padding: "{list.header.padding}" },
  },
  fY = {
    focusBackground: "{list.option.focus.background}",
    selectedBackground: "{list.option.selected.background}",
    selectedFocusBackground: "{list.option.selected.focus.background}",
    color: "{list.option.color}",
    focusColor: "{list.option.focus.color}",
    selectedColor: "{list.option.selected.color}",
    selectedFocusColor: "{list.option.selected.focus.color}",
    padding: "{list.option.padding}",
    borderRadius: "{list.option.border.radius}",
  },
  pY = {
    background: "{list.option.group.background}",
    color: "{list.option.group.color}",
    fontWeight: "{list.option.group.font.weight}",
    padding: "{list.option.group.padding}",
  },
  hY = { color: "{form.field.icon.color}" },
  mY = {
    color: "{list.option.color}",
    gutterStart: "-0.375rem",
    gutterEnd: "0.375rem",
  },
  gY = { padding: "{list.option.padding}" },
  vY = {
    root: lY,
    dropdown: cY,
    overlay: uY,
    list: dY,
    option: fY,
    optionGroup: pY,
    clearIcon: hY,
    checkmark: mY,
    emptyMessage: gY,
  },
  bY = { borderRadius: "{form.field.border.radius}" },
  yY = {
    light: {
      root: { invalidBorderColor: "{form.field.invalid.border.color}" },
    },
    dark: { root: { invalidBorderColor: "{form.field.invalid.border.color}" } },
  },
  xY = { root: bY, colorScheme: yY },
  _Y = { borderRadius: "{content.border.radius}" },
  wY = {
    light: {
      root: {
        background: "{surface.200}",
        animationBackground: "rgba(255,255,255,0.4)",
      },
    },
    dark: {
      root: {
        background: "rgba(255, 255, 255, 0.06)",
        animationBackground: "rgba(255, 255, 255, 0.04)",
      },
    },
  },
  kY = { root: _Y, colorScheme: wY },
  SY = { transitionDuration: "{transition.duration}" },
  CY = {
    background: "{content.border.color}",
    borderRadius: "{content.border.radius}",
    size: "3px",
  },
  MY = { background: "{primary.color}" },
  EY = {
    width: "20px",
    height: "20px",
    borderRadius: "50%",
    background: "{content.border.color}",
    hoverBackground: "{content.border.color}",
    content: {
      borderRadius: "50%",
      hoverBackground: "{content.background}",
      width: "16px",
      height: "16px",
      shadow:
        "0px 0.5px 0px 0px rgba(0, 0, 0, 0.08), 0px 1px 1px 0px rgba(0, 0, 0, 0.14)",
    },
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  TY = {
    light: { handle: { content: { background: "{surface.0}" } } },
    dark: { handle: { content: { background: "{surface.950}" } } },
  },
  AY = { root: SY, track: CY, range: MY, handle: EY, colorScheme: TY },
  PY = { gap: "0.5rem", transitionDuration: "{transition.duration}" },
  RY = { root: PY },
  LY = {
    borderRadius: "{form.field.border.radius}",
    roundedBorderRadius: "2rem",
    raisedShadow:
      "0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12)",
  },
  DY = { root: LY },
  IY = {
    background: "{content.background}",
    borderColor: "{content.border.color}",
    color: "{content.color}",
    transitionDuration: "{transition.duration}",
  },
  OY = { background: "{content.border.color}" },
  $Y = {
    size: "24px",
    background: "transparent",
    borderRadius: "{content.border.radius}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  zY = { root: IY, gutter: OY, handle: $Y },
  BY = { transitionDuration: "{transition.duration}" },
  UY = {
    background: "{content.border.color}",
    activeBackground: "{primary.color}",
    margin: "0 0 0 1.625rem",
    size: "2px",
  },
  FY = { padding: "0.5rem", gap: "1rem" },
  NY = {
    padding: "0",
    borderRadius: "{content.border.radius}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
    gap: "0.5rem",
  },
  VY = {
    color: "{text.muted.color}",
    activeColor: "{primary.color}",
    fontWeight: "500",
  },
  HY = {
    background: "{content.background}",
    activeBackground: "{content.background}",
    borderColor: "{content.border.color}",
    activeBorderColor: "{content.border.color}",
    color: "{text.muted.color}",
    activeColor: "{primary.color}",
    size: "2rem",
    fontSize: "1.143rem",
    fontWeight: "500",
    borderRadius: "50%",
    shadow:
      "0px 0.5px 0px 0px rgba(0, 0, 0, 0.06), 0px 1px 1px 0px rgba(0, 0, 0, 0.12)",
  },
  jY = { padding: "0.875rem 0.5rem 1.125rem 0.5rem" },
  GY = {
    background: "{content.background}",
    color: "{content.color}",
    padding: "0",
    indent: "1rem",
  },
  WY = {
    root: BY,
    separator: UY,
    step: FY,
    stepHeader: NY,
    stepTitle: VY,
    stepNumber: HY,
    steppanels: jY,
    steppanel: GY,
  },
  KY = { transitionDuration: "{transition.duration}" },
  XY = { background: "{content.border.color}" },
  YY = {
    borderRadius: "{content.border.radius}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
    gap: "0.5rem",
  },
  qY = {
    color: "{text.muted.color}",
    activeColor: "{primary.color}",
    fontWeight: "500",
  },
  ZY = {
    background: "{content.background}",
    activeBackground: "{content.background}",
    borderColor: "{content.border.color}",
    activeBorderColor: "{content.border.color}",
    color: "{text.muted.color}",
    activeColor: "{primary.color}",
    size: "2rem",
    fontSize: "1.143rem",
    fontWeight: "500",
    borderRadius: "50%",
    shadow:
      "0px 0.5px 0px 0px rgba(0, 0, 0, 0.06), 0px 1px 1px 0px rgba(0, 0, 0, 0.12)",
  },
  JY = { root: KY, separator: XY, itemLink: YY, itemLabel: qY, itemNumber: ZY },
  QY = { transitionDuration: "{transition.duration}" },
  eq = {
    borderWidth: "0 0 1px 0",
    background: "{content.background}",
    borderColor: "{content.border.color}",
  },
  tq = {
    background: "transparent",
    hoverBackground: "transparent",
    activeBackground: "transparent",
    borderWidth: "0 0 1px 0",
    borderColor: "{content.border.color}",
    hoverBorderColor: "{content.border.color}",
    activeBorderColor: "{primary.color}",
    color: "{text.muted.color}",
    hoverColor: "{text.color}",
    activeColor: "{primary.color}",
    padding: "1rem 1.125rem",
    fontWeight: "600",
    margin: "0 0 -1px 0",
    gap: "0.5rem",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  nq = {
    color: "{text.muted.color}",
    hoverColor: "{text.color}",
    activeColor: "{primary.color}",
  },
  rq = { height: "1px", bottom: "-1px", background: "{primary.color}" },
  iq = { root: QY, tablist: eq, item: tq, itemIcon: nq, activeBar: rq },
  oq = { transitionDuration: "{transition.duration}" },
  sq = {
    borderWidth: "0 0 1px 0",
    background: "{content.background}",
    borderColor: "{content.border.color}",
  },
  aq = {
    background: "transparent",
    hoverBackground: "transparent",
    activeBackground: "transparent",
    borderWidth: "0 0 1px 0",
    borderColor: "{content.border.color}",
    hoverBorderColor: "{content.border.color}",
    activeBorderColor: "{primary.color}",
    color: "{text.muted.color}",
    hoverColor: "{text.color}",
    activeColor: "{primary.color}",
    padding: "1rem 1.125rem",
    fontWeight: "600",
    margin: "0 0 -1px 0",
    gap: "0.5rem",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "-1px",
      shadow: "{focus.ring.shadow}",
    },
  },
  lq = {
    background: "{content.background}",
    color: "{content.color}",
    padding: "0.875rem 1.125rem 1.125rem 1.125rem",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "inset {focus.ring.shadow}",
    },
  },
  cq = {
    background: "{content.background}",
    color: "{text.muted.color}",
    hoverColor: "{text.color}",
    width: "2.5rem",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "-1px",
      shadow: "{focus.ring.shadow}",
    },
  },
  uq = { height: "1px", bottom: "-1px", background: "{primary.color}" },
  dq = {
    light: {
      navButton: { shadow: "0px 0px 10px 50px rgba(255, 255, 255, 0.6)" },
    },
    dark: {
      navButton: {
        shadow:
          "0px 0px 10px 50px color-mix(in srgb, {content.background}, transparent 50%)",
      },
    },
  },
  fq = {
    root: oq,
    tablist: sq,
    tab: aq,
    tabpanel: lq,
    navButton: cq,
    activeBar: uq,
    colorScheme: dq,
  },
  pq = { transitionDuration: "{transition.duration}" },
  hq = {
    background: "{content.background}",
    borderColor: "{content.border.color}",
  },
  mq = {
    borderColor: "{content.border.color}",
    activeBorderColor: "{primary.color}",
    color: "{text.muted.color}",
    hoverColor: "{text.color}",
    activeColor: "{primary.color}",
  },
  gq = { background: "{content.background}", color: "{content.color}" },
  vq = {
    background: "{content.background}",
    color: "{text.muted.color}",
    hoverColor: "{text.color}",
  },
  bq = {
    light: {
      navButton: { shadow: "0px 0px 10px 50px rgba(255, 255, 255, 0.6)" },
    },
    dark: {
      navButton: {
        shadow:
          "0px 0px 10px 50px color-mix(in srgb, {content.background}, transparent 50%)",
      },
    },
  },
  yq = {
    root: pq,
    tabList: hq,
    tab: mq,
    tabPanel: gq,
    navButton: vq,
    colorScheme: bq,
  },
  xq = {
    fontSize: "0.875rem",
    fontWeight: "700",
    padding: "0.25rem 0.5rem",
    gap: "0.25rem",
    borderRadius: "{content.border.radius}",
    roundedBorderRadius: "{border.radius.xl}",
  },
  _q = { size: "0.75rem" },
  wq = {
    light: {
      primary: { background: "{primary.100}", color: "{primary.700}" },
      secondary: { background: "{surface.100}", color: "{surface.600}" },
      success: { background: "{green.100}", color: "{green.700}" },
      info: { background: "{sky.100}", color: "{sky.700}" },
      warn: { background: "{orange.100}", color: "{orange.700}" },
      danger: { background: "{red.100}", color: "{red.700}" },
      contrast: { background: "{surface.950}", color: "{surface.0}" },
    },
    dark: {
      primary: {
        background: "color-mix(in srgb, {primary.500}, transparent 84%)",
        color: "{primary.300}",
      },
      secondary: { background: "{surface.800}", color: "{surface.300}" },
      success: {
        background: "color-mix(in srgb, {green.500}, transparent 84%)",
        color: "{green.300}",
      },
      info: {
        background: "color-mix(in srgb, {sky.500}, transparent 84%)",
        color: "{sky.300}",
      },
      warn: {
        background: "color-mix(in srgb, {orange.500}, transparent 84%)",
        color: "{orange.300}",
      },
      danger: {
        background: "color-mix(in srgb, {red.500}, transparent 84%)",
        color: "{red.300}",
      },
      contrast: { background: "{surface.0}", color: "{surface.950}" },
    },
  },
  kq = { root: xq, icon: _q, colorScheme: wq },
  Sq = {
    background: "{form.field.background}",
    borderColor: "{form.field.border.color}",
    color: "{form.field.color}",
    height: "18rem",
    padding: "{form.field.padding.y} {form.field.padding.x}",
    borderRadius: "{form.field.border.radius}",
  },
  Cq = { gap: "0.25rem" },
  Mq = { margin: "2px 0" },
  Eq = { root: Sq, prompt: Cq, commandResponse: Mq },
  Tq = {
    background: "{form.field.background}",
    disabledBackground: "{form.field.disabled.background}",
    filledBackground: "{form.field.filled.background}",
    filledHoverBackground: "{form.field.filled.hover.background}",
    filledFocusBackground: "{form.field.filled.focus.background}",
    borderColor: "{form.field.border.color}",
    hoverBorderColor: "{form.field.hover.border.color}",
    focusBorderColor: "{form.field.focus.border.color}",
    invalidBorderColor: "{form.field.invalid.border.color}",
    color: "{form.field.color}",
    disabledColor: "{form.field.disabled.color}",
    placeholderColor: "{form.field.placeholder.color}",
    invalidPlaceholderColor: "{form.field.invalid.placeholder.color}",
    shadow: "{form.field.shadow}",
    paddingX: "{form.field.padding.x}",
    paddingY: "{form.field.padding.y}",
    borderRadius: "{form.field.border.radius}",
    focusRing: {
      width: "{form.field.focus.ring.width}",
      style: "{form.field.focus.ring.style}",
      color: "{form.field.focus.ring.color}",
      offset: "{form.field.focus.ring.offset}",
      shadow: "{form.field.focus.ring.shadow}",
    },
    transitionDuration: "{form.field.transition.duration}",
    sm: {
      fontSize: "{form.field.sm.font.size}",
      paddingX: "{form.field.sm.padding.x}",
      paddingY: "{form.field.sm.padding.y}",
    },
    lg: {
      fontSize: "{form.field.lg.font.size}",
      paddingX: "{form.field.lg.padding.x}",
      paddingY: "{form.field.lg.padding.y}",
    },
  },
  Aq = { root: Tq },
  Pq = {
    background: "{content.background}",
    borderColor: "{content.border.color}",
    color: "{content.color}",
    borderRadius: "{content.border.radius}",
    shadow: "{overlay.navigation.shadow}",
    transitionDuration: "{transition.duration}",
  },
  Rq = { padding: "{navigation.list.padding}", gap: "{navigation.list.gap}" },
  Lq = {
    focusBackground: "{navigation.item.focus.background}",
    activeBackground: "{navigation.item.active.background}",
    color: "{navigation.item.color}",
    focusColor: "{navigation.item.focus.color}",
    activeColor: "{navigation.item.active.color}",
    padding: "{navigation.item.padding}",
    borderRadius: "{navigation.item.border.radius}",
    gap: "{navigation.item.gap}",
    icon: {
      color: "{navigation.item.icon.color}",
      focusColor: "{navigation.item.icon.focus.color}",
      activeColor: "{navigation.item.icon.active.color}",
    },
  },
  Dq = { mobileIndent: "1rem" },
  Iq = {
    size: "{navigation.submenu.icon.size}",
    color: "{navigation.submenu.icon.color}",
    focusColor: "{navigation.submenu.icon.focus.color}",
    activeColor: "{navigation.submenu.icon.active.color}",
  },
  Oq = { borderColor: "{content.border.color}" },
  $q = {
    root: Pq,
    list: Rq,
    item: Lq,
    submenu: Dq,
    submenuIcon: Iq,
    separator: Oq,
  },
  zq = { minHeight: "5rem" },
  Bq = { eventContent: { padding: "1rem 0" } },
  Uq = { eventContent: { padding: "0 1rem" } },
  Fq = {
    size: "1.125rem",
    borderRadius: "50%",
    borderWidth: "2px",
    background: "{content.background}",
    borderColor: "{content.border.color}",
    content: {
      borderRadius: "50%",
      size: "0.375rem",
      background: "{primary.color}",
      insetShadow:
        "0px 0.5px 0px 0px rgba(0, 0, 0, 0.06), 0px 1px 1px 0px rgba(0, 0, 0, 0.12)",
    },
  },
  Nq = { color: "{content.border.color}", size: "2px" },
  Vq = {
    event: zq,
    horizontal: Bq,
    vertical: Uq,
    eventMarker: Fq,
    eventConnector: Nq,
  },
  Hq = {
    width: "25rem",
    borderRadius: "{content.border.radius}",
    borderWidth: "1px",
    transitionDuration: "{transition.duration}",
  },
  jq = { size: "1.125rem" },
  Gq = { padding: "{overlay.popover.padding}", gap: "0.5rem" },
  Wq = { gap: "0.5rem" },
  Kq = { fontWeight: "500", fontSize: "1rem" },
  Xq = { fontWeight: "500", fontSize: "0.875rem" },
  Yq = {
    width: "1.75rem",
    height: "1.75rem",
    borderRadius: "50%",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      offset: "{focus.ring.offset}",
    },
  },
  qq = { size: "1rem" },
  Zq = {
    light: {
      root: { blur: "1.5px" },
      info: {
        background: "color-mix(in srgb, {blue.50}, transparent 5%)",
        borderColor: "{blue.200}",
        color: "{blue.600}",
        detailColor: "{surface.700}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {blue.500}, transparent 96%)",
        closeButton: {
          hoverBackground: "{blue.100}",
          focusRing: { color: "{blue.600}", shadow: "none" },
        },
      },
      success: {
        background: "color-mix(in srgb, {green.50}, transparent 5%)",
        borderColor: "{green.200}",
        color: "{green.600}",
        detailColor: "{surface.700}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {green.500}, transparent 96%)",
        closeButton: {
          hoverBackground: "{green.100}",
          focusRing: { color: "{green.600}", shadow: "none" },
        },
      },
      warn: {
        background: "color-mix(in srgb,{yellow.50}, transparent 5%)",
        borderColor: "{yellow.200}",
        color: "{yellow.600}",
        detailColor: "{surface.700}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {yellow.500}, transparent 96%)",
        closeButton: {
          hoverBackground: "{yellow.100}",
          focusRing: { color: "{yellow.600}", shadow: "none" },
        },
      },
      error: {
        background: "color-mix(in srgb, {red.50}, transparent 5%)",
        borderColor: "{red.200}",
        color: "{red.600}",
        detailColor: "{surface.700}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {red.500}, transparent 96%)",
        closeButton: {
          hoverBackground: "{red.100}",
          focusRing: { color: "{red.600}", shadow: "none" },
        },
      },
      secondary: {
        background: "{surface.100}",
        borderColor: "{surface.200}",
        color: "{surface.600}",
        detailColor: "{surface.700}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {surface.500}, transparent 96%)",
        closeButton: {
          hoverBackground: "{surface.200}",
          focusRing: { color: "{surface.600}", shadow: "none" },
        },
      },
      contrast: {
        background: "{surface.900}",
        borderColor: "{surface.950}",
        color: "{surface.50}",
        detailColor: "{surface.0}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {surface.950}, transparent 96%)",
        closeButton: {
          hoverBackground: "{surface.800}",
          focusRing: { color: "{surface.50}", shadow: "none" },
        },
      },
    },
    dark: {
      root: { blur: "10px" },
      info: {
        background: "color-mix(in srgb, {blue.500}, transparent 84%)",
        borderColor: "color-mix(in srgb, {blue.700}, transparent 64%)",
        color: "{blue.500}",
        detailColor: "{surface.0}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {blue.500}, transparent 96%)",
        closeButton: {
          hoverBackground: "rgba(255, 255, 255, 0.05)",
          focusRing: { color: "{blue.500}", shadow: "none" },
        },
      },
      success: {
        background: "color-mix(in srgb, {green.500}, transparent 84%)",
        borderColor: "color-mix(in srgb, {green.700}, transparent 64%)",
        color: "{green.500}",
        detailColor: "{surface.0}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {green.500}, transparent 96%)",
        closeButton: {
          hoverBackground: "rgba(255, 255, 255, 0.05)",
          focusRing: { color: "{green.500}", shadow: "none" },
        },
      },
      warn: {
        background: "color-mix(in srgb, {yellow.500}, transparent 84%)",
        borderColor: "color-mix(in srgb, {yellow.700}, transparent 64%)",
        color: "{yellow.500}",
        detailColor: "{surface.0}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {yellow.500}, transparent 96%)",
        closeButton: {
          hoverBackground: "rgba(255, 255, 255, 0.05)",
          focusRing: { color: "{yellow.500}", shadow: "none" },
        },
      },
      error: {
        background: "color-mix(in srgb, {red.500}, transparent 84%)",
        borderColor: "color-mix(in srgb, {red.700}, transparent 64%)",
        color: "{red.500}",
        detailColor: "{surface.0}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {red.500}, transparent 96%)",
        closeButton: {
          hoverBackground: "rgba(255, 255, 255, 0.05)",
          focusRing: { color: "{red.500}", shadow: "none" },
        },
      },
      secondary: {
        background: "{surface.800}",
        borderColor: "{surface.700}",
        color: "{surface.300}",
        detailColor: "{surface.0}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {surface.500}, transparent 96%)",
        closeButton: {
          hoverBackground: "{surface.700}",
          focusRing: { color: "{surface.300}", shadow: "none" },
        },
      },
      contrast: {
        background: "{surface.0}",
        borderColor: "{surface.100}",
        color: "{surface.950}",
        detailColor: "{surface.950}",
        shadow:
          "0px 4px 8px 0px color-mix(in srgb, {surface.950}, transparent 96%)",
        closeButton: {
          hoverBackground: "{surface.100}",
          focusRing: { color: "{surface.950}", shadow: "none" },
        },
      },
    },
  },
  Jq = {
    root: Hq,
    icon: jq,
    content: Gq,
    text: Wq,
    summary: Kq,
    detail: Xq,
    closeButton: Yq,
    closeIcon: qq,
    colorScheme: Zq,
  },
  Qq = {
    padding: "0.25rem",
    borderRadius: "{content.border.radius}",
    gap: "0.5rem",
    fontWeight: "500",
    disabledBackground: "{form.field.disabled.background}",
    disabledBorderColor: "{form.field.disabled.background}",
    disabledColor: "{form.field.disabled.color}",
    invalidBorderColor: "{form.field.invalid.border.color}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
    transitionDuration: "{form.field.transition.duration}",
    sm: { fontSize: "{form.field.sm.font.size}", padding: "0.25rem" },
    lg: { fontSize: "{form.field.lg.font.size}", padding: "0.25rem" },
  },
  eZ = { disabledColor: "{form.field.disabled.color}" },
  tZ = {
    padding: "0.25rem 0.75rem",
    borderRadius: "{content.border.radius}",
    checkedShadow:
      "0px 1px 2px 0px rgba(0, 0, 0, 0.02), 0px 1px 2px 0px rgba(0, 0, 0, 0.04)",
    sm: { padding: "0.25rem 0.75rem" },
    lg: { padding: "0.25rem 0.75rem" },
  },
  nZ = {
    light: {
      root: {
        background: "{surface.100}",
        checkedBackground: "{surface.100}",
        hoverBackground: "{surface.100}",
        borderColor: "{surface.100}",
        color: "{surface.500}",
        hoverColor: "{surface.700}",
        checkedColor: "{surface.900}",
        checkedBorderColor: "{surface.100}",
      },
      content: { checkedBackground: "{surface.0}" },
      icon: {
        color: "{surface.500}",
        hoverColor: "{surface.700}",
        checkedColor: "{surface.900}",
      },
    },
    dark: {
      root: {
        background: "{surface.950}",
        checkedBackground: "{surface.950}",
        hoverBackground: "{surface.950}",
        borderColor: "{surface.950}",
        color: "{surface.400}",
        hoverColor: "{surface.300}",
        checkedColor: "{surface.0}",
        checkedBorderColor: "{surface.950}",
      },
      content: { checkedBackground: "{surface.800}" },
      icon: {
        color: "{surface.400}",
        hoverColor: "{surface.300}",
        checkedColor: "{surface.0}",
      },
    },
  },
  rZ = { root: Qq, icon: eZ, content: tZ, colorScheme: nZ },
  iZ = {
    width: "2.5rem",
    height: "1.5rem",
    borderRadius: "30px",
    gap: "0.25rem",
    shadow: "{form.field.shadow}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
    borderWidth: "1px",
    borderColor: "transparent",
    hoverBorderColor: "transparent",
    checkedBorderColor: "transparent",
    checkedHoverBorderColor: "transparent",
    invalidBorderColor: "{form.field.invalid.border.color}",
    transitionDuration: "{form.field.transition.duration}",
    slideDuration: "0.2s",
  },
  oZ = { borderRadius: "50%", size: "1rem" },
  sZ = {
    light: {
      root: {
        background: "{surface.300}",
        disabledBackground: "{form.field.disabled.background}",
        hoverBackground: "{surface.400}",
        checkedBackground: "{primary.color}",
        checkedHoverBackground: "{primary.hover.color}",
      },
      handle: {
        background: "{surface.0}",
        disabledBackground: "{form.field.disabled.color}",
        hoverBackground: "{surface.0}",
        checkedBackground: "{surface.0}",
        checkedHoverBackground: "{surface.0}",
        color: "{text.muted.color}",
        hoverColor: "{text.color}",
        checkedColor: "{primary.color}",
        checkedHoverColor: "{primary.hover.color}",
      },
    },
    dark: {
      root: {
        background: "{surface.700}",
        disabledBackground: "{surface.600}",
        hoverBackground: "{surface.600}",
        checkedBackground: "{primary.color}",
        checkedHoverBackground: "{primary.hover.color}",
      },
      handle: {
        background: "{surface.400}",
        disabledBackground: "{surface.900}",
        hoverBackground: "{surface.300}",
        checkedBackground: "{surface.900}",
        checkedHoverBackground: "{surface.900}",
        color: "{surface.900}",
        hoverColor: "{surface.800}",
        checkedColor: "{primary.color}",
        checkedHoverColor: "{primary.hover.color}",
      },
    },
  },
  aZ = { root: iZ, handle: oZ, colorScheme: sZ },
  lZ = {
    background: "{content.background}",
    borderColor: "{content.border.color}",
    borderRadius: "{content.border.radius}",
    color: "{content.color}",
    gap: "0.5rem",
    padding: "0.75rem",
  },
  cZ = { root: lZ },
  uZ = {
    maxWidth: "12.5rem",
    gutter: "0.25rem",
    shadow: "{overlay.popover.shadow}",
    padding: "0.5rem 0.75rem",
    borderRadius: "{overlay.popover.border.radius}",
  },
  dZ = {
    light: { root: { background: "{surface.700}", color: "{surface.0}" } },
    dark: { root: { background: "{surface.700}", color: "{surface.0}" } },
  },
  fZ = { root: uZ, colorScheme: dZ },
  pZ = {
    background: "{content.background}",
    color: "{content.color}",
    padding: "1rem",
    gap: "2px",
    indent: "1rem",
    transitionDuration: "{transition.duration}",
  },
  hZ = {
    padding: "0.25rem 0.5rem",
    borderRadius: "{content.border.radius}",
    hoverBackground: "{content.hover.background}",
    selectedBackground: "{highlight.background}",
    color: "{text.color}",
    hoverColor: "{text.hover.color}",
    selectedColor: "{highlight.color}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "-1px",
      shadow: "{focus.ring.shadow}",
    },
    gap: "0.25rem",
  },
  mZ = {
    color: "{text.muted.color}",
    hoverColor: "{text.hover.muted.color}",
    selectedColor: "{highlight.color}",
  },
  gZ = {
    borderRadius: "50%",
    size: "1.75rem",
    hoverBackground: "{content.hover.background}",
    selectedHoverBackground: "{content.background}",
    color: "{text.muted.color}",
    hoverColor: "{text.hover.muted.color}",
    selectedHoverColor: "{primary.color}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  vZ = { size: "2rem" },
  bZ = { margin: "0 0 0.5rem 0" },
  yZ = {
    root: pZ,
    node: hZ,
    nodeIcon: mZ,
    nodeToggleButton: gZ,
    loadingIcon: vZ,
    filter: bZ,
  },
  xZ = {
    background: "{form.field.background}",
    disabledBackground: "{form.field.disabled.background}",
    filledBackground: "{form.field.filled.background}",
    filledHoverBackground: "{form.field.filled.hover.background}",
    filledFocusBackground: "{form.field.filled.focus.background}",
    borderColor: "{form.field.border.color}",
    hoverBorderColor: "{form.field.hover.border.color}",
    focusBorderColor: "{form.field.focus.border.color}",
    invalidBorderColor: "{form.field.invalid.border.color}",
    color: "{form.field.color}",
    disabledColor: "{form.field.disabled.color}",
    placeholderColor: "{form.field.placeholder.color}",
    invalidPlaceholderColor: "{form.field.invalid.placeholder.color}",
    shadow: "{form.field.shadow}",
    paddingX: "{form.field.padding.x}",
    paddingY: "{form.field.padding.y}",
    borderRadius: "{form.field.border.radius}",
    focusRing: {
      width: "{form.field.focus.ring.width}",
      style: "{form.field.focus.ring.style}",
      color: "{form.field.focus.ring.color}",
      offset: "{form.field.focus.ring.offset}",
      shadow: "{form.field.focus.ring.shadow}",
    },
    transitionDuration: "{form.field.transition.duration}",
    sm: {
      fontSize: "{form.field.sm.font.size}",
      paddingX: "{form.field.sm.padding.x}",
      paddingY: "{form.field.sm.padding.y}",
    },
    lg: {
      fontSize: "{form.field.lg.font.size}",
      paddingX: "{form.field.lg.padding.x}",
      paddingY: "{form.field.lg.padding.y}",
    },
  },
  _Z = { width: "2.5rem", color: "{form.field.icon.color}" },
  wZ = {
    background: "{overlay.select.background}",
    borderColor: "{overlay.select.border.color}",
    borderRadius: "{overlay.select.border.radius}",
    color: "{overlay.select.color}",
    shadow: "{overlay.select.shadow}",
  },
  kZ = { padding: "{list.padding}" },
  SZ = { padding: "{list.option.padding}" },
  CZ = { borderRadius: "{border.radius.sm}" },
  MZ = { color: "{form.field.icon.color}" },
  EZ = {
    root: xZ,
    dropdown: _Z,
    overlay: wZ,
    tree: kZ,
    emptyMessage: SZ,
    chip: CZ,
    clearIcon: MZ,
  },
  TZ = { transitionDuration: "{transition.duration}" },
  AZ = {
    background: "{content.background}",
    borderColor: "{treetable.border.color}",
    color: "{content.color}",
    borderWidth: "0 0 1px 0",
    padding: "0.75rem 1rem",
  },
  PZ = {
    background: "{content.background}",
    hoverBackground: "{content.hover.background}",
    selectedBackground: "{highlight.background}",
    borderColor: "{treetable.border.color}",
    color: "{content.color}",
    hoverColor: "{content.hover.color}",
    selectedColor: "{highlight.color}",
    gap: "0.5rem",
    padding: "0.75rem 1rem",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "-1px",
      shadow: "{focus.ring.shadow}",
    },
  },
  RZ = { fontWeight: "600" },
  LZ = {
    background: "{content.background}",
    hoverBackground: "{content.hover.background}",
    selectedBackground: "{highlight.background}",
    color: "{content.color}",
    hoverColor: "{content.hover.color}",
    selectedColor: "{highlight.color}",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "-1px",
      shadow: "{focus.ring.shadow}",
    },
  },
  DZ = {
    borderColor: "{treetable.border.color}",
    padding: "0.75rem 1rem",
    gap: "0.5rem",
  },
  IZ = {
    background: "{content.background}",
    borderColor: "{treetable.border.color}",
    color: "{content.color}",
    padding: "0.75rem 1rem",
  },
  OZ = { fontWeight: "600" },
  $Z = {
    background: "{content.background}",
    borderColor: "{treetable.border.color}",
    color: "{content.color}",
    borderWidth: "0 0 1px 0",
    padding: "0.75rem 1rem",
  },
  zZ = { width: "0.5rem" },
  BZ = { width: "1px", color: "{primary.color}" },
  UZ = {
    color: "{text.muted.color}",
    hoverColor: "{text.hover.muted.color}",
    size: "0.875rem",
  },
  FZ = { size: "2rem" },
  NZ = {
    hoverBackground: "{content.hover.background}",
    selectedHoverBackground: "{content.background}",
    color: "{text.muted.color}",
    hoverColor: "{text.color}",
    selectedHoverColor: "{primary.color}",
    size: "1.75rem",
    borderRadius: "50%",
    focusRing: {
      width: "{focus.ring.width}",
      style: "{focus.ring.style}",
      color: "{focus.ring.color}",
      offset: "{focus.ring.offset}",
      shadow: "{focus.ring.shadow}",
    },
  },
  VZ = { borderColor: "{content.border.color}", borderWidth: "0 0 1px 0" },
  HZ = { borderColor: "{content.border.color}", borderWidth: "0 0 1px 0" },
  jZ = {
    light: {
      root: { borderColor: "{content.border.color}" },
      bodyCell: { selectedBorderColor: "{primary.100}" },
    },
    dark: {
      root: { borderColor: "{surface.800}" },
      bodyCell: { selectedBorderColor: "{primary.900}" },
    },
  },
  GZ = {
    root: TZ,
    header: AZ,
    headerCell: PZ,
    columnTitle: RZ,
    row: LZ,
    bodyCell: DZ,
    footerCell: IZ,
    columnFooter: OZ,
    footer: $Z,
    columnResizer: zZ,
    resizeIndicator: BZ,
    sortIcon: UZ,
    loadingIcon: FZ,
    nodeToggleButton: NZ,
    paginatorTop: VZ,
    paginatorBottom: HZ,
    colorScheme: jZ,
  },
  WZ = {
    mask: { background: "{content.background}", color: "{text.muted.color}" },
    icon: { size: "2rem" },
  },
  KZ = { loader: WZ };
function Ia(t) {
  "@babel/helpers - typeof";
  return (
    (Ia =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    Ia(t)
  );
}
function Qm(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    (e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r));
  }
  return n;
}
function eg(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? Qm(Object(n), !0).forEach(function (r) {
          XZ(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
        : Qm(Object(n)).forEach(function (r) {
            Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
          });
  }
  return t;
}
function XZ(t, e, n) {
  return (
    (e = YZ(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function YZ(t) {
  var e = qZ(t, "string");
  return Ia(e) == "symbol" ? e : e + "";
}
function qZ(t, e) {
  if (Ia(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (Ia(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var ZZ = eg(
    eg({}, fH),
    {},
    {
      components: {
        accordion: FV,
        autocomplete: qV,
        avatar: nH,
        badge: cH,
        blockui: hH,
        breadcrumb: bH,
        button: _H,
        datepicker: lG,
        card: EH,
        carousel: DH,
        cascadeselect: FH,
        checkbox: HH,
        chip: YH,
        colorpicker: ej,
        confirmdialog: rj,
        confirmpopup: lj,
        contextmenu: mj,
        dataview: Vj,
        datatable: Oj,
        dialog: hG,
        divider: yG,
        dock: wG,
        drawer: TG,
        editor: IG,
        fieldset: UG,
        fileupload: KG,
        iftalabel: bW,
        floatlabel: JG,
        galleria: pW,
        iconfield: mW,
        image: kW,
        imagecompare: CW,
        inlinemessage: PW,
        inplace: DW,
        inputchips: zW,
        inputgroup: UW,
        inputnumber: HW,
        inputotp: WW,
        inputtext: XW,
        knob: QW,
        listbox: aK,
        megamenu: vK,
        menu: kK,
        menubar: PK,
        message: FK,
        metergroup: KK,
        multiselect: rX,
        orderlist: sX,
        organizationchart: dX,
        overlaybadge: pX,
        popover: HX,
        paginator: bX,
        password: zX,
        panel: CX,
        panelmenu: RX,
        picklist: FX,
        progressbar: KX,
        progressspinner: YX,
        radiobutton: JX,
        rating: tY,
        ripple: rY,
        scrollpanel: aY,
        select: vY,
        selectbutton: xY,
        skeleton: kY,
        slider: AY,
        speeddial: RY,
        splitter: zY,
        splitbutton: DY,
        stepper: WY,
        steps: JY,
        tabmenu: iq,
        tabs: fq,
        tabview: yq,
        textarea: Aq,
        tieredmenu: $q,
        tag: kq,
        terminal: Eq,
        timeline: Vq,
        togglebutton: rZ,
        toggleswitch: aZ,
        tree: yZ,
        treeselect: EZ,
        treetable: GZ,
        toast: Jq,
        toolbar: cZ,
        tooltip: fZ,
        virtualscroller: KZ,
      },
    },
  ),
  JZ = ot.extend({ name: "styleclass-directive" }),
  QZ = it.extend({ style: JZ }),
  eJ = QZ.extend("styleclass", {
    mounted: function (e, n) {
      (e.setAttribute("data-pd-styleclass", !0), this.bind(e, n));
    },
    unmounted: function (e) {
      this.unbind(e);
    },
    methods: {
      bind: function (e, n) {
        var r = this,
          i = this.resolveTarget(e, n);
        ((this.$el = i),
          (e.$_pstyleclass_clicklistener = function () {
            n.value.toggleClass
              ? Yd(i, n.value.toggleClass)
                ? Ln(i, n.value.toggleClass)
                : Vn(i, n.value.toggleClass)
              : i.offsetParent === null
                ? r.enter(i, e, n)
                : r.leave(i, n);
          }),
          e.addEventListener("click", e.$_pstyleclass_clicklistener));
      },
      unbind: function (e) {
        (e.$_pstyleclass_clicklistener &&
          (e.removeEventListener("click", e.$_pstyleclass_clicklistener),
          (e.$_pstyleclass_clicklistener = null)),
          this.unbindDocumentListener(e));
      },
      enter: function (e, n, r) {
        (r.value.enterActiveClass
          ? e.$_pstyleclass_animating ||
            ((e.$_pstyleclass_animating = !0),
            r.value.enterActiveClass.includes("slidedown") &&
              ((e.style.height = "0px"),
              Ln(e, r.value.hiddenClass || r.value.enterFromClass),
              (e.style.maxHeight = e.scrollHeight + "px"),
              Vn(e, r.value.hiddenClass || r.value.enterActiveClass),
              (e.style.height = "")),
            Vn(e, r.value.enterActiveClass),
            r.value.enterFromClass && Ln(e, r.value.enterFromClass),
            (e.$p_styleclass_enterlistener = function () {
              (Ln(e, r.value.enterActiveClass),
                r.value.enterToClass && Vn(e, r.value.enterToClass),
                e.removeEventListener(
                  "animationend",
                  e.$p_styleclass_enterlistener,
                ),
                r.value.enterActiveClass.includes("slidedown") &&
                  (e.style.maxHeight = ""),
                (e.$_pstyleclass_animating = !1));
            }),
            e.addEventListener("animationend", e.$p_styleclass_enterlistener))
          : (r.value.enterFromClass && Ln(e, r.value.enterFromClass),
            r.value.enterToClass && Vn(e, r.value.enterToClass)),
          r.value.hideOnOutsideClick && this.bindDocumentListener(e, n, r));
      },
      leave: function (e, n) {
        (n.value.leaveActiveClass
          ? e.$_pstyleclass_animating ||
            ((e.$_pstyleclass_animating = !0),
            Vn(e, n.value.leaveActiveClass),
            n.value.leaveFromClass && Ln(e, n.value.leaveFromClass),
            (e.$p_styleclass_leavelistener = function () {
              (Ln(e, n.value.leaveActiveClass),
                n.value.leaveToClass && Vn(e, n.value.leaveToClass),
                e.removeEventListener(
                  "animationend",
                  e.$p_styleclass_leavelistener,
                ),
                (e.$_pstyleclass_animating = !1));
            }),
            e.addEventListener("animationend", e.$p_styleclass_leavelistener))
          : (n.value.leaveFromClass && Ln(e, n.value.leaveFromClass),
            n.value.leaveToClass && Vn(e, n.value.leaveToClass)),
          n.value.hideOnOutsideClick && this.unbindDocumentListener(e));
      },
      resolveTarget: function (e, n) {
        switch (n.value.selector) {
          case "@next":
            return e.nextElementSibling;
          case "@prev":
            return e.previousElementSibling;
          case "@parent":
            return e.parentElement;
          case "@grandparent":
            return e.parentElement.parentElement;
          default:
            return document.querySelector(n.value.selector);
        }
      },
      bindDocumentListener: function (e, n, r) {
        var i = this;
        e.$p_styleclass_documentlistener ||
          ((e.$p_styleclass_documentlistener = function (o) {
            !i.isVisible(e) ||
            getComputedStyle(e).getPropertyValue("position") === "static"
              ? i.unbindDocumentListener(e)
              : i.isOutsideClick(o, e, n) && i.leave(e, r);
          }),
          e.ownerDocument.addEventListener(
            "click",
            e.$p_styleclass_documentlistener,
          ));
      },
      unbindDocumentListener: function (e) {
        e.$p_styleclass_documentlistener &&
          (e.ownerDocument.removeEventListener(
            "click",
            e.$p_styleclass_documentlistener,
          ),
          (e.$p_styleclass_documentlistener = null));
      },
      isVisible: function (e) {
        return e.offsetParent !== null;
      },
      isOutsideClick: function (e, n, r) {
        return (
          !r.isSameNode(e.target) &&
          !r.contains(e.target) &&
          !n.contains(e.target)
        );
      },
    },
  }),
  tJ = `
    .p-tooltip {
        position: absolute;
        display: none;
        max-width: dt('tooltip.max.width');
    }

    .p-tooltip-right,
    .p-tooltip-left {
        padding: 0 dt('tooltip.gutter');
    }

    .p-tooltip-top,
    .p-tooltip-bottom {
        padding: dt('tooltip.gutter') 0;
    }

    .p-tooltip-text {
        white-space: pre-line;
        word-break: break-word;
        background: dt('tooltip.background');
        color: dt('tooltip.color');
        padding: dt('tooltip.padding');
        box-shadow: dt('tooltip.shadow');
        border-radius: dt('tooltip.border.radius');
    }

    .p-tooltip-arrow {
        position: absolute;
        width: 0;
        height: 0;
        border-color: transparent;
        border-style: solid;
    }

    .p-tooltip-right .p-tooltip-arrow {
        margin-top: calc(-1 * dt('tooltip.gutter'));
        border-width: dt('tooltip.gutter') dt('tooltip.gutter') dt('tooltip.gutter') 0;
        border-right-color: dt('tooltip.background');
    }

    .p-tooltip-left .p-tooltip-arrow {
        margin-top: calc(-1 * dt('tooltip.gutter'));
        border-width: dt('tooltip.gutter') 0 dt('tooltip.gutter') dt('tooltip.gutter');
        border-left-color: dt('tooltip.background');
    }

    .p-tooltip-top .p-tooltip-arrow {
        margin-left: calc(-1 * dt('tooltip.gutter'));
        border-width: dt('tooltip.gutter') dt('tooltip.gutter') 0 dt('tooltip.gutter');
        border-top-color: dt('tooltip.background');
        border-bottom-color: dt('tooltip.background');
    }

    .p-tooltip-bottom .p-tooltip-arrow {
        margin-left: calc(-1 * dt('tooltip.gutter'));
        border-width: 0 dt('tooltip.gutter') dt('tooltip.gutter') dt('tooltip.gutter');
        border-top-color: dt('tooltip.background');
        border-bottom-color: dt('tooltip.background');
    }
`,
  nJ = {
    root: "p-tooltip p-component",
    arrow: "p-tooltip-arrow",
    text: "p-tooltip-text",
  },
  rJ = ot.extend({ name: "tooltip-directive", style: tJ, classes: nJ }),
  iJ = it.extend({ style: rJ });
function oJ(t, e) {
  return cJ(t) || lJ(t, e) || aJ(t, e) || sJ();
}
function sJ() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function aJ(t, e) {
  if (t) {
    if (typeof t == "string") return tg(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return (
      n === "Object" && t.constructor && (n = t.constructor.name),
      n === "Map" || n === "Set"
        ? Array.from(t)
        : n === "Arguments" ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          ? tg(t, e)
          : void 0
    );
  }
}
function tg(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, r = Array(e); n < e; n++) r[n] = t[n];
  return r;
}
function lJ(t, e) {
  var n =
    t == null
      ? null
      : (typeof Symbol < "u" && t[Symbol.iterator]) || t["@@iterator"];
  if (n != null) {
    var r,
      i,
      o,
      s,
      a = [],
      c = !0,
      u = !1;
    try {
      if (((o = (n = n.call(t)).next), e !== 0))
        for (
          ;
          !(c = (r = o.call(n)).done) && (a.push(r.value), a.length !== e);
          c = !0
        );
    } catch (d) {
      ((u = !0), (i = d));
    } finally {
      try {
        if (!c && n.return != null && ((s = n.return()), Object(s) !== s))
          return;
      } finally {
        if (u) throw i;
      }
    }
    return a;
  }
}
function cJ(t) {
  if (Array.isArray(t)) return t;
}
function ng(t, e, n) {
  return (
    (e = uJ(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function uJ(t) {
  var e = dJ(t, "string");
  return Ri(e) == "symbol" ? e : e + "";
}
function dJ(t, e) {
  if (Ri(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (Ri(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
function Ri(t) {
  "@babel/helpers - typeof";
  return (
    (Ri =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    Ri(t)
  );
}
var fJ = iJ.extend("tooltip", {
    beforeMount: function (e, n) {
      var r,
        i = this.getTarget(e);
      if (((i.$_ptooltipModifiers = this.getModifiers(n)), n.value)) {
        if (typeof n.value == "string")
          ((i.$_ptooltipValue = n.value),
            (i.$_ptooltipDisabled = !1),
            (i.$_ptooltipEscape = !0),
            (i.$_ptooltipClass = null),
            (i.$_ptooltipFitContent = !0),
            (i.$_ptooltipIdAttr = Ds("pv_id") + "_tooltip"),
            (i.$_ptooltipShowDelay = 0),
            (i.$_ptooltipHideDelay = 0),
            (i.$_ptooltipAutoHide = !0));
        else if (Ri(n.value) === "object" && n.value) {
          if (Ii(n.value.value) || n.value.value.trim() === "") return;
          ((i.$_ptooltipValue = n.value.value),
            (i.$_ptooltipDisabled =
              !!n.value.disabled === n.value.disabled ? n.value.disabled : !1),
            (i.$_ptooltipEscape =
              !!n.value.escape === n.value.escape ? n.value.escape : !0),
            (i.$_ptooltipClass = n.value.class || ""),
            (i.$_ptooltipFitContent =
              !!n.value.fitContent === n.value.fitContent
                ? n.value.fitContent
                : !0),
            (i.$_ptooltipIdAttr = n.value.id || Ds("pv_id") + "_tooltip"),
            (i.$_ptooltipShowDelay = n.value.showDelay || 0),
            (i.$_ptooltipHideDelay = n.value.hideDelay || 0),
            (i.$_ptooltipAutoHide =
              !!n.value.autoHide === n.value.autoHide ? n.value.autoHide : !0));
        }
      } else return;
      ((i.$_ptooltipZIndex =
        (r = n.instance.$primevue) === null ||
        r === void 0 ||
        (r = r.config) === null ||
        r === void 0 ||
        (r = r.zIndex) === null ||
        r === void 0
          ? void 0
          : r.tooltip),
        this.bindEvents(i, n),
        e.setAttribute("data-pd-tooltip", !0));
    },
    updated: function (e, n) {
      var r = this.getTarget(e);
      if (
        ((r.$_ptooltipModifiers = this.getModifiers(n)),
        this.unbindEvents(r),
        !!n.value)
      ) {
        if (typeof n.value == "string")
          ((r.$_ptooltipValue = n.value),
            (r.$_ptooltipDisabled = !1),
            (r.$_ptooltipEscape = !0),
            (r.$_ptooltipClass = null),
            (r.$_ptooltipIdAttr =
              r.$_ptooltipIdAttr || Ds("pv_id") + "_tooltip"),
            (r.$_ptooltipShowDelay = 0),
            (r.$_ptooltipHideDelay = 0),
            (r.$_ptooltipAutoHide = !0),
            this.bindEvents(r, n));
        else if (Ri(n.value) === "object" && n.value)
          if (Ii(n.value.value) || n.value.value.trim() === "") {
            this.unbindEvents(r, n);
            return;
          } else
            ((r.$_ptooltipValue = n.value.value),
              (r.$_ptooltipDisabled =
                !!n.value.disabled === n.value.disabled
                  ? n.value.disabled
                  : !1),
              (r.$_ptooltipEscape =
                !!n.value.escape === n.value.escape ? n.value.escape : !0),
              (r.$_ptooltipClass = n.value.class || ""),
              (r.$_ptooltipFitContent =
                !!n.value.fitContent === n.value.fitContent
                  ? n.value.fitContent
                  : !0),
              (r.$_ptooltipIdAttr =
                n.value.id || r.$_ptooltipIdAttr || Ds("pv_id") + "_tooltip"),
              (r.$_ptooltipShowDelay = n.value.showDelay || 0),
              (r.$_ptooltipHideDelay = n.value.hideDelay || 0),
              (r.$_ptooltipAutoHide =
                !!n.value.autoHide === n.value.autoHide
                  ? n.value.autoHide
                  : !0),
              this.bindEvents(r, n));
      }
    },
    unmounted: function (e, n) {
      var r = this.getTarget(e);
      (this.hide(e, 0),
        this.remove(r),
        this.unbindEvents(r, n),
        r.$_ptooltipScrollHandler &&
          (r.$_ptooltipScrollHandler.destroy(),
          (r.$_ptooltipScrollHandler = null)));
    },
    timer: void 0,
    methods: {
      bindEvents: function (e, n) {
        var r = this,
          i = e.$_ptooltipModifiers;
        (i.focus
          ? ((e.$_ptooltipFocusEvent = function (o) {
              return r.onFocus(o, n);
            }),
            (e.$_ptooltipBlurEvent = this.onBlur.bind(this)),
            e.addEventListener("focus", e.$_ptooltipFocusEvent),
            e.addEventListener("blur", e.$_ptooltipBlurEvent))
          : ((e.$_ptooltipMouseEnterEvent = function (o) {
              return r.onMouseEnter(o, n);
            }),
            (e.$_ptooltipMouseLeaveEvent = this.onMouseLeave.bind(this)),
            (e.$_ptooltipClickEvent = this.onClick.bind(this)),
            e.addEventListener("mouseenter", e.$_ptooltipMouseEnterEvent),
            e.addEventListener("mouseleave", e.$_ptooltipMouseLeaveEvent),
            e.addEventListener("click", e.$_ptooltipClickEvent)),
          (e.$_ptooltipKeydownEvent = this.onKeydown.bind(this)),
          e.addEventListener("keydown", e.$_ptooltipKeydownEvent),
          (e.$_pWindowResizeEvent = this.onWindowResize.bind(this, e)));
      },
      unbindEvents: function (e) {
        var n = e.$_ptooltipModifiers;
        (n.focus
          ? (e.removeEventListener("focus", e.$_ptooltipFocusEvent),
            (e.$_ptooltipFocusEvent = null),
            e.removeEventListener("blur", e.$_ptooltipBlurEvent),
            (e.$_ptooltipBlurEvent = null))
          : (e.removeEventListener("mouseenter", e.$_ptooltipMouseEnterEvent),
            (e.$_ptooltipMouseEnterEvent = null),
            e.removeEventListener("mouseleave", e.$_ptooltipMouseLeaveEvent),
            (e.$_ptooltipMouseLeaveEvent = null),
            e.removeEventListener("click", e.$_ptooltipClickEvent),
            (e.$_ptooltipClickEvent = null)),
          e.removeEventListener("keydown", e.$_ptooltipKeydownEvent),
          window.removeEventListener("resize", e.$_pWindowResizeEvent),
          e.$_ptooltipId && this.remove(e));
      },
      bindScrollListener: function (e) {
        var n = this;
        (e.$_ptooltipScrollHandler ||
          (e.$_ptooltipScrollHandler = new Lc(e, function () {
            n.hide(e);
          })),
          e.$_ptooltipScrollHandler.bindScrollListener());
      },
      unbindScrollListener: function (e) {
        e.$_ptooltipScrollHandler &&
          e.$_ptooltipScrollHandler.unbindScrollListener();
      },
      onMouseEnter: function (e, n) {
        var r = e.currentTarget,
          i = r.$_ptooltipShowDelay;
        this.show(r, n, i);
      },
      onMouseLeave: function (e) {
        var n = e.currentTarget,
          r = n.$_ptooltipHideDelay,
          i = n.$_ptooltipAutoHide;
        if (i) this.hide(n, r);
        else {
          var o =
            Hn(e.target, "data-pc-name") === "tooltip" ||
            Hn(e.target, "data-pc-section") === "arrow" ||
            Hn(e.target, "data-pc-section") === "text" ||
            Hn(e.relatedTarget, "data-pc-name") === "tooltip" ||
            Hn(e.relatedTarget, "data-pc-section") === "arrow" ||
            Hn(e.relatedTarget, "data-pc-section") === "text";
          !o && this.hide(n, r);
        }
      },
      onFocus: function (e, n) {
        var r = e.currentTarget,
          i = r.$_ptooltipShowDelay;
        this.show(r, n, i);
      },
      onBlur: function (e) {
        var n = e.currentTarget,
          r = n.$_ptooltipHideDelay;
        this.hide(n, r);
      },
      onClick: function (e) {
        var n = e.currentTarget,
          r = n.$_ptooltipHideDelay;
        this.hide(n, r);
      },
      onKeydown: function (e) {
        var n = e.currentTarget,
          r = n.$_ptooltipHideDelay;
        e.code === "Escape" && this.hide(e.currentTarget, r);
      },
      onWindowResize: function (e) {
        (_c() || this.hide(e),
          window.removeEventListener("resize", e.$_pWindowResizeEvent));
      },
      tooltipActions: function (e, n) {
        if (!(e.$_ptooltipDisabled || !U0(e))) {
          var r = this.create(e, n);
          (this.align(e), !this.isUnstyled() && e_(r, 250));
          var i = this;
          (window.addEventListener("resize", e.$_pWindowResizeEvent),
            r.addEventListener("mouseleave", function o() {
              (i.hide(e),
                r.removeEventListener("mouseleave", o),
                e.removeEventListener(
                  "mouseenter",
                  e.$_ptooltipMouseEnterEvent,
                ),
                setTimeout(function () {
                  return e.addEventListener(
                    "mouseenter",
                    e.$_ptooltipMouseEnterEvent,
                  );
                }, 50));
            }),
            this.bindScrollListener(e),
            On.set("tooltip", r, e.$_ptooltipZIndex));
        }
      },
      show: function (e, n, r) {
        var i = this;
        r !== void 0
          ? (this.timer = setTimeout(function () {
              return i.tooltipActions(e, n);
            }, r))
          : this.tooltipActions(e, n);
      },
      tooltipRemoval: function (e) {
        (this.remove(e),
          this.unbindScrollListener(e),
          window.removeEventListener("resize", e.$_pWindowResizeEvent));
      },
      hide: function (e, n) {
        var r = this;
        (clearTimeout(this.timer),
          n !== void 0
            ? setTimeout(function () {
                return r.tooltipRemoval(e);
              }, n)
            : this.tooltipRemoval(e));
      },
      getTooltipElement: function (e) {
        return document.getElementById(e.$_ptooltipId);
      },
      getArrowElement: function (e) {
        var n = this.getTooltipElement(e);
        return En(n, '[data-pc-section="arrow"]');
      },
      create: function (e) {
        var n = e.$_ptooltipModifiers,
          r = Gs("div", {
            class: !this.isUnstyled() && this.cx("arrow"),
            "p-bind": this.ptm("arrow", { context: n }),
          }),
          i = Gs("div", {
            class: !this.isUnstyled() && this.cx("text"),
            "p-bind": this.ptm("text", { context: n }),
          });
        e.$_ptooltipEscape
          ? ((i.innerHTML = ""),
            i.appendChild(document.createTextNode(e.$_ptooltipValue)))
          : (i.innerHTML = e.$_ptooltipValue);
        var o = Gs(
          "div",
          ng(
            ng(
              {
                id: e.$_ptooltipIdAttr,
                role: "tooltip",
                style: {
                  display: "inline-block",
                  width: e.$_ptooltipFitContent ? "fit-content" : void 0,
                  pointerEvents:
                    !this.isUnstyled() && e.$_ptooltipAutoHide && "none",
                },
                class: [
                  !this.isUnstyled() && this.cx("root"),
                  e.$_ptooltipClass,
                ],
              },
              this.$attrSelector,
              "",
            ),
            "p-bind",
            this.ptm("root", { context: n }),
          ),
          r,
          i,
        );
        return (
          document.body.appendChild(o),
          (e.$_ptooltipId = o.id),
          (this.$el = o),
          o
        );
      },
      remove: function (e) {
        if (e) {
          var n = this.getTooltipElement(e);
          (n && n.parentElement && (On.clear(n), document.body.removeChild(n)),
            (e.$_ptooltipId = null));
        }
      },
      align: function (e) {
        var n = e.$_ptooltipModifiers;
        n.top
          ? (this.alignTop(e),
            this.isOutOfBounds(e) &&
              (this.alignBottom(e), this.isOutOfBounds(e) && this.alignTop(e)))
          : n.left
            ? (this.alignLeft(e),
              this.isOutOfBounds(e) &&
                (this.alignRight(e),
                this.isOutOfBounds(e) &&
                  (this.alignTop(e),
                  this.isOutOfBounds(e) &&
                    (this.alignBottom(e),
                    this.isOutOfBounds(e) && this.alignLeft(e)))))
            : n.bottom
              ? (this.alignBottom(e),
                this.isOutOfBounds(e) &&
                  (this.alignTop(e),
                  this.isOutOfBounds(e) && this.alignBottom(e)))
              : (this.alignRight(e),
                this.isOutOfBounds(e) &&
                  (this.alignLeft(e),
                  this.isOutOfBounds(e) &&
                    (this.alignTop(e),
                    this.isOutOfBounds(e) &&
                      (this.alignBottom(e),
                      this.isOutOfBounds(e) && this.alignRight(e)))));
      },
      getHostOffset: function (e) {
        var n = e.getBoundingClientRect(),
          r = n.left + z0(),
          i = n.top + B0();
        return { left: r, top: i };
      },
      alignRight: function (e) {
        this.preAlign(e, "right");
        var n = this.getTooltipElement(e),
          r = this.getArrowElement(e),
          i = this.getHostOffset(e),
          o = i.left + In(e),
          s = i.top + (Kr(e) - Kr(n)) / 2;
        ((n.style.left = o + "px"),
          (n.style.top = s + "px"),
          (r.style.top = "50%"),
          (r.style.right = null),
          (r.style.bottom = null),
          (r.style.left = "0"));
      },
      alignLeft: function (e) {
        this.preAlign(e, "left");
        var n = this.getTooltipElement(e),
          r = this.getArrowElement(e),
          i = this.getHostOffset(e),
          o = i.left - In(n),
          s = i.top + (Kr(e) - Kr(n)) / 2;
        ((n.style.left = o + "px"),
          (n.style.top = s + "px"),
          (r.style.top = "50%"),
          (r.style.right = "0"),
          (r.style.bottom = null),
          (r.style.left = null));
      },
      alignTop: function (e) {
        this.preAlign(e, "top");
        var n = this.getTooltipElement(e),
          r = this.getArrowElement(e),
          i = In(n),
          o = In(e),
          s = Qo(),
          a = s.width,
          c = this.getHostOffset(e),
          u = c.left + (o - i) / 2,
          d = c.top - Kr(n);
        (u < 0 ? (u = 0) : u + i > a && (u = Math.floor(c.left + o - i)),
          (n.style.left = u + "px"),
          (n.style.top = d + "px"));
        var f = c.left - this.getHostOffset(n).left + o / 2;
        ((r.style.top = null),
          (r.style.right = null),
          (r.style.bottom = "0"),
          (r.style.left = f + "px"));
      },
      alignBottom: function (e) {
        this.preAlign(e, "bottom");
        var n = this.getTooltipElement(e),
          r = this.getArrowElement(e),
          i = In(n),
          o = In(e),
          s = Qo(),
          a = s.width,
          c = this.getHostOffset(e),
          u = c.left + (o - i) / 2,
          d = c.top + Kr(e);
        (u < 0 ? (u = 0) : u + i > a && (u = Math.floor(c.left + o - i)),
          (n.style.left = u + "px"),
          (n.style.top = d + "px"));
        var f = c.left - this.getHostOffset(n).left + o / 2;
        ((r.style.top = "0"),
          (r.style.right = null),
          (r.style.bottom = null),
          (r.style.left = f + "px"));
      },
      preAlign: function (e, n) {
        var r = this.getTooltipElement(e);
        ((r.style.left = "-999px"),
          (r.style.top = "-999px"),
          Ln(r, "p-tooltip-".concat(r.$_ptooltipPosition)),
          !this.isUnstyled() && Vn(r, "p-tooltip-".concat(n)),
          (r.$_ptooltipPosition = n),
          r.setAttribute("data-p-position", n));
      },
      isOutOfBounds: function (e) {
        var n = this.getTooltipElement(e),
          r = n.getBoundingClientRect(),
          i = r.top,
          o = r.left,
          s = In(n),
          a = Kr(n),
          c = Qo();
        return o + s > c.width || o < 0 || i < 0 || i + a > c.height;
      },
      getTarget: function (e) {
        var n;
        return Yd(e, "p-inputwrapper") &&
          (n = En(e, "input")) !== null &&
          n !== void 0
          ? n
          : e;
      },
      getModifiers: function (e) {
        return e.modifiers && Object.keys(e.modifiers).length
          ? e.modifiers
          : e.arg && Ri(e.arg) === "object"
            ? Object.entries(e.arg).reduce(function (n, r) {
                var i = oJ(r, 2),
                  o = i[0],
                  s = i[1];
                return ((o === "event" || o === "position") && (n[s] = !0), n);
              }, {})
            : {};
      },
    },
  }),
  pJ = `
    .p-tag {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        background: dt('tag.primary.background');
        color: dt('tag.primary.color');
        font-size: dt('tag.font.size');
        font-weight: dt('tag.font.weight');
        padding: dt('tag.padding');
        border-radius: dt('tag.border.radius');
        gap: dt('tag.gap');
    }

    .p-tag-icon {
        font-size: dt('tag.icon.size');
        width: dt('tag.icon.size');
        height: dt('tag.icon.size');
    }

    .p-tag-rounded {
        border-radius: dt('tag.rounded.border.radius');
    }

    .p-tag-success {
        background: dt('tag.success.background');
        color: dt('tag.success.color');
    }

    .p-tag-info {
        background: dt('tag.info.background');
        color: dt('tag.info.color');
    }

    .p-tag-warn {
        background: dt('tag.warn.background');
        color: dt('tag.warn.color');
    }

    .p-tag-danger {
        background: dt('tag.danger.background');
        color: dt('tag.danger.color');
    }

    .p-tag-secondary {
        background: dt('tag.secondary.background');
        color: dt('tag.secondary.color');
    }

    .p-tag-contrast {
        background: dt('tag.contrast.background');
        color: dt('tag.contrast.color');
    }
`,
  hJ = {
    root: function (e) {
      var n = e.props;
      return [
        "p-tag p-component",
        {
          "p-tag-info": n.severity === "info",
          "p-tag-success": n.severity === "success",
          "p-tag-warn": n.severity === "warn",
          "p-tag-danger": n.severity === "danger",
          "p-tag-secondary": n.severity === "secondary",
          "p-tag-contrast": n.severity === "contrast",
          "p-tag-rounded": n.rounded,
        },
      ];
    },
    icon: "p-tag-icon",
    label: "p-tag-label",
  },
  mJ = ot.extend({ name: "tag", style: pJ, classes: hJ }),
  gJ = {
    name: "BaseTag",
    extends: lr,
    props: { value: null, severity: null, rounded: Boolean, icon: String },
    style: mJ,
    provide: function () {
      return { $pcTag: this, $parentInstance: this };
    },
  };
function Oa(t) {
  "@babel/helpers - typeof";
  return (
    (Oa =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    Oa(t)
  );
}
function vJ(t, e, n) {
  return (
    (e = bJ(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function bJ(t) {
  var e = yJ(t, "string");
  return Oa(e) == "symbol" ? e : e + "";
}
function yJ(t, e) {
  if (Oa(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (Oa(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var lb = {
    name: "Tag",
    extends: gJ,
    inheritAttrs: !1,
    computed: {
      dataP: function () {
        return At(vJ({ rounded: this.rounded }, this.severity, this.severity));
      },
    },
  },
  xJ = ["data-p"];
function _J(t, e, n, r, i, o) {
  return (
    E(),
    R(
      "span",
      Q({ class: t.cx("root"), "data-p": o.dataP }, t.ptmi("root")),
      [
        t.$slots.icon
          ? (E(),
            Be(
              Dt(t.$slots.icon),
              Q({ key: 0, class: t.cx("icon") }, t.ptm("icon")),
              null,
              16,
              ["class"],
            ))
          : t.icon
            ? (E(),
              R(
                "span",
                Q({ key: 1, class: [t.cx("icon"), t.icon] }, t.ptm("icon")),
                null,
                16,
              ))
            : le("", !0),
        t.value != null || t.$slots.default
          ? De(t.$slots, "default", { key: 2 }, function () {
              return [
                l(
                  "span",
                  Q({ class: t.cx("label") }, t.ptm("label")),
                  z(t.value),
                  17,
                ),
              ];
            })
          : le("", !0),
      ],
      16,
      xJ,
    )
  );
}
lb.render = _J;
const Vt = F1(MS);
Vt.use(Dc);
Vt.use(OV, { theme: { preset: ZZ, options: { darkModeSelector: ".p-dark" } } });
Vt.directive("styleclass", eJ);
Vt.directive("tooltip", fJ);
Vt.component("Avatar", nf);
Vt.component("Badge", vt);
Vt.component("Button", Ce);
Vt.component("Calendar", xd);
Vt.component("Checkbox", vr);
Vt.component("Dialog", on);
Vt.component("Divider", Ks);
Vt.component("Dropdown", ic);
Vt.component("IconField", hf);
Vt.component("InputIcon", mf);
Vt.component("InputNumber", vf);
Vt.component("InputText", yt);
Vt.component("Message", Ys);
Vt.component("Password", eo);
Vt.component("Tag", lb);
Vt.component("Textarea", Lr);
Vt.component("ToggleSwitch", Nn);
Vt.component("ToastNotification", rv);
Vt.config.errorHandler = (t, e, n) => {};
Vt.mount("#app");
export {
  R as a,
  l as b,
  Xe as c,
  Jo as d,
  O as e,
  Ke as f,
  H as g,
  Ce as h,
  oi as i,
  Be as j,
  le as k,
  eo as l,
  Mt as m,
  Ie as n,
  $t as o,
  Ve as p,
  Na as q,
  N as r,
  Ys as s,
  z as t,
  Xd as u,
  E as v,
  Ye as w,
};
